rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isImageType() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB max
    }

    // Profile images
    match /profile-images/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.auth.uid == userId 
        && isImageType() 
        && isValidSize();
      allow update: if isAuthenticated() 
        && request.auth.uid == userId 
        && isImageType() 
        && isValidSize();
      allow delete: if isAuthenticated() 
        && request.auth.uid == userId;
    }

    // Match images/replays
    match /match-content/{matchId}/{fileName} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && isImageType() 
        && isValidSize();
      allow delete: if isAuthenticated() 
        && (resource.metadata.uploadedBy == request.auth.uid 
            || resource.metadata.isAdmin == true);
    }
  }
} 