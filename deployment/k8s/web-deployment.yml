apiVersion: apps/v1
kind: Deployment
metadata:
  name: dojopool-web
  namespace: production
  labels:
    app: dojopool-web
    component: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dojopool-web
  template:
    metadata:
      labels:
        app: dojopool-web
        component: frontend
    spec:
      containers:
        - name: web
          image: dojopool/web:latest
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NODE_ENV
              value: 'production'
            - name: NEXT_PUBLIC_API_URL
              value: 'https://api.dojopool.com'
            - name: NEXT_PUBLIC_WS_URL
              value: 'wss://api.dojopool.com'
            - name: NEXT_PUBLIC_MAPBOX_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dojopool-secrets
                  key: mapbox-token
            - name: NEXT_PUBLIC_ENVIRONMENT
              value: 'production'
            - name: NEXT_PUBLIC_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: dojopool-secrets
                  key: sentry-dsn
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '200m'
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - dojopool-web
                topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: dojopool-web
  namespace: production
  labels:
    app: dojopool-web
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: dojopool-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dojopool-web-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/rate-limit: '100'
    nginx.ingress.kubernetes.io/rate-limit-window: '1m'
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Security headers
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.mapbox.com https://*.sentry.io; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https: wss: ws:;" always;
spec:
  tls:
    - hosts:
        - dojopool.com
      secretName: dojopool-web-tls
  rules:
    - host: dojopool.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dojopool-web
                port:
                  number: 3000
    - host: www.dojopool.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dojopool-web
                port:
                  number: 3000
