on:name: Continuous Integration
on:
  push:
    paths:
    - src/**
    - .github/workflows/ci.yml
    - package.json
    - package-lock.json
    - jest.config.js
    - tsconfig.json
    branches:
    - main
    - develop
  pull_request:
    paths:
    - src/**
    - .github/workflows/ci.yml
    - package.json
    - package-lock.json
    - jest.config.js
    - tsconfig.json
    branches:
    - main
    - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3
      continue-on-error: true
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: npm
      continue-on-error: true
    - name: Install dependencies
      run: npm ci
      continue-on-error: true
    - name: Run linter
      run: npm run lint
      continue-on-error: true
    - name: Run type check
      run: npm run type-check
      continue-on-error: true
    - name: Run tests
      run: npm run test -- --coverage
      continue-on-error: true
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: coverage/
        retention-days: 30
      continue-on-error: true
  security:
    name: Security Check
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
    - uses: actions/checkout@v3
      continue-on-error: true
    - name: Install Snyk CLI
      run: npm install -g snyk
      continue-on-error: true
    - name: Run Snyk to check for vulnerabilities
      run: snyk test --severity-threshold=high
      env:
        SNYK_TOKEN: ${{{secrets.SNYK_TOKEN}}
      continue-on-error: true
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: DojoPool
        path: .
        format: HTML
        args: '--failOnCVSS 7 --enableRetired

          '
      continue-on-error: true
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: reports/
        retention-days: 30
      continue-on-error: true
    if: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name,
      'security') }}
  notify:
    name: Notify
    needs:
    - validate
    - security
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Notify Slack
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: ${{{secrets.SLACK_WEBHOOK}}
        SLACK_CHANNEL: ci
        SLACK_COLOR: ${{{job.status == 'success' && 'good' || 'danger'}}
        SLACK_TITLE: CI Pipeline ${{{job.status == 'success' && 'Successful' || 'Failed'}}
        SLACK_MESSAGE: 'Branch: ${{{github.ref_name}}

          Commit: ${{{github.sha}}

          Action Run: ${{{github.server_url}}/${{{github.repository}}/actions/runs/${{{github.run_id}}

          '
      continue-on-error: true
permissions:
  contents: read
  actions: write
  checks: write
  pull-requests: write
  security-events: write
  issues: write
