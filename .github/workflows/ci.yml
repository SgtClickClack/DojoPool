name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          
      - name: Install Python dependencies
        run: |
          pip install uv
          uv venv .venv -p python3.11
          source .venv/bin/activate
          uv pip install -r requirements.txt
          
      - name: Install Node.js dependencies
        run: npm ci
        
      - name: Lint Python code
        run: |
          source .venv/bin/activate
          black --check .
          flake8 .
          
      - name: Lint TypeScript/JavaScript
        run: |
          npm run lint
          
      - name: Type check Python
        run: |
          source .venv/bin/activate
          mypy .
          
      - name: Type check TypeScript
        run: |
          npm run type-check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
        node-version: ['lts/*']
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install Python dependencies
        run: |
          pip install uv
          uv venv .venv -p python3.11
          source .venv/bin/activate
          uv pip install -r requirements.txt
          
      - name: Install Node.js dependencies
        run: npm ci
        
      - name: Run Python tests
        run: |
          source .venv/bin/activate
          pytest --cov=src --cov-report=xml --cov-report=html
          
      - name: Run JavaScript/TypeScript tests
        run: |
          npm run test -- --coverage
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage-final.json,./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security audit for Python
        run: |
          pip install safety bandit
          safety check
          bandit -r src/
          
      - name: Run security audit for Node.js
        run: |
          npm audit --audit-level=moderate
          
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: python, javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            dist/
            .next/
          retention-days: 7
