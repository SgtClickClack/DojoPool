name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          
      - name: Install Python dependencies (push only)
        if: ${{ github.event_name == 'push' }}
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy
          
      - name: Install Node.js dependencies
        run: npm ci
        
      - name: Lint Python code (push only)
        if: ${{ github.event_name == 'push' }}
        run: |
          black --check .
          flake8 .
          
      - name: Lint TypeScript/JavaScript
        run: |
          npm run lint
          
      - name: Type check Python (push only)
        if: ${{ github.event_name == 'push' }}
        run: |
          mypy .
          
      - name: Type check TypeScript
        run: |
          npm run type-check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
        node-version: ['lts/*']
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Python test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt
          
      - name: Run JavaScript/TypeScript tests (unit + integration)
        run: |
          npm run test:ci:js

      - name: Run Python tests
        run: |
          pytest -c config/pytest.ini

      - name: Summarize test failures (AI)
        if: failure() && secrets.OPENAI_API_KEY != ''
        run: npm run ai:test:summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
      - name: Upload coverage reports (push only)
        if: ${{ github.event_name == 'push' && secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: |
            ./coverage/js/unit/lcov.info
            ./coverage/js/integration/lcov.info
            ./coverage/python/coverage.xml
          flags: js,python
          name: codecov-umbrella

  security:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security audit for Node.js
        run: |
          npm ci
          npm audit --audit-level=moderate || true
      
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            dist/
            .next/
          retention-days: 7
