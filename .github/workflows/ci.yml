name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  env-validate:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dojopool_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable
      - name: Validate environment (strict)
        run: yarn run env:check:strict
        env:
          NODE_ENV: test
          PORT: 3002
          NEXT_PUBLIC_API_URL: http://localhost:3002/api/v1
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.MAPBOX_TOKEN }}
          CORS_ORIGINS: http://localhost:3000
          SESSION_SECRET: test-session-secret-for-ci
          JWT_SECRET: test-jwt-secret-for-ci
          REDIS_URL: redis://localhost:6379
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dojopool_test

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable
      - name: Security audit
        run: yarn audit --level moderate || echo "No yarn audit command available in Yarn v4"
      - name: Check for known vulnerabilities
        run: yarn audit --audit-level moderate --json > audit-results.json || echo "No yarn audit command available in Yarn v4"
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-results
          path: audit-results.json

  lint-and-types:
    runs-on: ubuntu-latest
    needs: [env-validate, security-audit]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable
      - name: Lint
        run: yarn run lint
      - name: Type check (web and api)
        run: yarn run type-check

  tests:
    runs-on: ubuntu-latest
    needs: lint-and-types
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run tests (CI)
        run: yarn run test:ci

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build backend
        run: yarn run build:backend
      - name: Build frontend
        run: yarn run build