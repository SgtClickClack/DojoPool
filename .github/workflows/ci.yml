name: Continuous Integration

on:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/ci.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'jest.config.js'
      - 'tsconfig.json'
    branches:
      - main
      - develop
  pull_request:
    paths:
      - 'src/**'
      - '.github/workflows/ci.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'jest.config.js'
      - 'tsconfig.json'
    branches:
      - main
      - develop

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run tests
        run: npm run test -- --coverage

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: coverage/
          retention-days: 30

  security:
    name: Security Check
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        with:
          args: --severity-threshold=high

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'DojoPool'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload security scan results
        uses: actions/upload-artifact@v2
        with:
          name: security-scan-results
          path: reports/
          retention-days: 30

  notify:
    name: Notify
    needs: [validate, security]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_CHANNEL: ci
          SLACK_COLOR: ${{job.status == 'success' && 'good' || 'danger'}}
          SLACK_TITLE: CI Pipeline ${{job.status == 'success' && 'Successful' || 'Failed'}}
          SLACK_MESSAGE: |
            Branch: ${{github.ref_name}}
            Commit: ${{github.sha}}
            Action Run: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
