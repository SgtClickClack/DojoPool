name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          CI: true

      - name: Start backend server
        run: |
          npm run dev --filter api &
          sleep 30  # Wait for backend to start
        env:
          CI: true

      - name: Start frontend server
        run: |
          npm run dev &
          sleep 30  # Wait for frontend to start
        env:
          CI: true

      - name: Wait for servers to be ready
        run: |
          npx wait-on http://localhost:3000 http://localhost:3001/health
        timeout-minutes: 5

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          CI: true
          CYPRESS_BASE_URL: http://localhost:3000
          CYPRESS_API_URL: http://localhost:3001

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ matrix.node-version }}
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/results/
          retention-days: 30

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read test results if they exist
            let testResults = '‚úÖ E2E tests completed successfully';

            try {
              if (fs.existsSync('cypress/results/results.json')) {
                const results = JSON.parse(fs.readFileSync('cypress/results/results.json', 'utf8'));
                testResults = `üß™ E2E Test Results:\n` +
                             `- Total Tests: ${results.totalTests}\n` +
                             `- Passed: ${results.passedTests}\n` +
                             `- Failed: ${results.failedTests}\n` +
                             `- Duration: ${results.duration}ms`;
              }
            } catch (error) {
              testResults = '‚ö†Ô∏è Could not read test results';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testResults
            });
