name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  security-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for some security tools

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt

    - name: Run Bandit
      run: |
        bandit -r src/dojopool -f json -o security-reports/bandit-report.json --exclude tests,migrations
      continue-on-error: true

    - name: Run Safety check
      run: |
        safety check --json > security-reports/safety-report.json
      continue-on-error: true

    - name: Run pip-audit
      run: |
        pip-audit --format json > security-reports/pip-audit-report.json
      continue-on-error: true

    - name: Run detect-secrets
      run: |
        detect-secrets scan --all-files > security-reports/secrets-report.json
      continue-on-error: true

    - name: Run Semgrep
      run: |
        pip install semgrep
        semgrep scan --config auto --json --output security-reports/semgrep-report.json src/dojopool
      continue-on-error: true

    - name: Run OWASP Dependency-Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'DojoPool'
        path: '.'
        format: 'JSON'
        out: 'security-reports'
      continue-on-error: true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-reports-${{ matrix.python-version }}
        path: security-reports/
        retention-days: 90

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python, javascript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
