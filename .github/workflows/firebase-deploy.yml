name: Deploy to Firebase
on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
      - '**.txt'
    branches:
      - main
      - master

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{steps.deploy.outputs.url}}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            ${{ github.workspace }}/.next/cache
          key: nextjs-${{runner.os}}-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            nextjs-${{runner.os}}-
      
      - name: Cache Firebase tools
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase
          key: firebase-${{runner.os}}-${{hashFiles('**/package.json')}}
      
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{secrets.FIREBASE_MEASUREMENT_ID}}
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{secrets.RECAPTCHA_SITE_KEY}}
      
      - name: Deploy to Firebase
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{secrets.GITHUB_TOKEN}}
          firebaseServiceAccount: ${{secrets.FIREBASE_SERVICE_ACCOUNT}}
          channelId: live
          projectId: ${{secrets.FIREBASE_PROJECT_ID}}
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
      
      - name: Verify deployment
        run: |
          # Wait for deployment to propagate
          sleep 30
          
          # Check if the site is accessible
          curl -sSf ${{steps.deploy.outputs.url}} > /dev/null
          
          # Check Firebase hosting status
          curl -sSf https://${{secrets.FIREBASE_PROJECT_ID}}.web.app > /dev/null
