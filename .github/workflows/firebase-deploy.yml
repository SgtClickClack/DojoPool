name: Firebase Deployment

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'
      - '**.txt'

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment:
      name: production
      url: ${{steps.deploy.outputs.url}}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
          cache: npm

      - name: Cache Next.js build
        uses: actions/cache@v2
        with:
          path: |
            .next/cache
          key: nextjs-${{runner.os}}-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            nextjs-${{runner.os}}-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: ${{secrets.PROD_API_URL}}

      - name: Cache Firebase Tools
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase
          key: firebase-${{runner.os}}-${{hashFiles('**/firebase.json')}}

      - name: Deploy to Firebase
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{secrets.GITHUB_TOKEN}}
          firebaseServiceAccount: ${{secrets.FIREBASE_SERVICE_ACCOUNT}}
          channelId: live
          projectId: ${{secrets.FIREBASE_PROJECT_ID}}

      - name: Verify Deployment
        run: |
          sleep 30
          curl -sSf ${{steps.deploy.outputs.url}} > /dev/null || exit 1
          curl -sSf "https://${{secrets.FIREBASE_PROJECT_ID}}.web.app/__/firebase/init.json" > /dev/null || exit 1

      - name: Notify Slack on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_TITLE: Firebase Deployment Successful
          SLACK_MESSAGE: |
            Environment: Production
            Branch: ${{github.ref_name}}
            Commit: ${{github.sha}}
            URL: ${{steps.deploy.outputs.url}}

      - name: Notify Slack on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: danger
          SLACK_TITLE: Firebase Deployment Failed
          SLACK_MESSAGE: |
            Environment: Production
            Branch: ${{github.ref_name}}
            Commit: ${{github.sha}}
            Action Run: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
