name: Staging Deployment

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: staging-env
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        continue-on-error: true
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: staging
          NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}
        continue-on-error: true
        
      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v20
        with:
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: --prod
          working-directory: .
        continue-on-error: true
        
      - name: Health Check
        run: |
          for i in {1..6}; do
            if curl -sSf "${{ steps.deploy.outputs.url }}/api/health" > /dev/null; then
              echo "Health check passed"
              exit 0
            fi
            echo "Waiting for service to be healthy... (attempt $i/6)"
            sleep 10
          done
          echo "Health check failed after 1 minute"
          exit 1
        continue-on-error: true

concurrency:
  group: staging_${{ github.ref }}
  cancel-in-progress: true
