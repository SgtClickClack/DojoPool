on:name: Performance Tests
on:
  push:
    paths:
    - src/**
    - .github/workflows/performance-tests.yml
    - package.json
    - package-lock.json
    - cypress/integration/performance/**
    - lighthouse/**
    branches:
    - main
    - develop
  pull_request:
    paths:
    - src/**
    - .github/workflows/performance-tests.yml
    - package.json
    - package-lock.json
    - cypress/integration/performance/**
    - lighthouse/**
    branches:
    - main
    - develop
  schedule:
  - cron: 0 0 * * *
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  performance:
    name: Run Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
      continue-on-error: true
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: npm
      continue-on-error: true
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-perf-${{{ runner.os }}-${{{ hashFiles('**/package-lock.json') }}
        restore-keys: 'npm-perf-${{{ runner.os }}-

          '
      continue-on-error: true
    - name: Cache Cypress binary
      uses: actions/cache@v3
      with:
        path: ~/.cache/Cypress
        key: cypress-${{{runner.os}}-${{{hashFiles('**/package-lock.json')}}
        restore-keys: 'cypress-${{{runner.os}}-

          '
      continue-on-error: true
    - name: Install dependencies
      run: npm ci
      continue-on-error: true
      timeout-minutes: 10
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
      continue-on-error: true
      timeout-minutes: 10
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v9
      with:
        urls: 'http://localhost:3000

          http://localhost:3000/dashboard

          http://localhost:3000/game

          '
        configPath: ./.github/lighthouse/config.json
        uploadArtifacts: true
        temporaryPublicStorage: true
      continue-on-error: true
    - name: Start server
      run: npm run start & npx wait-on http://localhost:3000
      continue-on-error: true
      timeout-minutes: 10
    - name: Run performance tests
      id: perf_test
      run: 'npm run cypress:run -- --spec "cypress/integration/performance/**/*.spec.ts"
        --env grepTags=@performance

        '
      env:
        CYPRESS_PERFORMANCE_TEST: true
        CYPRESS_PERFORMANCE_THRESHOLD_FPS: 30
        CYPRESS_PERFORMANCE_THRESHOLD_CPU: 80
        CYPRESS_PERFORMANCE_THRESHOLD_MEMORY: 80
        CYPRESS_PERFORMANCE_THRESHOLD_LOAD: 3000
      continue-on-error: true
      timeout-minutes: 10
    - name: Generate performance report
      if: always()
      run: 'npm run generate:performance-report

        '
      continue-on-error: true
      timeout-minutes: 10
    - name: Upload performance results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: 'cypress/results/performance/

          lighthouse/

          performance-report/

          '
        retention-days: 30
      continue-on-error: true
    - name: Compare with baseline
      if: always()
      run: "npm run compare:performance-baseline\nif [ $? -ne 0 ]; then\n  echo \"\
        Performance degradation detected!\"\n  exit 1\nfi\n"
      continue-on-error: true
      timeout-minutes: 10
    - name: Notify Slack
      if: always()
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: ${{{secrets.SLACK_WEBHOOK}}
        SLACK_CHANNEL: performance
        SLACK_COLOR: ${{{ job.status == 'success' && 'good' || 'danger' }}
        SLACK_TITLE: Performance Tests ${{{ job.status == 'success' && 'Passed ✅'
          || 'Failed ❌' }}
        SLACK_MESSAGE: '*Branch:* ${{{ github.ref_name }}

          *Commit:* ${{{ github.sha }}

          *Performance Report:* ${{{ github.server_url }}/${{{ github.repository
          }}/actions/runs/${{{ github.run_id }}

          *Status:* ${{{ job.status }}


          *Key Metrics:*

          - FPS Threshold: 30

          - CPU Usage Threshold: 80%

          - Memory Usage Threshold: 80%

          - Load Time Threshold: 3000ms

          '
      continue-on-error: true
    if: ${{ github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name,
      'performance') }}
    strategy:
      fail-fast: false
    retry-strategy:
      max-attempts: 2
      retry-on:
      - error
      - timeout
permissions:
  contents: read
  actions: write
  checks: write
  pull-requests: write
  security-events: write
  issues: write
