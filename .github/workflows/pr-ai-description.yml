name: PR AI Description

# Disabled - non-critical workflow
# on:
#   pull_request:
#     types: [opened, edited, synchronize, labeled]

jobs:
  generate-pr-description:
    if: contains(github.event.pull_request.labels.*.name, 'ai-describe') || github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable
      - name: Generate PR description (AI)
        if: ${{ secrets.OPENAI_API_KEY != '' }}
        id: generate
        run: |
          if [ -f "scripts/ai/generate-pr-description.js" ]; then
            DESC=$(node scripts/ai/generate-pr-description.js || echo "AI description generation failed")
            echo "DESC<<EOF" >> $GITHUB_OUTPUT
            echo "$DESC" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "AI script not found, skipping description generation"
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Update PR body
        if: steps.generate.outputs.DESC != ''
        uses: actions/github-script@v7
        with:
          script: |
            const body = process.env.DESC;
            const { owner, repo } = context.repo;
            const pull_number = context.payload.pull_request.number;

            // Get current PR body
            const pr = await github.rest.pulls.get({ owner, repo, pull_number });
            const currentBody = pr.data.body || '';

            // Append AI description if not already present
            if (!currentBody.includes('## AI-Generated Description')) {
              const newBody = currentBody + '\n\n## AI-Generated Description\n\n' + body;
              await github.rest.pulls.update({ owner, repo, pull_number, body: newBody });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DESC: ${{ steps.generate.outputs.DESC }}
