name: NGINX Configuration Test
on:
  # Disabled until deployment directory is created
  # push:
  #   paths-ignore:
  #     - '**.md'
  #     - 'docs/**'
  #     - '.gitignore'
  #     - 'LICENSE'
  #     - '**.txt'
  #   paths:
  #     - deployment/nginx/**
  #     - .github/workflows/nginx-test.yml
  # pull_request:
  #   paths:
  #     - deployment/nginx/**
  #     - .github/workflows/nginx-test.yml
  workflow_dispatch:
jobs:
  test-nginx:
    runs-on: ubuntu-latest
    services:
      nginx:
        image: nginx:latest
        ports:
          - 80:80
          - 443:443
        volumes:
          - ${{github.workspace}}/deployment/nginx:/etc/nginx/conf.d
          - ${{github.workspace}}/deployment/ssl:/etc/ssl
        options: --name nginx-test
    steps:
      - uses: actions/checkout@v4
      - name: Install test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl openssl wscat apache2-utils imagemagick

      - name: Create SSL directories
        run: |
          mkdir -p deployment/ssl/certs deployment/ssl/private

      - name: Generate self-signed certificates
        run: |
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout deployment/ssl/private/dojopool.key \
            -out deployment/ssl/certs/dojopool.crt \
            -subj "/CN=dojopool.com.au"

      - name: Generate DH parameters
        run: |
          openssl dhparam -out deployment/ssl/certs/dhparam.pem 2048

      - name: Create test static files
        run: |
          mkdir -p /var/www/dojopool/static/{css,js,img}
          echo "body { margin: 0; }" > /var/www/dojopool/static/css/main.css
          echo "console.log('test');" > /var/www/dojopool/static/js/main.js
          convert -size 100x100 xc:white /var/www/dojopool/static/img/logo.png

      - name: Create test error pages
        run: |
          echo "<html><body>404 Not Found</body></html>" > /var/www/dojopool/404.html
          echo "<html><body>500 Server Error</body></html>" > /var/www/dojopool/50x.html
      - name: Test NGINX configuration syntax
        run: docker exec nginx-test nginx -t

      - name: Run NGINX test suite
        run: |
          chmod +x deployment/nginx/test_nginx.sh
          ./deployment/nginx/test_nginx.sh
      - name: Test SSL handshake
        run: |
          openssl s_client -connect localhost:443 -tls1_2 </dev/null
          openssl s_client -connect localhost:443 -tls1_3 </dev/null

      - name: Test SSL cipher strength
        run: |
          openssl s_client -connect localhost:443 -cipher "ECDHE-RSA-AES256-GCM-SHA384" </dev/null

      - name: Verify HSTS header
        run: |
          curl -sI https://localhost | grep -i "strict-transport-security"
      - name: Test security headers on main endpoint
        run: |
          curl -sI https://localhost | grep -i "x-frame-options"
          curl -sI https://localhost | grep -i "x-content-type-options"
          curl -sI https://localhost | grep -i "x-xss-protection"
          curl -sI https://localhost | grep -i "content-security-policy"
          curl -sI https://localhost | grep -i "referrer-policy"
          curl -sI https://localhost | grep -i "permissions-policy"

      - name: Test security headers on API endpoint
        run: |
          curl -sI https://localhost/api/ | grep -i "content-security-policy"
      - name: Test API rate limiting
        run: |
          for i in {1..11}; do
            curl -sI https://localhost/api/
          done

      - name: Test auth rate limiting
        run: |
          for i in {1..6}; do
            curl -sI https://localhost/api/auth/
          done

      - name: Test WebSocket rate limiting
        run: |
          for i in {1..6}; do
            curl -sI -H "Connection: Upgrade" \
                     -H "Upgrade: websocket" \
                     -H "Sec-WebSocket-Key: SGVsbG8sIHdvcmxkIQ==" \
                     -H "Sec-WebSocket-Version: 13" \
                     https://localhost/ws/
          done
      - name: Test WebSocket configuration
        run: |
          curl -sI -H "Connection: Upgrade" \
                   -H "Upgrade: websocket" \
                   -H "Sec-WebSocket-Key: SGVsbG8sIHdvcmxkIQ==" \
                   -H "Sec-WebSocket-Version: 13" \
                   https://localhost/ws/
      - name: Test static file serving performance
        run: |
          ab -n 1000 -c 10 https://localhost/static/css/main.css
          ab -n 1000 -c 10 https://localhost/static/js/main.js

      - name: Test API endpoint performance
        run: |
          ab -n 500 -c 5 https://localhost/api/health

      - name: Test WebSocket connection performance
        run: |
          wscat -c wss://localhost/ws/ -n 100
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nginx-test-results
          path: |
            /var/log/nginx/*.log
            deployment/nginx/test_results.log
