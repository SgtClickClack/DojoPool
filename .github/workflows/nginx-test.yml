name: Nginx Tests

on:
  push:
    paths:
      - 'nginx/**'
      - '.github/workflows/nginx-test.yml'
      - 'docker/nginx/**'
      - 'config/nginx/**'
    branches:
      - main
      - develop
  pull_request:
    paths:
      - 'nginx/**'
      - '.github/workflows/nginx-test.yml'
      - 'docker/nginx/**'
      - 'config/nginx/**'
    branches:
      - main
      - develop
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  nginx-test:
    name: Test Nginx Configuration
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-nginx-${{runner.os}}-${{github.sha}}
          restore-keys: |
            buildx-nginx-${{runner.os}}-

      - name: Build Nginx image
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          load: true
          tags: dojopool/nginx:test
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Test Nginx configuration
        id: nginx_test
        run: |
          docker run --rm dojopool/nginx:test nginx -t
          docker run -d --name nginx-test -p 8080:80 dojopool/nginx:test
          sleep 5

      - name: Run security scan
        run: |
          docker run --rm --network host aquasec/trivy:latest image dojopool/nginx:test
          docker run --rm --network host aquasec/trivy:latest config ./nginx/

      - name: Test Nginx endpoints
        run: |
          # Test health endpoint
          curl -sSf http://localhost:8080/health > /dev/null || exit 1
          
          # Test API endpoint
          curl -sSf http://localhost:8080/api > /dev/null || exit 1
          
          # Test static file serving
          curl -sSf -I http://localhost:8080/static/test.js | grep -q "200 OK" || exit 1
          
          # Test compression
          curl -sSf -H "Accept-Encoding: gzip" -I http://localhost:8080/ | grep -q "Content-Encoding: gzip" || exit 1
          
          # Test security headers
          curl -sSf -I http://localhost:8080/ | grep -q "X-Frame-Options: DENY" || exit 1
          curl -sSf -I http://localhost:8080/ | grep -q "X-Content-Type-Options: nosniff" || exit 1
          curl -sSf -I http://localhost:8080/ | grep -q "X-XSS-Protection: 1; mode=block" || exit 1
          
          # Test rate limiting
          for i in {1..10}; do curl -sSf http://localhost:8080/api; done
          curl -sSf -I http://localhost:8080/api | grep -q "429 Too Many Requests" || exit 1

      - name: Test SSL configuration
        run: |
          openssl s_client -connect localhost:443 -servername localhost </dev/null 2>/dev/null | openssl x509 -noout -dates || true

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Collect Nginx logs
        if: always()
        run: |
          docker cp nginx-test:/var/log/nginx/access.log ./nginx-access.log
          docker cp nginx-test:/var/log/nginx/error.log ./nginx-error.log
          docker stop nginx-test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: nginx-test-results
          path: |
            nginx-access.log
            nginx-error.log
            nginx/logs/
          retention-days: 30

      - name: Notify Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_CHANNEL: nginx
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: Nginx Tests ${{ job.status == 'success' && 'Passed ✅' || 'Failed ❌' }}
          SLACK_MESSAGE: |
            *Branch:* ${{ github.ref_name }}
            *Commit:* ${{ github.sha }}
            *Test Report:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            *Status:* ${{ job.status }}
            
            *Tests Run:*
            - Configuration validation
            - Security scan
            - Endpoint testing
            - SSL configuration
            - Rate limiting
            - Security headers
            - Compression
