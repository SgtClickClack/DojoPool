name: Test Suite
on:
  push:
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".gitignore"
      - "LICENSE"
      - "**.txt"
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
      - name: Run unit and integration tests
        run: npm run test -- --coverage
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Run E2E tests
        run: |
          npm run build
          npm run start & npx wait-on http://localhost:3000
          npm run cypress:run
        env:
          CI: true

  performance:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{secrets.LHCI_GITHUB_APP_TOKEN}}
      - name: Download previous performance results
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: performance-history
          path: performance-report
      - name: Run performance tests
        run: |
          npm run start &
          sleep 10
          npx cypress run --spec "cypress/integration/game-scenarios.spec.ts" --config video=true
        env:
          NODE_ENV: production
          CYPRESS_PERFORMANCE_TEST: true
      - name: Analyze performance results
        id: analysis
        run: node scripts/analyze-performance.js
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: performance-report/
          retention-days: 30
      - name: Save performance history
        uses: actions/upload-artifact@v4
        with:
          name: performance-history
          path: performance-report/performance-history.json
          retention-days: 90

  visual-regression:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run visual regression tests
        run: |
          npx cypress run --spec "cypress/integration/visual.spec.ts" --config screenshotsFolder=cypress/snapshots/actual
        env:
          CYPRESS_updateSnapshots:
            ${{github.event_name == 'push' && github.ref ==
            'refs/heads/main'}}
      - name: Upload visual diff on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-diff
          path: cypress/snapshots/diff
          retention-days: 7

  deploy-coverage:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage results
        uses: actions/download-artifact@v4
        with:
          name: test-results-18.x
          path: coverage
      - name: Deploy coverage report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_dir: ./coverage/html
          destination_dir: coverage-report
          enable_jekyll: false
