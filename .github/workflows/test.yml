name: Test Suite

on:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/test.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'jest.config.js'
      - 'cypress/**'
    branches:
      - main
      - develop
  pull_request:
    paths:
      - 'src/**'
      - '.github/workflows/test.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'jest.config.js'
      - 'cypress/**'
    branches:
      - main
      - develop

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --coverage

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: coverage/
          retention-days: 30

  e2e:
    name: E2E Tests
    needs: unit
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{runner.os}}-${{hashFiles('**/package-lock.json')}}
          restore-keys: |
            cypress-${{runner.os}}-

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        run: |
          npm run build
          npm run start & npx wait-on http://localhost:3000
          npm run cypress:run

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-results
          path: cypress/videos/
          retention-days: 30

  integration:
    name: Integration Tests
    needs: unit
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm run test:integration
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: coverage/integration/
          retention-days: 30

  notify:
    name: Notify Results
    needs: [unit, e2e, integration]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
          SLACK_CHANNEL: testing
          SLACK_COLOR: ${{job.status == 'success' && 'good' || 'danger'}}
          SLACK_TITLE: Test Suite ${{job.status == 'success' && 'Passed' || 'Failed'}}
          SLACK_MESSAGE: |
            Branch: ${{github.ref_name}}
            Commit: ${{github.sha}}
            Action Run: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
