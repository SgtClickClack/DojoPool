version: '3.8'

services:
  web:
    build: .
    ports:
      - '80:80'
    env_file:
      - .env.production
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=dojopool.settings.production
      - DATABASE_URL=postgresql://dojopool:${POSTGRES_PASSWORD}@postgres:5432/dojopool
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=A16aql5hjk86zqm2ham78r9rnmgkyz6bk88vih6sugp23giq8ht
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - log_volume:/var/log
    restart: unless-stopped
    networks:
      - dojopool_network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env.production
    environment:
      - POSTGRES_DB=dojopool
      - POSTGRES_USER=dojopool
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U dojopool']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dojopool_network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass A16aql5hjk86zqm2ham78r9rnmgkyz6bk88vih6sugp23giq8ht
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dojopool_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  log_volume:

networks:
  dojopool_network:
    driver: bridge
