version: '3.8'

services:
  backend:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=src.dojopool.app:create_app
      - FLASK_ENV=development
      - PYTHONPATH=/app/src
      - DATABASE_URL=postgresql://postgres:dojopool_password@postgres:5432/dojopool
      - REDIS_URL=redis://:dojopool_redis_password@redis:6379/0
    volumes:
      - .:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: ./src/dojopool/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:5000/ws
    volumes:
      - ./src/dojopool/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend

  postgres:
    image: postgres:15
    container_name: dojopool_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dojopool
      POSTGRES_DB: dojopool
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dojopool-network

  redis:
    image: redis:7
    command: redis-server --requirepass dojopool_redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  dojopool-network:
    name: dojopool-network 