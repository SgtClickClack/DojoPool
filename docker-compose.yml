version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dojopool_web
    expose:
      - "5000"
    volumes:
      - type: bind
        source: .
        target: /app
      - type: bind
        source: ./logs
        target: /app/logs
    environment:
      - FLASK_APP=dojopool/__init__.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/dojopool
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dojopool-network
    restart: unless-stopped
    command: [ "gunicorn", "--worker-class", "eventlet", "--workers", "4", "--bind", "0.0.0.0:5000", "wsgi:app" ]

  db:
    image: postgres:15-alpine
    container_name: dojopool_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dojopool
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    ports:
      - "5433:5432"
    networks:
      - dojopool-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: dojopool_redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "6379"
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - dojopool-network
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    container_name: dojopool_nginx
    ports:
      - "8080:80"
    volumes:
      - type: bind
        source: ./nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: ./static
        target: /usr/share/nginx/html/static
        read_only: true
      - type: bind
        source: ./static/index.html
        target: /usr/share/nginx/html/index.html
        read_only: true
      - type: bind
        source: ./logs/nginx
        target: /var/log/nginx
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      web:
        condition: service_started
    networks:
      - dojopool-network
    restart: unless-stopped
    command: >
      /bin/sh -c "mkdir -p /var/log/nginx && nginx -t && nginx-debug -g 'daemon off;'"

networks:
  dojopool-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
