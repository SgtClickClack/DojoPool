{
  "generated_at": "2025-01-14T16:33:40.829384",
  "root_directory": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined",
  "files": [
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.babelrc",
      "size": 203,
      "created": "2025-01-13T03:00:44.623028",
      "modified": "2025-01-13T03:01:00.406361",
      "hash": "0c3208b2b1aacdd463a158edb51bc6b6d03c2e25f46836166827de3bbc069ab2",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.coverage",
      "size": 53248,
      "created": "2025-01-13T06:01:39.153289",
      "modified": "2025-01-13T06:01:39.157270",
      "hash": "98d0264a1ae45dde093d7187b9ebf646d49df6a8eb29d9d823a0fc0b186ad276",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.coveragerc",
      "size": 400,
      "created": "2024-12-23T05:35:07.257977",
      "modified": "2024-12-23T05:35:38.966372",
      "hash": "f93279accb79cfac8888d464a322c8ee6f62984fd0427fdd7358e3c45cfef6d5",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.dockerignore",
      "size": 569,
      "created": "2025-01-06T09:07:21.695958",
      "modified": "2025-01-06T09:07:38.850258",
      "hash": "15ad6117e0424e56d444999b1c47709c48125e9ec97f048c4b55ea1aa76d822c",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.env",
      "size": 629,
      "created": "2024-12-24T16:03:43.644026",
      "modified": "2025-01-13T07:54:52.129617",
      "hash": "c60b23271c0ce68902f023b3c26bb4269186225767fe5d678567395c5ee7b9d9",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.env.example",
      "size": 507,
      "created": "2024-12-20T14:46:19.281898",
      "modified": "2025-01-14T16:21:45.877359",
      "hash": "11cb9e6fd0000ac797f6401e23114235ab9f73a750d681d16cb2b17d8515c9a1",
      "extension": ".example",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.env.production",
      "size": 3807,
      "created": "2024-12-23T14:36:31.813737",
      "modified": "2025-01-13T07:07:01.208727",
      "hash": "84c38833286cfcddac52b982cc66b4b82ccc34e5e9f4ca9f126b9ae1eda389b5",
      "extension": ".production",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.env.production.bak.20241223_143631",
      "size": 2631,
      "created": "2024-12-23T13:59:08.244616",
      "modified": "2024-12-23T14:32:53.503376",
      "hash": "71c5010eea5c4bf08eaece3f537cba774a9a537aa376fccaa755e3d6dd38c849",
      "extension": ".20241223_143631",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.eslintrc.js",
      "size": 139,
      "created": "2025-01-10T05:35:03.871918",
      "modified": "2025-01-13T06:51:19.860503",
      "hash": "944e01e375e28b2d1df3bdf9d448e1ee4dec8f99f9e3901be7aaf247218b66f6",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.eslintrc.json",
      "size": 761,
      "created": "2024-12-21T14:05:31.480286",
      "modified": "2024-12-21T14:07:39.098991",
      "hash": "4cd5543cd6e56e861e2ba4fef154afeb6cc932ba0be4d8ca5316751b7a8b3860",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.firebaserc",
      "size": 322,
      "created": "2025-01-13T06:31:07.301818",
      "modified": "2025-01-13T23:43:20.169770",
      "hash": "6fa799cdf514713e4ce7f6d0abd7130a4b0839a48698a3ced7d62628a744c157",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.flaskenv",
      "size": 81,
      "created": "2024-12-20T04:51:34.085427",
      "modified": "2024-12-24T03:57:10.165147",
      "hash": "8b106c1b759f748863b3c637c7caa20cf3bc7581aaaa927320fc43a2d6133e7c",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.pre-commit-config.yaml",
      "size": 869,
      "created": "2024-12-20T14:55:55.272270",
      "modified": "2024-12-23T05:56:22.632800",
      "hash": "13d867b8032ee5490ae68f1d57fb5f7dac8764e83ffb1b7e92835f861c5bd1e9",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.prettierrc",
      "size": 162,
      "created": "2024-12-21T14:05:39.138285",
      "modified": "2025-01-13T07:59:55.839766",
      "hash": "3130cd8fafd2bc857fc8fa923783cc074f3f2f475df3dac2cc450467ed5010ad",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\babel.config.js",
      "size": 281,
      "created": "2025-01-13T03:21:13.625656",
      "modified": "2025-01-13T03:24:13.910880",
      "hash": "7a73d6ae33687cbf7456473a4d573b2b1975ffef0b7764b735df2a7b8ec6e3c1",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\backup.sh",
      "size": 8420,
      "created": "2024-12-28T17:50:54.959939",
      "modified": "2024-12-29T04:54:25.586043",
      "hash": "5cdb8f4588c429b580b40d7b2d14d3e223804a417f3efa0d3449d5df77d3a22c",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [90, 97, 107, 108, 111, 116, 117, 120, 157]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\cleanup_report.json",
      "size": 107437,
      "created": "2024-12-20T14:36:26.366335",
      "modified": "2024-12-20T14:37:04.731339",
      "hash": "23aff15a507198f051b43eaa6cb344ca0a12db7ef890e4e8b731cf85391b0327",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 32, 36, 38, 39, 40, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config-overrides.js",
      "size": 2822,
      "created": "2025-01-10T05:08:12.498303",
      "modified": "2025-01-10T05:10:49.069955",
      "hash": "01ef8c28fa89a72aa237f23f53ffa1dc4f42c0b8a8782960d64424b1ac9ce709",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [
        "customize-cra",
        "path",
        "postcss-flexbugs-fixes",
        "postcss-preset-env",
        "postcss-normalize"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\context_automation.yaml",
      "size": 334,
      "created": "2025-01-14T04:07:56.959130",
      "modified": "2025-01-14T04:09:58.518787",
      "hash": "ab1cde339d746d6beb3d3027c5e79d6187473bc0a8c772cd6cbb7ac5e5a06ea6",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\context_updates.log",
      "size": 17733,
      "created": "2025-01-11T00:32:19.204776",
      "modified": "2025-01-14T04:57:14.216273",
      "hash": "0dcbe0555a669d88091a1dc5ba22636c3806d14f4cbffe1cd503cf58b3cf1e02",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\context_updates.yaml",
      "size": 17420,
      "created": "2025-01-14T04:20:06.251756",
      "modified": "2025-01-14T04:57:14.215271",
      "hash": "fbd1e64c9552d10cd22fb4092b5ab3f29c41fcdbf74b77039b71585bf74f5f28",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\context_validation.yaml",
      "size": 41979,
      "created": "2025-01-14T04:20:05.682693",
      "modified": "2025-01-14T04:57:13.687255",
      "hash": "4b7b66a6fadf8189c70aad67d752a267fda661cf4677891abf69df799f5ef321",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5, 6, 19, 236, 516, 692]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\CONTRIBUTING.md",
      "size": 2598,
      "created": "2025-01-10T14:55:35.099010",
      "modified": "2025-01-10T14:55:40.417797",
      "hash": "051ab0caf39f8c3fc30e93984caa4c9e9a183ca0d49ef4e90aa2a1a81be58344",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dev.py",
      "size": 1083,
      "created": "2025-01-06T14:08:55.584411",
      "modified": "2025-01-10T02:18:27.520555",
      "hash": "27e54d60e4eec3ac236f6f8de41df490b7d029785fde0cbd72caae34019e07b1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "dojopool.app", "required"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\DEVELOPMENT_TRACKING.md",
      "size": 7208,
      "created": "2024-12-23T11:17:59.947563",
      "modified": "2025-01-14T04:04:44.051239",
      "hash": "3734c510a1765fedbcdcff0639cdbd451ba17fa08cd68e4a1024e2906304f4eb",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docker-compose.yml",
      "size": 908,
      "created": "2024-12-17T13:39:20.364805",
      "modified": "2025-01-11T18:23:33.261628",
      "hash": "a9de0c167dea32ad2917a2154664d7dd0455a242f16aca913dac1e021fd6b992",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [13]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\Dockerfile",
      "size": 888,
      "created": "2024-12-17T13:38:53.222729",
      "modified": "2025-01-11T15:05:11.841210",
      "hash": "19653069e5173698bfcd8a50e501eac7cec1a6e11e47185494be280e89213029",
      "extension": "",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [29]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dojopool.db",
      "size": 12288,
      "created": "2024-12-24T14:07:17.604706",
      "modified": "2024-12-24T14:07:17.613709",
      "hash": "b712e87eb3a04d71742d651e8b5cba40381096c2d72a7086eb7522a53280d5dd",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\firebase-credentials.json",
      "size": 700,
      "created": "2024-12-24T03:09:32.512307",
      "modified": "2024-12-24T03:09:52.132321",
      "hash": "8ca3043b6a8bb619f16cc47d3b5f07ca70e5c607cc67f8d23aad007c8c9b1730",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5, 11]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\firebase.json",
      "size": 2857,
      "created": "2025-01-13T06:31:07.300822",
      "modified": "2025-01-13T23:56:40.064770",
      "hash": "a0b63aa33e3c938c35fc2bc0468bd6f98b786108cbddf62be1686ce2dabf5240",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\firestore.rules",
      "size": 1269,
      "created": "2025-01-13T07:02:22.792453",
      "modified": "2025-01-13T07:07:01.185728",
      "hash": "0bf3cc2cf323f5b84dd5f11264e9106dba3fb5f006180fb9eb662d6bf15e4954",
      "extension": ".rules",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\image_performance.log",
      "size": 556,
      "created": "2025-01-10T17:00:15.915630",
      "modified": "2025-01-10T17:00:21.000465",
      "hash": "b9c69dd5eddf37099ddd43aae5ffac78147f4e0fd1f8d17ece63e0ef9ef329b1",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\init_db_script.py",
      "size": 1430,
      "created": "2024-12-17T23:54:49.587676",
      "modified": "2024-12-17T23:54:51.322355",
      "hash": "7790b81790744629f1294a2d0cfa976cb1c3b6296edec94ab2f5145c014ba4a3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "src.app"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\install_hooks.ps1",
      "size": 565,
      "created": "2024-12-23T05:51:09.577579",
      "modified": "2024-12-23T05:56:22.632800",
      "hash": "17a06ba26c2de6f1a08e7aa9d7ce0b932d9667bf64e67a5cce2babc00078e482",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\jsconfig.json",
      "size": 644,
      "created": "2025-01-10T05:35:29.348613",
      "modified": "2025-01-10T05:45:42.939251",
      "hash": "00c82e8c6d16f8ff26859ffc9e3369cf2daf5b7593115a9c0f53574d8aa63121",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\LICENSE",
      "size": 1085,
      "created": "2024-12-17T03:13:31.841367",
      "modified": "2025-01-10T05:45:42.925252",
      "hash": "9250421c893c42e38c7cffeb1b60284d2a7085e37e4915f06da1427c7d294fa2",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\package-lock.json",
      "size": 1407968,
      "created": "2024-12-22T05:09:20.095661",
      "modified": "2025-01-14T00:44:24.001588",
      "hash": "4fdc2b9a70ffea8a3e997b17ac598e85aa9397e4f7414fb0989c2cd4bf16d103",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Large file size (>1MB)",
        "TODO found: LevQ==\",",
        "Long lines found on lines: [45, 59, 73, 83, 114, 121, 131, 146, 147, 159, 160, 177, 186, 187, 209, 218, 219, 237, 246, 247, 263, 264, 276, 277, 290, 291, 303, 304, 321, 322, 334, 335, 344, 345, 362, 363, 380, 381, 394, 395, 403, 404, 412, 413, 422, 423, 438, 452, 468, 481, 496, 506, 512, 513, 523, 533, 546, 560, 561, 577, 578, 593, 594, 609, 610, 627, 628, 644, 645, 646, 664, 665, 666, 679, 680, 694, 695, 696, 712, 713, 714, 730, 731, 732, 745, 746, 747, 760, 761, 762, 781, 782, 783, 799, 800, 801, 814, 815, 816, 834, 835, 836, 852, 853, 865, 866, 878, 879, 891, 892, 907, 908, 923, 924, 936, 937, 952, 953, 968, 969, 984, 985, 997, 998, 1010, 1011, 1026, 1027, 1039, 1040, 1052, 1053, 1065, 1066, 1078, 1079, 1091, 1092, 1104, 1105, 1120, 1121, 1136, 1137, 1152, 1153, 1169, 1170, 1185, 1186, 1203, 1204, 1221, 1222, 1237, 1238, 1253, 1254, 1270, 1271, 1287, 1288, 1308, 1309, 1325, 1326, 1341, 1342, 1358, 1359, 1374, 1375, 1391, 1392, 1407, 1408, 1423, 1424, 1439, 1440, 1453, 1454, 1470, 1471, 1488, 1489, 1504, 1505, 1520, 1521, 1536, 1537, 1552, 1553, 1569, 1570, 1586, 1587, 1605, 1606, 1622, 1623, 1639, 1640, 1655, 1656, 1671, 1672, 1687, 1688, 1705, 1706, 1722, 1723, 1738, 1739, 1755, 1756, 1771, 1772, 1788, 1789, 1806, 1807, 1822, 1823, 1838, 1839, 1854, 1855, 1874, 1875, 1890, 1891, 1906, 1907, 1922, 1923, 1939, 1940, 1956, 1957, 1973, 1974, 1989, 1990, 2006, 2015, 2016, 2031, 2032, 2048, 2049, 2064, 2065, 2080, 2081, 2096, 2097, 2116, 2117, 2132, 2133, 2149, 2150, 2166, 2167, 2184, 2265, 2267, 2268, 2281, 2290, 2291, 2306, 2326, 2327, 2347, 2359, 2373, 2387, 2405, 2418, 2425, 2442, 2452, 2459, 2478, 2487, 2500, 2506, 2515, 2521, 2545, 2558, 2564, 2587, 2592, 2593, 2602, 2608, 2613, 2614, 2634, 2645, 2670, 2687, 2701, 2712, 2727, 2728, 2743, 2744, 2750, 2766, 2783, 2784, 2803, 2804, 2809, 2810, 2816, 2832, 2838, 2862, 2880, 2881, 2887, 2897, 2910, 2926, 2943, 2944, 2961, 2971, 2991, 2992, 3010, 3011, 3021, 3040, 3041, 3059, 3060, 3066, 3080, 3081, 3096, 3097, 3106, 3118, 3134, 3135, 3149, 3150, 3156, 3171, 3172, 3188, 3189, 3195, 3210, 3211, 3227, 3228, 3234, 3251, 3270, 3280, 3292, 3311, 3312, 3318, 3331, 3349, 3357, 3365, 3373, 3387, 3397, 3398, 3414, 3415, 3429, 3430, 3438, 3439, 3456, 3466, 3480, 3494, 3507, 3523, 3536, 3546, 3556, 3574, 3622, 3635, 3648, 3674, 3684, 3705, 3723, 3739, 3754, 3761, 3771, 3787, 3803, 3817, 3830, 3848, 3864, 3907, 3908, 3925, 3941, 3957, 3970, 3985, 4001, 4017, 4043, 4053, 4069, 4085, 4112, 4119, 4145, 4155, 4171, 4187, 4205, 4219, 4228, 4236, 4237, 4243, 4253, 4273, 4274, 4287, 4288, 4298, 4324, 4373, 4379, 4406, 4440, 4480, 4494, 4524, 4530, 4545, 4556, 4571, 4584, 4594, 4600, 4606, 4612, 4618, 4628, 4634, 4640, 4646, 4652, 4658, 4665, 4675, 4684, 4685, 4701, 4702, 4718, 4719, 4735, 4736, 4752, 4753, 4769, 4770, 4786, 4787, 4803, 4804, 4821, 4848, 4869, 4882, 4909, 4924, 4925, 4943, 4956, 4979, 5001, 5028, 5044, 5068, 5078, 5088, 5102, 5112, 5123, 5133, 5139, 5151, 5152, 5159, 5168, 5179, 5188, 5189, 5195, 5196, 5206, 5216, 5228, 5235, 5242, 5251, 5257, 5263, 5270, 5279, 5280, 5289, 5296, 5303, 5313, 5319, 5320, 5343, 5357, 5366, 5367, 5395, 5405, 5413, 5424, 5425, 5431, 5432, 5438, 5439, 5445, 5446, 5456, 5462, 5463, 5473, 5474, 5480, 5481, 5494, 5504, 5514, 5521, 5538, 5552, 5565, 5580, 5595, 5607, 5614, 5621, 5629, 5636, 5650, 5660, 5673, 5684, 5694, 5707, 5716, 5717, 5731, 5744, 5758, 5775, 5785, 5795, 5802, 5812, 5828, 5841, 5850, 5865, 5879, 5886, 5901, 5908, 5919, 5926, 5933, 5943, 5953, 5962, 5963, 5980, 5990, 5997, 6018, 6031, 6041, 6050, 6051, 6069, 6070, 6091, 6092, 6114, 6124, 6131, 6141, 6153, 6160, 6171, 6181, 6188, 6198, 6208, 6215, 6225, 6235, 6248, 6255, 6262, 6275, 6298, 6305, 6322, 6323, 6339, 6349, 6356, 6363, 6375, 6385, 6395, 6411, 6412, 6422, 6429, 6442, 6452, 6453, 6474, 6483, 6484, 6497, 6519, 6540, 6553, 6568, 6581, 6599, 6600, 6616, 6617, 6633, 6647, 6648, 6657, 6658, 6673, 6682, 6683, 6696, 6697, 6709, 6710, 6716, 6717, 6727, 6728, 6734, 6735, 6762, 6778, 6779, 6803, 6834, 6835, 6848, 6920, 6937, 6954, 6955, 6969, 6979, 6991, 7007, 7008, 7015, 7025, 7035, 7046, 7047, 7055, 7062, 7072, 7079, 7098, 7111, 7132, 7139, 7149, 7159, 7172, 7183, 7190, 7197, 7222, 7232, 7245, 7252, 7268, 7283, 7290, 7301, 7314, 7320, 7321, 7328, 7338, 7345, 7360, 7372, 7385, 7400, 7422, 7429, 7445, 7452, 7462, 7469, 7479, 7512, 7522, 7534, 7541, 7548, 7555, 7561, 7562, 7569, 7579, 7609, 7616, 7629, 7642, 7656, 7663, 7684, 7702, 7703, 7717, 7734, 7741, 7754, 7764, 7777, 7786, 7797, 7807, 7820, 7841, 7857, 7869, 7870, 7880, 7887, 7904, 7914, 7921, 7946, 7963, 7973, 7983, 7999, 8013, 8020, 8036, 8049, 8063, 8076, 8086, 8099, 8106, 8120, 8135, 8144, 8155, 8170, 8183, 8198, 8208, 8214, 8215, 8225, 8235, 8248, 8255, 8269, 8280, 8292, 8298, 8309, 8319, 8329, 8336, 8349, 8359, 8369, 8376, 8386, 8396, 8409, 8428, 8438, 8445, 8452, 8468, 8475, 8491, 8498, 8507, 8508, 8514, 8515, 8525, 8530, 8531, 8537, 8538, 8545, 8555, 8568, 8578, 8584, 8594, 8601, 8617, 8624, 8637, 8651, 8661, 8673, 8687, 8699, 8706, 8722, 8733, 8740, 8754, 8769, 8791, 8806, 8833, 8846, 8862, 8869, 8887, 8896, 8897, 8911, 8918, 8936, 8953, 8966, 8973, 8990, 8991, 9006, 9037, 9050, 9065, 9072, 9090, 9108, 9109, 9125, 9132, 9150, 9166, 9167, 9174, 9189, 9205, 9220, 9233, 9247, 9260, 9267, 9280, 9295, 9296, 9338, 9345, 9362, 9363, 9372, 9373, 9382, 9383, 9396, 9403, 9420, 9421, 9431, 9441, 9457, 9471, 9485, 9499, 9506, 9524, 9534, 9547, 9561, 9568, 9575, 9588, 9595, 9601, 9608, 9622, 9629, 9642, 9657, 9674, 9675, 9692, 9693, 9711, 9728, 9738, 9744, 9745, 9755, 9768, 9783, 9804, 9811, 9821, 9835, 9852, 9871, 9884, 9894, 9907, 9917, 9927, 9940, 9950, 9962, 9963, 9981, 9999, 10013, 10032, 10049, 10059, 10069, 10083, 10093, 10100, 10110, 10121, 10132, 10142, 10152, 10159, 10177, 10187, 10194, 10204, 10216, 10223, 10237, 10250, 10260, 10267, 10278, 10288, 10301, 10311, 10321, 10336, 10347, 10360, 10374, 10390, 10405, 10416, 10429, 10439, 10449, 10456, 10471, 10478, 10491, 10498, 10514, 10521, 10531, 10542, 10548, 10549, 10556, 10572, 10579, 10592, 10599, 10609, 10619, 10629, 10643, 10650, 10664, 10680, 10687, 10697, 10707, 10720, 10729, 10794, 10795, 10802, 10812, 10822, 10835, 10851, 10861, 10879, 10896, 10908, 10922, 10931, 10937, 10938, 10950, 10972, 10973, 11029, 11030, 11042, 11043, 11055, 11065, 11083, 11092, 11093, 11108, 11109, 11140, 11158, 11174, 11184, 11198, 11215, 11229, 11245, 11264, 11278, 11291, 11304, 11314, 11324, 11334, 11345, 11352, 11362, 11372, 11383, 11390, 11414, 11423, 11442, 11452, 11465, 11478, 11492, 11502, 11509, 11526, 11573, 11580, 11590, 11597, 11613, 11623, 11630, 11644, 11659, 11672, 11692, 11705, 11718, 11728, 11738, 11745, 11752, 11770, 11780, 11802, 11815, 11831, 11844, 11855, 11868, 11878, 11891, 11904, 11929, 11942, 11943, 11950, 11957, 11968, 11980, 11990, 11998, 12013, 12014, 12024, 12038, 12055, 12068, 12083, 12102, 12110, 12120, 12133, 12152, 12162, 12169, 12184, 12197, 12211, 12225, 12241, 12254, 12264, 12277, 12287, 12293, 12311, 12347, 12363, 12371, 12379, 12390, 12397, 12413, 12420, 12430, 12451, 12461, 12471, 12484, 12493, 12494, 12515, 12528, 12550, 12563, 12578, 12588, 12594, 12595, 12605, 12618, 12621, 12634, 12644, 12654, 12667, 12680, 12705, 12715, 12728, 12742, 12757, 12767, 12780, 12790, 12801, 12808, 12824, 12831, 12841, 12856, 12869, 12882, 12888, 12889, 12903, 12910, 12926, 12933, 12943, 12950, 12965, 12973, 12974, 12994, 12995, 13001, 13002, 13012, 13034, 13044, 13053, 13077, 13078, 13085, 13095, 13109, 13121, 13122, 13140, 13150, 13160, 13182, 13196, 13203, 13216, 13231, 13244, 13253, 13270, 13289, 13296, 13306, 13316, 13329, 13336, 13344, 13351, 13365, 13372, 13382, 13397, 13404, 13414, 13427, 13437, 13450, 13459, 13460, 13473, 13489, 13502, 13518, 13525, 13540, 13554, 13567, 13580, 13593, 13607, 13618, 13630, 13640, 13647, 13658, 13659, 13668, 13675, 13688, 13695, 13711, 13718, 13728, 13735, 13741, 13742, 13755, 13762, 13768, 13769, 13790, 13791, 13813, 13826, 13841, 13861, 13868, 13885, 13891, 13906, 13920, 13921, 13937, 13959, 13972, 13988, 14001, 14011, 14024, 14037, 14062, 14076, 14092, 14099, 14113, 14123, 14136, 14149, 14156, 14174, 14180, 14193, 14214, 14221, 14232, 14239, 14252, 14268, 14281, 14291, 14311, 14321, 14331, 14338, 14345, 14346, 14357, 14364, 14371, 14396, 14406, 14419, 14434, 14444, 14450, 14451, 14461, 14471, 14484, 14497, 14511, 14526, 14536, 14543, 14553, 14563, 14572, 14573, 14586, 14603, 14621, 14627, 14646, 14662, 14675, 14692, 14699, 14712, 14725, 14732, 14747, 14762, 14775, 14793, 14810, 14824, 14834, 14850, 14863, 14872, 14873, 14888, 14889, 14898, 14907, 14908, 14927, 14940, 14953, 14963, 14980, 14990, 15000, 15013, 15026, 15037, 15047, 15059, 15060, 15067, 15086, 15096, 15103, 15113, 15125, 15126, 15142, 15155, 15172, 15190, 15206, 15213, 15226, 15242, 15259, 15269, 15282, 15289, 15296, 15306, 15312, 15313, 15322, 15323, 15340, 15350, 15365, 15380, 15381, 15396, 15410, 15437, 15452, 15484, 15497, 15512, 15519, 15553, 15566, 15579, 15597, 15612, 15619, 15665, 15678, 15691, 15717, 15727, 15748, 15766, 15782, 15797, 15804, 15814, 15830, 15846, 15859, 15874, 15881, 15894, 15911, 15924, 15939, 15945, 15946, 15973, 15974, 15989, 16004, 16020, 16035, 16050, 16065, 16093, 16108, 16119, 16126, 16136, 16149, 16160, 16170, 16183, 16193, 16194, 16210, 16229, 16232, 16245, 16260, 16270, 16277, 16284, 16294, 16306, 16316, 16317, 16327, 16350, 16360, 16373, 16376, 16389, 16402, 16422, 16431, 16432, 16442, 16455, 16465, 16478, 16490, 16491, 16500, 16501, 16520, 16546, 16566, 16579, 16589, 16599, 16623, 16634, 16637, 16650, 16688, 16702, 16716, 16741, 16754, 16767, 16785, 16801, 16814, 16821, 16831, 16840, 16853, 16863, 16873, 16883, 16885, 16886, 16896, 16909, 16925, 16939, 16953, 16963, 16976, 16988, 16995, 17005, 17012, 17024, 17036, 17046, 17052, 17053, 17071, 17081, 17110, 17129, 17141, 17161, 17189, 17204, 17220, 17235, 17250, 17265, 17281, 17309, 17324, 17335, 17342, 17352, 17365, 17376, 17389, 17399, 17409, 17422, 17433, 17454, 17455, 17470, 17471, 17484, 17501, 17523, 17536, 17551, 17563, 17573, 17580, 17587, 17597, 17609, 17621, 17631, 17641, 17651, 17652, 17662, 17685, 17695, 17713, 17729, 17742, 17755, 17775, 17784, 17785, 17795, 17808, 17817, 17818, 17828, 17841, 17853, 17854, 17863, 17864, 17883, 17912, 17928, 17941, 17957, 17958, 17975, 17976, 17993, 18003, 18029, 18043, 18059, 18079, 18092, 18102, 18119, 18150, 18188, 18198, 18223, 18247, 18265, 18279, 18292, 18327, 18341, 18355, 18380, 18393, 18406, 18424, 18440, 18453, 18460, 18470, 18479, 18495, 18505, 18515, 18527, 18528, 18538, 18553, 18566, 18576, 18589, 18605, 18619, 18633, 18643, 18656, 18663, 18673, 18680, 18692, 18707, 18719, 18729, 18736, 18743, 18762, 18773, 18787, 18800, 18815, 18822, 18838, 18851, 18866, 18873, 18894, 18907, 18922, 18929, 18944, 18962, 18974, 18997, 18998, 19012, 19022, 19041, 19053, 19073, 19106, 19119, 19132, 19158, 19168, 19189, 19207, 19223, 19238, 19245, 19255, 19266, 19282, 19316, 19329, 19342, 19368, 19378, 19399, 19417, 19433, 19448, 19455, 19465, 19481, 19497, 19529, 19542, 19557, 19564, 19582, 19602, 19621, 19633, 19648, 19659, 19660, 19676, 19691, 19701, 19716, 19731, 19746, 19761, 19772, 19779, 19789, 19799, 19812, 19834, 19847, 19862, 19872, 19878, 19879, 19889, 19905, 19918, 19928, 19938, 19951, 19964, 19984, 19994, 20007, 20017, 20041, 20051, 20070, 20080, 20090, 20104, 20117, 20142, 20155, 20165, 20167, 20168, 20178, 20192, 20205, 20218, 20232, 20252, 20269, 20287, 20293, 20306, 20313, 20359, 20371, 20378, 20379, 20385, 20386, 20392, 20398, 20399, 20405, 20406, 20425, 20426, 20433, 20440, 20447, 20460, 20470, 20480, 20496, 20510, 20521, 20528, 20538, 20547, 20548, 20559, 20569, 20577, 20587, 20600, 20615, 20621, 20637, 20651, 20661, 20671, 20682, 20697, 20711, 20724, 20737, 20750, 20760, 20775, 20792, 20798, 20799, 20806, 20812, 20819, 20826, 20834, 20841, 20851, 20852, 20862, 20869, 20883, 20889, 20901, 20911, 20921, 20937, 20947, 20957, 20964, 20974, 20987, 20997, 21009, 21016, 21026, 21037, 21044, 21060, 21067, 21077, 21092, 21109, 21119, 21132, 21148, 21161, 21171, 21181, 21188, 21198, 21208, 21215, 21229, 21243, 21250, 21263, 21273, 21286, 21296, 21308, 21309, 21328, 21341, 21356, 21362, 21363, 21370, 21383, 21393, 21403, 21416, 21429, 21436, 21449, 21462, 21469, 21482, 21495, 21502, 21516, 21529, 21536, 21558, 21572, 21586, 21596, 21606, 21619, 21635, 21642, 21655, 21669, 21675, 21688, 21689, 21696, 21703, 21710, 21729, 21752, 21759, 21769, 21776, 21783, 21790, 21801, 21822, 21829, 21836, 21847, 21857, 21864, 21896, 21903, 21910, 21926, 21933, 21943, 21960, 21972, 21979, 21994, 21995, 22008, 22018, 22028, 22038, 22054, 22067, 22081, 22094, 22101, 22108, 22118, 22127, 22142, 22155, 22169, 22182, 22192, 22205, 22222, 22232, 22245, 22266, 22281, 22299, 22300, 22322, 22335, 22354, 22361, 22374, 22384, 22394, 22410, 22427, 22440, 22449, 22450, 22464, 22483, 22490, 22500, 22518, 22531, 22541, 22557, 22574, 22587, 22597, 22610, 22620, 22627, 22639, 22646, 22662, 22669, 22679, 22690, 22702, 22720, 22738, 22751, 22764, 22774, 22785, 22795, 22802, 22809, 22819, 22829, 22836, 22846, 22852, 22859, 22868, 22885, 22892, 22898, 22911, 22921, 22931, 22944, 22954, 22967, 22981, 22994, 23010, 23023, 23036, 23049, 23063, 23079, 23092, 23102, 23109, 23122, 23137, 23147, 23159, 23160, 23169, 23170, 23180, 23208, 23209, 23220, 23227, 23244, 23245, 23261, 23268, 23286, 23298, 23305, 23322, 23323, 23337, 23344, 23362, 23377, 23384, 23401, 23402, 23416, 23423, 23440, 23441, 23456, 23463, 23480, 23481, 23495, 23502, 23520, 23537, 23544, 23561, 23562, 23568, 23569, 23583, 23590, 23607, 23608, 23614, 23615, 23628, 23635, 23652, 23653, 23667, 23674, 23691, 23692, 23706, 23719, 23726, 23743, 23744, 23758, 23759, 23773, 23786, 23793, 23810, 23811, 23825, 23826, 23839, 23846, 23863, 23864, 23877, 23884, 23901, 23902, 23915, 23922, 23939, 23940, 23953, 23960, 23977, 23978, 23992, 23999, 24016, 24017, 24031, 24038, 24055, 24056, 24066, 24073, 24090, 24091, 24104, 24111, 24128, 24129, 24142, 24149, 24166, 24167, 24177, 24184, 24201, 24202, 24215, 24222, 24239, 24240, 24254, 24261, 24279, 24289, 24296, 24313, 24314, 24329, 24336, 24354, 24372, 24382, 24398, 24412, 24426, 24440, 24450, 24466, 24479, 24494, 24501, 24519, 24532, 24539, 24556, 24557, 24570, 24577, 24594, 24595, 24611, 24618, 24635, 24636, 24643, 24661, 24668, 24685, 24686, 24700, 24701, 24715, 24722, 24739, 24740, 24746, 24747, 24763, 24770, 24787, 24788, 24794, 24795, 24813, 24820, 24837, 24838, 24844, 24845, 24861, 24868, 24885, 24886, 24900, 24901, 24914, 24921, 24938, 24939, 24955, 24962, 24979, 24980, 24994, 25001, 25018, 25019, 25030, 25037, 25055, 25068, 25075, 25093, 25109, 25110, 25123, 25130, 25147, 25148, 25163, 25170, 25187, 25188, 25194, 25195, 25211, 25218, 25235, 25236, 25242, 25243, 25259, 25266, 25283, 25284, 25290, 25291, 25306, 25313, 25330, 25331, 25337, 25338, 25353, 25360, 25377, 25378, 25384, 25385, 25400, 25407, 25424, 25425, 25431, 25432, 25448, 25458, 25465, 25482, 25483, 25489, 25490, 25504, 25511, 25528, 25529, 25536, 25543, 25560, 25561, 25576, 25583, 25600, 25601, 25607, 25608, 25621, 25628, 25646, 25656, 25663, 25681, 25695, 25702, 25720, 25769, 25776, 25793, 25794, 25808, 25821, 25828, 25845, 25846, 25860, 25861, 25877, 25884, 25901, 25902, 25918, 25925, 25942, 25943, 25949, 25950, 25960, 25967, 25985, 25998, 26005, 26022, 26023, 26034, 26041, 26058, 26059, 26070, 26077, 26094, 26095, 26109, 26124, 26137, 26147, 26162, 26172, 26179, 26192, 26206, 26219, 26230, 26241, 26247, 26248, 26258, 26268, 26282, 26289, 26302, 26312, 26319, 26336, 26337, 26344, 26357, 26385, 26386, 26401, 26408, 26425, 26426, 26432, 26433, 26448, 26459, 26469, 26484, 26485, 26498, 26511, 26522, 26539, 26554, 26563, 26572, 26573, 26580, 26590, 26600, 26607, 26621, 26632, 26656, 26670, 26677, 26690, 26705, 26712, 26723, 26735, 26746, 26756, 26773, 26774, 26785, 26801, 26815, 26824, 26831, 26853, 26863, 26873, 26884, 26894, 26910, 26923, 26932, 26949, 26950, 26957, 26993, 27003, 27016, 27036, 27050, 27051, 27061, 27071, 27078, 27093, 27102, 27103, 27113, 27127, 27137, 27150, 27165, 27178, 27185, 27201, 27214, 27227, 27240, 27252, 27259, 27265, 27289, 27305, 27314, 27392, 27424, 27434, 27444, 27459, 27499, 27515, 27530, 27563, 27578, 27593, 27609, 27637, 27651, 27652, 27661, 27662, 27671, 27672, 27681, 27682, 27691, 27692, 27701, 27702, 27711, 27712, 27721, 27722, 27732, 27752, 27766, 27767, 27780, 27796, 27811, 27831, 27842, 27849, 27858, 27859, 27888, 27916, 27929, 27940, 27953, 27962, 27963, 27977, 27992, 28002, 28012, 28025, 28036, 28046, 28067, 28068, 28083, 28084, 28097, 28114, 28136, 28149, 28164, 28176, 28186, 28193, 28203, 28219, 28233, 28250, 28260, 28273, 28287, 28300, 28307, 28317, 28329, 28341, 28351, 28361, 28372, 28383, 28394, 28400, 28401, 28411, 28434, 28435, 28489, 28490, 28511, 28532, 28533, 28560, 28570, 28583, 28596, 28610, 28623, 28636, 28646, 28659, 28660, 28684, 28710, 28711, 28724, 28737, 28758, 28772, 28785, 28795, 28805, 28820, 28830, 28849, 28867, 28880, 28896, 28909, 28922, 28937, 28944, 28959, 28972, 28985, 29001, 29010, 29011, 29021, 29034, 29044, 29061, 29070, 29071, 29081, 29094, 29107, 29117, 29127, 29133, 29134, 29143, 29144, 29163, 29178, 29190, 29191, 29208, 29221, 29238, 29253, 29281, 29310, 29326, 29338, 29339, 29356, 29357, 29374, 29384, 29410, 29430, 29444, 29460, 29480, 29493, 29503, 29519, 29520, 29535, 29566, 29604, 29614, 29639, 29663, 29681, 29700, 29714, 29727, 29741, 29776, 29789, 29803, 29819, 29832, 29842, 29857, 29870, 29884, 29898, 29908, 29915, 29940, 29953, 29960, 29974, 29984, 29997, 30010, 30020, 30038, 30054, 30067, 30081, 30088, 30098, 30108, 30121, 30131, 30144, 30159, 30172, 30181, 30197, 30212, 30225, 30238, 30248, 30270, 30280, 30293, 30308, 30322, 30329, 30348, 30358, 30371, 30381, 30391, 30403, 30404, 30414, 30428, 30438, 30451, 30466, 30479, 30489, 30502, 30531, 30547, 30561, 30575, 30585, 30598, 30608, 30615, 30625, 30632, 30644, 30657, 30672, 30684, 30694, 30701, 30708, 30727, 30737, 30738, 30754, 30769, 30783, 30796, 30810, 30826, 30839, 30849, 30862, 30872, 30887, 30900, 30913, 30926, 30938, 30939, 30962, 30968, 30969, 30982, 30987, 30988, 30998, 31012, 31018, 31019, 31040, 31053, 31071, 31078, 31091, 31104, 31113, 31114, 31121, 31135, 31145, 31162, 31175, 31185, 31195, 31196, 31227, 31228, 31243, 31244, 31245, 31263, 31277, 31292, 31302, 31316, 31324, 31325, 31332, 31339, 31359, 31372, 31382, 31391, 31399, 31416, 31428, 31442, 31452, 31462, 31474, 31484, 31491, 31498, 31505, 31512, 31529, 31540, 31550, 31560, 31585, 31595, 31602, 31615, 31622, 31642, 31662, 31679, 31689, 31707, 31714, 31715, 31739, 31750, 31772, 31785, 31802, 31821, 31837, 31850, 31863, 31873, 31886, 31899, 31909, 31934, 31947, 31960, 31970, 31980, 31993, 32003, 32017, 32030, 32037, 32075, 32088, 32103, 32122, 32132, 32139, 32152, 32158, 32173, 32180, 32190, 32203, 32228, 32238, 32245, 32255, 32267, 32268, 32278, 32297, 32307, 32317, 32333, 32340, 32347, 32354, 32364, 32380, 32387, 32393, 32411, 32427, 32442, 32458, 32471, 32481, 32488, 32495, 32509, 32522, 32535, 32545, 32552, 32559, 32579, 32596, 32614, 32615, 32635, 32642, 32663, 32675, 32685, 32692, 32699, 32709, 32724, 32737, 32747, 32753, 32754, 32764, 32775, 32795, 32810, 32823, 32836, 32849, 32859, 32872, 32885, 32899, 32909, 32916, 32926, 32938, 32953, 32963, 32976, 32989, 33002, 33009, 33019, 33029, 33044, 33055, 33063, 33074, 33080, 33081, 33092, 33099, 33116, 33131, 33144, 33151, 33177, 33191, 33204, 33211, 33212, 33219, 33231, 33232, 33242, 33256, 33269, 33283, 33293, 33303, 33314, 33321, 33337, 33344, 33354, 33365, 33379, 33386, 33402, 33409, 33419, 33426, 33436, 33446, 33460, 33474, 33479, 33480, 33507, 33508, 33529, 33530, 33548, 33549, 33567, 33582, 33594, 33604, 33618, 33628, 33638, 33651, 33665, 33678, 33693, 33708, 33715, 33732, 33733, 33748, 33754, 33766, 33767, 33779, 33786, 33812, 33822, 33836, 33851, 33858, 33865, 33882, 33898, 33907, 33908, 33918, 33933, 33946, 33956, 33974, 33981, 33998, 33999, 34027, 34045, 34059, 34075, 34094, 34101, 34116, 34123, 34130, 34137, 34148, 34155, 34171, 34178, 34188, 34195, 34208, 34215, 34228, 34235, 34242, 34255, 34268, 34284, 34297, 34307, 34323, 34333, 34346, 34361, 34367, 34377, 34383, 34390, 34397, 34410, 34416, 34423, 34430, 34444, 34454, 34467, 34481, 34495, 34496, 34515, 34516, 34538, 34559, 34566, 34581, 34600, 34605, 34606, 34615, 34616, 34629, 34630, 34639, 34640, 34650, 34666, 34676, 34683, 34690, 34700, 34710, 34720, 34730, 34737, 34751, 34766, 34779, 34789, 34796, 34806, 34807, 34838, 34848, 34856, 34870, 34894, 34907, 34922, 34941, 34952, 34959, 34969, 34979, 34986, 34997, 35004, 35011, 35021, 35022, 35032, 35039, 35054, 35060, 35061, 35072, 35082, 35093, 35108, 35115, 35122, 35133, 35146, 35156, 35182, 35192, 35202, 35243, 35244, 35264, 35277, 35333, 35343, 35356, 35367, 35380, 35390, 35412, 35425, 35448, 35460, 35470, 35483, 35493, 35500, 35516, 35529, 35542, 35562, 35573, 35586, 35596, 35613, 35623, 35636, 35645, 35646, 35656, 35669, 35682, 35689, 35703, 35728, 35744, 35757, 35767, 35780, 35796, 35811, 35824, 35834, 35841, 35851, 35861, 35876, 35886, 35899, 35912, 35925, 35939, 35954, 35964, 35977, 35987, 35994, 36013, 36024, 36037, 36038, 36057, 36072, 36083, 36096, 36118, 36131, 36155, 36162, 36176, 36186, 36202, 36215, 36225, 36238, 36251, 36261, 36274, 36289, 36314, 36327, 36341, 36350, 36351, 36375, 36389, 36396, 36409, 36410, 36419, 36432, 36439, 36449, 36463, 36478, 36479, 36499, 36527, 36546, 36553, 36574, 36584, 36593, 36594, 36603, 36604, 36614, 36649, 36660, 36661, 36671, 36678, 36687, 36688, 36689, 36701, 36702, 36712, 36721, 36722, 36732, 36742, 36752, 36762, 36768, 36769, 36787, 36797, 36807, 36817, 36834, 36841, 36854, 36868, 36881, 36903, 36913, 36920, 36930, 36940, 36949, 36956, 36965, 36983, 36992]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\package.json",
      "size": 2054,
      "created": "2024-12-17T11:20:13.902283",
      "modified": "2025-01-14T00:31:13.018675",
      "hash": "47fad0cfadd943d4d41a823f7c26686189a7a577aa5ba7df0c5a49e215e2418c",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\performance_history.db",
      "size": 8192,
      "created": "2025-01-14T05:44:19.795450",
      "modified": "2025-01-14T05:45:06.584221",
      "hash": "5bf3479706851ec9a3618e70c43569286ff4ae9c51a121e9b533a9e81a1fe5cb",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\performance_metrics.json",
      "size": 71507,
      "created": "2025-01-10T17:00:20.990462",
      "modified": "2025-01-14T05:39:58.208833",
      "hash": "7d646e74f9a198dc58b5bee0d4d15ef13f4e608d8a2a470bf1441795e05f4818",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\pinned_files.log",
      "size": 4293,
      "created": "2025-01-10T16:59:47.383786",
      "modified": "2025-01-10T17:00:25.679730",
      "hash": "d20d05d9f502a3db91d603cb35f465a691e4aef0ef987d8b91746a5a47f07ab7",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [15, 16, 19, 20, 21, 22, 23, 24, 25, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\pinned_files_status.yaml",
      "size": 3381,
      "created": "2025-01-10T16:59:47.408783",
      "modified": "2025-01-10T17:00:25.689728",
      "hash": "51d85de70ffd6c29786810eaaee04eacf5b0da187f545291f48337732306df80",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\pyproject.toml",
      "size": 1169,
      "created": "2024-12-17T09:06:22.466357",
      "modified": "2025-01-06T13:52:38.261626",
      "hash": "97faf745db794f31737b47b9ebaa6320f00793e06b0ebd48c95edc86f205c74d",
      "extension": ".toml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\pytest.ini",
      "size": 692,
      "created": "2024-12-23T05:35:26.900107",
      "modified": "2024-12-23T05:37:42.490103",
      "hash": "ea66a01669798271afb385303ea7e90cad4ab9b47b68eb7a85dfed9949a58f4f",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\README.md",
      "size": 2794,
      "created": "2024-12-17T09:06:21.959077",
      "modified": "2025-01-10T05:45:42.925252",
      "hash": "a93ae80bb2a7e863f9fd6d4fd14f1ef092b2d0f01fcb622444329f1c1bf715a8",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\requirements.txt",
      "size": 275,
      "created": "2024-12-20T14:43:02.565197",
      "modified": "2025-01-14T05:35:28.279614",
      "hash": "f0d2dbf1eba814e7874d31bb148eeefa216d275ef042d65b3c2b781ffb60426b",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\run.py",
      "size": 441,
      "created": "2024-12-18T11:38:41.324652",
      "modified": "2025-01-11T05:39:38.676974",
      "hash": "5e6931e783ec21c2f1a8d47a615a3bdb54b719dbee34c79de303eedb95e16be4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["src.dojopool.app"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\run_tests.ps1",
      "size": 675,
      "created": "2024-12-23T05:49:12.854131",
      "modified": "2024-12-23T05:56:22.629802",
      "hash": "45c433301be760fde8773d4b5b37e0a7d6010ddb16b322d4e59b55419731ad6a",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\run_tests.sh",
      "size": 836,
      "created": "2024-12-23T05:49:34.402740",
      "modified": "2024-12-23T05:56:22.629802",
      "hash": "1f666d1b1c243a6627da6ca4578b05e041f7a31a1406101581550b0349d71539",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [14]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\setup.cfg",
      "size": 702,
      "created": "2024-12-23T05:51:39.381889",
      "modified": "2024-12-23T05:56:22.633799",
      "hash": "66c48987f736ae564291ccd66fc3f29bd9cf30da6f45e9c2248070cbe8db1a5c",
      "extension": ".cfg",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\setup.py",
      "size": 647,
      "created": "2024-12-17T16:42:51.687734",
      "modified": "2025-01-10T02:23:31.579376",
      "hash": "a2de4bf466da66a5fbfe95b68cd6e0a671492cfd5d216feda59475a44196a9f7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["setuptools"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\storage.rules",
      "size": 1265,
      "created": "2025-01-13T07:02:36.275011",
      "modified": "2025-01-13T07:07:01.190731",
      "hash": "c251e92044ad11798d0c2f17dbd7b08acfdcbbfe063367b4067fd1fa92fa7c0a",
      "extension": ".rules",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tash",
      "size": 1644,
      "created": "2024-12-20T14:43:02.566199",
      "modified": "2024-12-20T14:43:02.566199",
      "hash": "b1b47336ee668a0e4086700c0cafdb42e211dfa38539025274c7c5dd8c82115b",
      "extension": "",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1, 8, 25, 26]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\task_tracking.md",
      "size": 5213,
      "created": "2025-01-13T02:15:29.826226",
      "modified": "2025-01-13T02:58:35.489584",
      "hash": "d96299da753511072f0dfc1272a471009ee003db3a2fca442a01dbe20196745c",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\test-requirements.txt",
      "size": 154,
      "created": "2024-12-23T05:48:44.236629",
      "modified": "2024-12-23T05:56:22.626799",
      "hash": "8317858bba7cf0527b9991b3a1515955b1d52d166fc36b80e9eacb8672c28ee3",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\test.py",
      "size": 23,
      "created": "2025-01-10T12:39:16.859332",
      "modified": "2025-01-10T12:45:33.931227",
      "hash": "36c164128f6e380671e3a6a1c3f10ccc9f6370c758d1c4b893da97cc00df3f55",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\test_api.py",
      "size": 808,
      "created": "2024-12-24T13:56:15.092288",
      "modified": "2024-12-24T14:03:34.871523",
      "hash": "c3695ef850a080b05bb6a066eb39644eb46552eb21bd2f761c457fceecccd73d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["requests"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\uv.lock",
      "size": 136520,
      "created": "2024-12-17T09:06:22.491629",
      "modified": "2024-12-17T09:06:22.491629",
      "hash": "8e76ca7bdbdf29b9863e046b487de596c046e9efcc8d80a011ce0cd90efd7166",
      "extension": ".lock",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [6, 8, 9, 16, 18, 25, 27, 34, 36, 43, 45, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 156, 163, 165, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 201, 203, 214, 216, 227, 229, 243, 245, 256, 258, 269, 271, 282, 284, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 335, 342, 344, 351, 353, 363, 365, 372, 374, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 475, 477, 487, 489, 490, 491, 492, 493, 494, 504, 506, 507, 508, 509, 510, 511, 521, 523, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 621, 623, 633, 635, 642, 644, 651, 653, 663, 665, 676, 678, 740, 742, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 821, 823, 833, 835, 842, 844, 851, 853, 861, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 897, 899, 914, 916, 927, 929, 936, 938, 945, 947, 959, 961, 971, 973, 983, 985]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\wsgi.py",
      "size": 323,
      "created": "2025-01-11T05:11:25.968551",
      "modified": "2025-01-11T14:55:04.575599",
      "hash": "65f94b09be82d2389c7f1ca7d3d9a960499467a32ac27871cd396ef9742e6a00",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "src.dojopool.app"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.firebase\\hosting.YnVpbGQ.cache",
      "size": 926,
      "created": "2025-01-13T06:44:38.394850",
      "modified": "2025-01-13T23:54:09.572443",
      "hash": "69ccf248fc367724bc906163e2784f0946827e49269c033b1065156f005f0c28",
      "extension": ".cache",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5, 6, 7, 8, 9]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.pytest_cache\\CACHEDIR.TAG",
      "size": 191,
      "created": "2025-01-10T14:58:40.949132",
      "modified": "2025-01-10T14:58:40.949132",
      "hash": "37dc88ef9a0abeddbe81053a6dd8fdfb13afb613045ea1eb4a5c815a74a3bde4",
      "extension": ".TAG",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.pytest_cache\\README.md",
      "size": 310,
      "created": "2025-01-10T14:58:40.948131",
      "modified": "2025-01-10T14:58:40.948131",
      "hash": "420e808d79a6c25d3cda0af33bc4782314a14949866682c68ce8149e89b66b70",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.vscode\\launch.json",
      "size": 1127,
      "created": "2024-12-06T16:56:52.006734",
      "modified": "2024-12-06T16:56:53.551502",
      "hash": "786efcb463f6b7bc3b36c0bf23605a0e271b15db1cfbb087f50a61890607afe7",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.vscode\\settings.json",
      "size": 605,
      "created": "2024-12-17T09:06:21.770353",
      "modified": "2025-01-05T08:11:19.260464",
      "hash": "bf2c243908f48cf88ed74fcbd920658e29097430800b341fa842c9668fbacd8d",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.vscode\\tags",
      "size": 113875,
      "created": "2024-12-17T09:06:21.922404",
      "modified": "2024-12-17T09:06:21.922404",
      "hash": "c34ad97d3f3258c1439f52be0e3cfd6ab7f90b90f3c83900af284986adfeea09",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\asset-manifest.json",
      "size": 369,
      "created": "2025-01-13T23:46:37.652011",
      "modified": "2025-01-13T23:46:37.700015",
      "hash": "842d912480b24ede7fbd429e954bdd2ec691f1045d0a4c026472951db834f300",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\index.html",
      "size": 324,
      "created": "2025-01-13T23:46:37.652011",
      "modified": "2025-01-13T23:46:37.700015",
      "hash": "5d4263c22f0f70492c8fcc3c1aa4c4633c0a198b55212a293832b6d2c38cb7d1",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\manifest.json",
      "size": 630,
      "created": "2025-01-13T23:44:13.091902",
      "modified": "2025-01-10T05:11:28.847733",
      "hash": "2cd7dbcd4877a83e3458a3be0368eb05b427fdb34301666423676f068088a90f",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\robots.txt",
      "size": 69,
      "created": "2025-01-13T23:44:13.098899",
      "modified": "2025-01-10T05:11:28.844737",
      "hash": "85b1f74fe9071bf289559b817854c7a2e435fbfd8ddf796b7f84659f6977b2c5",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\certs\\server.crt",
      "size": 1134,
      "created": "2024-12-27T03:33:53.335273",
      "modified": "2024-12-27T03:33:53.336273",
      "hash": "73dbb7dfbeb27f3afb2cd58f9a3c6749e60e2a449b881e6bc2d875b24511fa63",
      "extension": ".crt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\certs\\server.key",
      "size": 1732,
      "created": "2024-12-27T03:33:53.326272",
      "modified": "2024-12-27T03:33:53.330274",
      "hash": "55db04013fe518cef67453d8c00e6649503fb9a64ba295a423cdce8dfdcfff07",
      "extension": ".key",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\alembic.ini",
      "size": 2116,
      "created": "2024-12-22T13:55:27.055443",
      "modified": "2024-12-22T13:56:17.571328",
      "hash": "673cd8397df2c7760c4f7c640194072de261ebb92e4b5bc9ea9cc225097c808a",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\production.py",
      "size": 928,
      "created": "2024-12-17T13:40:17.376755",
      "modified": "2024-12-17T13:40:38.724102",
      "hash": "8f6d5f70bfbc231b766ac8bba2be6a4d3992466fe4455008dea5697ebbca4217",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\pyproject.toml",
      "size": 257,
      "created": "2024-12-17T09:06:22.423022",
      "modified": "2024-12-17T09:06:22.423022",
      "hash": "f6f355767259c098605f08d20bd595fe1bb54555b4365cd0bbaed145c5ddfde9",
      "extension": ".toml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\pytest.ini",
      "size": 343,
      "created": "2024-12-17T09:06:22.423022",
      "modified": "2024-12-17T09:06:22.424019",
      "hash": "b59d5be22a321b8f1c9199f22cdacb4558b4b6e4b1e8e63cff52328f9c1e9d6d",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\.env.production",
      "size": 342,
      "created": "2024-12-23T16:32:41.340039",
      "modified": "2024-12-23T16:37:06.730216",
      "hash": "1bfa69bc467059370125ec9994bc65e2a0157fd7715565ab81acce42020c5e7b",
      "extension": ".production",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\deploy.sh",
      "size": 6355,
      "created": "2024-12-23T13:56:59.314403",
      "modified": "2024-12-23T14:32:53.503376",
      "hash": "980e29362a8a11923f2dce4c928015392dea521545567870ee36410683c1a10a",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\deploy_windows.ps1",
      "size": 8265,
      "created": "2024-12-23T15:12:49.752163",
      "modified": "2025-01-03T13:52:43.210732",
      "hash": "f31d18b4dd183c1c2f48164fbbdc6fd30b04cb294bd19ed0280e9ca20768810e",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [68, 233]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\pre_deploy_check.py",
      "size": 9864,
      "created": "2024-12-23T14:20:51.611397",
      "modified": "2024-12-23T16:51:10.801347",
      "hash": "7f77b9526a4159cbaf487eb98b3c694abcd7bd0c773528918bc0c2a488ebfe2e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [148]"
      ],
      "similar_files": [],
      "dependencies": ["os", "psycopg2", "redis"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\production_config.yml",
      "size": 798,
      "created": "2024-12-23T13:56:26.625246",
      "modified": "2024-12-30T11:51:01.542076",
      "hash": "0a39c78e6fc641e6c1f28b812b04fa2f78b068f3e821c14bdec41d3c5dec755f",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\README.md",
      "size": 5167,
      "created": "2024-12-23T14:13:29.718897",
      "modified": "2025-01-05T10:32:29.582224",
      "hash": "cbcd53f9e5a8ce1ddf7222379a4a712e7cda94ac261a5b8fd57d6479a34fcf8d",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [26, 148]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\setup_env.py",
      "size": 7394,
      "created": "2024-12-23T13:59:49.108290",
      "modified": "2024-12-23T14:08:19.770862",
      "hash": "419c08e2b7d4d227042a1ac5879acb58ec541a680c49220e8be9e552670a6981",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [97, 99, 101, 103, 104, 105, 107, 108, 109, 117]"
      ],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\accessibility.md",
      "size": 10407,
      "created": "2024-12-21T10:41:46.141659",
      "modified": "2025-01-14T04:59:25.448255",
      "hash": "9beb6e043d562a623ffba03024a8f98839129be8c4af413ae8460f922f028a61",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\AI_SERVICES.md",
      "size": 5935,
      "created": "2025-01-10T04:58:29.015247",
      "modified": "2025-01-10T04:58:39.075023",
      "hash": "f99029573ca4cc44c96437c495d8ed5058bdfca24fc367c3c30d33e346bc391f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\API_REFERENCE.md",
      "size": 7090,
      "created": "2025-01-03T17:16:27.889537",
      "modified": "2025-01-03T17:23:02.921443",
      "hash": "d74fdbcf2b013cc0aaee9f276539446eb195fe436642132d057103f0b953f718",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\ARCHITECTURE.md",
      "size": 8000,
      "created": "2025-01-03T17:24:05.230282",
      "modified": "2025-01-03T17:26:25.990629",
      "hash": "3a61d78dcfa0c1e915a24f9172178a3bb830dbadef5dad62098fe09ac43f9bbd",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\BACKGROUND_IMAGES.md",
      "size": 2902,
      "created": "2025-01-10T09:24:28.959960",
      "modified": "2025-01-10T09:26:11.882761",
      "hash": "9c88c6635ac023a2439cc55ef08be002c5799ad2c6d8d1f2fbc5b4cb9a45970e",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\BG changes - Copy of Dojo Pool_ Business Plan - July 6, 3_37\u202fAM.docx",
      "size": 663106,
      "created": "2024-12-17T09:06:21.774479",
      "modified": "2024-12-17T09:06:21.774479",
      "hash": "8202e34c352fd12dbe152ad2602e271daaba35fe0dff8c2540576dadfce118ab",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\CHANGELOG.md",
      "size": 2532,
      "created": "2024-12-20T14:40:30.181579",
      "modified": "2024-12-22T15:28:20.697431",
      "hash": "1a0532724d5f623edbc539f700a505e580d3c5dd668e4a96780cd1d6727d8180",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\components.md",
      "size": 13597,
      "created": "2024-12-21T10:38:02.597644",
      "modified": "2024-12-21T10:39:02.553329",
      "hash": "a982c255ce78cdd009d38ebc09f0431b12f00e0dd3d9bf890ad13abc5fc58ec4",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [18]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\CONTRIBUTING.md",
      "size": 6033,
      "created": "2025-01-03T17:13:50.660880",
      "modified": "2025-01-03T17:14:32.423388",
      "hash": "2b48c2f7424b114175383ed62f6055ef1a12005a270cb17b3e25c3744b7eaf40",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\DEPLOYMENT.md",
      "size": 1600,
      "created": "2024-12-28T03:07:20.630198",
      "modified": "2025-01-14T05:01:35.375412",
      "hash": "62428564e0022c91882e0ab2ac52514ec221539842717fbfe1696b51061f0bef",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\dns-config.md",
      "size": 1051,
      "created": "2025-01-13T07:03:19.190192",
      "modified": "2025-01-13T07:07:01.191734",
      "hash": "bdc6ce400119993089cdac49e0a56d1c2d38c1a7b4fe131b391d74200f545f32",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [39]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\DOCUMENTATION_INDEX.md",
      "size": 1450,
      "created": "2025-01-10T15:08:09.651267",
      "modified": "2025-01-14T05:06:02.997069",
      "hash": "6aaa8a8313b55309612f80ccdcb7488299b5bd5c553fdfda66b42910704513bb",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\DOJO POOL, investment and ownership structure.docx",
      "size": 655026,
      "created": "2024-12-17T09:06:21.777481",
      "modified": "2024-12-17T09:06:21.777481",
      "hash": "1e8d82ad3fdd4882e2b2599b2e8b4f53e09c4e8808fe5d64aea99ff13daf4c2f",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\Dojo Pool_ Context-Driven Gameplay Experience.docx",
      "size": 656180,
      "created": "2024-12-17T09:06:21.914400",
      "modified": "2024-12-17T09:06:21.915401",
      "hash": "1fd15eb8efabfe52fb8f448b529a02a86a30471518326e1031f5cb59b1aedb6a",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\Dojo Pool_ Enhanced Context-Driven Gameplay System.docx",
      "size": 656395,
      "created": "2024-12-17T09:06:21.917401",
      "modified": "2024-12-17T09:06:21.918403",
      "hash": "53c68e51f54d9aea8d1d7c8f692964209068482274898601cf74b9df8f6dde64",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\DojoPoolWorkspace.code-workspace",
      "size": 85,
      "created": "2024-12-17T09:03:16.834439",
      "modified": "2024-12-17T09:03:16.834439",
      "hash": "434e3d8d1702891743ae84c3bb046aa3750b689ea535cde70fe51bc114e16dd6",
      "extension": ".code-workspace",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\image_compression.md",
      "size": 6816,
      "created": "2025-01-14T03:58:07.491509",
      "modified": "2025-01-14T03:58:42.662795",
      "hash": "fad60056bdd93d36648d10241f922aea6009f5aad2735761a706c9d1a3b22f83",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4, 21]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\index.md",
      "size": 2486,
      "created": "2024-12-21T10:49:56.644229",
      "modified": "2024-12-21T10:51:53.862565",
      "hash": "22f622318a192d69f4a2065eed6e4831d3a6ebef7dbe3383dc2968dd6983ceb0",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [76]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\integration_guide.md",
      "size": 11502,
      "created": "2025-01-14T03:58:53.228895",
      "modified": "2025-01-14T03:59:20.198300",
      "hash": "e498e6f498269c4060ffdd8c0ecaa9eb57198c87e565c95f85184effd022d2a3",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\javascript.md",
      "size": 13434,
      "created": "2024-12-21T10:39:33.416844",
      "modified": "2024-12-21T10:44:03.953855",
      "hash": "d6449406d9326ffbfea8a04c3077d321f8dd502b1f49cd97a50194b3c6ca2eb9",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\LANDING_PAGE.md",
      "size": 4177,
      "created": "2025-01-06T02:34:45.375462",
      "modified": "2025-01-06T02:37:54.171830",
      "hash": "3fdf6da9931e32ebc6b6fc3a0bc69423af3720814dd2b3adaf9cd2b787c86781",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\MONITORING.md",
      "size": 3028,
      "created": "2024-12-28T06:27:15.523567",
      "modified": "2024-12-28T06:30:42.700707",
      "hash": "0ccd8c628485c17c34dfac85487cb695eff459043f5d02dfaaeced78738d5920",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\NGINX_CONFIGURATION.md",
      "size": 5680,
      "created": "2025-01-05T10:31:29.659249",
      "modified": "2025-01-14T03:21:45.330785",
      "hash": "61db0bcb32e023f75fde5c47934c2609337c908980c00e54bd6264ce06890278",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\outsourcing software development.txt",
      "size": 7668,
      "created": "2024-12-17T09:06:22.465358",
      "modified": "2024-12-17T09:06:22.465358",
      "hash": "afa0ee647488365d2d114d4afa4bf6b494fbb3fc1f3506ae9f86adcb41aecb5f",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [1, 15, 16, 19, 20, 23, 30, 33, 34, 52, 57, 61, 73, 95, 122, 152, 213]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\package.json",
      "size": 413,
      "created": "2024-12-21T10:50:21.609692",
      "modified": "2024-12-21T10:51:53.862565",
      "hash": "0e4e6b31f0a5d071ec9ecbf3a7e0d7a232b3d4122b7f049aa7372577e30a8648",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\performance.md",
      "size": 9287,
      "created": "2024-12-21T10:40:55.427782",
      "modified": "2024-12-21T10:44:03.954855",
      "hash": "157e9bd7d4e1608e721bd58fddb6feffe8f69b5ac312c4e01fd9a630821368cf",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\PERFORMANCE_MONITORING.md",
      "size": 3476,
      "created": "2025-01-14T05:48:00.547803",
      "modified": "2025-01-14T13:17:16.089186",
      "hash": "a4681e434e161b067bdd7da32e4d0745f35c73f48767d7f89d689a8cc35af121",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7, 61]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\performance_recommendations.md",
      "size": 9572,
      "created": "2025-01-14T03:59:37.387807",
      "modified": "2025-01-14T04:00:15.358289",
      "hash": "3e1b49a9e9d900022942c307582c5e28b380a31072d098c8e727c1933cc38d2f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\PINNED_FILES.md",
      "size": 3270,
      "created": "2025-01-10T16:58:49.851382",
      "modified": "2025-01-14T04:57:17.470105",
      "hash": "c23729c9f973c1ee530d736a01480dce18471752a6308388508892d56b2a12b5",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [6, 39, 40, 44]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\PROJECT_OVERVIEW.md",
      "size": 2599,
      "created": "2024-12-20T14:18:58.709916",
      "modified": "2024-12-20T14:21:05.428341",
      "hash": "7cfd98fc5301029a388f8d5da869da192b8961b30bdd28c6d02422c81f6276e8",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4, 102, 109]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\PROJECT_STRUCTURE.md",
      "size": 6478,
      "created": "2024-12-20T14:41:25.367412",
      "modified": "2024-12-20T14:41:32.303702",
      "hash": "639b073785d1cce0ee25e0414513b17ab4ff18aaea82d3f6285cba4baa491052",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\RATE_LIMITING.md",
      "size": 2871,
      "created": "2024-12-28T06:36:04.169470",
      "modified": "2024-12-28T06:36:17.036797",
      "hash": "17d24054a8275b9c3d3fd277943c5b57002e14394ac034f3bfb49c2960e41407",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\README.md",
      "size": 989,
      "created": "2024-12-17T09:03:16.835441",
      "modified": "2025-01-14T04:33:18.806953",
      "hash": "5f01b61ef19d92b2d2a0ee76f28fced70e696722bf6a1f6f82bdde5e9a0761a0",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\Reference Tool For Dojo Pool.txt",
      "size": 815236,
      "created": "2024-12-17T09:06:21.961074",
      "modified": "2024-12-17T09:06:21.961074",
      "hash": "818082f7447c12785ad76f790be8509bd91faa90f5390f441fcf77c1d3be2a39",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: password",
        "Potential security issue: secret",
        "Long lines found on lines: [3, 9, 12, 13, 15, 16, 18, 19, 21, 22, 24, 26, 27, 50, 53, 54, 55, 56, 58, 59, 60, 62, 66, 69, 70, 72, 74, 77, 78, 79, 86, 89, 92, 93, 94, 95, 102, 105, 110, 111, 113, 116, 117, 121, 122, 125, 126, 129, 130, 133, 134, 137, 138, 140, 142, 152, 166, 181, 183, 185, 190, 199, 203, 205, 206, 207, 208, 215, 219, 224, 225, 226, 227, 231, 232, 234, 236, 237, 239, 241, 254, 255, 256, 259, 260, 261, 262, 265, 269, 270, 280, 283, 285, 295, 296, 303, 307, 309, 319, 322, 324, 325, 326, 327, 328, 329, 336, 338, 348, 350, 357, 360, 363, 367, 370, 373, 376, 379, 382, 388, 391, 392, 393, 394, 401, 407, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 428, 430, 434, 435, 447, 449, 452, 456, 459, 460, 461, 462, 465, 466, 467, 470, 473, 474, 477, 478, 484, 487, 489, 490, 497, 503, 508, 509, 511, 514, 515, 516, 519, 520, 523, 524, 528, 529, 530, 532, 533, 535, 537, 547, 550, 554, 557, 558, 561, 562, 563, 564, 565, 566, 569, 570, 573, 576, 577, 580, 581, 586, 588, 590, 591, 592, 593, 603, 609, 617, 618, 621, 623, 624, 625, 626, 635, 638, 641, 645, 648, 649, 652, 653, 654, 657, 658, 661, 664, 665, 668, 674, 675, 677, 689, 733, 740, 741, 745, 754, 760, 780, 838, 929, 933, 935, 937, 939, 942, 949, 952, 954, 957, 961, 964, 968, 969, 971, 972, 973, 975, 979, 981, 989, 992, 997, 998, 999, 1002, 1005, 1007, 1011, 1012, 1015, 1019, 1025, 1029, 1030, 1037, 1040, 1057, 1094, 1137, 1139, 1176, 1197, 1200, 1219, 1245, 1257, 1260, 1264, 1273, 1335, 1362, 1396, 1406, 1457, 1473, 1484, 1553, 1555, 1557, 1559, 1561, 1570, 1576, 1578, 1585, 1588, 1590, 1595, 1597, 1604, 1608, 1617, 1621, 1624, 1632, 1649, 1661, 1663, 1680, 1684, 1685, 1687, 1689, 1699, 1702, 1732, 1743, 1766, 1772, 1786, 1794, 1804, 1807, 1808, 1813, 1816, 1853, 1854, 1855, 1859, 1860, 1881, 1899, 1910, 1928, 1947, 1956, 1959, 1974, 2002, 2003, 2005, 2013, 2014, 2017, 2027, 2044, 2057, 2083, 2092, 2104, 2126, 2160, 2162, 2166, 2167, 2212, 2217, 2242, 2246, 2257, 2293, 2295, 2303, 2316, 2325, 2329, 2334, 2335, 2336, 2356, 2361, 2371, 2393, 2400, 2403, 2407, 2409, 2427, 2438, 2473, 2501, 2506, 2507, 2529, 2531, 2532, 2536, 2540, 2541, 2542, 2560, 2585, 2592, 2595, 2615, 2620, 2621, 2643, 2645, 2646, 2649, 2650, 2668, 2669, 2671, 2672, 2675, 2676, 2694, 2695, 2697, 2698, 2702, 2708, 2743, 2795, 2836, 2845, 2852, 2855, 2875, 2880, 2881, 2903, 2905, 2906, 2909, 2910, 2928, 2929, 2931, 2932, 2935, 2936, 2954, 2955, 2957, 2958, 3055, 3058, 3079, 3100, 3101, 3119, 3126, 3131, 3132, 3156, 3157, 3159, 3160, 3164, 3167, 3170, 3172, 3195, 3208, 3215, 3228, 3236, 3247, 3248, 3250, 3251, 3254, 3259, 3260, 3284, 3285, 3287, 3288, 3292, 3294, 3297, 3318, 3327, 3338, 3343, 3347, 3352, 3360, 3364, 3375, 3380, 3390, 3446, 3459, 3469, 3477, 3585, 3592, 3595, 3598, 3705, 3707, 3709, 3710, 3720, 3725, 3735, 3737, 3739, 3746, 3750, 3752, 3759, 3762, 3765, 3766, 3767, 3769, 3770, 3771, 3772, 3774, 3779, 3780, 3781, 3783, 3784, 3786, 3787, 3790, 3791, 3792, 3795, 3796, 3800, 3806, 3810, 3841, 3863, 3939, 3949, 3954, 3958, 3970, 4084, 4085, 4086, 4112, 4135, 4225, 4264, 4266, 4291, 4295, 4296, 4297, 4298, 4308, 4318, 4321, 4322, 4325, 4326, 4329, 4330, 4341, 4423, 4435, 4482, 4484, 4522, 4535, 4551, 4563, 4713, 4739, 4752, 4758, 4780, 4791, 4802, 4812, 4823, 4833, 4845, 4857, 4868, 4879, 4906, 4915, 4918, 4921, 4948, 4960, 4985, 4995, 5005, 5009, 5010, 5011, 5030, 5040, 5056, 5058, 5059, 5060, 5061, 5073, 5074, 5075, 5077, 5089, 5090, 5091, 5118, 5131, 5133, 5134, 5147, 5149, 5166, 5168, 5179, 5181, 5191, 5199, 5202, 5222, 5224, 5238, 5254, 5256, 5257, 5258, 5259, 5269, 5272, 5273, 5274, 5284, 5287, 5288, 5289, 5290, 5301, 5311, 5313, 5323, 5335, 5345, 5357, 5367, 5369, 5379, 5381, 5391, 5405, 5410, 5413, 5419, 5420, 5433, 5434, 5436, 5446, 5458, 5463, 5467, 5474, 5478, 5501, 5513, 5517, 5521, 5526, 5538, 5539, 5540, 5553, 5554, 5555, 5565, 5571, 5578, 5588, 5603, 5610, 5620, 5632, 5634, 5646, 5647, 5648, 5659, 5661, 5673, 5674, 5675, 5676, 5686, 5690, 5702, 5704, 5714, 5716, 5730, 5731, 5732, 5734, 5735, 5738, 5742, 5745, 5748, 5750, 5752, 5767, 5769, 5779, 5800, 5810, 5813, 5814, 5815, 5816, 5829, 5830, 5831, 5841, 5843, 5853, 5859, 5861, 5872, 5882, 5895, 5906, 5908, 5909, 5910, 5911, 5921, 5940, 5941, 5943, 5945, 5955, 5958, 5978, 5983, 5984, 5992, 6004, 6007, 6009, 6020, 6042, 6049, 6053, 6063, 6066, 6070, 6078, 6081, 6085, 6086, 6088, 6147, 6148, 6155, 6165, 6174, 6175, 6187, 6193, 6206, 6243, 6244, 6245, 6252, 6269, 6279, 6292, 6298, 6310, 6349, 6388, 6407, 6409, 6419, 6423, 6428, 6431, 6434, 6435, 6445, 6454, 6461, 6471, 6476, 6484, 6497, 6515, 6528, 6531, 6532, 6542, 6566, 6593, 6603, 6608, 6654, 6659, 6673, 6676, 6699, 6700, 6703, 6709, 6711, 6722, 6728, 6738, 6741, 6754, 6759, 6763, 6781, 6784, 6785, 6788, 6793, 6808, 6811, 6820, 6874, 6884, 6903, 6913, 6934, 6935, 6965, 6973, 6974, 6997, 7000, 7006, 7021, 7032, 7035, 7038, 7042, 7043, 7044, 7080, 7085, 7108, 7109, 7119, 7139, 7149, 7151, 7165, 7166, 7176, 7179, 7180, 7181, 7182, 7199, 7212, 7213, 7216, 7217, 7220, 7225, 7226, 7245, 7250, 7257, 7261, 7263, 7273, 7279, 7280, 7283, 7288, 7289, 7303, 7304, 7314, 7320, 7335, 7336, 7347, 7352, 7396, 7407, 7417, 7436, 7455, 7475, 7490, 7496, 7499, 7514, 7519, 7530, 7541, 7556, 7563, 7573, 7600, 7606, 7624, 7625, 7629, 7630, 7637, 7650, 7651, 7653, 7675, 7692, 7698, 7699, 7709, 7712, 7720, 7723, 7743, 7745, 7769, 7771, 7778, 7781, 7784, 7794, 7800, 7803, 7806, 7807, 7818, 7835, 7878, 7910, 7920, 7931, 7939, 7947, 7991, 7992, 8004, 8040, 8041, 8050, 8062, 8064, 8066, 8068, 8071, 8074, 8077, 8080, 8082, 8084, 8087, 8093, 8098, 8152, 8170, 8171, 8183, 8186, 8190, 8194, 8211, 8242, 8253, 8265, 8267, 8269, 8271, 8274, 8277, 8280, 8283, 8285, 8287, 8290, 8297, 8307, 8310, 8315, 8320, 8326, 8328, 8331, 8333, 8335, 8340, 8342, 8345, 8347, 8348, 8360, 8361, 8364, 8368, 8379, 8389, 8391, 8392, 8393, 8405, 8408, 8420, 8421, 8457, 8466, 8478, 8515, 8520, 8530, 8531, 8539, 8576, 8589, 8601, 8603, 8605, 8609, 8616, 8625, 8773, 8786, 8792, 8926, 8930, 8936, 8949, 8961, 8963, 8965, 8967, 8970, 8973, 8976, 8979, 8981, 8983, 8986, 8995, 9017, 9021, 9046, 9067, 9078, 9088, 9097, 9101, 9106, 9118, 9128, 9131, 9141, 9143, 9146, 9156, 9158, 9168, 9176, 9188, 9198, 9200, 9201, 9206, 9218, 9220, 9236, 9237, 9240, 9241, 9245, 9246, 9253, 9259, 9273, 9276, 9277, 9280, 9281, 9284, 9285, 9293, 9294, 9306, 9322, 9324, 9326, 9328, 9330, 9332, 9346, 9347, 9350, 9351, 9354, 9355, 9358, 9359, 9362, 9363, 9366, 9367, 9383, 9384, 9387, 9388, 9391, 9392, 9395, 9396, 9399, 9400, 9404, 9407, 9411, 9412, 9413, 9425, 9430, 9433, 9434, 9437, 9438, 9442, 9445, 9447, 9458, 9468, 9474, 9475, 9478, 9480, 9483, 9484, 9487, 9492, 9495, 9496, 9499, 9500, 9503, 9515, 9520, 9524, 9528, 9544, 9555, 9565, 9568, 9608, 9664, 9665, 9670, 9681, 9692, 9699, 9702, 9706, 9707, 9708, 9709, 9720, 9731, 9738, 9741, 9751, 9762, 9764, 9810, 9812, 9816, 9817, 9820, 9823, 9824, 9827, 9829, 9842, 9889, 9891, 9935, 9960, 9981, 10042, 10097, 10128, 10203, 10221, 10322, 10338, 10404, 10454, 10469, 10472, 10543, 10604, 10608, 10612, 10622, 10626, 10731, 10741, 10743, 10745, 10756, 10767, 10774, 10780, 10807, 10820, 10826, 10840, 10846, 10860, 10892, 10930, 10950, 10960, 10966, 10992, 11036, 11081, 11091, 11139, 11147, 11156, 11162, 11180, 11200, 11206, 11220, 11228, 11242, 11276, 11282, 11302, 11330, 11337, 11416, 11445, 11483, 11524, 11576, 11642, 11656, 11713, 11762, 11776, 11785, 11796, 11812, 11823, 11833, 11847, 11853, 11887, 11919, 11967, 11968, 12004, 12044, 12089, 12135, 12175, 12192, 12201, 12283, 12338, 12390, 12463, 12512, 12523, 12527, 12534, 12540, 12559, 12565, 12571, 12612, 12618, 12638, 12643, 12663, 12664, 12670, 12708, 12744, 12761, 12771, 12777, 12840, 12881, 12893, 12933, 12947, 12950, 12966, 12986, 13018, 13020, 13044, 13068, 13100, 13174, 13181, 13189, 13208, 13216, 13248, 13257, 13261, 13269, 13297, 13320, 13321, 13329, 13362, 13363, 13371, 13404, 13421, 13429, 13431, 13439, 13460, 13513, 13563, 13597, 13598, 13648, 13654, 13658, 13668, 13672, 13679, 13688, 13689, 13706, 13719, 13735, 13739, 13789, 13824, 13825, 13833, 13868, 13876, 13916, 13939, 13940, 13948, 13969, 13994, 14002, 14026, 14086, 14094, 14137, 14145, 14171, 14175, 14176, 14185, 14197, 14200, 14203, 14208, 14215, 14227, 14236, 14248, 14254, 14259, 14267, 14277, 14283, 14287, 14289, 14293, 14299, 14385, 14634, 14644, 14650, 14654, 14655, 14657, 14658, 14660, 14668, 14683, 14685, 14689, 14694, 14696, 14715, 14717, 14737, 14752, 14811, 14816, 14826, 14829, 14842, 14843, 14846, 14847, 14850, 14851, 14853, 14857, 14858, 14871, 14872, 14882, 14885, 14886, 14890, 14910, 14929, 14935, 14939, 14948, 14952, 14962, 14966, 14971, 14981, 15009, 15012, 15015, 15017, 15019, 15022, 15023, 15067, 15069, 15090, 15092, 15110, 15121, 15149, 15150, 15151, 15153, 15154, 15156, 15158, 15160, 15175, 15176, 15177, 15192, 15198, 15201, 15202, 15205, 15206, 15211, 15216, 15219, 15224, 15229, 15244, 15377, 15399, 15406, 15411, 15414, 15415, 15417, 15418, 15420, 15421, 15423, 15424, 15426, 15428, 15429, 15430, 15432, 15434, 15441, 15444, 15448, 15450, 15452, 15456, 15469, 15470, 15480, 15486, 15490, 15495, 15498, 15501, 15525, 15530, 15533, 15558, 15564, 15565, 15568, 15569, 15572, 15575, 15576, 15586, 15588, 15589, 15590, 15591, 15601, 15604, 15644, 15652, 15657, 15685, 15702, 15703, 15705, 15706, 15708, 15709, 15712, 15713, 15722, 15725, 15730, 15733, 15741, 15746, 15752, 15797, 15821, 15822, 15823, 15848, 15849, 15857, 15858, 15860, 15861, 15863, 15864, 15867, 15868, 15988, 15989, 15995, 15997, 16002, 16007, 16036, 16055, 16063, 16077, 16084, 16093, 16094, 16099, 16100, 16101, 16102, 16103, 16104, 16105, 16106, 16107, 16108, 16109, 16110, 16111, 16112, 16113, 16114, 16115, 16116, 16117, 16118, 16119, 16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128, 16129, 16130, 16131, 16132, 16133, 16134, 16135, 16181, 16184, 16245, 16264, 16265, 16267, 16268, 16272, 16273, 16288, 16289, 16307, 16308, 16310, 16311, 16313, 16314, 16318, 16321, 16363, 16405, 16449, 16454, 16481, 16545, 16551, 16558, 16594, 16597, 16602, 16612, 16648, 16683, 16720, 16726, 16733, 16735, 16746, 16769, 16776, 16778, 16789, 16794, 16798, 16800, 16856, 16862, 16900, 16906, 16913, 16937, 16939, 16958, 16964, 16979, 16981, 16993, 17001, 17003, 17014, 17020, 17038, 17063, 17072, 17080, 17081, 17082, 17083, 17084, 17085, 17086, 17087, 17088, 17089, 17096, 17132, 17167, 17178, 17186, 17200, 17203, 17206, 17207, 17209, 17211, 17213, 17215, 17216, 17218, 17231, 17233, 17235, 17236, 17237, 17238, 17240, 17254, 17265, 17267, 17269, 17271, 17272, 17273, 17275, 17276, 17282, 17283, 17291, 17292, 17308, 17317, 17318, 17333, 17336, 17337, 17352, 17366, 17369, 17370, 17381, 17383, 17386, 17403, 17404, 17406, 17415, 17481, 17520, 17540, 17598, 17637, 17657, 17659, 17661, 17671, 17673, 17683, 17693, 17695, 17702, 17706, 17716, 17727, 17738, 17750, 17752, 17767, 17770, 17775, 17777, 17778, 17780, 17785, 17788, 17800, 17802, 17813, 17825, 17830, 17837, 17840, 17851, 17860, 17864, 17877, 17886, 17890, 17901, 17903, 17913, 17924, 17933, 17936, 17941, 17944, 17947, 17950, 17952, 17954, 17956, 17963, 17967, 17976, 17979, 18015, 18024, 18025, 18027, 18028, 18031, 18032, 18041, 18042, 18060, 18061, 18063, 18064, 18066, 18067, 18071, 18087, 18119, 18150, 18154, 18156, 18163, 18191, 18198, 18205, 18211, 18213, 18215, 18225, 18235, 18241, 18250, 18273, 18276, 18277, 18287, 18293, 18296, 18304, 18307, 18359, 18365, 18366, 18497, 18525, 18550, 18559, 18566, 18569, 18572, 18574, 18576, 18579, 18581, 18583, 18586, 18588, 18590, 18594, 18597, 18618, 18621, 18634, 18638, 18640, 18641, 18648, 18698, 18714, 18721, 18724, 18728, 18738, 18746, 18768, 18769, 18778, 18779, 18794, 18816, 18828, 18829, 18835, 18844, 18847, 18851, 18877, 18901, 18913, 18918, 18936, 18938, 18946, 18955, 18958, 18968, 18975, 18978, 18980, 18991, 18993, 19000, 19003, 19005, 19017, 19020, 19021, 19023, 19024, 19027, 19029, 19030, 19032, 19033, 19035, 19038, 19039, 19041, 19042, 19044, 19045, 19052, 19055, 19060, 19061, 19063, 19064, 19066, 19067, 19069, 19070, 19072, 19073, 19075, 19076, 19089, 19092, 19093, 19095, 19096, 19098, 19099, 19101, 19102, 19104, 19105, 19106, 19110, 19111, 19112, 19122, 19127, 19128, 19130, 19134, 19140, 19141, 19143, 19158, 19160, 19162, 19164, 19166, 19181, 19185, 19186, 19202, 19211, 19220, 19235, 19239, 19240, 19241, 19244, 19275, 19277, 19280, 19281, 19288, 19290, 19295, 19311, 19326, 19330, 19331, 19340, 19355, 19371, 19376, 19385, 19395, 19398, 19402, 19417, 19419, 19423, 19433, 19435, 19452, 19454, 19458, 19471, 19473, 19477, 19487, 19489, 19491, 19493, 19504, 19509, 19510, 19511, 19513, 19523, 19532, 19534, 19538, 19540, 19550, 19557, 19560, 19570, 19572, 19579, 19582, 19584, 19586, 19592, 19595, 19602, 19604, 19616, 19626, 19629, 19630, 19640, 19643, 19663, 19671, 19676, 19684, 19685, 19686, 19701, 19704, 19707, 19712, 19713, 19719, 19721, 19724, 19725, 19726, 19727, 19730, 19734, 19735, 19737, 19744, 19750, 19756, 19757, 19758, 19761, 19762, 19763, 19767, 19768, 19769, 19778, 19784, 19791, 19796, 19799, 19802, 19804, 19806]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\requirements.txt",
      "size": 752,
      "created": "2024-12-17T09:03:16.836441",
      "modified": "2025-01-10T12:25:43.222453",
      "hash": "c7bab9e1f155f1ad03ba9859fa32dcc2044153018a59b0d58ccba3d307e9e6bb",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\responsive.md",
      "size": 7955,
      "created": "2024-12-21T10:40:12.841333",
      "modified": "2024-12-21T10:44:03.953855",
      "hash": "131d7a6732808eb008091c3836f19e7a8abe4210f3a4a95a5dacae4370b81567",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\SECURITY.md",
      "size": 7439,
      "created": "2025-01-03T17:24:47.191658",
      "modified": "2025-01-14T03:21:45.329787",
      "hash": "eb3a80e64f63671850661da4c27b51f471914c9f6eacb0b0cb6dabc8ac3c24ec",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\style-guide.md",
      "size": 6900,
      "created": "2024-12-21T10:37:24.136902",
      "modified": "2024-12-21T10:37:49.498944",
      "hash": "8bdee5d085c0354d593a3a1c3e6102ccc7ffb0d81fbd48d31cf5663aae546acb",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\testing.md",
      "size": 3452,
      "created": "2024-12-21T10:42:30.814805",
      "modified": "2025-01-03T17:11:44.220249",
      "hash": "89dc23a080c77dc626d4d345c206f86088f0400f5814b7c8a7f8ae73bff5552d",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\USER_GUIDE.md",
      "size": 4785,
      "created": "2025-01-03T17:15:42.502774",
      "modified": "2025-01-03T17:23:02.913240",
      "hash": "21dbdef945d48e6eb2db8513c3836fe3c74b612007d9beccd42aae1873fd0dcf",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dojopool.egg-info\\dependency_links.txt",
      "size": 1,
      "created": "2025-01-05T06:55:44.183398",
      "modified": "2025-01-05T07:09:02.218910",
      "hash": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dojopool.egg-info\\PKG-INFO",
      "size": 2642,
      "created": "2025-01-05T07:09:02.216909",
      "modified": "2025-01-05T07:09:02.217909",
      "hash": "9e1accc4a92c0eb9ddddf44128b1356df11d9530ecfde8ce90e54de710c80f88",
      "extension": "",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [36, 88, 96]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dojopool.egg-info\\requires.txt",
      "size": 285,
      "created": "2025-01-05T06:55:44.184399",
      "modified": "2025-01-05T07:09:02.219912",
      "hash": "b8a84273eed62944837848fffb2d30888f68cb5e6565020db14a9762efe5b884",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dojopool.egg-info\\SOURCES.txt",
      "size": 779,
      "created": "2025-01-05T06:55:44.185397",
      "modified": "2025-01-05T07:09:02.242911",
      "hash": "b5fd281f7bf2d78888edfb910fd0face667c855c19d537b04c7641075f8c1dcd",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\dojopool.egg-info\\top_level.txt",
      "size": 9,
      "created": "2025-01-05T06:55:44.184399",
      "modified": "2025-01-05T07:09:02.220911",
      "hash": "eda863bd03af407caa395a736600c53b7f16766ebdeccce2c52a27371e4d6ac6",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\client_secret.json",
      "size": 621,
      "created": "2024-12-09T08:28:33.874578",
      "modified": "2024-12-09T09:09:18.697340",
      "hash": "92da1561ba01fec32db25f0fc66f05e7d2f5a139132fe9933a24261b31ec7d1c",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\dojopool.db",
      "size": 225280,
      "created": "2024-12-18T01:41:51.645085",
      "modified": "2024-12-20T06:13:01.450772",
      "hash": "a4a5c2d2a623b7e99aa8354701bec62dc328aeaba3e4e9c7a5ab89815bf36d0f",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\dojopool_dev.db",
      "size": 221184,
      "created": "2024-12-20T04:54:46.700560",
      "modified": "2024-12-20T05:20:53.310070",
      "hash": "0aa18e3fa83b13684affd39c48efd1c260d950f12bb968b0b8a5ee32eea03a7f",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\dojo_pool.db",
      "size": 36864,
      "created": "2024-12-17T15:18:38.108850",
      "modified": "2024-12-17T15:18:38.156270",
      "hash": "464fb914fab069a84050f057cf7d87654bfa42e08e32eb82a5833fb7d210357d",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\access.log",
      "size": 0,
      "created": "2025-01-06T10:44:29.312562",
      "modified": "2025-01-06T10:44:29.312562",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\error.log",
      "size": 833753,
      "created": "2025-01-06T10:44:29.306561",
      "modified": "2025-01-06T13:25:34.055226",
      "hash": "aea01e4c302320471567b01e6d20602c000cc72347016a5c66ae1eb1fb21e4f8",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [37, 92, 102, 154, 208, 261, 385, 440, 450, 503, 556, 609, 770, 825, 835, 888, 941, 994, 1085, 1140, 1150, 1203, 1256, 1309, 1433, 1488, 1498, 1551, 1604, 1657, 1911, 1966, 1976, 2029, 2082, 2135, 2226, 2281, 2291, 2344, 2397, 2450, 2606, 2661, 2671, 2724, 2776, 2830, 2992, 3047, 3057, 3110, 3163, 3216, 3307, 3362, 3372, 3425, 3478, 3531, 3687, 3742, 3752, 3805, 3858, 3911, 4132, 4187, 4197, 4250, 4303, 4356, 4447, 4502, 4512, 4565, 4617, 4671, 4914, 4969, 4979, 5032, 5085, 5138, 5407, 5462, 5472, 5525, 5578, 5632, 5755, 5810, 5820, 5873, 5926, 5979, 6135, 6190, 6200, 6253, 6306, 6359, 6529, 6584, 6594, 6647, 6700, 6753, 6845, 6915, 6970, 6980, 7033, 7086, 7139, 7310, 7365, 7375, 7428, 7481, 7534, 7690, 7745, 7755, 7808, 7861, 7914, 8070, 8125, 8135, 8188, 8241, 8294, 8350, 8418, 8473, 8483, 8536, 8589, 8642, 8798, 8853, 8863, 8916, 8969, 9022, 9113, 9168, 9178, 9231, 9284, 9337, 9493, 9548, 9558, 9611, 9664, 9717, 9942, 9997, 10007, 10060, 10113, 10166, 10395, 10450, 10460, 10513, 10566, 10619, 10743, 10798, 10808, 10861, 10914, 10967, 11058, 11113, 11123, 11176, 11228, 11282, 11406, 11461, 11471, 11524, 11577, 11633, 11754, 11809, 11819, 11872, 11925, 11978, 12245, 12300, 12310, 12363, 12416, 12469, 12560, 12615, 12625, 12678, 12731, 12784, 12875, 12930, 12940, 12993, 13046, 13099, 13190, 13245, 13255, 13308, 13361, 13414, 13543, 13598, 13608, 13661, 13714, 13767, 13928, 13983, 13993, 14046, 14099, 14152, 14404, 14459, 14469, 14522, 14575, 14628, 14719, 14774, 14784, 14837, 14890, 14946, 15067, 15122, 15132, 15184, 15237, 15289, 15512, 15567, 15577, 15629, 15681, 15734, 15860, 15915, 15925, 15980, 16035, 16093]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\migrations\\alembic.ini",
      "size": 857,
      "created": "2025-01-10T03:35:27.569824",
      "modified": "2025-01-10T03:35:27.572340",
      "hash": "4a36049892b3cfa2bc41fb995ad2c900959c08a39d45b7d486c565a60bfca1c9",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\migrations\\env.py",
      "size": 3228,
      "created": "2025-01-10T03:35:27.595473",
      "modified": "2025-01-10T03:35:27.597098",
      "hash": "5327ddba4b77f49ce77c0e992a43d38e04a2d2534048be375f4a760579cdaf28",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["logging", "logging.config", "myapp", "the", "being"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\migrations\\README",
      "size": 41,
      "created": "2025-01-10T03:35:27.577941",
      "modified": "2025-01-10T03:35:27.579548",
      "hash": "24bd0dae33abb1c3dc2a0466421d51de196fd7fae8843a2dd13be999d336ec99",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\migrations\\script.py.mako",
      "size": 494,
      "created": "2025-01-10T03:35:27.585474",
      "modified": "2025-01-10T03:35:27.587123",
      "hash": "f3fc6003e826fce85e8673bb0a22228d68279b4d1996ccc41ed207ac0605265d",
      "extension": ".mako",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\default.conf",
      "size": 1504,
      "created": "2025-01-05T14:06:23.551389",
      "modified": "2025-01-10T08:48:24.596457",
      "hash": "828364b55f1407af684d924b81e4c096e64d2de37aacfe5f16dae3fd263f6e72",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\Dockerfile",
      "size": 87,
      "created": "2024-12-28T02:52:15.990934",
      "modified": "2024-12-28T16:24:52.979391",
      "hash": "65ed7da7886241f3a133a2316c7f568830c8ce4f391d30b7aacb88ccfe86ced2",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\public\\index.html",
      "size": 244,
      "created": "2025-01-10T05:10:58.764451",
      "modified": "2025-01-13T06:46:47.708065",
      "hash": "58f575c4b226d961859b05f272a987694f086ed24e1f68c1c5c368a44ebc82a4",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\public\\manifest.json",
      "size": 630,
      "created": "2025-01-10T05:11:09.639059",
      "modified": "2025-01-10T05:11:28.847733",
      "hash": "2cd7dbcd4877a83e3458a3be0368eb05b427fdb34301666423676f068088a90f",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\public\\robots.txt",
      "size": 69,
      "created": "2025-01-10T05:11:20.361651",
      "modified": "2025-01-10T05:11:28.844737",
      "hash": "85b1f74fe9071bf289559b817854c7a2e435fbfd8ddf796b7f84659f6977b2c5",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\CleanUpProject.ps1",
      "size": 3309,
      "created": "2024-12-17T09:06:22.469357",
      "modified": "2024-12-17T09:06:22.469357",
      "hash": "75233ed2d518fc197d92157cf013301e00b7f9987f4903bc50483e1a17f8f510",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\cleanup_and_configure_git_final.py",
      "size": 7620,
      "created": "2024-12-17T09:06:22.470359",
      "modified": "2024-12-17T09:06:22.470359",
      "hash": "59b7f47d33d78ebf04a9853a7009a4620238972c2ce08318af1ce1f307ce8968",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [210]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\cleanup_git_files.py",
      "size": 1370,
      "created": "2024-12-17T09:06:22.470359",
      "modified": "2024-12-17T09:06:22.470359",
      "hash": "0f158615aa3e7a30df56546c93ef1053b3fe23d195cd405dddb191b0e9bd5cc3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\cleanup_git_redundant.py",
      "size": 1295,
      "created": "2024-12-17T09:06:22.471357",
      "modified": "2024-12-17T09:06:22.471357",
      "hash": "e43cd054b936db677c2f8f18fc1d58efd153c9751e6ed06376aef628d8518605",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\cleanup_git_scripts.py",
      "size": 1235,
      "created": "2024-12-17T09:06:22.471357",
      "modified": "2024-12-17T09:06:22.471357",
      "hash": "7c6c6918f2ad4ad04fd21cb73e6f32eea4db3bb8aa122fb151357ea5e7b66c27",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\cleanup_scripts.py",
      "size": 1936,
      "created": "2024-12-23T07:46:19.947894",
      "modified": "2024-12-23T07:46:41.484809",
      "hash": "b93009bc343fe1329e709fe9182aae9712564db36526af132b7a7e9bdb9c6a85",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\combine_workspaces.py",
      "size": 6715,
      "created": "2024-12-17T09:06:22.421020",
      "modified": "2024-12-17T09:09:18.870016",
      "hash": "bf539663536b6b2241db62af464e9eaf2a1dfe0e940e93374c9f83ef5d6ef653",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: secret",
        "Long lines found on lines: [20, 146]"
      ],
      "similar_files": [],
      "dependencies": ["os", "a"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\configure_git_auth_final.py",
      "size": 6931,
      "created": "2024-12-17T09:06:22.472357",
      "modified": "2024-12-17T09:06:22.472357",
      "hash": "bcb5eb696d05d0724b88c557c1706582a0d45e82caec4aa8562f15cd661af016",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [186]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\db_init.py",
      "size": 2117,
      "created": "2024-12-17T12:25:58.048580",
      "modified": "2024-12-17T12:27:07.179551",
      "hash": "81ad46c8105dee42dd3754997e607d6bea347f04dc68eae61c0db7ab4f1f2e66",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [21]"],
      "similar_files": [],
      "dependencies": [
        "os",
        "flask",
        "db",
        "core.models",
        "core.migrations",
        "flask_migrate"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\deploy_heroku.sh",
      "size": 1032,
      "created": "2024-12-17T13:40:45.779783",
      "modified": "2024-12-17T13:41:07.641038",
      "hash": "ef9059b3bf0a82ec346f4d99debe4fc05ba319349bef0a2f483586901bce3661",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\enforce-standards.js",
      "size": 4656,
      "created": "2024-12-21T11:32:18.517883",
      "modified": "2024-12-21T11:32:31.278020",
      "hash": "bdcd1913177adab189068a973aab42e507273cee247c4ea5a5f195e33776315f",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["fs", "path", "chalk", "child_process"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\final_git_config.py",
      "size": 7932,
      "created": "2024-12-17T09:06:22.472357",
      "modified": "2024-12-17T09:06:22.472357",
      "hash": "6ae5aec7677434b3fbba47acdc9412baa5cf603e401f6dbf5879d3677aa9e72f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [225]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\final_git_setup.py",
      "size": 8406,
      "created": "2024-12-17T09:06:22.473357",
      "modified": "2024-12-17T09:06:22.473357",
      "hash": "42e369dee092c2e7ba9a42b60df168ccb0195a2501d23bb135a933663410f0f7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [227]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\git_config_final.py",
      "size": 6787,
      "created": "2024-12-17T09:06:22.473357",
      "modified": "2024-12-17T09:06:22.473357",
      "hash": "b6bcae317f7f3a2d143fcbe4e02b4bbfcad9ef1426c83dce14dbffba35cf5773",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [187]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\git_manager.py",
      "size": 3771,
      "created": "2024-12-17T09:06:22.474357",
      "modified": "2024-12-17T09:06:22.474357",
      "hash": "c8c0380ad58cd5436513bcaef0aa5ec5ce3576db4059399696a1f037fb009a68",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [79]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\git_manager_consolidated.py",
      "size": 7396,
      "created": "2024-12-17T09:06:22.474357",
      "modified": "2024-12-17T09:06:22.474357",
      "hash": "2c4ebfda5a403749cdb35139da9d900f5afed2d8792703cc5258235f83776d90",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [205]"],
      "similar_files": [],
      "dependencies": ["os", "output"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\git_setup_consolidated.py",
      "size": 4576,
      "created": "2024-12-17T09:06:22.474357",
      "modified": "2024-12-17T09:06:22.475413",
      "hash": "9497588d6b044d3648e446643bf8f3aa8963f25d40e76764104b60f4457fbe49",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [137]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\git_setup_final.py",
      "size": 7932,
      "created": "2024-12-17T09:06:22.475506",
      "modified": "2024-12-17T09:06:22.475506",
      "hash": "2ed0de2edfe6b1ed892d8a1fcff32df70f55ff414c52e1957047de74e3a06c6d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [216]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\init_git.py",
      "size": 1366,
      "created": "2024-12-17T09:06:22.475506",
      "modified": "2024-12-17T09:06:22.475506",
      "hash": "c2b69380b94bc64c2e575c2ec32a40d27aaf91a686aa8c884c2e90101ea10137",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\listworkspaces.py",
      "size": 1576,
      "created": "2024-12-17T09:06:22.460357",
      "modified": "2024-12-17T09:03:16.846440",
      "hash": "2e246813730eb9d631df8e50df0083a1d98004aff411652221f1a4afeb5e4bb4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [10]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\Reorganize-Codebase.ps1",
      "size": 2668,
      "created": "2024-12-23T07:47:50.382482",
      "modified": "2024-12-23T07:48:10.631562",
      "hash": "adeb663c0f9577b6c004d255900daa3897a33db68cdc4da40a415926098d9e5f",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\reorganize.bat",
      "size": 2472,
      "created": "2024-12-23T07:48:26.399820",
      "modified": "2024-12-23T07:48:37.118253",
      "hash": "80704dbfb7e11b09229877e36936db5b7c168385df8d3b21a5e73c2daa7451b4",
      "extension": ".bat",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\reorganize_codebase.py",
      "size": 4364,
      "created": "2024-12-23T07:44:26.289805",
      "modified": "2024-12-23T07:46:02.554517",
      "hash": "d08af64c2acbc45825154552285670b0c1d1e83f5a84085dcb24e88b7a81dcd8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\reorganize_project.py",
      "size": 6864,
      "created": "2024-12-23T07:50:38.214815",
      "modified": "2024-12-23T07:52:08.866752",
      "hash": "bcc68e003c2c1adc114aee6f034c259b77835da486044161777ecbb750932527",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["logging"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\run_tests.py",
      "size": 3680,
      "created": "2024-12-17T10:00:28.682380",
      "modified": "2024-12-17T10:00:46.915890",
      "hash": "28d4a47397a467e38c8b97b1a928cf4edae74b0810f6cb6c11ba4645c8922e0c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\run_tests.sh",
      "size": 1278,
      "created": "2024-12-17T12:59:43.813058",
      "modified": "2024-12-17T13:00:03.660770",
      "hash": "94a865df63cca847e8a9ec093dac6369d99f3f2d39b0a3ff37244d529337f597",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\setup_automation.py",
      "size": 5380,
      "created": "2025-01-14T04:06:11.646111",
      "modified": "2025-01-14T04:09:55.668389",
      "hash": "abca860ca7bba0dcd40aa619224c15ae50ff200314f4b1aa808ed944b7264493",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [125]"],
      "similar_files": [],
      "dependencies": ["os", "crontab"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\setup_db.ps1",
      "size": 698,
      "created": "2024-12-17T12:29:12.788374",
      "modified": "2024-12-17T12:29:30.031857",
      "hash": "c4d0eac3a375a86e95f4b1069782d1b47e7ff3325d502e01c499fe7e71564756",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\setup_db.sh",
      "size": 511,
      "created": "2024-12-17T12:28:39.137937",
      "modified": "2024-12-17T12:28:58.330090",
      "hash": "6490f35a785c6f846127b7495a10a7d01e4f9a6c071f8730dd675cb3b5b60e77",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\test_git_setup.py",
      "size": 1047,
      "created": "2024-12-17T09:06:22.476510",
      "modified": "2024-12-17T09:06:22.476510",
      "hash": "6040e9fa7430431b0352c023857d9278b52ba22339c6af510e776259c98a4d6d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["unittest"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\update_imports.py",
      "size": 1657,
      "created": "2024-12-23T07:44:39.998014",
      "modified": "2024-12-23T07:46:02.554517",
      "hash": "23f002f27e9c5f69ea9aafcee108ead45fba041bff284e8d8faa3ef6c86c429b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "statements",
        "os",
        "blueprints.",
        "core.",
        "email.",
        "services.email.",
        "mail_service.",
        "services.email.",
        "websockets.",
        "core.realtime.",
        "sockets.",
        "core.realtime.",
        "main.",
        "core.",
        "dojopool.",
        ".",
        "statements",
        "statements..."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\verify_structure.py",
      "size": 3538,
      "created": "2024-12-23T07:44:59.805753",
      "modified": "2024-12-23T07:46:02.555519",
      "hash": "9494dbadfdf971fd8f2c4a34dc589bf74ec010b2b554c618b9625bdc2e91761a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "pathlib"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\App.js",
      "size": 1639,
      "created": "2025-01-10T05:30:25.626599",
      "modified": "2025-01-13T06:57:04.485839",
      "hash": "19494cb1704c3122fbcb0ed0c042f51fcb14d5abcd9c13ac7e7634c0501d5e4d",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "Login",
        "ProtectedRoute",
        "ResetPassword",
        "Signup",
        "Dashboard"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\firebase.js",
      "size": 1861,
      "created": "2025-01-13T06:11:50.987531",
      "modified": "2025-01-14T03:09:50.253860",
      "hash": "f0178b29e695d65c9be5ed44b9c397c443f91028884d948fd13259106b2f622a",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\index.css",
      "size": 1114,
      "created": "2025-01-10T05:31:02.358926",
      "modified": "2025-01-10T05:54:22.711572",
      "hash": "07e1a38eb682049a5b0a880ef3ac8d45e5f15b4db8059d148f147f782399eab0",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\index.js",
      "size": 262,
      "created": "2025-01-10T05:11:38.274063",
      "modified": "2025-01-13T06:46:03.775984",
      "hash": "bbad34542017b9618cfe393382d62bdabe423e64afc1c386530bebbc21b23ddd",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "App", "./index.css"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\theme.js",
      "size": 2154,
      "created": "2025-01-10T05:30:40.436927",
      "modified": "2025-01-10T05:54:22.754176",
      "hash": "a1ba473c332a1f4a1a16b334a0289be8e29c639deaeec4e747af46537c665494",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\wsgi.py",
      "size": 575,
      "created": "2025-01-06T08:18:11.016336",
      "modified": "2025-01-10T02:23:31.580372",
      "hash": "ee124fdefecbd88fcc362a0b0e3fd667c0de820d540901faca9f97fdec6a3575",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "dojopool.app"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\ssl\\dhparam.pem",
      "size": 436,
      "created": "2025-01-14T13:23:52.641690",
      "modified": "2025-01-14T13:24:11.067680",
      "hash": "39f9e068a9df35af23e4eadc4c33234610f34ec12bbdd045fe72c3c8ef898b39",
      "extension": ".pem",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\ssl\\server.crt",
      "size": 1134,
      "created": "2025-01-14T13:23:52.609691",
      "modified": "2025-01-14T13:23:52.609691",
      "hash": "ba145ab625bb2ccc8cf8e529340a768ea9492eadbe6aa3f6b8eed8a4de46d281",
      "extension": ".crt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\ssl\\server.key",
      "size": 1732,
      "created": "2025-01-14T13:23:52.599693",
      "modified": "2025-01-14T13:23:52.602692",
      "hash": "cc0b63996a7ca5cbeeb9f6e7292f203906308a931a3d51a4c878e5936af844a8",
      "extension": ".key",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\static\\index.html",
      "size": 0,
      "created": "2025-01-06T13:52:21.080031",
      "modified": "2025-01-10T06:46:58.692194",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\static\\manifest.json",
      "size": 537,
      "created": "2025-01-06T13:53:33.985441",
      "modified": "2025-01-06T13:55:57.053245",
      "hash": "875391c822532369e8e09c9d6508ed5199b359a840b7c62cd97155b065d74e93",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\base.py",
      "size": 2340,
      "created": "2024-12-19T06:38:32.366178",
      "modified": "2024-12-22T12:16:52.472822",
      "hash": "36e5b839a2b50b9ef27fd501c1c4493a5072682bc27474f426054011565e7ed1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["unittest", "TestingConfig", "dojopool.core.extensions"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\conftest.py",
      "size": 6248,
      "created": "2024-12-17T10:03:01.869550",
      "modified": "2025-01-13T05:14:42.237431",
      "hash": "7bd6490dd9cc173eaea9dc4f81fa3c55f51030579a3412d52dd515d9c6ea7006",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["os", "db", "dojopool.models", "dojopool.config"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\factories.py",
      "size": 5706,
      "created": "2024-12-17T10:02:20.088775",
      "modified": "2024-12-22T12:45:29.533555",
      "hash": "de2708d470f097e6cf5564d65ba40909b27d0bdabeac952a3abc00a47385fa61",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["datetime"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\pytest.ini",
      "size": 530,
      "created": "2024-12-17T13:00:19.825636",
      "modified": "2025-01-13T05:13:57.483301",
      "hash": "925c5cdb78666179db823722dcc8e37e77b1a98a26bdb5869b3c89710a355062",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\requirements-test.txt",
      "size": 145,
      "created": "2024-12-17T09:58:52.334131",
      "modified": "2025-01-12T15:53:28.268395",
      "hash": "a675bc89c64e26d875f1b7aa8e63b16fa076f032ea05547c8d7865361d39f559",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\setup.js",
      "size": 4470,
      "created": "2025-01-13T02:45:55.623848",
      "modified": "2025-01-13T03:07:46.147140",
      "hash": "d4c4ae1c9ce34429d6288b9130a1ccace327dd04f8f6d469560fbd215cf98f21",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_api_handler.py",
      "size": 2715,
      "created": "2024-12-17T09:03:16.860165",
      "modified": "2025-01-05T07:35:30.566120",
      "hash": "c17156a7b28d4c5b1de859cefa818f62d8a991b8a2b44607cc786f8c3c4e62bc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.api.handler",
        "User",
        "dojopool.core.db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_image_compression.py",
      "size": 5232,
      "created": "2025-01-14T03:56:46.948217",
      "modified": "2025-01-14T03:57:22.841310",
      "hash": "f0ee0444ac4157f4334bee54effce5919b222e3be14ed764cb43ed36860369ed",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "ImageCompressionService",
        "dojopool.config.compression_config"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_narrative_generator.py",
      "size": 3882,
      "created": "2024-12-17T09:03:16.870164",
      "modified": "2025-01-05T07:34:59.616834",
      "hash": "43f2b310311182aaf8118bbf6a95372b2284c7c0df823ee2b1e7f4fcdf76e6f8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.narrative.generator",
        "Match",
        "dojopool.core.db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_ranking_system.py",
      "size": 3702,
      "created": "2024-12-17T09:03:16.861164",
      "modified": "2025-01-05T07:34:31.995804",
      "hash": "d5ddcb1a65f54331063f5a8b14db930bac8b1e63a744fc06c06247785ea74f56",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [118]"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.ranking.ranking_system",
        "User",
        "dojopool.core.db"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_room_broadcast.py",
      "size": 2246,
      "created": "2024-12-20T16:52:52.479382",
      "modified": "2025-01-05T07:34:31.995804",
      "hash": "994ccd3bdc8851d0b05be4d09fbb7d8515fdb7802c7a3368ac388fa020ada39e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.room_broadcast",
        "RoomTypes",
        "dojopool.websockets.room_state",
        "room_monitor",
        "dojopool.websockets.rooms"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_room_init.py",
      "size": 2656,
      "created": "2024-12-20T16:51:21.096950",
      "modified": "2025-01-05T07:33:47.324739",
      "hash": "5ad7897e581552bfd9b54519f6e63759246fbc0d9f267e9a7659e1a2e7374110",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.room_init",
        "RoomTypes",
        "dojopool.websockets.room_state",
        "room_monitor",
        "dojopool.websockets.rooms"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_room_notifications.py",
      "size": 2208,
      "created": "2024-12-20T16:54:21.760880",
      "modified": "2025-01-05T07:33:36.887929",
      "hash": "7751b16efafcdfa69941bd08a8ba1e5d3c3c07a8db8b367abdf9e05b2ce9e038",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.room_notifications",
        "RoomTypes",
        "dojopool.websockets.room_state",
        "room_monitor",
        "dojopool.websockets.room_broadcast",
        "room_manager"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_spectator_system.py",
      "size": 1675,
      "created": "2024-12-17T09:03:16.863168",
      "modified": "2025-01-05T07:33:14.400110",
      "hash": "a184762315c29af7bc137973a19265e751bc4645541ada0561cadffa8d1b468d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.spectator.spectator_system"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets.py",
      "size": 2477,
      "created": "2024-12-20T15:14:56.829414",
      "modified": "2025-01-05T07:33:14.399110",
      "hash": "bb9d577a0de96b4b6b96558b5ddf31bec6fc8f5e5622d5fb03daf0e635775c13",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "dojopool.websockets.errors"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets_integration.py",
      "size": 2439,
      "created": "2024-12-20T15:15:31.142826",
      "modified": "2025-01-05T07:32:39.452578",
      "hash": "55028090b4ce3d53b18e6e0de18e3e40500825d35c98f81d302d12701f81410f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "dojopool.websockets.errors",
        "room_manager",
        "dojopool.websockets.metrics",
        "player",
        "player",
        "player",
        "player"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets_load.py",
      "size": 1946,
      "created": "2024-12-20T15:16:56.264457",
      "modified": "2025-01-05T07:32:20.158517",
      "hash": "cb4b04c529c214ea516f5131688d6186daf6c99e7b88d37f712e5c6068ee3db1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "metrics_collector"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets_performance.py",
      "size": 1649,
      "created": "2024-12-20T15:16:09.066280",
      "modified": "2025-01-05T07:32:20.158517",
      "hash": "d483ed9e7f7d530068a80f32db6ae1d5d2596ac5b837638c3bfc11945c43f1ba",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "metrics_collector"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets_security.py",
      "size": 1567,
      "created": "2024-12-20T15:18:39.428112",
      "modified": "2025-01-05T07:32:20.157516",
      "hash": "bcac15d65cd11c47885dc20ce508aaba6a9688c7444e0f4ea2299dad4389c5d1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "WebSocketError",
        "dojopool.websockets.middleware"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets_stress.py",
      "size": 1909,
      "created": "2024-12-20T15:17:44.360312",
      "modified": "2025-01-05T07:32:20.156517",
      "hash": "8e282e96eb140cdfd07e49587148bcc4ad3bcc9d933ea9f68c77fd2d799e9a35",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "metrics_collector",
        "dojopool.websockets.errors"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\test_websockets_validation.py",
      "size": 1172,
      "created": "2024-12-20T15:19:21.172877",
      "modified": "2025-01-05T07:32:20.155513",
      "hash": "ffaa6cf50fa999e42d071ae2c4437291978a95edadc52e75a49805964a9d59f6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.websockets.testing",
        "WebSocketError"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\utils.py",
      "size": 1194,
      "created": "2024-12-20T04:14:03.134359",
      "modified": "2025-01-05T07:32:20.151515",
      "hash": "cd947775776dd13112c32f914167e08c6f582dcd21df26147d3a2a053b0ed547",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.core.database",
        "User",
        "dojopool.services.leaderboard_service"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp.zip",
      "size": 3834535,
      "created": "2025-01-13T05:33:00.426427",
      "modified": "2025-01-13T05:33:02.421746",
      "hash": "1ff15156cf1f1e2018f0dafb4bb399d4b4614dc6dfdcfc0fedac8fd36fc198f5",
      "extension": ".zip",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.pytest_cache\\v\\cache\\lastfailed",
      "size": 2,
      "created": "2025-01-10T14:58:40.950133",
      "modified": "2025-01-13T06:01:39.164382",
      "hash": "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.pytest_cache\\v\\cache\\nodeids",
      "size": 628,
      "created": "2025-01-10T14:58:40.949132",
      "modified": "2025-01-13T06:01:39.163271",
      "hash": "79eeda5fdf068392f622e89e6c628dd71bd54f3dfe37980dda444bd1ea553d8e",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.pytest_cache\\v\\cache\\stepwise",
      "size": 2,
      "created": "2025-01-10T14:58:40.951132",
      "modified": "2025-01-13T06:01:39.165317",
      "hash": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.vscode\\.vscode\\launch.json",
      "size": 2484,
      "created": "2024-12-17T00:16:29.931913",
      "modified": "2024-12-17T00:16:32.639547",
      "hash": "c1e46542ea6f7bb8b511564bd6f26cda8ac327c165c640bcfab52faecf8945a8",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.vscode\\.vscode\\settings.json",
      "size": 1386,
      "created": "2024-12-17T01:32:24.888066",
      "modified": "2024-12-17T01:32:28.954259",
      "hash": "8e557cc36d3220492f6b674a23540f70d0b4601ddd61db5bc81b7f88babec101",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\.vscode\\.vscode\\tasks.json",
      "size": 2821,
      "created": "2024-12-17T01:32:11.460445",
      "modified": "2024-12-17T01:32:15.490229",
      "hash": "1d854a6b3f17efcedf9cd55010da0519842e4ef9f81944924292abf541cc102b",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\0-dojopoolcombined-namespace.yaml",
      "size": 200,
      "created": "2024-12-26T00:09:57.106456",
      "modified": "2024-12-26T00:09:57.157512",
      "hash": "06097992e91146d225fe22e3a783c35b849f1fc01d513c85f56f77aa00568d5f",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\db-deployment.yaml",
      "size": 1485,
      "created": "2024-12-26T00:09:57.075970",
      "modified": "2024-12-26T00:09:57.110785",
      "hash": "cc5fed25388e0717d330df1092885b0aa6538c78628a1c4f0995a2f9af7b3ecb",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\db-expose.yaml",
      "size": 434,
      "created": "2024-12-26T00:09:57.090817",
      "modified": "2024-12-26T00:09:57.147514",
      "hash": "cb727c9c74797aaac51ea386c9f75616964e188b2aca8dd0e9fba1c7907e9c89",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\db-postgres_data-persistentVolumeClaim.yaml",
      "size": 489,
      "created": "2024-12-26T00:09:57.135516",
      "modified": "2024-12-26T00:09:57.170511",
      "hash": "592a2abc4bbad1fc963ee6d88623e0133a0a013d22cea9404fcb94398224a27c",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: would need to check which services use this volume"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\db-service.yaml",
      "size": 567,
      "created": "2024-12-26T00:09:57.150516",
      "modified": "2024-12-26T00:09:57.180513",
      "hash": "7103d0f36433ab27fe8c4d8fb15a5636b0dfc9bde0eac04845cf9b346ffbc787",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\default-network-policy.yaml",
      "size": 633,
      "created": "2024-12-26T00:09:57.110785",
      "modified": "2024-12-26T00:09:57.162517",
      "hash": "1e27e5277e0173bd85ebe5d58c38bb82d8491e566af8905e9c7f68b292bfb17b",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\kustomization.yaml",
      "size": 475,
      "created": "2024-12-26T00:09:57.166519",
      "modified": "2024-12-26T00:09:57.194518",
      "hash": "ae83c5668b35b0d362157224960825fe48c3452af492f642aed0b628b319a0dd",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\web-C\uf03a\uf05cUsers\uf05cJR\uf05cDocuments\uf05cDojoPool\uf05cDojoPoolCombined-persistentVolumeClaim.yaml",
      "size": 594,
      "created": "2024-12-26T00:09:57.143511",
      "modified": "2024-12-26T00:09:57.175518",
      "hash": "a1df44af533f06e2d6e30908a4ac163708052d6a5fb743f4b60f5b102568b2f1",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: would need to check which services use this volume"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\web-deployment.yaml",
      "size": 1439,
      "created": "2024-12-26T00:09:57.085405",
      "modified": "2024-12-26T00:09:57.136513",
      "hash": "99f59cbd67a819be4ca045e238271ff9d12c06dac88528e94c8c7d0630fa214e",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\web-expose.yaml",
      "size": 440,
      "created": "2024-12-26T00:09:57.097188",
      "modified": "2024-12-26T00:09:57.151518",
      "hash": "d2162443006990fd472c30f73bf41c11928ab574330af37b7c7665c51f409081",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\base\\web-service.yaml",
      "size": 475,
      "created": "2024-12-26T00:09:57.156516",
      "modified": "2024-12-26T00:09:57.185520",
      "hash": "1825463dc6bc6737abc2603d5a13b71e0bc629d76c3bc9771c00eedce21bf36a",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\overlays\\desktop\\db-postgres_data-persistentVolumeClaim.yaml",
      "size": 269,
      "created": "2024-12-26T00:09:57.179514",
      "modified": "2024-12-26T00:09:57.203518",
      "hash": "d93e0eb8c86bdf67857a39e54b9be2a921446767b053f746c8f983e442d32568",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\overlays\\desktop\\db-service.yaml",
      "size": 270,
      "created": "2024-12-26T00:09:57.192518",
      "modified": "2024-12-26T00:09:57.213515",
      "hash": "dc0d34ed3767de935a5bfc2de0c9f6fb0eca675fdfd512862d1eb9d9c20fa403",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\overlays\\desktop\\kustomization.yaml",
      "size": 357,
      "created": "2024-12-26T00:09:57.207516",
      "modified": "2024-12-26T00:09:57.231516",
      "hash": "3b91cc34c57c2404c074056a81f3213150c1719a3c0c688c086ab018fda90a80",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\overlays\\desktop\\web-C\uf03a\uf05cUsers\uf05cJR\uf05cDocuments\uf05cDojoPool\uf05cDojoPoolCombined-persistentVolumeClaim.yaml",
      "size": 339,
      "created": "2024-12-26T00:09:57.186512",
      "modified": "2024-12-26T00:09:57.208520",
      "hash": "c80e79c90065876ab5e06ec126b7b7a628ebca37b72180169c86e77f1072d847",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\bridge\\overlays\\desktop\\web-service.yaml",
      "size": 174,
      "created": "2024-12-26T00:09:57.198516",
      "modified": "2024-12-26T00:09:57.219514",
      "hash": "7ee971a4d50ab8e6058841cdd5753fa3d7451bc734a48d9160c0e7719e6b72f8",
      "extension": ".yaml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\static\\css\\main.687b9141.css",
      "size": 786,
      "created": "2025-01-13T23:46:37.700015",
      "modified": "2025-01-13T23:46:37.701015",
      "hash": "c07ada38b428b2996f31219e8af757d8ba9d15db8853ef541f28850696476c41",
      "extension": ".css",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\static\\css\\main.687b9141.css.map",
      "size": 1637,
      "created": "2025-01-13T23:46:37.700015",
      "modified": "2025-01-13T23:46:37.711013",
      "hash": "846cf9f4882d89460f13528afce19d6770c3b8680299265defce3ebf38d29f9e",
      "extension": ".map",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\static\\js\\main.23f9391b.js",
      "size": 783442,
      "created": "2025-01-13T23:46:37.711013",
      "modified": "2025-01-13T23:46:37.712012",
      "hash": "92aedf78e570bde5d8f19f4fa82b345729287af3c61d173225580319724f56e8",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: password",
        "Potential security issue: secret",
        "Long lines found on lines: [2]"
      ],
      "similar_files": [],
      "dependencies": [
        "route",
        "IndexedDB.",
        "IndexedDB.",
        "the",
        "the",
        "the",
        "the",
        "a",
        "a",
        ":case Mn:return e.return=e.return||e.value;case On:return",
        ".concat(JSON.stringify(t.hmr.runtime),",
        ".concat(JSON.stringify(t.url)),",
        ").concat(JSON.stringify(t.entry.module),"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\static\\js\\main.23f9391b.js.LICENSE.txt",
      "size": 8879,
      "created": "2025-01-13T23:46:37.701015",
      "modified": "2025-01-13T23:46:37.711013",
      "hash": "e23b627de55c3f376f3a9194d3a3cc6c558d98fd018d5b28ffdaa893157eb0c0",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\build\\static\\js\\main.23f9391b.js.map",
      "size": 4813328,
      "created": "2025-01-13T23:46:37.711013",
      "modified": "2025-01-13T23:46:37.714014",
      "hash": "7f0ce4dd18b5a9ec4a0debb7cc9fc522bfb15f2581f4143dfa8dd2db0a1d978c",
      "extension": ".map",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Large file size (>1MB)",
        "Potential security issue: api_key",
        "Potential security issue: password",
        "Potential security issue: secret",
        "TODO found: v6: remove, see https://github.com/mui/material-ui/pull/38123\\n    if (themeKey === 'typography' && val === 'inherit') {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const themeMapping = getPath(theme, themeKey) || {};\\n    if (style) {\\n      return style(props);\\n    }\\n    const styleFromPropValue = propValueFinal => {\\n      let value = getValue(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return handleBreakpoints(props, val, styleFromPropValue);\\n  }\\n  function styleFunctionSx(props) {\\n    const {\\n      sx,\\n      theme = {}\\n    } = props || {};\\n    if (!sx) {\\n      return null; // Emotion & styled-components will neglect null\\n    }\\n    const config = theme.unstable_sxConfig ?? defaultSxConfig;\\n\\n    /*\\n     * Receive `sxInput` as object or callback\\n     * and then recursively check keys & values to create media query object styles.\\n     * (the result will be used in `styled`)\\n     */\\n    function traverse(sxInput) {\\n      let sxObject = sxInput;\\n      if (typeof sxInput === 'function') {\\n        sxObject = sxInput(theme);\\n      } else if (typeof sxInput !== 'object') {\\n        // value\\n        return sxInput;\\n      }\\n      if (!sxObject) {\\n        return null;\\n      }\\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\\n      let css = emptyBreakpoints;\\n      Object.keys(sxObject).forEach(styleKey => {\\n        const value = callIfFn(sxObject[styleKey], theme);\\n        if (value !== null && value !== undefined) {\\n          if (typeof value === 'object') {\\n            if (config[styleKey]) {\\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\\n            } else {\\n              const breakpointsValues = handleBreakpoints({\\n                theme\\n              }, value, x => ({\\n                [styleKey]: x\\n              }));\\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\\n                css[styleKey] = styleFunctionSx({\\n                  sx: value,\\n                  theme\\n                });\\n              } else {\\n                css = merge(css, breakpointsValues);\\n              }\\n            }\\n          } else {\\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\\n          }\\n        }\\n      });\\n      return sortContainerQueries(theme, removeUnusedBreakpoints(breakpointsKeys, css));\\n    }\\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\\n  }\\n  return styleFunctionSx;\\n}\\nconst styleFunctionSx = unstable_createStyleFunctionSx();\\nstyleFunctionSx.filterProps = ['sx'];\\nexport default styleFunctionSx;\",\"// Sorted ASC by size. That's important.\\n// It can't be configured as it's used statically for propTypes.\\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\\nconst sortBreakpointsValues = values => {\\n  const breakpointsAsArray = Object.keys(values).map(key => ({\\n    key,\\n    val: values[key]\\n  })) || [];\\n  // Sort in ascending order\\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\\n  return breakpointsAsArray.reduce((acc, obj) => {\\n    return {\\n      ...acc,\\n      [obj.key]: obj.val\\n    };\\n  }, {});\\n};\\n\\n// Keep in mind that @media is inclusive by the CSS specification.\\nexport default function createBreakpoints(breakpoints) {\\n  const {\\n    // The breakpoint **start** at this value.\\n    // For instance with the first breakpoint xs: [xs, sm).\\n    values = {\\n      xs: 0,\\n      // phone\\n      sm: 600,\\n      // tablet\\n      md: 900,\\n      // small laptop\\n      lg: 1200,\\n      // desktop\\n      xl: 1536 // large screen\\n    },\\n    unit = 'px',\\n    step = 5,\\n    ...other\\n  } = breakpoints;\\n  const sortedValues = sortBreakpointsValues(values);\\n  const keys = Object.keys(sortedValues);\\n  function up(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (min-width:${value}${unit})`;\\n  }\\n  function down(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (max-width:${value - step / 100}${unit})`;\\n  }\\n  function between(start, end) {\\n    const endIndex = keys.indexOf(end);\\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\\n  }\\n  function only(key) {\\n    if (keys.indexOf(key) + 1 < keys.length) {\\n      return between(key, keys[keys.indexOf(key) + 1]);\\n    }\\n    return up(key);\\n  }\\n  function not(key) {\\n    // handle first and last key separately, for better readability\\n    const keyIndex = keys.indexOf(key);\\n    if (keyIndex === 0) {\\n      return up(keys[1]);\\n    }\\n    if (keyIndex === keys.length - 1) {\\n      return down(keys[keyIndex]);\\n    }\\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\\n  }\\n  return {\\n    keys,\\n    values: sortedValues,\\n    up,\\n    down,\\n    between,\\n    only,\\n    not,\\n    unit,\\n    ...other\\n  };\\n}\",\"const shape = {\\n  borderRadius: 4\\n};\\nexport default shape;\",\"/**\\n * A universal utility to style components with multiple color modes. Always use it from the theme object.\\n * It works with:\\n *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)\\n *  - [CSS theme variables](https://mui.com/material-ui/customization/css-theme-variables/overview/)\\n *  - Zero-runtime engine\\n *\\n * Tips: Use an array over object spread and place `theme.applyStyles()` last.\\n *\\n * With the styled function:\\n * \u2705 [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]\\n * \ud83d\udeab { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}\\n *\\n * With the sx prop:\\n * \u2705 [{ background: '#e5e5e5' }, theme => theme.applyStyles('dark', { background: '#1c1c1c' })]\\n * \ud83d\udeab { background: '#e5e5e5', ...theme => theme.applyStyles('dark', { background: '#1c1c1c' })}\\n *\\n * @example\\n * 1. using with `styled`:\\n * ```jsx\\n *   const Component = styled('div')(({ theme }) => [\\n *     { background: '#e5e5e5' },\\n *     theme.applyStyles('dark', {\\n *       background: '#1c1c1c',\\n *       color: '#fff',\\n *     }),\\n *   ]);\\n * ```\\n *\\n * @example\\n * 2. using with `sx` prop:\\n * ```jsx\\n *   <Box sx={[\\n *     { background: '#e5e5e5' },\\n *     theme => theme.applyStyles('dark', {\\n *        background: '#1c1c1c',\\n *        color: '#fff',\\n *      }),\\n *     ]}\\n *   />\\n * ```\\n *\\n * @example\\n * 3. theming a component:\\n * ```jsx\\n *   extendTheme({\\n *     components: {\\n *       MuiButton: {\\n *         styleOverrides: {\\n *           root: ({ theme }) => [\\n *             { background: '#e5e5e5' },\\n *             theme.applyStyles('dark', {\\n *               background: '#1c1c1c',\\n *               color: '#fff',\\n *             }),\\n *           ],\\n *         },\\n *       }\\n *     }\\n *   })\\n *```\\n */\\nexport default function applyStyles(key, styles) {\\n  // @ts-expect-error this is 'any' type\\n  const theme = this;\\n  if (theme.vars) {\\n    if (!theme.colorSchemes?.[key] || typeof theme.getColorSchemeSelector !== 'function') {\\n      return {};\\n    }\\n    // If CssVarsProvider is used as a provider, returns '*:where({selector}) &'\\n    let selector = theme.getColorSchemeSelector(key);\\n    if (selector === '&') {\\n      return styles;\\n    }\\n    if (selector.includes('data-') || selector.includes('.')) {\\n      // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)\\n      selector = `*:where(${selector.replace(/\\\\s*&$/, '')}) &`;\\n    }\\n    return {\\n      [selector]: styles\\n    };\\n  }\\n  if (theme.palette.mode === key) {\\n    return styles;\\n  }\\n  return {};\\n}\",\"import deepmerge from '@mui/utils/deepmerge';\\nimport createBreakpoints from \\\"../createBreakpoints/createBreakpoints.js\\\";\\nimport cssContainerQueries from \\\"../cssContainerQueries/index.js\\\";\\nimport shape from \\\"./shape.js\\\";\\nimport createSpacing from \\\"./createSpacing.js\\\";\\nimport styleFunctionSx from \\\"../styleFunctionSx/styleFunctionSx.js\\\";\\nimport defaultSxConfig from \\\"../styleFunctionSx/defaultSxConfig.js\\\";\\nimport applyStyles from \\\"./applyStyles.js\\\";\\nfunction createTheme(options = {}, ...args) {\\n  const {\\n    breakpoints: breakpointsInput = {},\\n    palette: paletteInput = {},\\n    spacing: spacingInput,\\n    shape: shapeInput = {},\\n    ...other\\n  } = options;\\n  const breakpoints = createBreakpoints(breakpointsInput);\\n  const spacing = createSpacing(spacingInput);\\n  let muiTheme = deepmerge({\\n    breakpoints,\\n    direction: 'ltr',\\n    components: {},\\n    // Inject component definitions.\\n    palette: {\\n      mode: 'light',\\n      ...paletteInput\\n    },\\n    spacing,\\n    shape: {\\n      ...shape,\\n      ...shapeInput\\n    }\\n  }, other);\\n  muiTheme = cssContainerQueries(muiTheme);\\n  muiTheme.applyStyles = applyStyles;\\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\\n  muiTheme.unstable_sxConfig = {\\n    ...defaultSxConfig,\\n    ...other?.unstable_sxConfig\\n  };\\n  muiTheme.unstable_sx = function sx(props) {\\n    return styleFunctionSx({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  return muiTheme;\\n}\\nexport default createTheme;\",\"export default function createMixins(breakpoints, mixins) {\\n  return {\\n    toolbar: {\\n      minHeight: 56,\\n      [breakpoints.up('xs')]: {\\n        '@media (orientation: landscape)': {\\n          minHeight: 48\\n        }\\n      },\\n      [breakpoints.up('sm')]: {\\n        minHeight: 64\\n      }\\n    },\\n    ...mixins\\n  };\\n}\",\"import deepmerge from '@mui/utils/deepmerge';\\nfunction round(value) {\\n  return Math.round(value * 1e5) / 1e5;\\n}\\nconst caseAllCaps = {\\n  textTransform: 'uppercase'\\n};\\nconst defaultFontFamily = '\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif';\\n\\n/**\\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\\n */\\nexport default function createTypography(palette, typography) {\\n  const {\\n    fontFamily = defaultFontFamily,\\n    // The default font size of the Material Specification.\\n    fontSize = 14,\\n    // px\\n    fontWeightLight = 300,\\n    fontWeightRegular = 400,\\n    fontWeightMedium = 500,\\n    fontWeightBold = 700,\\n    // Tell MUI what's the font-size on the html element.\\n    // 16px is the default font-size used by browsers.\\n    htmlFontSize = 16,\\n    // Apply the CSS properties to all the variants.\\n    allVariants,\\n    pxToRem: pxToRem2,\\n    ...other\\n  } = typeof typography === 'function' ? typography(palette) : typography;\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (typeof fontSize !== 'number') {\\n      console.error('MUI: `fontSize` is required to be a number.');\\n    }\\n    if (typeof htmlFontSize !== 'number') {\\n      console.error('MUI: `htmlFontSize` is required to be a number.');\\n    }\\n  }\\n  const coef = fontSize / 14;\\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => ({\\n    fontFamily,\\n    fontWeight,\\n    fontSize: pxToRem(size),\\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\\n    lineHeight,\\n    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing\\n    // across font-families can cause issues with the kerning.\\n    ...(fontFamily === defaultFontFamily ? {\\n      letterSpacing: `${round(letterSpacing / size)}em`\\n    } : {}),\\n    ...casing,\\n    ...allVariants\\n  });\\n  const variants = {\\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\\n    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.\\n    inherit: {\\n      fontFamily: 'inherit',\\n      fontWeight: 'inherit',\\n      fontSize: 'inherit',\\n      lineHeight: 'inherit',\\n      letterSpacing: 'inherit'\\n    }\\n  };\\n  return deepmerge({\\n    htmlFontSize,\\n    pxToRem,\\n    fontFamily,\\n    fontSize,\\n    fontWeightLight,\\n    fontWeightRegular,\\n    fontWeightMedium,\\n    fontWeightBold,\\n    ...variants\\n  }, other, {\\n    clone: false // No need to clone deep\\n  });\\n}\",\"const shadowKeyUmbraOpacity = 0.2;\\nconst shadowKeyPenumbraOpacity = 0.14;\\nconst shadowAmbientShadowOpacity = 0.12;\\nfunction createShadow(...px) {\\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');\\n}\\n\\n// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\\nconst shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\\nexport default shadows;\",\"// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\\n// to learn the context in which each easing should be used.\\nexport const easing = {\\n  // This is the most common easing curve.\\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\\n  // Objects enter the screen at full velocity from off-screen and\\n  // slowly decelerate to a resting point.\\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\\n  // The sharp curve is used by objects that may return to the screen at any time.\\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\\n};\\n\\n// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\\n// to learn when use what timing\\nexport const duration = {\\n  shortest: 150,\\n  shorter: 200,\\n  short: 250,\\n  // most basic recommended timing\\n  standard: 300,\\n  // this is to be used in complex animations\\n  complex: 375,\\n  // recommended when something is entering screen\\n  enteringScreen: 225,\\n  // recommended when something is leaving screen\\n  leavingScreen: 195\\n};\\nfunction formatMs(milliseconds) {\\n  return `${Math.round(milliseconds)}ms`;\\n}\\nfunction getAutoHeightDuration(height) {\\n  if (!height) {\\n    return 0;\\n  }\\n  const constant = height / 36;\\n\\n  // https://www.desmos.com/calculator/vbrp3ggqet\\n  return Math.min(Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10), 3000);\\n}\\nexport default function createTransitions(inputTransitions) {\\n  const mergedEasing = {\\n    ...easing,\\n    ...inputTransitions.easing\\n  };\\n  const mergedDuration = {\\n    ...duration,\\n    ...inputTransitions.duration\\n  };\\n  const create = (props = ['all'], options = {}) => {\\n    const {\\n      duration: durationOption = mergedDuration.standard,\\n      easing: easingOption = mergedEasing.easeInOut,\\n      delay = 0,\\n      ...other\\n    } = options;\\n    if (process.env.NODE_ENV !== 'production') {\\n      const isString = value => typeof value === 'string';\\n      const isNumber = value => !Number.isNaN(parseFloat(value));\\n      if (!isString(props) && !Array.isArray(props)) {\\n        console.error('MUI: Argument \\\"props\\\" must be a string or Array.');\\n      }\\n      if (!isNumber(durationOption) && !isString(durationOption)) {\\n        console.error(`MUI: Argument \\\"duration\\\" must be a number or a string but found ${durationOption}.`);\\n      }\\n      if (!isString(easingOption)) {\\n        console.error('MUI: Argument \\\"easing\\\" must be a string.');\\n      }\\n      if (!isNumber(delay) && !isString(delay)) {\\n        console.error('MUI: Argument \\\"delay\\\" must be a number or a string.');\\n      }\\n      if (typeof options !== 'object') {\\n        console.error(['MUI: Secong argument of transition.create must be an object.', \\\"Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`\\\"].join('\\\\n'));\\n      }\\n      if (Object.keys(other).length !== 0) {\\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\\n      }\\n    }\\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\\n  };\\n  return {\\n    getAutoHeightDuration,\\n    create,\\n    ...inputTransitions,\\n    easing: mergedEasing,\\n    duration: mergedDuration\\n  };\\n}\",\"// We need to centralize the zIndex definitions as they work\\n// like global values in the browser.\\nconst zIndex = {\\n  mobileStepper: 1000,\\n  fab: 1050,\\n  speedDial: 1050,\\n  appBar: 1100,\\n  drawer: 1200,\\n  modal: 1300,\\n  snackbar: 1400,\\n  tooltip: 1500\\n};\\nexport default zIndex;\",\"/* eslint-disable import/prefer-default-export */\\nimport { isPlainObject } from '@mui/utils/deepmerge';\\nfunction isSerializable(val) {\\n  return isPlainObject(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\\n}\\n\\n/**\\n * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.\\n *\\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\\n * For example, in a Next.js project:\\n *\\n * ```js\\n * // next.config.js\\n * const { extendTheme } = require('@mui/material/styles');\\n *\\n * const theme = extendTheme();\\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\\n * theme.toRuntimeSource = stringifyTheme;\\n *\\n * module.exports = withPigment({\\n *  theme,\\n * });\\n * ```\\n */\\nexport function stringifyTheme(baseTheme = {}) {\\n  const serializableTheme = {\\n    ...baseTheme\\n  };\\n  function serializeTheme(object) {\\n    const array = Object.entries(object);\\n    // eslint-disable-next-line no-plusplus\\n    for (let index = 0; index < array.length; index++) {\\n      const [key, value] = array[index];\\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\\n        delete object[key];\\n      } else if (isPlainObject(value)) {\\n        object[key] = {\\n          ...value\\n        };\\n        serializeTheme(object[key]);\\n      }\\n    }\\n  }\\n  serializeTheme(serializableTheme);\\n  return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\\n\\nconst theme = ${JSON.stringify(serializableTheme, null, 2)};\\n\\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\\ntheme.transitions = createTransitions(theme.transitions || {});\\n\\nexport default theme;`;\\n}\",\"import _formatMuiErrorMessage from \\\"@mui/utils/formatMuiErrorMessage\\\";\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport styleFunctionSx, { unstable_defaultSxConfig as defaultSxConfig } from '@mui/system/styleFunctionSx';\\nimport systemCreateTheme from '@mui/system/createTheme';\\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\\nimport createMixins from \\\"./createMixins.js\\\";\\nimport createPalette from \\\"./createPalette.js\\\";\\nimport createTypography from \\\"./createTypography.js\\\";\\nimport shadows from \\\"./shadows.js\\\";\\nimport createTransitions from \\\"./createTransitions.js\\\";\\nimport zIndex from \\\"./zIndex.js\\\";\\nimport { stringifyTheme } from \\\"./stringifyTheme.js\\\";\\nfunction createThemeNoVars(options = {}, ...args) {\\n  const {\\n    breakpoints: breakpointsInput,\\n    mixins: mixinsInput = {},\\n    spacing: spacingInput,\\n    palette: paletteInput = {},\\n    transitions: transitionsInput = {},\\n    typography: typographyInput = {},\\n    shape: shapeInput,\\n    ...other\\n  } = options;\\n  if (options.vars) {\\n    throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? 'MUI: `vars` is a private field used for CSS variables support.\\\\n' + 'Please use another name.' : _formatMuiErrorMessage(20));\\n  }\\n  const palette = createPalette(paletteInput);\\n  const systemTheme = systemCreateTheme(options);\\n  let muiTheme = deepmerge(systemTheme, {\\n    mixins: createMixins(systemTheme.breakpoints, mixinsInput),\\n    palette,\\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\\n    shadows: shadows.slice(),\\n    typography: createTypography(palette, typographyInput),\\n    transitions: createTransitions(transitionsInput),\\n    zIndex: {\\n      ...zIndex\\n    }\\n  });\\n  muiTheme = deepmerge(muiTheme, other);\\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\\n  if (process.env.NODE_ENV !== 'production') {\\n    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.\\n    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];\\n    const traverse = (node, component) => {\\n      let key;\\n\\n      // eslint-disable-next-line guard-for-in\\n      for (key in node) {\\n        const child = node[key];\\n        if (stateClasses.includes(key) && Object.keys(child).length > 0) {\\n          if (process.env.NODE_ENV !== 'production') {\\n            const stateClass = generateUtilityClass('', key);\\n            console.error([`MUI: The \\\\`${component}\\\\` component increases ` + `the CSS specificity of the \\\\`${key}\\\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({\\n              root: {\\n                [`&.${stateClass}`]: child\\n              }\\n            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\\\\n'));\\n          }\\n          // Remove the style to prevent global conflicts.\\n          node[key] = {};\\n        }\\n      }\\n    };\\n    Object.keys(muiTheme.components).forEach(component => {\\n      const styleOverrides = muiTheme.components[component].styleOverrides;\\n      if (styleOverrides && component.startsWith('Mui')) {\\n        traverse(styleOverrides, component);\\n      }\\n    });\\n  }\\n  muiTheme.unstable_sxConfig = {\\n    ...defaultSxConfig,\\n    ...other?.unstable_sxConfig\\n  };\\n  muiTheme.unstable_sx = function sx(props) {\\n    return styleFunctionSx({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  muiTheme.toRuntimeSource = stringifyTheme; // for Pigment CSS integration\\n\\n  return muiTheme;\\n}\\nlet warnedOnce = false;\\nexport function createMuiTheme(...args) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (!warnedOnce) {\\n      warnedOnce = true;\\n      console.error(['MUI: the createMuiTheme function was renamed to createTheme.', '', \\\"You should use `import { createTheme } from '@mui/material/styles'`\\\"].join('\\\\n'));\\n    }\\n  }\\n  return createThemeNoVars(...args);\\n}\\nexport default createThemeNoVars;\",\"// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\\nexport default function getOverlayAlpha(elevation) {\\n  let alphaValue;\\n  if (elevation < 1) {\\n    alphaValue = 5.11916 * elevation ** 2;\\n  } else {\\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\\n  }\\n  return Math.round(alphaValue * 10) / 1000;\\n}\",\"import createPalette from \\\"./createPalette.js\\\";\\nimport getOverlayAlpha from \\\"./getOverlayAlpha.js\\\";\\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\\n  if (index === 0) {\\n    return 'none';\\n  }\\n  const overlay = getOverlayAlpha(index);\\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\\n});\\nexport function getOpacity(mode) {\\n  return {\\n    inputPlaceholder: mode === 'dark' ? 0.5 : 0.42,\\n    inputUnderline: mode === 'dark' ? 0.7 : 0.42,\\n    switchTrackDisabled: mode === 'dark' ? 0.2 : 0.12,\\n    switchTrack: mode === 'dark' ? 0.3 : 0.38\\n  };\\n}\\nexport function getOverlays(mode) {\\n  return mode === 'dark' ? defaultDarkOverlays : [];\\n}\\nexport default function createColorScheme(options) {\\n  const {\\n    palette: paletteInput = {\\n      mode: 'light'\\n    },\\n    // need to cast to avoid module augmentation test\\n    opacity,\\n    overlays,\\n    ...rest\\n  } = options;\\n  const palette = createPalette(paletteInput);\\n  return {\\n    palette,\\n    opacity: {\\n      ...getOpacity(palette.mode),\\n      ...opacity\\n    },\\n    overlays: overlays || getOverlays(palette.mode),\\n    ...rest\\n  };\\n}\",\"export default function shouldSkipGeneratingVar(keys) {\\n  return !!keys[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!keys[0].match(/sxConfig$/) ||\\n  // ends with sxConfig\\n  keys[0] === 'palette' && !!keys[1]?.match(/(mode|contrastThreshold|tonalOffset)/);\\n}\",\"/**\\n * @internal These variables should not appear in the :root stylesheet when the `defaultColorScheme=\\\"dark\\\"`\\n */\\nconst excludeVariablesFromRoot = cssVarPrefix => [...[...Array(25)].map((_, index) => `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}overlays-${index}`), `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkBg`, `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkColor`];\\nexport default excludeVariablesFromRoot;\",\"import excludeVariablesFromRoot from \\\"./excludeVariablesFromRoot.js\\\";\\nexport default theme => (colorScheme, css) => {\\n  const root = theme.rootSelector || ':root';\\n  const selector = theme.colorSchemeSelector;\\n  let rule = selector;\\n  if (selector === 'class') {\\n    rule = '.%s';\\n  }\\n  if (selector === 'data') {\\n    rule = '[data-%s]';\\n  }\\n  if (selector?.startsWith('data-') && !selector.includes('%s')) {\\n    // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\\\"%s\\\"]'\\n    rule = `[${selector}=\\\"%s\\\"]`;\\n  }\\n  if (theme.defaultColorScheme === colorScheme) {\\n    if (colorScheme === 'dark') {\\n      const excludedVariables = {};\\n      excludeVariablesFromRoot(theme.cssVarPrefix).forEach(cssVar => {\\n        excludedVariables[cssVar] = css[cssVar];\\n        delete css[cssVar];\\n      });\\n      if (rule === 'media') {\\n        return {\\n          [root]: css,\\n          [`@media (prefers-color-scheme: dark)`]: {\\n            [root]: excludedVariables\\n          }\\n        };\\n      }\\n      if (rule) {\\n        return {\\n          [rule.replace('%s', colorScheme)]: excludedVariables,\\n          [`${root}, ${rule.replace('%s', colorScheme)}`]: css\\n        };\\n      }\\n      return {\\n        [root]: {\\n          ...css,\\n          ...excludedVariables\\n        }\\n      };\\n    }\\n    if (rule && rule !== 'media') {\\n      return `${root}, ${rule.replace('%s', String(colorScheme))}`;\\n    }\\n  } else if (colorScheme) {\\n    if (rule === 'media') {\\n      return {\\n        [`@media (prefers-color-scheme: ${String(colorScheme)})`]: {\\n          [root]: css\\n        }\\n      };\\n    }\\n    if (rule) {\\n      return rule.replace('%s', String(colorScheme));\\n    }\\n  }\\n  return root;\\n};\",\"import _formatMuiErrorMessage from \\\"@mui/utils/formatMuiErrorMessage\\\";\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport { unstable_createGetCssVar as systemCreateGetCssVar, createSpacing } from '@mui/system';\\nimport { createUnarySpacing } from '@mui/system/spacing';\\nimport { prepareCssVars, prepareTypographyVars, createGetColorSchemeSelector } from '@mui/system/cssVars';\\nimport styleFunctionSx, { unstable_defaultSxConfig as defaultSxConfig } from '@mui/system/styleFunctionSx';\\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, hslToRgb } from '@mui/system/colorManipulator';\\nimport createThemeNoVars from \\\"./createThemeNoVars.js\\\";\\nimport createColorScheme, { getOpacity, getOverlays } from \\\"./createColorScheme.js\\\";\\nimport defaultShouldSkipGeneratingVar from \\\"./shouldSkipGeneratingVar.js\\\";\\nimport defaultGetSelector from \\\"./createGetSelector.js\\\";\\nimport { stringifyTheme } from \\\"./stringifyTheme.js\\\";\\nfunction assignNode(obj, keys) {\\n  keys.forEach(k => {\\n    if (!obj[k]) {\\n      obj[k] = {};\\n    }\\n  });\\n}\\nfunction setColor(obj, key, defaultValue) {\\n  if (!obj[key] && defaultValue) {\\n    obj[key] = defaultValue;\\n  }\\n}\\nfunction toRgb(color) {\\n  if (typeof color !== 'string' || !color.startsWith('hsl')) {\\n    return color;\\n  }\\n  return hslToRgb(color);\\n}\\nfunction setColorChannel(obj, key) {\\n  if (!(`${key}Channel` in obj)) {\\n    // custom channel ${TOKEN_15};\\nvar createEmotionProps = function createEmotionProps(type, props) {\\n\\n  var newProps = {};\\n\\n  for (var _key in props) {\\n    if (hasOwn.call(props, _key)) {\\n      newProps[_key] = props[_key];\\n    }\\n  }\\n\\n  newProps[typePropName] = type; // Runtime labeling is an opt-in feature because:\\n\\n  return newProps;\\n};\\n\\nvar Insertion = function Insertion(_ref) {\\n  var cache = _ref.cache,\\n      serialized = _ref.serialized,\\n      isStringTag = _ref.isStringTag;\\n  registerStyles(cache, serialized, isStringTag);\\n  useInsertionEffectAlwaysWithSyncFallback(function () {\\n    return insertStyles(cache, serialized, isStringTag);\\n  });\\n\\n  return null;\\n};\\n\\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\\n  // not passing the registered cache to serializeStyles because it would\\n  // make certain babel optimisations not possible\\n\\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\\n    cssProp = cache.registered[cssProp];\\n  }\\n\\n  var WrappedComponent = props[typePropName];\\n  var registeredStyles = [cssProp];\\n  var className = '';\\n\\n  if (typeof props.className === 'string') {\\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\\n  } else if (props.className != null) {\\n    className = props.className + \\\" \\\";\\n  }\\n\\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\\n\\n  className += cache.key + \\\"-\\\" + serialized.name;\\n  var newProps = {};\\n\\n  for (var _key2 in props) {\\n    if (hasOwn.call(props, _key2) && _key2 !== 'css' && _key2 !== typePropName && (!isDevelopment )) {\\n      newProps[_key2] = props[_key2];\\n    }\\n  }\\n\\n  newProps.className = className;\\n\\n  if (ref) {\\n    newProps.ref = ref;\\n  }\\n\\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\\n    cache: cache,\\n    serialized: serialized,\\n    isStringTag: typeof WrappedComponent === 'string'\\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\\n});\\n\\nvar Emotion$1 = Emotion;\\n\\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwn as h, isDevelopment as i, useTheme as u, withEmotionCache as w };\\n\",\"'use client';\\n\\nimport * as React from 'react';\\nimport { ThemeContext } from '@mui/styled-engine';\\nfunction isObjectEmpty(obj) {\\n  return Object.keys(obj).length === 0;\\n}\\nfunction useTheme(defaultTheme = null) {\\n  const contextTheme = React.useContext(ThemeContext);\\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\\n}\\nexport default useTheme;\",\"import * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst RtlContext = /*#__PURE__*/React.createContext();\\nfunction RtlProvider({\\n  value,\\n  ...props\\n}) {\\n  return /*#__PURE__*/_jsx(RtlContext.Provider, {\\n    value: value ?? true,\\n    ...props\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? RtlProvider.propTypes = {\\n  children: PropTypes.node,\\n  value: PropTypes.bool\\n} : void 0;\\nexport const useRtl = () => {\\n  const value = React.useContext(RtlContext);\\n  return value ?? false;\\n};\\nexport default RtlProvider;\",\"/**\\n * Add keys, values of `defaultProps` that does not exist in `props`\\n * @param defaultProps\\n * @param props\\n * @returns resolved props\\n */\\nexport default function resolveProps(defaultProps, props) {\\n  const output = {\\n    ...props\\n  };\\n  for (const key in defaultProps) {\\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\\n      const propName = key;\\n      if (propName === 'components' || propName === 'slots') {\\n        output[propName] = {\\n          ...defaultProps[propName],\\n          ...output[propName]\\n        };\\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\\n        const defaultSlotProps = defaultProps[propName];\\n        const slotProps = props[propName];\\n        if (!slotProps) {\\n          output[propName] = defaultSlotProps || {};\\n        } else if (!defaultSlotProps) {\\n          output[propName] = slotProps;\\n        } else {\\n          output[propName] = {\\n            ...slotProps\\n          };\\n          for (const slotKey in defaultSlotProps) {\\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\\n              const slotPropName = slotKey;\\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\\n            }\\n          }\\n        }\\n      } else if (output[propName] === undefined) {\\n        output[propName] = defaultProps[propName];\\n      }\\n    }\\n  }\\n  return output;\\n}\",\"'use client';\\n\\nimport * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport resolveProps from '@mui/utils/resolveProps';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\\nfunction DefaultPropsProvider({\\n  value,\\n  children\\n}) {\\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\\n    value: value,\\n    children: children\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\\n  // \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Warning \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n  // \u2502 These PropTypes are generated from the TypeScript type definitions. \u2502\\n  // \u2502 To update them, edit the TypeScript types and run `pnpm proptypes`. \u2502\\n  // \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n  /**\\n   * @ignore\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * @ignore\\n   */\\n  value: PropTypes.object\\n} : void 0;\\nfunction getThemeProps(params) {\\n  const {\\n    theme,\\n    name,\\n    props\\n  } = params;\\n  if (!theme || !theme.components || !theme.components[name]) {\\n    return props;\\n  }\\n  const config = theme.components[name];\\n  if (config.defaultProps) {\\n    // compatible with v5 signature\\n    return resolveProps(config.defaultProps, props);\\n  }\\n  if (!config.styleOverrides && !config.variants) {\\n    // v6 signature, no property 'defaultProps'\\n    return resolveProps(config, props);\\n  }\\n  return props;\\n}\\nexport function useDefaultProps({\\n  props,\\n  name\\n}) {\\n  const ctx = React.useContext(PropsContext);\\n  return getThemeProps({\\n    props,\\n    name,\\n    theme: {\\n      components: ctx\\n    }\\n  });\\n}\\nexport default DefaultPropsProvider;\",\"'use client';\\n\\nimport * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\\nimport exactProp from '@mui/utils/exactProp';\\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\\nimport useThemeWithoutDefault from \\\"../useThemeWithoutDefault/index.js\\\";\\nimport RtlProvider from \\\"../RtlProvider/index.js\\\";\\nimport DefaultPropsProvider from \\\"../DefaultPropsProvider/index.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst EMPTY_THEME = {};\\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\\n  return React.useMemo(() => {\\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\\n    if (typeof localTheme === 'function') {\\n      const mergedTheme = localTheme(resolvedTheme);\\n      const result = themeId ? {\\n        ...upperTheme,\\n        [themeId]: mergedTheme\\n      } : mergedTheme;\\n      // must return a function for the private theme to NOT merge with the upper theme.\\n      // see the test case \\\"use provided theme from a callback\\\" in ThemeProvider.test.js\\n      if (isPrivate) {\\n        return () => result;\\n      }\\n      return result;\\n    }\\n    return themeId ? {\\n      ...upperTheme,\\n      [themeId]: localTheme\\n    } : {\\n      ...upperTheme,\\n      ...localTheme\\n    };\\n  }, [themeId, upperTheme, localTheme, isPrivate]);\\n}\\n\\n/**\\n * This component makes the `theme` available down the React tree.\\n * It should preferably be used at **the root of your component tree**.\\n *\\n * <ThemeProvider theme={theme}> // existing use case\\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\\n */\\nfunction ThemeProvider(props) {\\n  const {\\n    children,\\n    theme: localTheme,\\n    themeId\\n  } = props;\\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\\\n'));\\n    }\\n  }\\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\\n  const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';\\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\\n    theme: privateTheme,\\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\\n      value: engineTheme,\\n      children: /*#__PURE__*/_jsx(RtlProvider, {\\n        value: rtlValue,\\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\\n          value: themeId ? engineTheme[themeId].components : engineTheme.components,\\n          children: children\\n        })\\n      })\\n    })\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\\n  // \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Warning \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n  // \u2502 These PropTypes are generated from the TypeScript type definitions. \u2502\\n  // \u2502    To update them, edit the d.ts file and run `pnpm proptypes`.     \u2502\\n  // \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n  /**\\n   * Your component tree.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * A theme object. You can provide a function to extend the outer theme.\\n   */\\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\\n  /**\\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\\n   */\\n  themeId: PropTypes.string\\n} : void 0;\\nif (process.env.NODE_ENV !== 'production') {\\n  process.env.NODE_ENV !== \\\"production\\\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\\n}\\nexport default ThemeProvider;\",\"export default '$$material';\",\"'use client';\\n\\nimport * as React from 'react';\\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\\nimport THEME_ID from \\\"./identifier.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport default function ThemeProviderNoVars({\\n  theme: themeInput,\\n  ...props\\n}) {\\n  const scopedTheme = THEME_ID in themeInput ? themeInput[THEME_ID] : undefined;\\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\\n    ...props,\\n    themeId: scopedTheme ? THEME_ID : undefined,\\n    theme: scopedTheme || themeInput\\n  });\\n}\",\"import { h as hasOwn, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isDevelopment } from './emotion-element-f0de968e.browser.esm.js';\\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-f0de968e.browser.esm.js';\\nimport * as React from 'react';\\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\\nimport { serializeStyles } from '@emotion/serialize';\\nimport '@emotion/cache';\\nimport '@babel/runtime/helpers/extends';\\nimport '@emotion/weak-memoize';\\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\\nimport 'hoist-non-react-statics';\\n\\nvar jsx = function jsx(type, props) {\\n  // eslint-disable-next-line prefer-rest-params\\n  var args = arguments;\\n\\n  if (props == null || !hasOwn.call(props, 'css')) {\\n    return React.createElement.apply(undefined, args);\\n  }\\n\\n  var argsLength = args.length;\\n  var createElementArgArray = new Array(argsLength);\\n  createElementArgArray[0] = Emotion;\\n  createElementArgArray[1] = createEmotionProps(type, props);\\n\\n  for (var i = 2; i < argsLength; i++) {\\n    createElementArgArray[i] = args[i];\\n  }\\n\\n  return React.createElement.apply(null, createElementArgArray);\\n};\\n\\n(function (_jsx) {\\n  var JSX;\\n\\n  (function (_JSX) {})(JSX || (JSX = _jsx.JSX || (_jsx.JSX = {})));\\n})(jsx || (jsx = {}));\\n\\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\\n// initial client-side render from SSR, use place of hydrating tag\\n\\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\\n\\n  var styles = props.styles;\\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\\n  // but it is based on a constant that will never change at runtime\\n  // it's effectively like having two implementations and switching them out\\n  // so it's not actually breaking anything\\n\\n\\n  var sheetRef = React.useRef();\\n  useInsertionEffectWithLayoutFallback(function () {\\n    var key = cache.key + \\\"-global\\\"; // use case of https://github.com/emotion-js/emotion/issues/2675\\n\\n    var sheet = new cache.sheet.constructor({\\n      key: key,\\n      nonce: cache.sheet.nonce,\\n      container: cache.sheet.container,\\n      speedy: cache.sheet.isSpeedy\\n    });\\n    var rehydrating = false;\\n    var node = document.querySelector(\\\"style[data-emotion=\\\\\\\"\\\" + key + \\\" \\\" + serialized.name + \\\"\\\\\\\"]\\\");\\n\\n    if (cache.sheet.tags.length) {\\n      sheet.before = cache.sheet.tags[0];\\n    }\\n\\n    if (node !== null) {\\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\\n\\n      node.setAttribute('data-emotion', key);\\n      sheet.hydrate([node]);\\n    }\\n\\n    sheetRef.current = [sheet, rehydrating];\\n    return function () {\\n      sheet.flush();\\n    };\\n  }, [cache]);\\n  useInsertionEffectWithLayoutFallback(function () {\\n    var sheetRefCurrent = sheetRef.current;\\n    var sheet = sheetRefCurrent[0],\\n        rehydrating = sheetRefCurrent[1];\\n\\n    if (rehydrating) {\\n      sheetRefCurrent[1] = false;\\n      return;\\n    }\\n\\n    if (serialized.next !== undefined) {\\n      // insert keyframes\\n      insertStyles(cache, serialized.next, true);\\n    }\\n\\n    if (sheet.tags.length) {\\n      // if this doesn't exist then it will be null so the style element will be appended\\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\\n      sheet.before = element;\\n      sheet.flush();\\n    }\\n\\n    cache.insert(\\\"\\\", serialized, sheet, false);\\n  }, [cache, serialized.name]);\\n  return null;\\n});\\n\\nfunction css() {\\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n    args[_key] = arguments[_key];\\n  }\\n\\n  return serializeStyles(args);\\n}\\n\\nfunction keyframes() {\\n  var insertable = css.apply(void 0, arguments);\\n  var name = \\\"animation-\\\" + insertable.name;\\n  return {\\n    name: name,\\n    styles: \\\"@keyframes \\\" + name + \\\"{\\\" + insertable.styles + \\\"}\\\",\\n    anim: 1,\\n    toString: function toString() {\\n      return \\\"_EMO_\\\" + this.name + \\\"_\\\" + this.styles + \\\"_EMO_\\\";\\n    }\\n  };\\n}\\n\\nvar classnames = function classnames(args) {\\n  var len = args.length;\\n  var i = 0;\\n  var cls = '';\\n\\n  for (; i < len; i++) {\\n    var arg = args[i];\\n    if (arg == null) continue;\\n    var toAdd = void 0;\\n\\n    switch (typeof arg) {\\n      case 'boolean':\\n        break;\\n\\n      case 'object':\\n        {\\n          if (Array.isArray(arg)) {\\n            toAdd = classnames(arg);\\n          } else {\\n\\n            toAdd = '';\\n\\n            for (var k in arg) {\\n              if (arg[k] && k) {\\n                toAdd && (toAdd += ' ');\\n                toAdd += k;\\n              }\\n            }\\n          }\\n\\n          break;\\n        }\\n\\n      default:\\n        {\\n          toAdd = arg;\\n        }\\n    }\\n\\n    if (toAdd) {\\n      cls && (cls += ' ');\\n      cls += toAdd;\\n    }\\n  }\\n\\n  return cls;\\n};\\n\\nfunction merge(registered, css, className) {\\n  var registeredStyles = [];\\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\\n\\n  if (registeredStyles.length < 2) {\\n    return className;\\n  }\\n\\n  return rawClassName + css(registeredStyles);\\n}\\n\\nvar Insertion = function Insertion(_ref) {\\n  var cache = _ref.cache,\\n      serializedArr = _ref.serializedArr;\\n  useInsertionEffectAlwaysWithSyncFallback(function () {\\n\\n    for (var i = 0; i < serializedArr.length; i++) {\\n      insertStyles(cache, serializedArr[i], false);\\n    }\\n  });\\n\\n  return null;\\n};\\n\\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\\n  var hasRendered = false;\\n  var serializedArr = [];\\n\\n  var css = function css() {\\n    if (hasRendered && isDevelopment) {\\n      throw new Error('css can only be used during render');\\n    }\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    var serialized = serializeStyles(args, cache.registered);\\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\\n\\n    registerStyles(cache, serialized, false);\\n    return cache.key + \\\"-\\\" + serialized.name;\\n  };\\n\\n  var cx = function cx() {\\n    if (hasRendered && isDevelopment) {\\n      throw new Error('cx can only be used during render');\\n    }\\n\\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n      args[_key2] = arguments[_key2];\\n    }\\n\\n    return merge(cache.registered, css, classnames(args));\\n  };\\n\\n  var content = {\\n    css: css,\\n    cx: cx,\\n    theme: React.useContext(ThemeContext)\\n  };\\n  var ele = props.children(content);\\n  hasRendered = true;\\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\\n    cache: cache,\\n    serializedArr: serializedArr\\n  }), ele);\\n});\\n\\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\\n\",\"'use client';\\n\\nimport * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Global } from '@emotion/react';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nfunction isEmpty(obj) {\\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\\n}\\nexport default function GlobalStyles(props) {\\n  const {\\n    styles,\\n    defaultTheme = {}\\n  } = props;\\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\\n  return /*#__PURE__*/_jsx(Global, {\\n    styles: globalStyles\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? GlobalStyles.propTypes = {\\n  defaultTheme: PropTypes.object,\\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\\n} : void 0;\",\"/**\\n * Split this component for RSC import\\n */\\nimport * as React from 'react';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\\nexport default function InitColorSchemeScript(options) {\\n  const {\\n    defaultMode = 'system',\\n    defaultLightColorScheme = 'light',\\n    defaultDarkColorScheme = 'dark',\\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\\n    colorSchemeNode = 'document.documentElement',\\n    nonce\\n  } = options || {};\\n  let setter = '';\\n  let attribute = initialAttribute;\\n  if (initialAttribute === 'class') {\\n    attribute = '.%s';\\n  }\\n  if (initialAttribute === 'data') {\\n    attribute = '[data-%s]';\\n  }\\n  if (attribute.startsWith('.')) {\\n    const selector = attribute.substring(1);\\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\\n  }\\n  const matches = attribute.match(/\\\\[([^\\\\]]+)\\\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\\n  if (matches) {\\n    const [attr, value] = matches[1].split('=');\\n    if (!value) {\\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\\n    }\\n    setter += `\\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\\\"\\\"'});`;\\n  } else {\\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\\n  }\\n  return /*#__PURE__*/_jsx(\\\"script\\\", {\\n    suppressHydrationWarning: true,\\n    nonce: typeof window === 'undefined' ? nonce : ''\\n    // eslint-disable-next-line react/no-danger\\n    ,\\n    dangerouslySetInnerHTML: {\\n      __html: `(function() {\\ntry {\\n  let colorScheme = '';\\n  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\\n  if (mode === 'system') {\\n    // handle system mode\\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\\n    if (mql.matches) {\\n      colorScheme = dark\\n    } else {\\n      colorScheme = light\\n    }\\n  }\\n  if (mode === 'light') {\\n    colorScheme = light;\\n  }\\n  if (mode === 'dark') {\\n    colorScheme = dark;\\n  }\\n  if (colorScheme) {\\n    ${setter}\\n  }\\n} catch(e){}})();`\\n    }\\n  }, \\\"mui-color-scheme-init\\\");\\n}\",\"'use client';\\n\\nimport * as React from 'react';\\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from \\\"../InitColorSchemeScript/InitColorSchemeScript.js\\\";\\nexport function getSystemMode(mode) {\\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\\n    if (mql.matches) {\\n      return 'dark';\\n    }\\n    return 'light';\\n  }\\n  return undefined;\\n}\\nfunction processState(state, callback) {\\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\\n    return callback('light');\\n  }\\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\\n    return callback('dark');\\n  }\\n  return undefined;\\n}\\nexport function getColorScheme(state) {\\n  return processState(state, mode => {\\n    if (mode === 'light') {\\n      return state.lightColorScheme;\\n    }\\n    if (mode === 'dark') {\\n      return state.darkColorScheme;\\n    }\\n    return undefined;\\n  });\\n}\\nfunction initializeValue(key, defaultValue) {\\n  if (typeof window === 'undefined') {\\n    return undefined;\\n  }\\n  let value;\\n  try {\\n    value = localStorage.getItem(key) || undefined;\\n    if (!value) {\\n      // the first time that user enters the site.\\n      localStorage.setItem(key, defaultValue);\\n    }\\n  } catch {\\n    // Unsupported\\n  }\\n  return value || defaultValue;\\n}\\nexport default function useCurrentColorScheme(options) {\\n  const {\\n    defaultMode = 'light',\\n    defaultLightColorScheme,\\n    defaultDarkColorScheme,\\n    supportedColorSchemes = [],\\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    storageWindow = typeof window === 'undefined' ? undefined : window,\\n    noSsr = false\\n  } = options;\\n  const joinedColorSchemes = supportedColorSchemes.join(',');\\n  const isMultiSchemes = supportedColorSchemes.length > 1;\\n  const [state, setState] = React.useState(() => {\\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\\n    return {\\n      mode: initialMode,\\n      systemMode: getSystemMode(initialMode),\\n      lightColorScheme,\\n      darkColorScheme\\n    };\\n  });\\n  const [isClient, setIsClient] = React.useState(noSsr || !isMultiSchemes);\\n  React.useEffect(() => {\\n    setIsClient(true); // to rerender the component after hydration\\n  }, []);\\n  const colorScheme = getColorScheme(state);\\n  const setMode = React.useCallback(mode => {\\n    setState(currentState => {\\n      if (mode === currentState.mode) {\\n        // do nothing if mode does not change\\n        return currentState;\\n      }\\n      const newMode = mode ?? defaultMode;\\n      try {\\n        localStorage.setItem(modeStorageKey, newMode);\\n      } catch {\\n        // Unsupported\\n      }\\n      return {\\n        ...currentState,\\n        mode: newMode,\\n        systemMode: getSystemMode(newMode)\\n      };\\n    });\\n  }, [modeStorageKey, defaultMode]);\\n  const setColorScheme = React.useCallback(value => {\\n    if (!value) {\\n      setState(currentState => {\\n        try {\\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\\n        } catch {\\n          // Unsupported\\n        }\\n        return {\\n          ...currentState,\\n          lightColorScheme: defaultLightColorScheme,\\n          darkColorScheme: defaultDarkColorScheme\\n        };\\n      });\\n    } else if (typeof value === 'string') {\\n      if (value && !joinedColorSchemes.includes(value)) {\\n        console.error(`\\\\`${value}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n      } else {\\n        setState(currentState => {\\n          const newState = {\\n            ...currentState\\n          };\\n          processState(currentState, mode => {\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\\n            } catch {\\n              // Unsupported\\n            }\\n            if (mode === 'light') {\\n              newState.lightColorScheme = value;\\n            }\\n            if (mode === 'dark') {\\n              newState.darkColorScheme = value;\\n            }\\n          });\\n          return newState;\\n        });\\n      }\\n    } else {\\n      setState(currentState => {\\n        const newState = {\\n          ...currentState\\n        };\\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\\n        if (newLightColorScheme) {\\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\\n            console.error(`\\\\`${newLightColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n          } else {\\n            newState.lightColorScheme = newLightColorScheme;\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\\n            } catch (error) {\\n              // Unsupported\\n            }\\n          }\\n        }\\n        if (newDarkColorScheme) {\\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\\n            console.error(`\\\\`${newDarkColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n          } else {\\n            newState.darkColorScheme = newDarkColorScheme;\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\\n            } catch (error) {\\n              // Unsupported\\n            }\\n          }\\n        }\\n        return newState;\\n      });\\n    }\\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\\n  const handleMediaQuery = React.useCallback(event => {\\n    if (state.mode === 'system') {\\n      setState(currentState => {\\n        const systemMode = event?.matches ? 'dark' : 'light';\\n\\n        // Early exit, nothing changed.\\n        if (currentState.systemMode === systemMode) {\\n          return currentState;\\n        }\\n        return {\\n          ...currentState,\\n          systemMode\\n        };\\n      });\\n    }\\n  }, [state.mode]);\\n\\n  // Ref hack to avoid adding handleMediaQuery as a dep\\n  const mediaListener = React.useRef(handleMediaQuery);\\n  mediaListener.current = handleMediaQuery;\\n  React.useEffect(() => {\\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\\n      return undefined;\\n    }\\n    const handler = (...args) => mediaListener.current(...args);\\n\\n    // Always listen to System preference\\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\\n\\n    // Intentionally use deprecated listener methods to support iOS & old browsers\\n    media.addListener(handler);\\n    handler(media);\\n    return () => {\\n      media.removeListener(handler);\\n    };\\n  }, [isMultiSchemes]);\\n\\n  // Handle when localStorage has changed\\n  React.useEffect(() => {\\n    if (storageWindow && isMultiSchemes) {\\n      const handleStorage = event => {\\n        const value = event.newValue;\\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\\n          // If the key is deleted, value will be null then reset color scheme to the default one.\\n          if (event.key.endsWith('light')) {\\n            setColorScheme({\\n              light: value\\n            });\\n          }\\n          if (event.key.endsWith('dark')) {\\n            setColorScheme({\\n              dark: value\\n            });\\n          }\\n        }\\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\\n          setMode(value || defaultMode);\\n        }\\n      };\\n      // For syncing color-scheme changes between iframes\\n      storageWindow.addEventListener('storage', handleStorage);\\n      return () => {\\n        storageWindow.removeEventListener('storage', handleStorage);\\n      };\\n    }\\n    return undefined;\\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes]);\\n  return {\\n    ...state,\\n    mode: isClient ? state.mode : undefined,\\n    systemMode: isClient ? state.systemMode : undefined,\\n    colorScheme: isClient ? colorScheme : undefined,\\n    setMode,\\n    setColorScheme\\n  };\\n}\",\"import * as React from 'react';\\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport const defaultConfig = {\\n  attribute: 'data-mui-color-scheme',\\n  colorSchemeStorageKey: 'mui-color-scheme',\\n  defaultLightColorScheme: 'light',\\n  defaultDarkColorScheme: 'dark',\\n  modeStorageKey: 'mui-mode'\\n};\\nexport default (function InitColorSchemeScript(props) {\\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\\n    ...defaultConfig,\\n    ...props\\n  });\\n});\",\"'use client';\\n\\nimport * as React from 'react';\\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\\nimport createTheme from \\\"./createTheme.js\\\";\\nimport createTypography from \\\"./createTypography.js\\\";\\nimport THEME_ID from \\\"./identifier.js\\\";\\nimport { defaultConfig } from \\\"../InitColorSchemeScript/InitColorSchemeScript.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst {\\n  CssVarsProvider: InternalCssVarsProvider,\\n  useColorScheme,\\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\\n} = createCssVarsProvider({\\n  themeId: THEME_ID,\\n  // @ts-ignore ignore module augmentation tests\\n  theme: () => createTheme({\\n    cssVariables: true\\n  }),\\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\\n  modeStorageKey: defaultConfig.modeStorageKey,\\n  defaultColorScheme: {\\n    light: defaultConfig.defaultLightColorScheme,\\n    dark: defaultConfig.defaultDarkColorScheme\\n  },\\n  resolveTheme: theme => {\\n    const newTheme = {\\n      ...theme,\\n      typography: createTypography(theme.palette, theme.typography)\\n    };\\n    newTheme.unstable_sx = function sx(props) {\\n      return styleFunctionSx({\\n        sx: props,\\n        theme: this\\n      });\\n    };\\n    return newTheme;\\n  }\\n});\\nlet warnedOnce = false;\\n\\n// TODO: remove in v7\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\nfunction Experimental_CssVarsProvider(props) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (!warnedOnce) {\\n      console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \\\"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\\\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\\\n'));\\n      warnedOnce = true;\\n    }\\n  }\\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\\n    ...props\\n  });\\n}\\nlet warnedInitScriptOnce = false;\\n\\n// TODO: remove in v7\\nconst getInitColorSchemeScript = params => {\\n  if (!warnedInitScriptOnce) {\\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \\\"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\\\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\\\n'));\\n    warnedInitScriptOnce = true;\\n  }\\n  return deprecatedGetInitColorSchemeScript(params);\\n};\\n\\n/**\\n * TODO: remove this export in v7\\n * @deprecated\\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\\n *\\n * You should use `ThemeProvider` and `createTheme()` instead:\\n *\\n * ```diff\\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\\n *\\n * - const theme = extendTheme();\\n * + const theme = createTheme({\\n * +   cssVariables: true,\\n * +   colorSchemes: { light: true, dark: true },\\n * + });\\n *\\n * - <CssVarsProvider theme={theme}>\\n * + <ThemeProvider theme={theme}>\\n * ```\\n *\\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\\n */\\nexport const CssVarsProvider = InternalCssVarsProvider;\\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };\",\"import * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { GlobalStyles } from '@mui/styled-engine';\\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\\nimport ThemeProvider from \\\"../ThemeProvider/index.js\\\";\\nimport InitColorSchemeScript, { DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from \\\"../InitColorSchemeScript/InitColorSchemeScript.js\\\";\\nimport useCurrentColorScheme from \\\"./useCurrentColorScheme.js\\\";\\nimport { jsx as _jsx, jsxs as _jsxs } from \\\"react/jsx-runtime\\\";\\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\\nexport default function createCssVarsProvider(options) {\\n  const {\\n    themeId,\\n    /**\\n     * This `theme` object needs to follow a certain structure to\\n     * be used correctly by the finel `CssVarsProvider`. It should have a\\n     * `colorSchemes` key with the light and dark (and any other) palette.\\n     * It should also ideally have a vars object created using `prepareCssVars`.\\n     */\\n    theme: defaultTheme = {},\\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\\n    defaultColorScheme,\\n    resolveTheme\\n  } = options;\\n  const defaultContext = {\\n    allColorSchemes: [],\\n    colorScheme: undefined,\\n    darkColorScheme: undefined,\\n    lightColorScheme: undefined,\\n    mode: undefined,\\n    setColorScheme: () => {},\\n    setMode: () => {},\\n    systemMode: undefined\\n  };\\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\\n  if (process.env.NODE_ENV !== 'production') {\\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\\n  }\\n  const useColorScheme = () => React.useContext(ColorSchemeContext) || defaultContext;\\n  const defaultColorSchemes = {};\\n  const defaultComponents = {};\\n  function CssVarsProvider(props) {\\n    const {\\n      children,\\n      theme: themeProp,\\n      modeStorageKey = defaultModeStorageKey,\\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\\n      disableTransitionOnChange = designSystemTransitionOnChange,\\n      storageWindow = typeof window === 'undefined' ? undefined : window,\\n      documentNode = typeof document === 'undefined' ? undefined : document,\\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\\n      disableNestedContext = false,\\n      disableStyleSheetGeneration = false,\\n      defaultMode: initialMode = 'system',\\n      noSsr\\n    } = props;\\n    const hasMounted = React.useRef(false);\\n    const upperTheme = muiUseTheme();\\n    const ctx = React.useContext(ColorSchemeContext);\\n    const nested = !!ctx && !disableNestedContext;\\n    const initialTheme = React.useMemo(() => {\\n      if (themeProp) {\\n        return themeProp;\\n      }\\n      return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;\\n    }, [themeProp]);\\n    const scopedTheme = initialTheme[themeId];\\n    const restThemeProp = scopedTheme || initialTheme;\\n    const {\\n      colorSchemes = defaultColorSchemes,\\n      components = defaultComponents,\\n      cssVarPrefix\\n    } = restThemeProp;\\n    const joinedColorSchemes = Object.keys(colorSchemes).filter(k => !!colorSchemes[k]).join(',');\\n    const allColorSchemes = React.useMemo(() => joinedColorSchemes.split(','), [joinedColorSchemes]);\\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\\n    const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;\\n\\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\\n    const {\\n      mode: stateMode,\\n      setMode,\\n      systemMode,\\n      lightColorScheme,\\n      darkColorScheme,\\n      colorScheme: stateColorScheme,\\n      setColorScheme\\n    } = useCurrentColorScheme({\\n      supportedColorSchemes: allColorSchemes,\\n      defaultLightColorScheme,\\n      defaultDarkColorScheme,\\n      modeStorageKey,\\n      colorSchemeStorageKey,\\n      defaultMode,\\n      storageWindow,\\n      noSsr\\n    });\\n    let mode = stateMode;\\n    let colorScheme = stateColorScheme;\\n    if (nested) {\\n      mode = ctx.mode;\\n      colorScheme = ctx.colorScheme;\\n    }\\n    const memoTheme = React.useMemo(() => {\\n      // `colorScheme` is undefined on the server and hydration phase\\n      const calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;\\n\\n      // 2. get the `vars` object that refers to the CSS custom properties\\n      const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;\\n\\n      // 3. Start composing the theme object\\n      const theme = {\\n        ...restThemeProp,\\n        components,\\n        colorSchemes,\\n        cssVarPrefix,\\n        vars: themeVars\\n      };\\n      if (typeof theme.generateSpacing === 'function') {\\n        theme.spacing = theme.generateSpacing();\\n      }\\n\\n      // 4. Resolve the color scheme and merge it to the theme\\n      if (calculatedColorScheme) {\\n        const scheme = colorSchemes[calculatedColorScheme];\\n        if (scheme && typeof scheme === 'object') {\\n          // 4.1 Merge the selected color scheme to the theme\\n          Object.keys(scheme).forEach(schemeKey => {\\n            if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\\n              // shallow merge the 1st level structure of the theme.\\n              theme[schemeKey] = {\\n                ...theme[schemeKey],\\n                ...scheme[schemeKey]\\n              };\\n            } else {\\n              theme[schemeKey] = scheme[schemeKey];\\n            }\\n          });\\n        }\\n      }\\n      return resolveTheme ? resolveTheme(theme) : theme;\\n    }, [restThemeProp, colorScheme, components, colorSchemes, cssVarPrefix]);\\n\\n    // 5. Declaring effects\\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\\n    const colorSchemeSelector = restThemeProp.colorSchemeSelector;\\n    React.useEffect(() => {\\n      if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {\\n        const selector = colorSchemeSelector;\\n        let rule = colorSchemeSelector;\\n        if (selector === 'class') {\\n          rule = `.%s`;\\n        }\\n        if (selector === 'data') {\\n          rule = `[data-%s]`;\\n        }\\n        if (selector?.startsWith('data-') && !selector.includes('%s')) {\\n          // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\\\"%s\\\"]'\\n          rule = `[${selector}=\\\"%s\\\"]`;\\n        }\\n        if (rule.startsWith('.')) {\\n          colorSchemeNode.classList.remove(...allColorSchemes.map(scheme => rule.substring(1).replace('%s', scheme)));\\n          colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));\\n        } else {\\n          const matches = rule.replace('%s', colorScheme).match(/\\\\[([^\\\\]]+)\\\\]/);\\n          if (matches) {\\n            const [attr, value] = matches[1].split('=');\\n            if (!value) {\\n              // for attributes like `data-theme-dark`, `data-theme-light`\\n              // remove all the existing data attributes before setting the new one\\n              allColorSchemes.forEach(scheme => {\\n                colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));\\n              });\\n            }\\n            colorSchemeNode.setAttribute(attr, value ? value.replace(/\\\"|'/g, '') : '');\\n          } else {\\n            colorSchemeNode.setAttribute(rule, colorScheme);\\n          }\\n        }\\n      }\\n    }, [colorScheme, colorSchemeSelector, colorSchemeNode, allColorSchemes]);\\n\\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\\n    React.useEffect(() => {\\n      let timer;\\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\\n        const css = documentNode.createElement('style');\\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\\n        documentNode.head.appendChild(css);\\n\\n        // Force browser repaint\\n        (() => window.getComputedStyle(documentNode.body))();\\n        timer = setTimeout(() => {\\n          documentNode.head.removeChild(css);\\n        }, 1);\\n      }\\n      return () => {\\n        clearTimeout(timer);\\n      };\\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\\n    React.useEffect(() => {\\n      hasMounted.current = true;\\n      return () => {\\n        hasMounted.current = false;\\n      };\\n    }, []);\\n    const contextValue = React.useMemo(() => ({\\n      allColorSchemes,\\n      colorScheme,\\n      darkColorScheme,\\n      lightColorScheme,\\n      mode,\\n      setColorScheme,\\n      setMode: process.env.NODE_ENV === 'production' ? setMode : newMode => {\\n        if (memoTheme.colorSchemeSelector === 'media') {\\n          console.error(['MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).', 'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.', 'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'].join('\\\\n'));\\n        }\\n        setMode(newMode);\\n      },\\n      systemMode\\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode, memoTheme.colorSchemeSelector]);\\n    let shouldGenerateStyleSheet = true;\\n    if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) {\\n      shouldGenerateStyleSheet = false;\\n    }\\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\\n      children: [/*#__PURE__*/_jsx(ThemeProvider, {\\n        themeId: scopedTheme ? themeId : undefined,\\n        theme: memoTheme,\\n        children: children\\n      }), shouldGenerateStyleSheet && /*#__PURE__*/_jsx(GlobalStyles, {\\n        styles: memoTheme.generateStyleSheets?.() || []\\n      })]\\n    });\\n    if (nested) {\\n      return element;\\n    }\\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\\n      value: contextValue,\\n      children: element\\n    });\\n  }\\n  process.env.NODE_ENV !== \\\"production\\\" ? CssVarsProvider.propTypes = {\\n    /**\\n     * The component tree.\\n     */\\n    children: PropTypes.node,\\n    /**\\n     * The node used to attach the color-scheme attribute\\n     */\\n    colorSchemeNode: PropTypes.any,\\n    /**\\n     * localStorage key used to store `colorScheme`\\n     */\\n    colorSchemeStorageKey: PropTypes.string,\\n    /**\\n     * The default mode when the storage is empty,\\n     * require the theme to have `colorSchemes` with light and dark.\\n     */\\n    defaultMode: PropTypes.string,\\n    /**\\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\\n     */\\n    disableNestedContext: PropTypes.bool,\\n    /**\\n     * If `true`, the style sheet won't be generated.\\n     *\\n     * This is useful for controlling nested CssVarsProvider behavior.\\n     */\\n    disableStyleSheetGeneration: PropTypes.bool,\\n    /**\\n     * Disable CSS transitions when switching between modes or color schemes.\\n     */\\n    disableTransitionOnChange: PropTypes.bool,\\n    /**\\n     * The document to attach the attribute to.\\n     */\\n    documentNode: PropTypes.any,\\n    /**\\n     * The key in the local storage used to store current color scheme.\\n     */\\n    modeStorageKey: PropTypes.string,\\n    /**\\n     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.\\n     * You should use this option in conjuction with `InitColorSchemeScript` component.\\n     */\\n    noSsr: PropTypes.bool,\\n    /**\\n     * The window that attaches the 'storage' event listener.\\n     * @default window\\n     */\\n    storageWindow: PropTypes.any,\\n    /**\\n     * The calculated theme object that will be passed through context.\\n     */\\n    theme: PropTypes.object\\n  } : void 0;\\n  const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\\n  const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\\n  const getInitColorSchemeScript = params => InitColorSchemeScript({\\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\\n    defaultLightColorScheme,\\n    defaultDarkColorScheme,\\n    modeStorageKey: defaultModeStorageKey,\\n    ...params\\n  });\\n  return {\\n    CssVarsProvider,\\n    useColorScheme,\\n    getInitColorSchemeScript\\n  };\\n}\",\"'use client';\\n\\nimport * as React from 'react';\\nimport ThemeProviderNoVars from \\\"./ThemeProviderNoVars.js\\\";\\nimport { CssVarsProvider } from \\\"./ThemeProviderWithVars.js\\\";\\nimport THEME_ID from \\\"./identifier.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport default function ThemeProvider({\\n  theme,\\n  ...props\\n}) {\\n  if (typeof theme === 'function') {\\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\\n      theme: theme,\\n      ...props\\n    });\\n  }\\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\\n  if (!('colorSchemes' in muiTheme)) {\\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\\n      theme: theme,\\n      ...props\\n    });\\n  }\\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\\n    theme: theme,\\n    ...props\\n  });\\n}\",\"/**\\n * react-router v7.1.1\\n *\\n * Copyright (c) Remix Software Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE.md file in the root directory of this source tree.\\n *\\n * @license MIT\\n */\\n\\n// lib/router/history.ts\\nvar Action = /* @__PURE__ */ ((Action2) => {\\n  Action2[\\\"Pop\\\"] = \\\"POP\\\";\\n  Action2[\\\"Push\\\"] = \\\"PUSH\\\";\\n  Action2[\\\"Replace\\\"] = \\\"REPLACE\\\";\\n  return Action2;\\n})(Action || {});\\nvar PopStateEventType = \\\"popstate\\\";\\nfunction createMemoryHistory(options = {}) {\\n  let { initialEntries = [\\\"/\\\"], initialIndex, v5Compat = false } = options;\\n  let entries;\\n  entries = initialEntries.map(\\n    (entry, index2) => createMemoryLocation(\\n      entry,\\n      typeof entry === \\\"string\\\" ? null : entry.state,\\n      index2 === 0 ? \\\"default\\\" : void 0\\n    )\\n  );\\n  let index = clampIndex(\\n    initialIndex == null ? entries.length - 1 : initialIndex\\n  );\\n  let action = \\\"POP\\\" /* Pop */;\\n  let listener = null;\\n  function clampIndex(n) {\\n    return Math.min(Math.max(n, 0), entries.length - 1);\\n  }\\n  function getCurrentLocation() {\\n    return entries[index];\\n  }\\n  function createMemoryLocation(to, state = null, key) {\\n    let location = createLocation(\\n      entries ? getCurrentLocation().pathname : \\\"/\\\",\\n      to,\\n      state,\\n      key\\n    );\\n    warning(\\n      location.pathname.charAt(0) === \\\"/\\\",\\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\\n        to\\n      )}`\\n    );\\n    return location;\\n  }\\n  function createHref2(to) {\\n    return typeof to === \\\"string\\\" ? to : createPath(to);\\n  }\\n  let history = {\\n    get index() {\\n      return index;\\n    },\\n    get action() {\\n      return action;\\n    },\\n    get location() {\\n      return getCurrentLocation();\\n    },\\n    createHref: createHref2,\\n    createURL(to) {\\n      return new URL(createHref2(to), \\\"http://localhost\\\");\\n    },\\n    encodeLocation(to) {\\n      let path = typeof to === \\\"string\\\" ? parsePath(to) : to;\\n      return {\\n        pathname: path.pathname || \\\"\\\",\\n        search: path.search || \\\"\\\",\\n        hash: path.hash || \\\"\\\"\\n      };\\n    },\\n    push(to, state) {\\n      action = \\\"PUSH\\\" /* Push */;\\n      let nextLocation = createMemoryLocation(to, state);\\n      index += 1;\\n      entries.splice(index, entries.length, nextLocation);\\n      if (v5Compat && listener) {\\n        listener({ action, location: nextLocation, delta: 1 });\\n      }\\n    },\\n    replace(to, state) {\\n      action = \\\"REPLACE\\\" /* Replace */;\\n      let nextLocation = createMemoryLocation(to, state);\\n      entries[index] = nextLocation;\\n      if (v5Compat && listener) {\\n        listener({ action, location: nextLocation, delta: 0 });\\n      }\\n    },\\n    go(delta) {\\n      action = \\\"POP\\\" /* Pop */;\\n      let nextIndex = clampIndex(index + delta);\\n      let nextLocation = entries[nextIndex];\\n      index = nextIndex;\\n      if (listener) {\\n        listener({ action, location: nextLocation, delta });\\n      }\\n    },\\n    listen(fn) {\\n      listener = fn;\\n      return () => {\\n        listener = null;\\n      };\\n    }\\n  };\\n  return history;\\n}\\nfunction createBrowserHistory(options = {}) {\\n  function createBrowserLocation(window2, globalHistory) {\\n    let { pathname, search, hash } = window2.location;\\n    return createLocation(\\n      \\\"\\\",\\n      { pathname, search, hash },\\n      // state defaults to `null` because `window.history.state` does\\n      globalHistory.state && globalHistory.state.usr || null,\\n      globalHistory.state && globalHistory.state.key || \\\"default\\\"\\n    );\\n  }\\n  function createBrowserHref(window2, to) {\\n    return typeof to === \\\"string\\\" ? to : createPath(to);\\n  }\\n  return getUrlBasedHistory(\\n    createBrowserLocation,\\n    createBrowserHref,\\n    null,\\n    options\\n  );\\n}\\nfunction createHashHistory(options = {}) {\\n  function createHashLocation(window2, globalHistory) {\\n    let {\\n      pathname = \\\"/\\\",\\n      search = \\\"\\\",\\n      hash = \\\"\\\"\\n    } = parsePath(window2.location.hash.substring(1));\\n    if (!pathname.startsWith(\\\"/\\\") && !pathname.startsWith(\\\".\\\")) {\\n      pathname = \\\"/\\\" + pathname;\\n    }\\n    return createLocation(\\n      \\\"\\\",\\n      { pathname, search, hash },\\n      // state defaults to `null` because `window.history.state` does\\n      globalHistory.state && globalHistory.state.usr || null,\\n      globalHistory.state && globalHistory.state.key || \\\"default\\\"\\n    );\\n  }\\n  function createHashHref(window2, to) {\\n    let base = window2.document.querySelector(\\\"base\\\");\\n    let href = \\\"\\\";\\n    if (base && base.getAttribute(\\\"href\\\")) {\\n      let url = window2.location.href;\\n      let hashIndex = url.indexOf(\\\"#\\\");\\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\\n    }\\n    return href + \\\"#\\\" + (typeof to === \\\"string\\\" ? to : createPath(to));\\n  }\\n  function validateHashLocation(location, to) {\\n    warning(\\n      location.pathname.charAt(0) === \\\"/\\\",\\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\\n        to\\n      )})`\\n    );\\n  }\\n  return getUrlBasedHistory(\\n    createHashLocation,\\n    createHashHref,\\n    validateHashLocation,\\n    options\\n  );\\n}\\nfunction invariant(value, message) {\\n  if (value === false || value === null || typeof value === \\\"undefined\\\") {\\n    throw new Error(message);\\n  }\\n}\\nfunction warning(cond, message) {\\n  if (!cond) {\\n    if (typeof console !== \\\"undefined\\\") console.warn(message);\\n    try {\\n      throw new Error(message);\\n    } catch (e) {\\n    }\\n  }\\n}\\nfunction createKey() {\\n  return Math.random().toString(36).substring(2, 10);\\n}\\nfunction getHistoryState(location, index) {\\n  return {\\n    usr: location.state,\\n    key: location.key,\\n    idx: index\\n  };\\n}\\nfunction createLocation(current, to, state = null, key) {\\n  let location = {\\n    pathname: typeof current === \\\"string\\\" ? current : current.pathname,\\n    search: \\\"\\\",\\n    hash: \\\"\\\",\\n    ...typeof to === \\\"string\\\" ? parsePath(to) : to,\\n    state,\\n    // TODO: This could be cleaned up.  push/replace should probably just take\\n    // full Locations now and avoid the need to run through this flow at all\\n    // But that's a pretty big refactor to the current test suite so going to\\n    // keep as is for the time being and just let any incoming keys take precedence\\n    key: to && to.key || key || createKey()\\n  };\\n  return location;\\n}\\nfunction createPath({\\n  pathname = \\\"/\\\",\\n  search = \\\"\\\",\\n  hash = \\\"\\\"\\n}) {\\n  if (search && search !== \\\"?\\\")\\n    pathname += search.charAt(0) === \\\"?\\\" ? search : \\\"?\\\" + search;\\n  if (hash && hash !== \\\"#\\\")\\n    pathname += hash.charAt(0) === \\\"#\\\" ? hash : \\\"#\\\" + hash;\\n  return pathname;\\n}\\nfunction parsePath(path) {\\n  let parsedPath = {};\\n  if (path) {\\n    let hashIndex = path.indexOf(\\\"#\\\");\\n    if (hashIndex >= 0) {\\n      parsedPath.hash = path.substring(hashIndex);\\n      path = path.substring(0, hashIndex);\\n    }\\n    let searchIndex = path.indexOf(\\\"?\\\");\\n    if (searchIndex >= 0) {\\n      parsedPath.search = path.substring(searchIndex);\\n      path = path.substring(0, searchIndex);\\n    }\\n    if (path) {\\n      parsedPath.pathname = path;\\n    }\\n  }\\n  return parsedPath;\\n}\\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\\n  let globalHistory = window2.history;\\n  let action = \\\"POP\\\" /* Pop */;\\n  let listener = null;\\n  let index = getIndex();\\n  if (index == null) {\\n    index = 0;\\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \\\"\\\");\\n  }\\n  function getIndex() {\\n    let state = globalHistory.state || { idx: null };\\n    return state.idx;\\n  }\\n  function handlePop() {\\n    action = \\\"POP\\\" /* Pop */;\\n    let nextIndex = getIndex();\\n    let delta = nextIndex == null ? null : nextIndex - index;\\n    index = nextIndex;\\n    if (listener) {\\n      listener({ action, location: history.location, delta });\\n    }\\n  }\\n  function push(to, state) {\\n    action = \\\"PUSH\\\" /* Push */;\\n    let location = createLocation(history.location, to, state);\\n    if (validateLocation) validateLocation(location, to);\\n    index = getIndex() + 1;\\n    let historyState = getHistoryState(location, index);\\n    let url = history.createHref(location);\\n    try {\\n      globalHistory.pushState(historyState, \\\"\\\", url);\\n    } catch (error) {\\n      if (error instanceof DOMException && error.name === \\\"DataCloneError\\\") {\\n        throw error;\\n      }\\n      window2.location.assign(url);\\n    }\\n    if (v5Compat && listener) {\\n      listener({ action, location: history.location, delta: 1 });\\n    }\\n  }\\n  function replace2(to, state) {\\n    action = \\\"REPLACE\\\" /* Replace */;\\n    let location = createLocation(history.location, to, state);\\n    if (validateLocation) validateLocation(location, to);\\n    index = getIndex();\\n    let historyState = getHistoryState(location, index);\\n    let url = history.createHref(location);\\n    globalHistory.replaceState(historyState, \\\"\\\", url);\\n    if (v5Compat && listener) {\\n      listener({ action, location: history.location, delta: 0 });\\n    }\\n  }\\n  function createURL(to) {\\n    let base = window2.location.origin !== \\\"null\\\" ? window2.location.origin : window2.location.href;\\n    let href = typeof to === \\\"string\\\" ? to : createPath(to);\\n    href = href.replace(/ $/, \\\"%20\\\");\\n    invariant(\\n      base,\\n      `No window.location.(origin|href) available to create URL for href: ${href}`\\n    );\\n    return new URL(href, base);\\n  }\\n  let history = {\\n    get action() {\\n      return action;\\n    },\\n    get location() {\\n      return getLocation(window2, globalHistory);\\n    },\\n    listen(fn) {\\n      if (listener) {\\n        throw new Error(\\\"A history only accepts one active listener\\\");\\n      }\\n      window2.addEventListener(PopStateEventType, handlePop);\\n      listener = fn;\\n      return () => {\\n        window2.removeEventListener(PopStateEventType, handlePop);\\n        listener = null;\\n      };\\n    },\\n    createHref(to) {\\n      return createHref2(window2, to);\\n    },\\n    createURL,\\n    encodeLocation(to) {\\n      let url = createURL(to);\\n      return {\\n        pathname: url.pathname,\\n        search: url.search,\\n        hash: url.hash\\n      };\\n    },\\n    push,\\n    replace: replace2,\\n    go(n) {\\n      return globalHistory.go(n);\\n    }\\n  };\\n  return history;\\n}\\n\\n// lib/router/utils.ts\\nvar immutableRouteKeys = /* @__PURE__ */ new Set([\\n  \\\"lazy\\\",\\n  \\\"caseSensitive\\\",\\n  \\\"path\\\",\\n  \\\"id\\\",\\n  \\\"index\\\",\\n  \\\"children\\\"\\n]);\\nfunction isIndexRoute(route) {\\n  return route.index === true;\\n}\\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\\n  return routes.map((route, index) => {\\n    let treePath = [...parentPath, String(index)];\\n    let id = typeof route.id === \\\"string\\\" ? route.id : treePath.join(\\\"-\\\");\\n    invariant(\\n      route.index !== true || !route.children,\\n      `Cannot specify children on an index route`\\n    );\\n    invariant(\\n      !manifest[id],\\n      `Found a route id collision on id \\\"${id}\\\".  Route id's must be globally unique within Data Router usages`\\n    );\\n    if (isIndexRoute(route)) {\\n      let indexRoute = {\\n        ...route,\\n        ...mapRouteProperties2(route),\\n        id\\n      };\\n      manifest[id] = indexRoute;\\n      return indexRoute;\\n    } else {\\n      let pathOrLayoutRoute = {\\n        ...route,\\n        ...mapRouteProperties2(route),\\n        id,\\n        children: void 0\\n      };\\n      manifest[id] = pathOrLayoutRoute;\\n      if (route.children) {\\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\\n          route.children,\\n          mapRouteProperties2,\\n          treePath,\\n          manifest\\n        );\\n      }\\n      return pathOrLayoutRoute;\\n    }\\n  });\\n}\\nfunction matchRoutes(routes, locationArg, basename = \\\"/\\\") {\\n  return matchRoutesImpl(routes, locationArg, basename, false);\\n}\\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\\n  let location = typeof locationArg === \\\"string\\\" ? parsePath(locationArg) : locationArg;\\n  let pathname = stripBasename(location.pathname || \\\"/\\\", basename);\\n  if (pathname == null) {\\n    return null;\\n  }\\n  let branches = flattenRoutes(routes);\\n  rankRouteBranches(branches);\\n  let matches = null;\\n  for (let i = 0; matches == null && i < branches.length; ++i) {\\n    let decoded = decodePath(pathname);\\n    matches = matchRouteBranch(\\n      branches[i],\\n      decoded,\\n      allowPartial\\n    );\\n  }\\n  return matches;\\n}\\nfunction convertRouteMatchToUiMatch(match, loaderData) {\\n  let { route, pathname, params } = match;\\n  return {\\n    id: route.id,\\n    pathname,\\n    params,\\n    data: loaderData[route.id],\\n    handle: route.handle\\n  };\\n}\\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \\\"\\\") {\\n  let flattenRoute = (route, index, relativePath) => {\\n    let meta = {\\n      relativePath: relativePath === void 0 ? route.path || \\\"\\\" : relativePath,\\n      caseSensitive: route.caseSensitive === true,\\n      childrenIndex: index,\\n      route\\n    };\\n    if (meta.relativePath.startsWith(\\\"/\\\")) {\\n      invariant(\\n        meta.relativePath.startsWith(parentPath),\\n        `Absolute route path \\\"${meta.relativePath}\\\" nested under path \\\"${parentPath}\\\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\\n      );\\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\\n    }\\n    let path = joinPaths([parentPath, meta.relativePath]);\\n    let routesMeta = parentsMeta.concat(meta);\\n    if (route.children && route.children.length > 0) {\\n      invariant(\\n        // Our types know better, but runtime JS may not!\\n        // @ts-expect-error\\n        route.index !== true,\\n        `Index routes must not have child routes. Please remove all child routes from route path \\\"${path}\\\".`\\n      );\\n      flattenRoutes(route.children, branches, routesMeta, path);\\n    }\\n    if (route.path == null && !route.index) {\\n      return;\\n    }\\n    branches.push({\\n      path,\\n      score: computeScore(path, route.index),\\n      routesMeta\\n    });\\n  };\\n  routes.forEach((route, index) => {\\n    if (route.path === \\\"\\\" || !route.path?.includes(\\\"?\\\")) {\\n      flattenRoute(route, index);\\n    } else {\\n      for (let exploded of explodeOptionalSegments(route.path)) {\\n        flattenRoute(route, index, exploded);\\n      }\\n    }\\n  });\\n  return branches;\\n}\\nfunction explodeOptionalSegments(path) {\\n  let segments = path.split(\\\"/\\\");\\n  if (segments.length === 0) return [];\\n  let [first, ...rest] = segments;\\n  let isOptional = first.endsWith(\\\"?\\\");\\n  let required = first.replace(/\\\\?$/, \\\"\\\");\\n  if (rest.length === 0) {\\n    return isOptional ? [required, \\\"\\\"] : [required];\\n  }\\n  let restExploded = explodeOptionalSegments(rest.join(\\\"/\\\"));\\n  let result = [];\\n  result.push(\\n    ...restExploded.map(\\n      (subpath) => subpath === \\\"\\\" ? required : [required, subpath].join(\\\"/\\\")\\n    )\\n  );\\n  if (isOptional) {\\n    result.push(...restExploded);\\n  }\\n  return result.map(\\n    (exploded) => path.startsWith(\\\"/\\\") && exploded === \\\"\\\" ? \\\"/\\\" : exploded\\n  );\\n}\\nfunction rankRouteBranches(branches) {\\n  branches.sort(\\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\\n      a.routesMeta.map((meta) => meta.childrenIndex),\\n      b.routesMeta.map((meta) => meta.childrenIndex)\\n    )\\n  );\\n}\\nvar paramRe = /^:[\\\\w-]+$/;\\nvar dynamicSegmentValue = 3;\\nvar indexRouteValue = 2;\\nvar emptySegmentValue = 1;\\nvar staticSegmentValue = 10;\\nvar splatPenalty = -2;\\nvar isSplat = (s) => s === \\\"*\\\";\\nfunction computeScore(path, index) {\\n  let segments = path.split(\\\"/\\\");\\n  let initialScore = segments.length;\\n  if (segments.some(isSplat)) {\\n    initialScore += splatPenalty;\\n  }\\n  if (index) {\\n    initialScore += indexRouteValue;\\n  }\\n  return segments.filter((s) => !isSplat(s)).reduce(\\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \\\"\\\" ? emptySegmentValue : staticSegmentValue),\\n    initialScore\\n  );\\n}\\nfunction compareIndexes(a, b) {\\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\\n  return siblings ? (\\n    // If two routes are siblings, we should try to match the earlier sibling\\n    // first. This allows people to have fine-grained control over the matching\\n    // behavior by simply putting routes with identical paths in the order they\\n    // want them tried.\\n    a[a.length - 1] - b[b.length - 1]\\n  ) : (\\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\\n    // so they sort equally.\\n    0\\n  );\\n}\\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\\n  let { routesMeta } = branch;\\n  let matchedParams = {};\\n  let matchedPathname = \\\"/\\\";\\n  let matches = [];\\n  for (let i = 0; i < routesMeta.length; ++i) {\\n    let meta = routesMeta[i];\\n    let end = i === routesMeta.length - 1;\\n    let remainingPathname = matchedPathname === \\\"/\\\" ? pathname : pathname.slice(matchedPathname.length) || \\\"/\\\";\\n    let match = matchPath(\\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\\n      remainingPathname\\n    );\\n    let route = meta.route;\\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\\n      match = matchPath(\\n        {\\n          path: meta.relativePath,\\n          caseSensitive: meta.caseSensitive,\\n          end: false\\n        },\\n        remainingPathname\\n      );\\n    }\\n    if (!match) {\\n      return null;\\n    }\\n    Object.assign(matchedParams, match.params);\\n    matches.push({\\n      // TODO: Can this as be avoided?\\n      params: matchedParams,\\n      pathname: joinPaths([matchedPathname, match.pathname]),\\n      pathnameBase: normalizePathname(\\n        joinPaths([matchedPathname, match.pathnameBase])\\n      ),\\n      route\\n    });\\n    if (match.pathnameBase !== \\\"/\\\") {\\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\\n    }\\n  }\\n  return matches;\\n}\\nfunction generatePath(originalPath, params = {}) {\\n  let path = originalPath;\\n  if (path.endsWith(\\\"*\\\") && path !== \\\"*\\\" && !path.endsWith(\\\"/*\\\")) {\\n    warning(\\n      false,\\n      `Route path \\\"${path}\\\" will be treated as if it were \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\" because the \\\\`*\\\\` character must always follow a \\\\`/\\\\` in the pattern. To get rid of this warning, please change the route path to \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\".`\\n    );\\n    path = path.replace(/\\\\*$/, \\\"/*\\\");\\n  }\\n  const prefix = path.startsWith(\\\"/\\\") ? \\\"/\\\" : \\\"\\\";\\n  const stringify = (p) => p == null ? \\\"\\\" : typeof p === \\\"string\\\" ? p : String(p);\\n  const segments = path.split(/\\\\/+/).map((segment, index, array) => {\\n    const isLastSegment = index === array.length - 1;\\n    if (isLastSegment && segment === \\\"*\\\") {\\n      const star = \\\"*\\\";\\n      return stringify(params[star]);\\n    }\\n    const keyMatch = segment.match(/^:([\\\\w-]+)(\\\\??)$/);\\n    if (keyMatch) {\\n      const [, key, optional] = keyMatch;\\n      let param = params[key];\\n      invariant(optional === \\\"?\\\" || param != null, `Missing \\\":${key}\\\" param`);\\n      return stringify(param);\\n    }\\n    return segment.replace(/\\\\?$/g, \\\"\\\");\\n  }).filter((segment) => !!segment);\\n  return prefix + segments.join(\\\"/\\\");\\n}\\nfunction matchPath(pattern, pathname) {\\n  if (typeof pattern === \\\"string\\\") {\\n    pattern = { path: pattern, caseSensitive: false, end: true };\\n  }\\n  let [matcher, compiledParams] = compilePath(\\n    pattern.path,\\n    pattern.caseSensitive,\\n    pattern.end\\n  );\\n  let match = pathname.match(matcher);\\n  if (!match) return null;\\n  let matchedPathname = match[0];\\n  let pathnameBase = matchedPathname.replace(/(.)\\\\/+$/, \\\"$1\\\");\\n  let captureGroups = match.slice(1);\\n  let params = compiledParams.reduce(\\n    (memo2, { paramName, isOptional }, index) => {\\n      if (paramName === \\\"*\\\") {\\n        let splatValue = captureGroups[index] || \\\"\\\";\\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\\\/+$/, \\\"$1\\\");\\n      }\\n      const value = captureGroups[index];\\n      if (isOptional && !value) {\\n        memo2[paramName] = void 0;\\n      } else {\\n        memo2[paramName] = (value || \\\"\\\").replace(/%2F/g, \\\"/\\\");\\n      }\\n      return memo2;\\n    },\\n    {}\\n  );\\n  return {\\n    params,\\n    pathname: matchedPathname,\\n    pathnameBase,\\n    pattern\\n  };\\n}\\nfunction compilePath(path, caseSensitive = false, end = true) {\\n  warning(\\n    path === \\\"*\\\" || !path.endsWith(\\\"*\\\") || path.endsWith(\\\"/*\\\"),\\n    `Route path \\\"${path}\\\" will be treated as if it were \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\" because the \\\\`*\\\\` character must always follow a \\\\`/\\\\` in the pattern. To get rid of this warning, please change the route path to \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\".`\\n  );\\n  let params = [];\\n  let regexpSource = \\\"^\\\" + path.replace(/\\\\/*\\\\*?$/, \\\"\\\").replace(/^\\\\/*/, \\\"/\\\").replace(/[\\\\\\\\.*+^${}|()[\\\\]]/g, \\\"\\\\\\\\$&\\\").replace(\\n    /\\\\/:([\\\\w-]+)(\\\\?)?/g,\\n    (_, paramName, isOptional) => {\\n      params.push({ paramName, isOptional: isOptional != null });\\n      return isOptional ? \\\"/?([^\\\\\\\\/]+)?\\\" : \\\"/([^\\\\\\\\/]+)\\\";\\n    }\\n  );\\n  if (path.endsWith(\\\"*\\\")) {\\n    params.push({ paramName: \\\"*\\\" });\\n    regexpSource += path === \\\"*\\\" || path === \\\"/*\\\" ? \\\"(.*)$\\\" : \\\"(?:\\\\\\\\/(.+)|\\\\\\\\/*)$\\\";\\n  } else if (end) {\\n    regexpSource += \\\"\\\\\\\\/*$\\\";\\n  } else if (path !== \\\"\\\" && path !== \\\"/\\\") {\\n    regexpSource += \\\"(?:(?=\\\\\\\\/|$))\\\";\\n  } else {\\n  }\\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \\\"i\\\");\\n  return [matcher, params];\\n}\\nfunction decodePath(value) {\\n  try {\\n    return value.split(\\\"/\\\").map((v) => decodeURIComponent(v).replace(/\\\\//g, \\\"%2F\\\")).join(\\\"/\\\");\\n  } catch (error) {\\n    warning(\\n      false,\\n      `The URL path \\\"${value}\\\" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\\n    );\\n    return value;\\n  }\\n}\\nfunction stripBasename(pathname, basename) {\\n  if (basename === \\\"/\\\") return pathname;\\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\\n    return null;\\n  }\\n  let startIndex = basename.endsWith(\\\"/\\\") ? basename.length - 1 : basename.length;\\n  let nextChar = pathname.charAt(startIndex);\\n  if (nextChar && nextChar !== \\\"/\\\") {\\n    return null;\\n  }\\n  return pathname.slice(startIndex) || \\\"/\\\";\\n}\\nfunction resolvePath(to, fromPathname = \\\"/\\\") {\\n  let {\\n    pathname: toPathname,\\n    search = \\\"\\\",\\n    hash = \\\"\\\"\\n  } = typeof to === \\\"string\\\" ? parsePath(to) : to;\\n  let pathname = toPathname ? toPathname.startsWith(\\\"/\\\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\\n  return {\\n    pathname,\\n    search: normalizeSearch(search),\\n    hash: normalizeHash(hash)\\n  };\\n}\\nfunction resolvePathname(relativePath, fromPathname) {\\n  let segments = fromPathname.replace(/\\\\/+$/, \\\"\\\").split(\\\"/\\\");\\n  let relativeSegments = relativePath.split(\\\"/\\\");\\n  relativeSegments.forEach((segment) => {\\n    if (segment === \\\"..\\\") {\\n      if (segments.length > 1) segments.pop();\\n    } else if (segment !== \\\".\\\") {\\n      segments.push(segment);\\n    }\\n  });\\n  return segments.length > 1 ? segments.join(\\\"/\\\") : \\\"/\\\";\\n}\\nfunction getInvalidPathError(char, field, dest, path) {\\n  return `Cannot include a '${char}' character in a manually specified \\\\`to.${field}\\\\` field [${JSON.stringify(\\n    path\\n  )}].  Please separate it out to the \\\\`to.${dest}\\\\` field. Alternatively you may provide the full path as a string in <Link to=\\\"...\\\"> and the router will parse it for you.`;\\n}\\nfunction getPathContributingMatches(matches) {\\n  return matches.filter(\\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\\n  );\\n}\\nfunction getResolveToMatches(matches) {\\n  let pathMatches = getPathContributingMatches(matches);\\n  return pathMatches.map(\\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\\n  );\\n}\\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\\n  let to;\\n  if (typeof toArg === \\\"string\\\") {\\n    to = parsePath(toArg);\\n  } else {\\n    to = { ...toArg };\\n    invariant(\\n      !to.pathname || !to.pathname.includes(\\\"?\\\"),\\n      getInvalidPathError(\\\"?\\\", \\\"pathname\\\", \\\"search\\\", to)\\n    );\\n    invariant(\\n      !to.pathname || !to.pathname.includes(\\\"#\\\"),\\n      getInvalidPathError(\\\"#\\\", \\\"pathname\\\", \\\"hash\\\", to)\\n    );\\n    invariant(\\n      !to.search || !to.search.includes(\\\"#\\\"),\\n      getInvalidPathError(\\\"#\\\", \\\"search\\\", \\\"hash\\\", to)\\n    );\\n  }\\n  let isEmptyPath = toArg === \\\"\\\" || to.pathname === \\\"\\\";\\n  let toPathname = isEmptyPath ? \\\"/\\\" : to.pathname;\\n  let from;\\n  if (toPathname == null) {\\n    from = locationPathname;\\n  } else {\\n    let routePathnameIndex = routePathnames.length - 1;\\n    if (!isPathRelative && toPathname.startsWith(\\\"..\\\")) {\\n      let toSegments = toPathname.split(\\\"/\\\");\\n      while (toSegments[0] === \\\"..\\\") {\\n        toSegments.shift();\\n        routePathnameIndex -= 1;\\n      }\\n      to.pathname = toSegments.join(\\\"/\\\");\\n    }\\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \\\"/\\\";\\n  }\\n  let path = resolvePath(to, from);\\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \\\"/\\\" && toPathname.endsWith(\\\"/\\\");\\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \\\".\\\") && locationPathname.endsWith(\\\"/\\\");\\n  if (!path.pathname.endsWith(\\\"/\\\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\\n    path.pathname += \\\"/\\\";\\n  }\\n  return path;\\n}\\nvar joinPaths = (paths) => paths.join(\\\"/\\\").replace(/\\\\/\\\\/+/g, \\\"/\\\");\\nvar normalizePathname = (pathname) => pathname.replace(/\\\\/+$/, \\\"\\\").replace(/^\\\\/*/, \\\"/\\\");\\nvar normalizeSearch = (search) => !search || search === \\\"?\\\" ? \\\"\\\" : search.startsWith(\\\"?\\\") ? search : \\\"?\\\" + search;\\nvar normalizeHash = (hash) => !hash || hash === \\\"#\\\" ? \\\"\\\" : hash.startsWith(\\\"#\\\") ? hash : \\\"#\\\" + hash;\\nvar DataWithResponseInit = class {\\n  constructor(data2, init) {\\n    this.type = \\\"DataWithResponseInit\\\";\\n    this.data = data2;\\n    this.init = init || null;\\n  }\\n};\\nfunction data(data2, init) {\\n  return new DataWithResponseInit(\\n    data2,\\n    typeof init === \\\"number\\\" ? { status: init } : init\\n  );\\n}\\nvar redirect = (url, init = 302) => {\\n  let responseInit = init;\\n  if (typeof responseInit === \\\"number\\\") {\\n    responseInit = { status: responseInit };\\n  } else if (typeof responseInit.status === \\\"undefined\\\") {\\n    responseInit.status = 302;\\n  }\\n  let headers = new Headers(responseInit.headers);\\n  headers.set(\\\"Location\\\", url);\\n  return new Response(null, {\\n    ...responseInit,\\n    headers\\n  });\\n};\\nvar redirectDocument = (url, init) => {\\n  let response = redirect(url, init);\\n  response.headers.set(\\\"X-Remix-Reload-Document\\\", \\\"true\\\");\\n  return response;\\n};\\nvar replace = (url, init) => {\\n  let response = redirect(url, init);\\n  response.headers.set(\\\"X-Remix-Replace\\\", \\\"true\\\");\\n  return response;\\n};\\nvar ErrorResponseImpl = class {\\n  constructor(status, statusText, data2, internal = false) {\\n    this.status = status;\\n    this.statusText = statusText || \\\"\\\";\\n    this.internal = internal;\\n    if (data2 instanceof Error) {\\n      this.data = data2.toString();\\n      this.error = data2;\\n    } else {\\n      this.data = data2;\\n    }\\n  }\\n};\\nfunction isRouteErrorResponse(error) {\\n  return error != null && typeof error.status === \\\"number\\\" && typeof error.statusText === \\\"string\\\" && typeof error.internal === \\\"boolean\\\" && \\\"data\\\" in error;\\n}\\n\\n// lib/router/router.ts\\nvar validMutationMethodsArr = [\\n  \\\"POST\\\",\\n  \\\"PUT\\\",\\n  \\\"PATCH\\\",\\n  \\\"DELETE\\\"\\n];\\nvar validMutationMethods = new Set(\\n  validMutationMethodsArr\\n);\\nvar validRequestMethodsArr = [\\n  \\\"GET\\\",\\n  ...validMutationMethodsArr\\n];\\nvar validRequestMethods = new Set(validRequestMethodsArr);\\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\\nvar IDLE_NAVIGATION = {\\n  state: \\\"idle\\\",\\n  location: void 0,\\n  formMethod: void 0,\\n  formAction: void 0,\\n  formEncType: void 0,\\n  formData: void 0,\\n  json: void 0,\\n  text: void 0\\n};\\nvar IDLE_FETCHER = {\\n  state: \\\"idle\\\",\\n  data: void 0,\\n  formMethod: void 0,\\n  formAction: void 0,\\n  formEncType: void 0,\\n  formData: void 0,\\n  json: void 0,\\n  text: void 0\\n};\\nvar IDLE_BLOCKER = {\\n  state: \\\"unblocked\\\",\\n  proceed: void 0,\\n  reset: void 0,\\n  location: void 0\\n};\\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\nvar defaultMapRouteProperties = (route) => ({\\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\\n});\\nvar TRANSITIONS_STORAGE_KEY = \\\"remix-router-transitions\\\";\\nvar ResetLoaderDataSymbol = Symbol(\\\"ResetLoaderData\\\");\\nfunction createRouter(init) {\\n  const routerWindow = init.window ? init.window : typeof window !== \\\"undefined\\\" ? window : void 0;\\n  const isBrowser2 = typeof routerWindow !== \\\"undefined\\\" && typeof routerWindow.document !== \\\"undefined\\\" && typeof routerWindow.document.createElement !== \\\"undefined\\\";\\n  invariant(\\n    init.routes.length > 0,\\n    \\\"You must provide a non-empty routes array to createRouter\\\"\\n  );\\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\\n  let manifest = {};\\n  let dataRoutes = convertRoutesToDataRoutes(\\n    init.routes,\\n    mapRouteProperties2,\\n    void 0,\\n    manifest\\n  );\\n  let inFlightDataRoutes;\\n  let basename = init.basename || \\\"/\\\";\\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\\n  let future = {\\n    ...init.future\\n  };\\n  let unlistenHistory = null;\\n  let subscribers = /* @__PURE__ */ new Set();\\n  let savedScrollPositions2 = null;\\n  let getScrollRestorationKey2 = null;\\n  let getScrollPosition = null;\\n  let initialScrollRestored = init.hydrationData != null;\\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\\n  let initialErrors = null;\\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\\n    let error = getInternalRouterError(404, {\\n      pathname: init.history.location.pathname\\n    });\\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\\n    initialMatches = matches;\\n    initialErrors = { [route.id]: error };\\n  }\\n  if (initialMatches && !init.hydrationData) {\\n    let fogOfWar = checkFogOfWar(\\n      initialMatches,\\n      dataRoutes,\\n      init.history.location.pathname\\n    );\\n    if (fogOfWar.active) {\\n      initialMatches = null;\\n    }\\n  }\\n  let initialized;\\n  if (!initialMatches) {\\n    initialized = false;\\n    initialMatches = [];\\n    let fogOfWar = checkFogOfWar(\\n      null,\\n      dataRoutes,\\n      init.history.location.pathname\\n    );\\n    if (fogOfWar.active && fogOfWar.matches) {\\n      initialMatches = fogOfWar.matches;\\n    }\\n  } else if (initialMatches.some((m) => m.route.lazy)) {\\n    initialized = false;\\n  } else if (!initialMatches.some((m) => m.route.loader)) {\\n    initialized = true;\\n  } else {\\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\\n    if (errors) {\\n      let idx = initialMatches.findIndex(\\n        (m) => errors[m.route.id] !== void 0\\n      );\\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\\n    } else {\\n      initialized = initialMatches.every(\\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\\n      );\\n    }\\n  }\\n  let router;\\n  let state = {\\n    historyAction: init.history.action,\\n    location: init.history.location,\\n    matches: initialMatches,\\n    initialized,\\n    navigation: IDLE_NAVIGATION,\\n    // Don't restore on initial updateState() if we were SSR'd\\n    restoreScrollPosition: init.hydrationData != null ? false : null,\\n    preventScrollReset: false,\\n    revalidation: \\\"idle\\\",\\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\\n    fetchers: /* @__PURE__ */ new Map(),\\n    blockers: /* @__PURE__ */ new Map()\\n  };\\n  let pendingAction = \\\"POP\\\" /* Pop */;\\n  let pendingPreventScrollReset = false;\\n  let pendingNavigationController;\\n  let pendingViewTransitionEnabled = false;\\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\\n  let removePageHideEventListener = null;\\n  let isUninterruptedRevalidation = false;\\n  let isRevalidationRequired = false;\\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\\n  let fetchControllers = /* @__PURE__ */ new Map();\\n  let incrementingLoadId = 0;\\n  let pendingNavigationLoadId = -1;\\n  let fetchReloadIds = /* @__PURE__ */ new Map();\\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\\n  let activeFetchers = /* @__PURE__ */ new Map();\\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\\n  let blockerFunctions = /* @__PURE__ */ new Map();\\n  let unblockBlockerHistoryUpdate = void 0;\\n  let pendingRevalidationDfd = null;\\n  function initialize() {\\n    unlistenHistory = init.history.listen(\\n      ({ action: historyAction, location, delta }) => {\\n        if (unblockBlockerHistoryUpdate) {\\n          unblockBlockerHistoryUpdate();\\n          unblockBlockerHistoryUpdate = void 0;\\n          return;\\n        }\\n        warning(\\n          blockerFunctions.size === 0 || delta != null,\\n          \\\"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\\\"\\n        );\\n        let blockerKey = shouldBlockNavigation({\\n          currentLocation: state.location,\\n          nextLocation: location,\\n          historyAction\\n        });\\n        if (blockerKey && delta != null) {\\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\\n            unblockBlockerHistoryUpdate = resolve;\\n          });\\n          init.history.go(delta * -1);\\n          updateBlocker(blockerKey, {\\n            state: \\\"blocked\\\",\\n            location,\\n            proceed() {\\n              updateBlocker(blockerKey, {\\n                state: \\\"proceeding\\\",\\n                proceed: void 0,\\n                reset: void 0,\\n                location\\n              });\\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\\n            },\\n            reset() {\\n              let blockers = new Map(state.blockers);\\n              blockers.set(blockerKey, IDLE_BLOCKER);\\n              updateState({ blockers });\\n            }\\n          });\\n          return;\\n        }\\n        return startNavigation(historyAction, location);\\n      }\\n    );\\n    if (isBrowser2) {\\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\\n      routerWindow.addEventListener(\\\"pagehide\\\", _saveAppliedTransitions);\\n      removePageHideEventListener = () => routerWindow.removeEventListener(\\\"pagehide\\\", _saveAppliedTransitions);\\n    }\\n    if (!state.initialized) {\\n      startNavigation(\\\"POP\\\" /* Pop */, state.location, {\\n        initialHydration: true\\n      });\\n    }\\n    return router;\\n  }\\n  function dispose() {\\n    if (unlistenHistory) {\\n      unlistenHistory();\\n    }\\n    if (removePageHideEventListener) {\\n      removePageHideEventListener();\\n    }\\n    subscribers.clear();\\n    pendingNavigationController && pendingNavigationController.abort();\\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\\n    state.blockers.forEach((_, key) => deleteBlocker(key));\\n  }\\n  function subscribe(fn) {\\n    subscribers.add(fn);\\n    return () => subscribers.delete(fn);\\n  }\\n  function updateState(newState, opts = {}) {\\n    state = {\\n      ...state,\\n      ...newState\\n    };\\n    let unmountedFetchers = [];\\n    let mountedFetchers = [];\\n    state.fetchers.forEach((fetcher, key) => {\\n      if (fetcher.state === \\\"idle\\\") {\\n        if (fetchersQueuedForDeletion.has(key)) {\\n          unmountedFetchers.push(key);\\n        } else {\\n          mountedFetchers.push(key);\\n        }\\n      }\\n    });\\n    [...subscribers].forEach(\\n      (subscriber) => subscriber(state, {\\n        deletedFetchers: unmountedFetchers,\\n        viewTransitionOpts: opts.viewTransitionOpts,\\n        flushSync: opts.flushSync === true\\n      })\\n    );\\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\\n  }\\n  function completeNavigation(location, newState, { flushSync } = {}) {\\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \\\"loading\\\" && location.state?._isRedirect !== true;\\n    let actionData;\\n    if (newState.actionData) {\\n      if (Object.keys(newState.actionData).length > 0) {\\n        actionData = newState.actionData;\\n      } else {\\n        actionData = null;\\n      }\\n    } else if (isActionReload) {\\n      actionData = state.actionData;\\n    } else {\\n      actionData = null;\\n    }\\n    let loaderData = newState.loaderData ? mergeLoaderData(\\n      state.loaderData,\\n      newState.loaderData,\\n      newState.matches || [],\\n      newState.errors\\n    ) : state.loaderData;\\n    let blockers = state.blockers;\\n    if (blockers.size > 0) {\\n      blockers = new Map(blockers);\\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\\n    }\\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\\n    if (inFlightDataRoutes) {\\n      dataRoutes = inFlightDataRoutes;\\n      inFlightDataRoutes = void 0;\\n    }\\n    if (isUninterruptedRevalidation) {\\n    } else if (pendingAction === \\\"POP\\\" /* Pop */) {\\n    } else if (pendingAction === \\\"PUSH\\\" /* Push */) {\\n      init.history.push(location, location.state);\\n    } else if (pendingAction === \\\"REPLACE\\\" /* Replace */) {\\n      init.history.replace(location, location.state);\\n    }\\n    let viewTransitionOpts;\\n    if (pendingAction === \\\"POP\\\" /* Pop */) {\\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\\n      if (priorPaths && priorPaths.has(location.pathname)) {\\n        viewTransitionOpts = {\\n          currentLocation: state.location,\\n          nextLocation: location\\n        };\\n      } else if (appliedViewTransitions.has(location.pathname)) {\\n        viewTransitionOpts = {\\n          currentLocation: location,\\n          nextLocation: state.location\\n        };\\n      }\\n    } else if (pendingViewTransitionEnabled) {\\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\\n      if (toPaths) {\\n        toPaths.add(location.pathname);\\n      } else {\\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\\n        appliedViewTransitions.set(state.location.pathname, toPaths);\\n      }\\n      viewTransitionOpts = {\\n        currentLocation: state.location,\\n        nextLocation: location\\n      };\\n    }\\n    updateState(\\n      {\\n        ...newState,\\n        // matches, errors, fetchers go through as-is\\n        actionData,\\n        loaderData,\\n        historyAction: pendingAction,\\n        location,\\n        initialized: true,\\n        navigation: IDLE_NAVIGATION,\\n        revalidation: \\\"idle\\\",\\n        restoreScrollPosition: getSavedScrollPosition(\\n          location,\\n          newState.matches || state.matches\\n        ),\\n        preventScrollReset,\\n        blockers\\n      },\\n      {\\n        viewTransitionOpts,\\n        flushSync: flushSync === true\\n      }\\n    );\\n    pendingAction = \\\"POP\\\" /* Pop */;\\n    pendingPreventScrollReset = false;\\n    pendingViewTransitionEnabled = false;\\n    isUninterruptedRevalidation = false;\\n    isRevalidationRequired = false;\\n    pendingRevalidationDfd?.resolve();\\n    pendingRevalidationDfd = null;\\n  }\\n  async function navigate(to, opts) {\\n    if (typeof to === \\\"number\\\") {\\n      init.history.go(to);\\n      return;\\n    }\\n    let normalizedPath = normalizeTo(\\n      state.location,\\n      state.matches,\\n      basename,\\n      to,\\n      opts?.fromRouteId,\\n      opts?.relative\\n    );\\n    let { path, submission, error } = normalizeNavigateOptions(\\n      false,\\n      normalizedPath,\\n      opts\\n    );\\n    let currentLocation = state.location;\\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\\n    nextLocation = {\\n      ...nextLocation,\\n      ...init.history.encodeLocation(nextLocation)\\n    };\\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\\n    let historyAction = \\\"PUSH\\\" /* Push */;\\n    if (userReplace === true) {\\n      historyAction = \\\"REPLACE\\\" /* Replace */;\\n    } else if (userReplace === false) {\\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\\n      historyAction = \\\"REPLACE\\\" /* Replace */;\\n    }\\n    let preventScrollReset = opts && \\\"preventScrollReset\\\" in opts ? opts.preventScrollReset === true : void 0;\\n    let flushSync = (opts && opts.flushSync) === true;\\n    let blockerKey = shouldBlockNavigation({\\n      currentLocation,\\n      nextLocation,\\n      historyAction\\n    });\\n    if (blockerKey) {\\n      updateBlocker(blockerKey, {\\n        state: \\\"blocked\\\",\\n        location: nextLocation,\\n        proceed() {\\n          updateBlocker(blockerKey, {\\n            state: \\\"proceeding\\\",\\n            proceed: void 0,\\n            reset: void 0,\\n            location: nextLocation\\n          });\\n          navigate(to, opts);\\n        },\\n        reset() {\\n          let blockers = new Map(state.blockers);\\n          blockers.set(blockerKey, IDLE_BLOCKER);\\n          updateState({ blockers });\\n        }\\n      });\\n      return;\\n    }\\n    await startNavigation(historyAction, nextLocation, {\\n      submission,\\n      // Send through the formData serialization error if we have one so we can\\n      // render at the right error boundary after we match routes\\n      pendingError: error,\\n      preventScrollReset,\\n      replace: opts && opts.replace,\\n      enableViewTransition: opts && opts.viewTransition,\\n      flushSync\\n    });\\n  }\\n  function revalidate() {\\n    if (!pendingRevalidationDfd) {\\n      pendingRevalidationDfd = createDeferred();\\n    }\\n    interruptActiveLoads();\\n    updateState({ revalidation: \\\"loading\\\" });\\n    let promise = pendingRevalidationDfd.promise;\\n    if (state.navigation.state === \\\"submitting\\\") {\\n      return promise;\\n    }\\n    if (state.navigation.state === \\\"idle\\\") {\\n      startNavigation(state.historyAction, state.location, {\\n        startUninterruptedRevalidation: true\\n      });\\n      return promise;\\n    }\\n    startNavigation(\\n      pendingAction || state.historyAction,\\n      state.navigation.location,\\n      {\\n        overrideNavigation: state.navigation,\\n        // Proxy through any rending view transition\\n        enableViewTransition: pendingViewTransitionEnabled === true\\n      }\\n    );\\n    return promise;\\n  }\\n  async function startNavigation(historyAction, location, opts) {\\n    pendingNavigationController && pendingNavigationController.abort();\\n    pendingNavigationController = null;\\n    pendingAction = historyAction;\\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\\n    saveScrollPosition(state.location, state.matches);\\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let loadingNavigation = opts && opts.overrideNavigation;\\n    let matches = matchRoutes(routesToUse, location, basename);\\n    let flushSync = (opts && opts.flushSync) === true;\\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\\n    if (fogOfWar.active && fogOfWar.matches) {\\n      matches = fogOfWar.matches;\\n    }\\n    if (!matches) {\\n      let { error, notFoundMatches, route } = handleNavigational404(\\n        location.pathname\\n      );\\n      completeNavigation(\\n        location,\\n        {\\n          matches: notFoundMatches,\\n          loaderData: {},\\n          errors: {\\n            [route.id]: error\\n          }\\n        },\\n        { flushSync }\\n      );\\n      return;\\n    }\\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\\n      completeNavigation(location, { matches }, { flushSync });\\n      return;\\n    }\\n    pendingNavigationController = new AbortController();\\n    let request = createClientSideRequest(\\n      init.history,\\n      location,\\n      pendingNavigationController.signal,\\n      opts && opts.submission\\n    );\\n    let pendingActionResult;\\n    if (opts && opts.pendingError) {\\n      pendingActionResult = [\\n        findNearestBoundary(matches).route.id,\\n        { type: \\\"error\\\" /* error */, error: opts.pendingError }\\n      ];\\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\\n      let actionResult = await handleAction(\\n        request,\\n        location,\\n        opts.submission,\\n        matches,\\n        fogOfWar.active,\\n        { replace: opts.replace, flushSync }\\n      );\\n      if (actionResult.shortCircuited) {\\n        return;\\n      }\\n      if (actionResult.pendingActionResult) {\\n        let [routeId, result] = actionResult.pendingActionResult;\\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\\n          pendingNavigationController = null;\\n          completeNavigation(location, {\\n            matches: actionResult.matches,\\n            loaderData: {},\\n            errors: {\\n              [routeId]: result.error\\n            }\\n          });\\n          return;\\n        }\\n      }\\n      matches = actionResult.matches || matches;\\n      pendingActionResult = actionResult.pendingActionResult;\\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\\n      flushSync = false;\\n      fogOfWar.active = false;\\n      request = createClientSideRequest(\\n        init.history,\\n        request.url,\\n        request.signal\\n      );\\n    }\\n    let {\\n      shortCircuited,\\n      matches: updatedMatches,\\n      loaderData,\\n      errors\\n    } = await handleLoaders(\\n      request,\\n      location,\\n      matches,\\n      fogOfWar.active,\\n      loadingNavigation,\\n      opts && opts.submission,\\n      opts && opts.fetcherSubmission,\\n      opts && opts.replace,\\n      opts && opts.initialHydration === true,\\n      flushSync,\\n      pendingActionResult\\n    );\\n    if (shortCircuited) {\\n      return;\\n    }\\n    pendingNavigationController = null;\\n    completeNavigation(location, {\\n      matches: updatedMatches || matches,\\n      ...getActionDataForCommit(pendingActionResult),\\n      loaderData,\\n      errors\\n    });\\n  }\\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\\n    interruptActiveLoads();\\n    let navigation = getSubmittingNavigation(location, submission);\\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\\n    if (isFogOfWar) {\\n      let discoverResult = await discoverRoutes(\\n        matches,\\n        location.pathname,\\n        request.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return { shortCircuited: true };\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\\n        return {\\n          matches: discoverResult.partialMatches,\\n          pendingActionResult: [\\n            boundaryId,\\n            {\\n              type: \\\"error\\\" /* error */,\\n              error: discoverResult.error\\n            }\\n          ]\\n        };\\n      } else if (!discoverResult.matches) {\\n        let { notFoundMatches, error, route } = handleNavigational404(\\n          location.pathname\\n        );\\n        return {\\n          matches: notFoundMatches,\\n          pendingActionResult: [\\n            route.id,\\n            {\\n              type: \\\"error\\\" /* error */,\\n              error\\n            }\\n          ]\\n        };\\n      } else {\\n        matches = discoverResult.matches;\\n      }\\n    }\\n    let result;\\n    let actionMatch = getTargetMatch(matches, location);\\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\\n      result = {\\n        type: \\\"error\\\" /* error */,\\n        error: getInternalRouterError(405, {\\n          method: request.method,\\n          pathname: location.pathname,\\n          routeId: actionMatch.route.id\\n        })\\n      };\\n    } else {\\n      let results = await callDataStrategy(\\n        \\\"action\\\",\\n        state,\\n        request,\\n        [actionMatch],\\n        matches,\\n        null\\n      );\\n      result = results[actionMatch.route.id];\\n      if (request.signal.aborted) {\\n        return { shortCircuited: true };\\n      }\\n    }\\n    if (isRedirectResult(result)) {\\n      let replace2;\\n      if (opts && opts.replace != null) {\\n        replace2 = opts.replace;\\n      } else {\\n        let location2 = normalizeRedirectLocation(\\n          result.response.headers.get(\\\"Location\\\"),\\n          new URL(request.url),\\n          basename\\n        );\\n        replace2 = location2 === state.location.pathname + state.location.search;\\n      }\\n      await startRedirectNavigation(request, result, true, {\\n        submission,\\n        replace: replace2\\n      });\\n      return { shortCircuited: true };\\n    }\\n    if (isErrorResult(result)) {\\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\\n      if ((opts && opts.replace) !== true) {\\n        pendingAction = \\\"PUSH\\\" /* Push */;\\n      }\\n      return {\\n        matches,\\n        pendingActionResult: [boundaryMatch.route.id, result]\\n      };\\n    }\\n    return {\\n      matches,\\n      pendingActionResult: [actionMatch.route.id, result]\\n    };\\n  }\\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\\n    if (isFogOfWar) {\\n      if (shouldUpdateNavigationState) {\\n        let actionData = getUpdatedActionData(pendingActionResult);\\n        updateState(\\n          {\\n            navigation: loadingNavigation,\\n            ...actionData !== void 0 ? { actionData } : {}\\n          },\\n          {\\n            flushSync\\n          }\\n        );\\n      }\\n      let discoverResult = await discoverRoutes(\\n        matches,\\n        location.pathname,\\n        request.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return { shortCircuited: true };\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\\n        return {\\n          matches: discoverResult.partialMatches,\\n          loaderData: {},\\n          errors: {\\n            [boundaryId]: discoverResult.error\\n          }\\n        };\\n      } else if (!discoverResult.matches) {\\n        let { error, notFoundMatches, route } = handleNavigational404(\\n          location.pathname\\n        );\\n        return {\\n          matches: notFoundMatches,\\n          loaderData: {},\\n          errors: {\\n            [route.id]: error\\n          }\\n        };\\n      } else {\\n        matches = discoverResult.matches;\\n      }\\n    }\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\\n      init.history,\\n      state,\\n      matches,\\n      activeSubmission,\\n      location,\\n      initialHydration === true,\\n      isRevalidationRequired,\\n      cancelledFetcherLoads,\\n      fetchersQueuedForDeletion,\\n      fetchLoadMatches,\\n      fetchRedirectIds,\\n      routesToUse,\\n      basename,\\n      pendingActionResult\\n    );\\n    pendingNavigationLoadId = ++incrementingLoadId;\\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\\n      let updatedFetchers2 = markFetchRedirectsDone();\\n      completeNavigation(\\n        location,\\n        {\\n          matches,\\n          loaderData: {},\\n          // Commit pending error if we're short circuiting\\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\\n          ...getActionDataForCommit(pendingActionResult),\\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\\n        },\\n        { flushSync }\\n      );\\n      return { shortCircuited: true };\\n    }\\n    if (shouldUpdateNavigationState) {\\n      let updates = {};\\n      if (!isFogOfWar) {\\n        updates.navigation = loadingNavigation;\\n        let actionData = getUpdatedActionData(pendingActionResult);\\n        if (actionData !== void 0) {\\n          updates.actionData = actionData;\\n        }\\n      }\\n      if (revalidatingFetchers.length > 0) {\\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\\n      }\\n      updateState(updates, { flushSync });\\n    }\\n    revalidatingFetchers.forEach((rf) => {\\n      abortFetcher(rf.key);\\n      if (rf.controller) {\\n        fetchControllers.set(rf.key, rf.controller);\\n      }\\n    });\\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\\n    if (pendingNavigationController) {\\n      pendingNavigationController.signal.addEventListener(\\n        \\\"abort\\\",\\n        abortPendingFetchRevalidations\\n      );\\n    }\\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\\n      state,\\n      matches,\\n      matchesToLoad,\\n      revalidatingFetchers,\\n      request\\n    );\\n    if (request.signal.aborted) {\\n      return { shortCircuited: true };\\n    }\\n    if (pendingNavigationController) {\\n      pendingNavigationController.signal.removeEventListener(\\n        \\\"abort\\\",\\n        abortPendingFetchRevalidations\\n      );\\n    }\\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\\n    let redirect2 = findRedirect(loaderResults);\\n    if (redirect2) {\\n      await startRedirectNavigation(request, redirect2.result, true, {\\n        replace: replace2\\n      });\\n      return { shortCircuited: true };\\n    }\\n    redirect2 = findRedirect(fetcherResults);\\n    if (redirect2) {\\n      fetchRedirectIds.add(redirect2.key);\\n      await startRedirectNavigation(request, redirect2.result, true, {\\n        replace: replace2\\n      });\\n      return { shortCircuited: true };\\n    }\\n    let { loaderData, errors } = processLoaderData(\\n      state,\\n      matches,\\n      loaderResults,\\n      pendingActionResult,\\n      revalidatingFetchers,\\n      fetcherResults\\n    );\\n    if (initialHydration && state.errors) {\\n      errors = { ...state.errors, ...errors };\\n    }\\n    let updatedFetchers = markFetchRedirectsDone();\\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\\n    return {\\n      matches,\\n      loaderData,\\n      errors,\\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\\n    };\\n  }\\n  function getUpdatedActionData(pendingActionResult) {\\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\\n      return {\\n        [pendingActionResult[0]]: pendingActionResult[1].data\\n      };\\n    } else if (state.actionData) {\\n      if (Object.keys(state.actionData).length === 0) {\\n        return null;\\n      } else {\\n        return state.actionData;\\n      }\\n    }\\n  }\\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\\n    revalidatingFetchers.forEach((rf) => {\\n      let fetcher = state.fetchers.get(rf.key);\\n      let revalidatingFetcher = getLoadingFetcher(\\n        void 0,\\n        fetcher ? fetcher.data : void 0\\n      );\\n      state.fetchers.set(rf.key, revalidatingFetcher);\\n    });\\n    return new Map(state.fetchers);\\n  }\\n  async function fetch2(key, routeId, href, opts) {\\n    abortFetcher(key);\\n    let flushSync = (opts && opts.flushSync) === true;\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let normalizedPath = normalizeTo(\\n      state.location,\\n      state.matches,\\n      basename,\\n      href,\\n      routeId,\\n      opts?.relative\\n    );\\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\\n    if (fogOfWar.active && fogOfWar.matches) {\\n      matches = fogOfWar.matches;\\n    }\\n    if (!matches) {\\n      setFetcherError(\\n        key,\\n        routeId,\\n        getInternalRouterError(404, { pathname: normalizedPath }),\\n        { flushSync }\\n      );\\n      return;\\n    }\\n    let { path, submission, error } = normalizeNavigateOptions(\\n      true,\\n      normalizedPath,\\n      opts\\n    );\\n    if (error) {\\n      setFetcherError(key, routeId, error, { flushSync });\\n      return;\\n    }\\n    let match = getTargetMatch(matches, path);\\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\\n    if (submission && isMutationMethod(submission.formMethod)) {\\n      await handleFetcherAction(\\n        key,\\n        routeId,\\n        path,\\n        match,\\n        matches,\\n        fogOfWar.active,\\n        flushSync,\\n        preventScrollReset,\\n        submission\\n      );\\n      return;\\n    }\\n    fetchLoadMatches.set(key, { routeId, path });\\n    await handleFetcherLoader(\\n      key,\\n      routeId,\\n      path,\\n      match,\\n      matches,\\n      fogOfWar.active,\\n      flushSync,\\n      preventScrollReset,\\n      submission\\n    );\\n  }\\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\\n    interruptActiveLoads();\\n    fetchLoadMatches.delete(key);\\n    function detectAndHandle405Error(m) {\\n      if (!m.route.action && !m.route.lazy) {\\n        let error = getInternalRouterError(405, {\\n          method: submission.formMethod,\\n          pathname: path,\\n          routeId\\n        });\\n        setFetcherError(key, routeId, error, { flushSync });\\n        return true;\\n      }\\n      return false;\\n    }\\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\\n      return;\\n    }\\n    let existingFetcher = state.fetchers.get(key);\\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\\n      flushSync\\n    });\\n    let abortController = new AbortController();\\n    let fetchRequest = createClientSideRequest(\\n      init.history,\\n      path,\\n      abortController.signal,\\n      submission\\n    );\\n    if (isFogOfWar) {\\n      let discoverResult = await discoverRoutes(\\n        requestMatches,\\n        path,\\n        fetchRequest.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return;\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\\n        return;\\n      } else if (!discoverResult.matches) {\\n        setFetcherError(\\n          key,\\n          routeId,\\n          getInternalRouterError(404, { pathname: path }),\\n          { flushSync }\\n        );\\n        return;\\n      } else {\\n        requestMatches = discoverResult.matches;\\n        match = getTargetMatch(requestMatches, path);\\n        if (detectAndHandle405Error(match)) {\\n          return;\\n        }\\n      }\\n    }\\n    fetchControllers.set(key, abortController);\\n    let originatingLoadId = incrementingLoadId;\\n    let actionResults = await callDataStrategy(\\n      \\\"action\\\",\\n      state,\\n      fetchRequest,\\n      [match],\\n      requestMatches,\\n      key\\n    );\\n    let actionResult = actionResults[match.route.id];\\n    if (fetchRequest.signal.aborted) {\\n      if (fetchControllers.get(key) === abortController) {\\n        fetchControllers.delete(key);\\n      }\\n      return;\\n    }\\n    if (fetchersQueuedForDeletion.has(key)) {\\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\\n        updateFetcherState(key, getDoneFetcher(void 0));\\n        return;\\n      }\\n    } else {\\n      if (isRedirectResult(actionResult)) {\\n        fetchControllers.delete(key);\\n        if (pendingNavigationLoadId > originatingLoadId) {\\n          updateFetcherState(key, getDoneFetcher(void 0));\\n          return;\\n        } else {\\n          fetchRedirectIds.add(key);\\n          updateFetcherState(key, getLoadingFetcher(submission));\\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\\n            fetcherSubmission: submission,\\n            preventScrollReset\\n          });\\n        }\\n      }\\n      if (isErrorResult(actionResult)) {\\n        setFetcherError(key, routeId, actionResult.error);\\n        return;\\n      }\\n    }\\n    let nextLocation = state.navigation.location || state.location;\\n    let revalidationRequest = createClientSideRequest(\\n      init.history,\\n      nextLocation,\\n      abortController.signal\\n    );\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let matches = state.navigation.state !== \\\"idle\\\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\\n    invariant(matches, \\\"Didn't find any matches after fetcher action\\\");\\n    let loadId = ++incrementingLoadId;\\n    fetchReloadIds.set(key, loadId);\\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\\n    state.fetchers.set(key, loadFetcher);\\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\\n      init.history,\\n      state,\\n      matches,\\n      submission,\\n      nextLocation,\\n      false,\\n      isRevalidationRequired,\\n      cancelledFetcherLoads,\\n      fetchersQueuedForDeletion,\\n      fetchLoadMatches,\\n      fetchRedirectIds,\\n      routesToUse,\\n      basename,\\n      [match.route.id, actionResult]\\n    );\\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\\n      let staleKey = rf.key;\\n      let existingFetcher2 = state.fetchers.get(staleKey);\\n      let revalidatingFetcher = getLoadingFetcher(\\n        void 0,\\n        existingFetcher2 ? existingFetcher2.data : void 0\\n      );\\n      state.fetchers.set(staleKey, revalidatingFetcher);\\n      abortFetcher(staleKey);\\n      if (rf.controller) {\\n        fetchControllers.set(staleKey, rf.controller);\\n      }\\n    });\\n    updateState({ fetchers: new Map(state.fetchers) });\\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\\n    abortController.signal.addEventListener(\\n      \\\"abort\\\",\\n      abortPendingFetchRevalidations\\n    );\\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\\n      state,\\n      matches,\\n      matchesToLoad,\\n      revalidatingFetchers,\\n      revalidationRequest\\n    );\\n    if (abortController.signal.aborted) {\\n      return;\\n    }\\n    abortController.signal.removeEventListener(\\n      \\\"abort\\\",\\n      abortPendingFetchRevalidations\\n    );\\n    fetchReloadIds.delete(key);\\n    fetchControllers.delete(key);\\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\\n    let redirect2 = findRedirect(loaderResults);\\n    if (redirect2) {\\n      return startRedirectNavigation(\\n        revalidationRequest,\\n        redirect2.result,\\n        false,\\n        { preventScrollReset }\\n      );\\n    }\\n    redirect2 = findRedirect(fetcherResults);\\n    if (redirect2) {\\n      fetchRedirectIds.add(redirect2.key);\\n      return startRedirectNavigation(\\n        revalidationRequest,\\n        redirect2.result,\\n        false,\\n        { preventScrollReset }\\n      );\\n    }\\n    let { loaderData, errors } = processLoaderData(\\n      state,\\n      matches,\\n      loaderResults,\\n      void 0,\\n      revalidatingFetchers,\\n      fetcherResults\\n    );\\n    if (state.fetchers.has(key)) {\\n      let doneFetcher = getDoneFetcher(actionResult.data);\\n      state.fetchers.set(key, doneFetcher);\\n    }\\n    abortStaleFetchLoads(loadId);\\n    if (state.navigation.state === \\\"loading\\\" && loadId > pendingNavigationLoadId) {\\n      invariant(pendingAction, \\\"Expected pending action\\\");\\n      pendingNavigationController && pendingNavigationController.abort();\\n      completeNavigation(state.navigation.location, {\\n        matches,\\n        loaderData,\\n        errors,\\n        fetchers: new Map(state.fetchers)\\n      });\\n    } else {\\n      updateState({\\n        errors,\\n        loaderData: mergeLoaderData(\\n          state.loaderData,\\n          loaderData,\\n          matches,\\n          errors\\n        ),\\n        fetchers: new Map(state.fetchers)\\n      });\\n      isRevalidationRequired = false;\\n    }\\n  }\\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\\n    let existingFetcher = state.fetchers.get(key);\\n    updateFetcherState(\\n      key,\\n      getLoadingFetcher(\\n        submission,\\n        existingFetcher ? existingFetcher.data : void 0\\n      ),\\n      { flushSync }\\n    );\\n    let abortController = new AbortController();\\n    let fetchRequest = createClientSideRequest(\\n      init.history,\\n      path,\\n      abortController.signal\\n    );\\n    if (isFogOfWar) {\\n      let discoverResult = await discoverRoutes(\\n        matches,\\n        path,\\n        fetchRequest.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return;\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\\n        return;\\n      } else if (!discoverResult.matches) {\\n        setFetcherError(\\n          key,\\n          routeId,\\n          getInternalRouterError(404, { pathname: path }),\\n          { flushSync }\\n        );\\n        return;\\n      } else {\\n        matches = discoverResult.matches;\\n        match = getTargetMatch(matches, path);\\n      }\\n    }\\n    fetchControllers.set(key, abortController);\\n    let originatingLoadId = incrementingLoadId;\\n    let results = await callDataStrategy(\\n      \\\"loader\\\",\\n      state,\\n      fetchRequest,\\n      [match],\\n      matches,\\n      key\\n    );\\n    let result = results[match.route.id];\\n    if (fetchControllers.get(key) === abortController) {\\n      fetchControllers.delete(key);\\n    }\\n    if (fetchRequest.signal.aborted) {\\n      return;\\n    }\\n    if (fetchersQueuedForDeletion.has(key)) {\\n      updateFetcherState(key, getDoneFetcher(void 0));\\n      return;\\n    }\\n    if (isRedirectResult(result)) {\\n      if (pendingNavigationLoadId > originatingLoadId) {\\n        updateFetcherState(key, getDoneFetcher(void 0));\\n        return;\\n      } else {\\n        fetchRedirectIds.add(key);\\n        await startRedirectNavigation(fetchRequest, result, false, {\\n          preventScrollReset\\n        });\\n        return;\\n      }\\n    }\\n    if (isErrorResult(result)) {\\n      setFetcherError(key, routeId, result.error);\\n      return;\\n    }\\n    updateFetcherState(key, getDoneFetcher(result.data));\\n  }\\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\\n    submission,\\n    fetcherSubmission,\\n    preventScrollReset,\\n    replace: replace2\\n  } = {}) {\\n    if (redirect2.response.headers.has(\\\"X-Remix-Revalidate\\\")) {\\n      isRevalidationRequired = true;\\n    }\\n    let location = redirect2.response.headers.get(\\\"Location\\\");\\n    invariant(location, \\\"Expected a Location header on the redirect Response\\\");\\n    location = normalizeRedirectLocation(\\n      location,\\n      new URL(request.url),\\n      basename\\n    );\\n    let redirectLocation = createLocation(state.location, location, {\\n      _isRedirect: true\\n    });\\n    if (isBrowser2) {\\n      let isDocumentReload = false;\\n      if (redirect2.response.headers.has(\\\"X-Remix-Reload-Document\\\")) {\\n        isDocumentReload = true;\\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\\n        const url = init.history.createURL(location);\\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\\n        stripBasename(url.pathname, basename) == null;\\n      }\\n      if (isDocumentReload) {\\n        if (replace2) {\\n          routerWindow.location.replace(location);\\n        } else {\\n          routerWindow.location.assign(location);\\n        }\\n        return;\\n      }\\n    }\\n    pendingNavigationController = null;\\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\\\"X-Remix-Replace\\\") ? \\\"REPLACE\\\" /* Replace */ : \\\"PUSH\\\" /* Push */;\\n    let { formMethod, formAction, formEncType } = state.navigation;\\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\\n      submission = getSubmissionFromNavigation(state.navigation);\\n    }\\n    let activeSubmission = submission || fetcherSubmission;\\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\\n      await startNavigation(redirectNavigationType, redirectLocation, {\\n        submission: {\\n          ...activeSubmission,\\n          formAction: location\\n        },\\n        // Preserve these flags across redirects\\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\\n      });\\n    } else {\\n      let overrideNavigation = getLoadingNavigation(\\n        redirectLocation,\\n        submission\\n      );\\n      await startNavigation(redirectNavigationType, redirectLocation, {\\n        overrideNavigation,\\n        // Send fetcher submissions through for shouldRevalidate\\n        fetcherSubmission,\\n        // Preserve these flags across redirects\\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\\n      });\\n    }\\n  }\\n  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\\n    let results;\\n    let dataResults = {};\\n    try {\\n      results = await callDataStrategyImpl(\\n        dataStrategyImpl,\\n        type,\\n        state2,\\n        request,\\n        matchesToLoad,\\n        matches,\\n        fetcherKey,\\n        manifest,\\n        mapRouteProperties2\\n      );\\n    } catch (e) {\\n      matchesToLoad.forEach((m) => {\\n        dataResults[m.route.id] = {\\n          type: \\\"error\\\" /* error */,\\n          error: e\\n        };\\n      });\\n      return dataResults;\\n    }\\n    for (let [routeId, result] of Object.entries(results)) {\\n      if (isRedirectDataStrategyResult(result)) {\\n        let response = result.result;\\n        dataResults[routeId] = {\\n          type: \\\"redirect\\\" /* redirect */,\\n          response: normalizeRelativeRoutingRedirectResponse(\\n            response,\\n            request,\\n            routeId,\\n            matches,\\n            basename\\n          )\\n        };\\n      } else {\\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\\n          result\\n        );\\n      }\\n    }\\n    return dataResults;\\n  }\\n  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\\n    let loaderResultsPromise = callDataStrategy(\\n      \\\"loader\\\",\\n      state2,\\n      request,\\n      matchesToLoad,\\n      matches,\\n      null\\n    );\\n    let fetcherResultsPromise = Promise.all(\\n      fetchersToLoad.map(async (f) => {\\n        if (f.matches && f.match && f.controller) {\\n          let results = await callDataStrategy(\\n            \\\"loader\\\",\\n            state2,\\n            createClientSideRequest(init.history, f.path, f.controller.signal),\\n            [f.match],\\n            f.matches,\\n            f.key\\n          );\\n          let result = results[f.match.route.id];\\n          return { [f.key]: result };\\n        } else {\\n          return Promise.resolve({\\n            [f.key]: {\\n              type: \\\"error\\\" /* error */,\\n              error: getInternalRouterError(404, {\\n                pathname: f.path\\n              })\\n            }\\n          });\\n        }\\n      })\\n    );\\n    let loaderResults = await loaderResultsPromise;\\n    let fetcherResults = (await fetcherResultsPromise).reduce(\\n      (acc, r) => Object.assign(acc, r),\\n      {}\\n    );\\n    return {\\n      loaderResults,\\n      fetcherResults\\n    };\\n  }\\n  function interruptActiveLoads() {\\n    isRevalidationRequired = true;\\n    fetchLoadMatches.forEach((_, key) => {\\n      if (fetchControllers.has(key)) {\\n        cancelledFetcherLoads.add(key);\\n      }\\n      abortFetcher(key);\\n    });\\n  }\\n  function updateFetcherState(key, fetcher, opts = {}) {\\n    state.fetchers.set(key, fetcher);\\n    updateState(\\n      { fetchers: new Map(state.fetchers) },\\n      { flushSync: (opts && opts.flushSync) === true }\\n    );\\n  }\\n  function setFetcherError(key, routeId, error, opts = {}) {\\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\\n    deleteFetcher(key);\\n    updateState(\\n      {\\n        errors: {\\n          [boundaryMatch.route.id]: error\\n        },\\n        fetchers: new Map(state.fetchers)\\n      },\\n      { flushSync: (opts && opts.flushSync) === true }\\n    );\\n  }\\n  function getFetcher(key) {\\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\\n    if (fetchersQueuedForDeletion.has(key)) {\\n      fetchersQueuedForDeletion.delete(key);\\n    }\\n    return state.fetchers.get(key) || IDLE_FETCHER;\\n  }\\n  function deleteFetcher(key) {\\n    let fetcher = state.fetchers.get(key);\\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \\\"loading\\\" && fetchReloadIds.has(key))) {\\n      abortFetcher(key);\\n    }\\n    fetchLoadMatches.delete(key);\\n    fetchReloadIds.delete(key);\\n    fetchRedirectIds.delete(key);\\n    fetchersQueuedForDeletion.delete(key);\\n    cancelledFetcherLoads.delete(key);\\n    state.fetchers.delete(key);\\n  }\\n  function queueFetcherForDeletion(key) {\\n    let count = (activeFetchers.get(key) || 0) - 1;\\n    if (count <= 0) {\\n      activeFetchers.delete(key);\\n      fetchersQueuedForDeletion.add(key);\\n    } else {\\n      activeFetchers.set(key, count);\\n    }\\n    updateState({ fetchers: new Map(state.fetchers) });\\n  }\\n  function abortFetcher(key) {\\n    let controller = fetchControllers.get(key);\\n    if (controller) {\\n      controller.abort();\\n      fetchControllers.delete(key);\\n    }\\n  }\\n  function markFetchersDone(keys) {\\n    for (let key of keys) {\\n      let fetcher = getFetcher(key);\\n      let doneFetcher = getDoneFetcher(fetcher.data);\\n      state.fetchers.set(key, doneFetcher);\\n    }\\n  }\\n  function markFetchRedirectsDone() {\\n    let doneKeys = [];\\n    let updatedFetchers = false;\\n    for (let key of fetchRedirectIds) {\\n      let fetcher = state.fetchers.get(key);\\n      invariant(fetcher, `Expected fetcher: ${key}`);\\n      if (fetcher.state === \\\"loading\\\") {\\n        fetchRedirectIds.delete(key);\\n        doneKeys.push(key);\\n        updatedFetchers = true;\\n      }\\n    }\\n    markFetchersDone(doneKeys);\\n    return updatedFetchers;\\n  }\\n  function abortStaleFetchLoads(landedId) {\\n    let yeetedKeys = [];\\n    for (let [key, id] of fetchReloadIds) {\\n      if (id < landedId) {\\n        let fetcher = state.fetchers.get(key);\\n        invariant(fetcher, `Expected fetcher: ${key}`);\\n        if (fetcher.state === \\\"loading\\\") {\\n          abortFetcher(key);\\n          fetchReloadIds.delete(key);\\n          yeetedKeys.push(key);\\n        }\\n      }\\n    }\\n    markFetchersDone(yeetedKeys);\\n    return yeetedKeys.length > 0;\\n  }\\n  function getBlocker(key, fn) {\\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\\n    if (blockerFunctions.get(key) !== fn) {\\n      blockerFunctions.set(key, fn);\\n    }\\n    return blocker;\\n  }\\n  function deleteBlocker(key) {\\n    state.blockers.delete(key);\\n    blockerFunctions.delete(key);\\n  }\\n  function updateBlocker(key, newBlocker) {\\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\\n    invariant(\\n      blocker.state === \\\"unblocked\\\" && newBlocker.state === \\\"blocked\\\" || blocker.state === \\\"blocked\\\" && newBlocker.state === \\\"blocked\\\" || blocker.state === \\\"blocked\\\" && newBlocker.state === \\\"proceeding\\\" || blocker.state === \\\"blocked\\\" && newBlocker.state === \\\"unblocked\\\" || blocker.state === \\\"proceeding\\\" && newBlocker.state === \\\"unblocked\\\",\\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\\n    );\\n    let blockers = new Map(state.blockers);\\n    blockers.set(key, newBlocker);\\n    updateState({ blockers });\\n  }\\n  function shouldBlockNavigation({\\n    currentLocation,\\n    nextLocation,\\n    historyAction\\n  }) {\\n    if (blockerFunctions.size === 0) {\\n      return;\\n    }\\n    if (blockerFunctions.size > 1) {\\n      warning(false, \\\"A router only supports one blocker at a time\\\");\\n    }\\n    let entries = Array.from(blockerFunctions.entries());\\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\\n    let blocker = state.blockers.get(blockerKey);\\n    if (blocker && blocker.state === \\\"proceeding\\\") {\\n      return;\\n    }\\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\\n      return blockerKey;\\n    }\\n  }\\n  function handleNavigational404(pathname) {\\n    let error = getInternalRouterError(404, { pathname });\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let { matches, route } = getShortCircuitMatches(routesToUse);\\n    return { notFoundMatches: matches, route, error };\\n  }\\n  function enableScrollRestoration(positions, getPosition, getKey) {\\n    savedScrollPositions2 = positions;\\n    getScrollPosition = getPosition;\\n    getScrollRestorationKey2 = getKey || null;\\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\\n      initialScrollRestored = true;\\n      let y = getSavedScrollPosition(state.location, state.matches);\\n      if (y != null) {\\n        updateState({ restoreScrollPosition: y });\\n      }\\n    }\\n    return () => {\\n      savedScrollPositions2 = null;\\n      getScrollPosition = null;\\n      getScrollRestorationKey2 = null;\\n    };\\n  }\\n  function getScrollKey(location, matches) {\\n    if (getScrollRestorationKey2) {\\n      let key = getScrollRestorationKey2(\\n        location,\\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\\n      );\\n      return key || location.key;\\n    }\\n    return location.key;\\n  }\\n  function saveScrollPosition(location, matches) {\\n    if (savedScrollPositions2 && getScrollPosition) {\\n      let key = getScrollKey(location, matches);\\n      savedScrollPositions2[key] = getScrollPosition();\\n    }\\n  }\\n  function getSavedScrollPosition(location, matches) {\\n    if (savedScrollPositions2) {\\n      let key = getScrollKey(location, matches);\\n      let y = savedScrollPositions2[key];\\n      if (typeof y === \\\"number\\\") {\\n        return y;\\n      }\\n    }\\n    return null;\\n  }\\n  function checkFogOfWar(matches, routesToUse, pathname) {\\n    if (patchRoutesOnNavigationImpl) {\\n      if (!matches) {\\n        let fogMatches = matchRoutesImpl(\\n          routesToUse,\\n          pathname,\\n          basename,\\n          true\\n        );\\n        return { active: true, matches: fogMatches || [] };\\n      } else {\\n        if (Object.keys(matches[0].params).length > 0) {\\n          let partialMatches = matchRoutesImpl(\\n            routesToUse,\\n            pathname,\\n            basename,\\n            true\\n          );\\n          return { active: true, matches: partialMatches };\\n        }\\n      }\\n    }\\n    return { active: false, matches: null };\\n  }\\n  async function discoverRoutes(matches, pathname, signal) {\\n    if (!patchRoutesOnNavigationImpl) {\\n      return { type: \\\"success\\\", matches };\\n    }\\n    let partialMatches = matches;\\n    while (true) {\\n      let isNonHMR = inFlightDataRoutes == null;\\n      let routesToUse = inFlightDataRoutes || dataRoutes;\\n      let localManifest = manifest;\\n      try {\\n        await patchRoutesOnNavigationImpl({\\n          path: pathname,\\n          matches: partialMatches,\\n          patch: (routeId, children) => {\\n            if (signal.aborted) return;\\n            patchRoutesImpl(\\n              routeId,\\n              children,\\n              routesToUse,\\n              localManifest,\\n              mapRouteProperties2\\n            );\\n          }\\n        });\\n      } catch (e) {\\n        return { type: \\\"error\\\", error: e, partialMatches };\\n      } finally {\\n        if (isNonHMR && !signal.aborted) {\\n          dataRoutes = [...dataRoutes];\\n        }\\n      }\\n      if (signal.aborted) {\\n        return { type: \\\"aborted\\\" };\\n      }\\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\\n      if (newMatches) {\\n        return { type: \\\"success\\\", matches: newMatches };\\n      }\\n      let newPartialMatches = matchRoutesImpl(\\n        routesToUse,\\n        pathname,\\n        basename,\\n        true\\n      );\\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\\n        (m, i) => m.route.id === newPartialMatches[i].route.id\\n      )) {\\n        return { type: \\\"success\\\", matches: null };\\n      }\\n      partialMatches = newPartialMatches;\\n    }\\n  }\\n  function _internalSetRoutes(newRoutes) {\\n    manifest = {};\\n    inFlightDataRoutes = convertRoutesToDataRoutes(\\n      newRoutes,\\n      mapRouteProperties2,\\n      void 0,\\n      manifest\\n    );\\n  }\\n  function patchRoutes(routeId, children) {\\n    let isNonHMR = inFlightDataRoutes == null;\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    patchRoutesImpl(\\n      routeId,\\n      children,\\n      routesToUse,\\n      manifest,\\n      mapRouteProperties2\\n    );\\n    if (isNonHMR) {\\n      dataRoutes = [...dataRoutes];\\n      updateState({});\\n    }\\n  }\\n  router = {\\n    get basename() {\\n      return basename;\\n    },\\n    get future() {\\n      return future;\\n    },\\n    get state() {\\n      return state;\\n    },\\n    get routes() {\\n      return dataRoutes;\\n    },\\n    get window() {\\n      return routerWindow;\\n    },\\n    initialize,\\n    subscribe,\\n    enableScrollRestoration,\\n    navigate,\\n    fetch: fetch2,\\n    revalidate,\\n    // Passthrough to history-aware createHref used by useHref so we get proper\\n    // hash-aware URLs in DOM paths\\n    createHref: (to) => init.history.createHref(to),\\n    encodeLocation: (to) => init.history.encodeLocation(to),\\n    getFetcher,\\n    deleteFetcher: queueFetcherForDeletion,\\n    dispose,\\n    getBlocker,\\n    deleteBlocker,\\n    patchRoutes,\\n    _internalFetchControllers: fetchControllers,\\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\\n    // updating the tree while validating the update algorithm.\\n    _internalSetRoutes\\n  };\\n  return router;\\n}\\nfunction createStaticHandler(routes, opts) {\\n  invariant(\\n    routes.length > 0,\\n    \\\"You must provide a non-empty routes array to createStaticHandler\\\"\\n  );\\n  let manifest = {};\\n  let basename = (opts ? opts.basename : null) || \\\"/\\\";\\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\\n  let dataRoutes = convertRoutesToDataRoutes(\\n    routes,\\n    mapRouteProperties2,\\n    void 0,\\n    manifest\\n  );\\n  async function query(request, {\\n    requestContext,\\n    skipLoaderErrorBubbling,\\n    dataStrategy\\n  } = {}) {\\n    let url = new URL(request.url);\\n    let method = request.method;\\n    let location = createLocation(\\\"\\\", createPath(url), null, \\\"default\\\");\\n    let matches = matchRoutes(dataRoutes, location, basename);\\n    if (!isValidMethod(method) && method !== \\\"HEAD\\\") {\\n      let error = getInternalRouterError(405, { method });\\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\\n      return {\\n        basename,\\n        location,\\n        matches: methodNotAllowedMatches,\\n        loaderData: {},\\n        actionData: null,\\n        errors: {\\n          [route.id]: error\\n        },\\n        statusCode: error.status,\\n        loaderHeaders: {},\\n        actionHeaders: {}\\n      };\\n    } else if (!matches) {\\n      let error = getInternalRouterError(404, { pathname: location.pathname });\\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\\n      return {\\n        basename,\\n        location,\\n        matches: notFoundMatches,\\n        loaderData: {},\\n        actionData: null,\\n        errors: {\\n          [route.id]: error\\n        },\\n        statusCode: error.status,\\n        loaderHeaders: {},\\n        actionHeaders: {}\\n      };\\n    }\\n    let result = await queryImpl(\\n      request,\\n      location,\\n      matches,\\n      requestContext,\\n      dataStrategy || null,\\n      skipLoaderErrorBubbling === true,\\n      null\\n    );\\n    if (isResponse(result)) {\\n      return result;\\n    }\\n    return { location, basename, ...result };\\n  }\\n  async function queryRoute(request, {\\n    routeId,\\n    requestContext,\\n    dataStrategy\\n  } = {}) {\\n    let url = new URL(request.url);\\n    let method = request.method;\\n    let location = createLocation(\\\"\\\", createPath(url), null, \\\"default\\\");\\n    let matches = matchRoutes(dataRoutes, location, basename);\\n    if (!isValidMethod(method) && method !== \\\"HEAD\\\" && method !== \\\"OPTIONS\\\") {\\n      throw getInternalRouterError(405, { method });\\n    } else if (!matches) {\\n      throw getInternalRouterError(404, { pathname: location.pathname });\\n    }\\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\\n    if (routeId && !match) {\\n      throw getInternalRouterError(403, {\\n        pathname: location.pathname,\\n        routeId\\n      });\\n    } else if (!match) {\\n      throw getInternalRouterError(404, { pathname: location.pathname });\\n    }\\n    let result = await queryImpl(\\n      request,\\n      location,\\n      matches,\\n      requestContext,\\n      dataStrategy || null,\\n      false,\\n      match\\n    );\\n    if (isResponse(result)) {\\n      return result;\\n    }\\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\\n    if (error !== void 0) {\\n      throw error;\\n    }\\n    if (result.actionData) {\\n      return Object.values(result.actionData)[0];\\n    }\\n    if (result.loaderData) {\\n      return Object.values(result.loaderData)[0];\\n    }\\n    return void 0;\\n  }\\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\\n    invariant(\\n      request.signal,\\n      \\\"query()/queryRoute() requests must contain an AbortController signal\\\"\\n    );\\n    try {\\n      if (isMutationMethod(request.method)) {\\n        let result2 = await submit(\\n          request,\\n          matches,\\n          routeMatch || getTargetMatch(matches, location),\\n          requestContext,\\n          dataStrategy,\\n          skipLoaderErrorBubbling,\\n          routeMatch != null\\n        );\\n        return result2;\\n      }\\n      let result = await loadRouteData(\\n        request,\\n        matches,\\n        requestContext,\\n        dataStrategy,\\n        skipLoaderErrorBubbling,\\n        routeMatch\\n      );\\n      return isResponse(result) ? result : {\\n        ...result,\\n        actionData: null,\\n        actionHeaders: {}\\n      };\\n    } catch (e) {\\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\\n        if (e.type === \\\"error\\\" /* error */) {\\n          throw e.result;\\n        }\\n        return e.result;\\n      }\\n      if (isRedirectResponse(e)) {\\n        return e;\\n      }\\n      throw e;\\n    }\\n  }\\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\\n    let result;\\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\\n      let error = getInternalRouterError(405, {\\n        method: request.method,\\n        pathname: new URL(request.url).pathname,\\n        routeId: actionMatch.route.id\\n      });\\n      if (isRouteRequest) {\\n        throw error;\\n      }\\n      result = {\\n        type: \\\"error\\\" /* error */,\\n        error\\n      };\\n    } else {\\n      let results = await callDataStrategy(\\n        \\\"action\\\",\\n        request,\\n        [actionMatch],\\n        matches,\\n        isRouteRequest,\\n        requestContext,\\n        dataStrategy\\n      );\\n      result = results[actionMatch.route.id];\\n      if (request.signal.aborted) {\\n        throwStaticHandlerAbortedError(request, isRouteRequest);\\n      }\\n    }\\n    if (isRedirectResult(result)) {\\n      throw new Response(null, {\\n        status: result.response.status,\\n        headers: {\\n          Location: result.response.headers.get(\\\"Location\\\")\\n        }\\n      });\\n    }\\n    if (isRouteRequest) {\\n      if (isErrorResult(result)) {\\n        throw result.error;\\n      }\\n      return {\\n        matches: [actionMatch],\\n        loaderData: {},\\n        actionData: { [actionMatch.route.id]: result.data },\\n        errors: null,\\n        // Note: statusCode + headers are unused here since queryRoute will\\n        // return the raw Response or value\\n        statusCode: 200,\\n        loaderHeaders: {},\\n        actionHeaders: {}\\n      };\\n    }\\n    let loaderRequest = new Request(request.url, {\\n      headers: request.headers,\\n      redirect: request.redirect,\\n      signal: request.signal\\n    });\\n    if (isErrorResult(result)) {\\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\\n      let context2 = await loadRouteData(\\n        loaderRequest,\\n        matches,\\n        requestContext,\\n        dataStrategy,\\n        skipLoaderErrorBubbling,\\n        null,\\n        [boundaryMatch.route.id, result]\\n      );\\n      return {\\n        ...context2,\\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\\n        actionData: null,\\n        actionHeaders: {\\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\\n        }\\n      };\\n    }\\n    let context = await loadRouteData(\\n      loaderRequest,\\n      matches,\\n      requestContext,\\n      dataStrategy,\\n      skipLoaderErrorBubbling,\\n      null\\n    );\\n    return {\\n      ...context,\\n      actionData: {\\n        [actionMatch.route.id]: result.data\\n      },\\n      // action status codes take precedence over loader status codes\\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\\n    };\\n  }\\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\\n    let isRouteRequest = routeMatch != null;\\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\\n      throw getInternalRouterError(400, {\\n        method: request.method,\\n        pathname: new URL(request.url).pathname,\\n        routeId: routeMatch?.route.id\\n      });\\n    }\\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\\n    let matchesToLoad = requestMatches.filter(\\n      (m) => m.route.loader || m.route.lazy\\n    );\\n    if (matchesToLoad.length === 0) {\\n      return {\\n        matches,\\n        // Add a null for all matched routes for proper revalidation on the client\\n        loaderData: matches.reduce(\\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\\n          {}\\n        ),\\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\\n          [pendingActionResult[0]]: pendingActionResult[1].error\\n        } : null,\\n        statusCode: 200,\\n        loaderHeaders: {}\\n      };\\n    }\\n    let results = await callDataStrategy(\\n      \\\"loader\\\",\\n      request,\\n      matchesToLoad,\\n      matches,\\n      isRouteRequest,\\n      requestContext,\\n      dataStrategy\\n    );\\n    if (request.signal.aborted) {\\n      throwStaticHandlerAbortedError(request, isRouteRequest);\\n    }\\n    let context = processRouteLoaderData(\\n      matches,\\n      results,\\n      pendingActionResult,\\n      true,\\n      skipLoaderErrorBubbling\\n    );\\n    let executedLoaders = new Set(\\n      matchesToLoad.map((match) => match.route.id)\\n    );\\n    matches.forEach((match) => {\\n      if (!executedLoaders.has(match.route.id)) {\\n        context.loaderData[match.route.id] = null;\\n      }\\n    });\\n    return {\\n      ...context,\\n      matches\\n    };\\n  }\\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\\n    let results = await callDataStrategyImpl(\\n      dataStrategy || defaultDataStrategy,\\n      type,\\n      null,\\n      request,\\n      matchesToLoad,\\n      matches,\\n      null,\\n      manifest,\\n      mapRouteProperties2,\\n      requestContext\\n    );\\n    let dataResults = {};\\n    await Promise.all(\\n      matches.map(async (match) => {\\n        if (!(match.route.id in results)) {\\n          return;\\n        }\\n        let result = results[match.route.id];\\n        if (isRedirectDataStrategyResult(result)) {\\n          let response = result.result;\\n          throw normalizeRelativeRoutingRedirectResponse(\\n            response,\\n            request,\\n            match.route.id,\\n            matches,\\n            basename\\n          );\\n        }\\n        if (isResponse(result.result) && isRouteRequest) {\\n          throw result;\\n        }\\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\\n      })\\n    );\\n    return dataResults;\\n  }\\n  return {\\n    dataRoutes,\\n    query,\\n    queryRoute\\n  };\\n}\\nfunction getStaticContextFromError(routes, context, error) {\\n  let newContext = {\\n    ...context,\\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\\n    errors: {\\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\\n    }\\n  };\\n  return newContext;\\n}\\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\\n  if (request.signal.reason !== void 0) {\\n    throw request.signal.reason;\\n  }\\n  let method = isRouteRequest ? \\\"queryRoute\\\" : \\\"query\\\";\\n  throw new Error(\\n    `${method}() call aborted without an \\\\`AbortSignal.reason\\\\`: ${request.method} ${request.url}`\\n  );\\n}\\nfunction isSubmissionNavigation(opts) {\\n  return opts != null && (\\\"formData\\\" in opts && opts.formData != null || \\\"body\\\" in opts && opts.body !== void 0);\\n}\\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\\n  let contextualMatches;\\n  let activeRouteMatch;\\n  if (fromRouteId) {\\n    contextualMatches = [];\\n    for (let match of matches) {\\n      contextualMatches.push(match);\\n      if (match.route.id === fromRouteId) {\\n        activeRouteMatch = match;\\n        break;\\n      }\\n    }\\n  } else {\\n    contextualMatches = matches;\\n    activeRouteMatch = matches[matches.length - 1];\\n  }\\n  let path = resolveTo(\\n    to ? to : \\\".\\\",\\n    getResolveToMatches(contextualMatches),\\n    stripBasename(location.pathname, basename) || location.pathname,\\n    relative === \\\"path\\\"\\n  );\\n  if (to == null) {\\n    path.search = location.search;\\n    path.hash = location.hash;\\n  }\\n  if ((to == null || to === \\\"\\\" || to === \\\".\\\") && activeRouteMatch) {\\n    let nakedIndex = hasNakedIndexQuery(path.search);\\n    if (activeRouteMatch.route.index && !nakedIndex) {\\n      path.search = path.search ? path.search.replace(/^\\\\?/, \\\"?index&\\\") : \\\"?index\\\";\\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\\n      let params = new URLSearchParams(path.search);\\n      let indexValues = params.getAll(\\\"index\\\");\\n      params.delete(\\\"index\\\");\\n      indexValues.filter((v) => v).forEach((v) => params.append(\\\"index\\\", v));\\n      let qs = params.toString();\\n      path.search = qs ? `?${qs}` : \\\"\\\";\\n    }\\n  }\\n  if (basename !== \\\"/\\\") {\\n    path.pathname = path.pathname === \\\"/\\\" ? basename : joinPaths([basename, path.pathname]);\\n  }\\n  return createPath(path);\\n}\\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\\n  if (!opts || !isSubmissionNavigation(opts)) {\\n    return { path };\\n  }\\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\\n    return {\\n      path,\\n      error: getInternalRouterError(405, { method: opts.formMethod })\\n    };\\n  }\\n  let getInvalidBodyError = () => ({\\n    path,\\n    error: getInternalRouterError(400, { type: \\\"invalid-body\\\" })\\n  });\\n  let rawFormMethod = opts.formMethod || \\\"get\\\";\\n  let formMethod = rawFormMethod.toUpperCase();\\n  let formAction = stripHashFromPath(path);\\n  if (opts.body !== void 0) {\\n    if (opts.formEncType === \\\"text/plain\\\") {\\n      if (!isMutationMethod(formMethod)) {\\n        return getInvalidBodyError();\\n      }\\n      let text = typeof opts.body === \\\"string\\\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\\n        Array.from(opts.body.entries()).reduce(\\n          (acc, [name, value]) => `${acc}${name}=${value}\\n`,\\n          \\\"\\\"\\n        )\\n      ) : String(opts.body);\\n      return {\\n        path,\\n        submission: {\\n          formMethod,\\n          formAction,\\n          formEncType: opts.formEncType,\\n          formData: void 0,\\n          json: void 0,\\n          text\\n        }\\n      };\\n    } else if (opts.formEncType === \\\"application/json\\\") {\\n      if (!isMutationMethod(formMethod)) {\\n        return getInvalidBodyError();\\n      }\\n      try {\\n        let json = typeof opts.body === \\\"string\\\" ? JSON.parse(opts.body) : opts.body;\\n        return {\\n          path,\\n          submission: {\\n            formMethod,\\n            formAction,\\n            formEncType: opts.formEncType,\\n            formData: void 0,\\n            json,\\n            text: void 0\\n          }\\n        };\\n      } catch (e) {\\n        return getInvalidBodyError();\\n      }\\n    }\\n  }\\n  invariant(\\n    typeof FormData === \\\"function\\\",\\n    \\\"FormData is not available in this environment\\\"\\n  );\\n  let searchParams;\\n  let formData;\\n  if (opts.formData) {\\n    searchParams = convertFormDataToSearchParams(opts.formData);\\n    formData = opts.formData;\\n  } else if (opts.body instanceof FormData) {\\n    searchParams = convertFormDataToSearchParams(opts.body);\\n    formData = opts.body;\\n  } else if (opts.body instanceof URLSearchParams) {\\n    searchParams = opts.body;\\n    formData = convertSearchParamsToFormData(searchParams);\\n  } else if (opts.body == null) {\\n    searchParams = new URLSearchParams();\\n    formData = new FormData();\\n  } else {\\n    try {\\n      searchParams = new URLSearchParams(opts.body);\\n      formData = convertSearchParamsToFormData(searchParams);\\n    } catch (e) {\\n      return getInvalidBodyError();\\n    }\\n  }\\n  let submission = {\\n    formMethod,\\n    formAction,\\n    formEncType: opts && opts.formEncType || \\\"application/x-www-form-urlencoded\\\",\\n    formData,\\n    json: void 0,\\n    text: void 0\\n  };\\n  if (isMutationMethod(submission.formMethod)) {\\n    return { path, submission };\\n  }\\n  let parsedPath = parsePath(path);\\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\\n    searchParams.append(\\\"index\\\", \\\"\\\");\\n  }\\n  parsedPath.search = `?${searchParams}`;\\n  return { path: createPath(parsedPath), submission };\\n}\\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\\n  if (index >= 0) {\\n    return matches.slice(0, includeBoundary ? index + 1 : index);\\n  }\\n  return matches;\\n}\\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\\n  let currentUrl = history.createURL(state.location);\\n  let nextUrl = history.createURL(location);\\n  let boundaryMatches = matches;\\n  if (initialHydration && state.errors) {\\n    boundaryMatches = getLoaderMatchesUntilBoundary(\\n      matches,\\n      Object.keys(state.errors)[0],\\n      true\\n    );\\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\\n    boundaryMatches = getLoaderMatchesUntilBoundary(\\n      matches,\\n      pendingActionResult[0]\\n    );\\n  }\\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\\n  let navigationMatches = boundaryMatches.filter((match, index) => {\\n    let { route } = match;\\n    if (route.lazy) {\\n      return true;\\n    }\\n    if (route.loader == null) {\\n      return false;\\n    }\\n    if (initialHydration) {\\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\\n    }\\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\\n      return true;\\n    }\\n    let currentRouteMatch = state.matches[index];\\n    let nextRouteMatch = match;\\n    return shouldRevalidateLoader(match, {\\n      currentUrl,\\n      currentParams: currentRouteMatch.params,\\n      nextUrl,\\n      nextParams: nextRouteMatch.params,\\n      ...submission,\\n      actionResult,\\n      actionStatus,\\n      defaultShouldRevalidate: shouldSkipRevalidation ? false : (\\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\\n        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\\n      )\\n    });\\n  });\\n  let revalidatingFetchers = [];\\n  fetchLoadMatches.forEach((f, key) => {\\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\\n      return;\\n    }\\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\\n    if (!fetcherMatches) {\\n      revalidatingFetchers.push({\\n        key,\\n        routeId: f.routeId,\\n        path: f.path,\\n        matches: null,\\n        match: null,\\n        controller: null\\n      });\\n      return;\\n    }\\n    let fetcher = state.fetchers.get(key);\\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\\n    let shouldRevalidate = false;\\n    if (fetchRedirectIds.has(key)) {\\n      shouldRevalidate = false;\\n    } else if (cancelledFetcherLoads.has(key)) {\\n      cancelledFetcherLoads.delete(key);\\n      shouldRevalidate = true;\\n    } else if (fetcher && fetcher.state !== \\\"idle\\\" && fetcher.data === void 0) {\\n      shouldRevalidate = isRevalidationRequired;\\n    } else {\\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\\n        currentUrl,\\n        currentParams: state.matches[state.matches.length - 1].params,\\n        nextUrl,\\n        nextParams: matches[matches.length - 1].params,\\n        ...submission,\\n        actionResult,\\n        actionStatus,\\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\\n      });\\n    }\\n    if (shouldRevalidate) {\\n      revalidatingFetchers.push({\\n        key,\\n        routeId: f.routeId,\\n        path: f.path,\\n        matches: fetcherMatches,\\n        match: fetcherMatch,\\n        controller: new AbortController()\\n      });\\n    }\\n  });\\n  return [navigationMatches, revalidatingFetchers];\\n}\\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\\n  if (route.lazy) {\\n    return true;\\n  }\\n  if (!route.loader) {\\n    return false;\\n  }\\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\\n  let hasError = errors != null && errors[route.id] !== void 0;\\n  if (!hasData && hasError) {\\n    return false;\\n  }\\n  if (typeof route.loader === \\\"function\\\" && route.loader.hydrate === true) {\\n    return true;\\n  }\\n  return !hasData && !hasError;\\n}\\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\\n  let isNew = (\\n    // [a] -> [a, b]\\n    !currentMatch || // [a, b] -> [a, c]\\n    match.route.id !== currentMatch.route.id\\n  );\\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\\n  return isNew || isMissingData;\\n}\\nfunction isNewRouteInstance(currentMatch, match) {\\n  let currentPath = currentMatch.route.path;\\n  return (\\n    // param change for this match, /users/123 -> /users/456\\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\\n    currentPath != null && currentPath.endsWith(\\\"*\\\") && currentMatch.params[\\\"*\\\"] !== match.params[\\\"*\\\"]\\n  );\\n}\\nfunction shouldRevalidateLoader(loaderMatch, arg) {\\n  if (loaderMatch.route.shouldRevalidate) {\\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\\n    if (typeof routeChoice === \\\"boolean\\\") {\\n      return routeChoice;\\n    }\\n  }\\n  return arg.defaultShouldRevalidate;\\n}\\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\\n  let childrenToPatch;\\n  if (routeId) {\\n    let route = manifest[routeId];\\n    invariant(\\n      route,\\n      `No route found to patch children into: routeId = ${routeId}`\\n    );\\n    if (!route.children) {\\n      route.children = [];\\n    }\\n    childrenToPatch = route.children;\\n  } else {\\n    childrenToPatch = routesToUse;\\n  }\\n  let uniqueChildren = children.filter(\\n    (newRoute) => !childrenToPatch.some(\\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\\n    )\\n  );\\n  let newRoutes = convertRoutesToDataRoutes(\\n    uniqueChildren,\\n    mapRouteProperties2,\\n    [routeId || \\\"_\\\", \\\"patch\\\", String(childrenToPatch?.length || \\\"0\\\")],\\n    manifest\\n  );\\n  childrenToPatch.push(...newRoutes);\\n}\\nfunction isSameRoute(newRoute, existingRoute) {\\n  if (\\\"id\\\" in newRoute && \\\"id\\\" in existingRoute && newRoute.id === existingRoute.id) {\\n    return true;\\n  }\\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\\n    return false;\\n  }\\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\\n    return true;\\n  }\\n  return newRoute.children.every(\\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\\n  );\\n}\\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\\n  if (!route.lazy) {\\n    return;\\n  }\\n  let lazyRoute = await route.lazy();\\n  if (!route.lazy) {\\n    return;\\n  }\\n  let routeToUpdate = manifest[route.id];\\n  invariant(routeToUpdate, \\\"No route found in manifest\\\");\\n  let routeUpdates = {};\\n  for (let lazyRouteProperty in lazyRoute) {\\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\\n    // on the route updates\\n    lazyRouteProperty !== \\\"hasErrorBoundary\\\";\\n    warning(\\n      !isPropertyStaticallyDefined,\\n      `Route \\\"${routeToUpdate.id}\\\" has a static property \\\"${lazyRouteProperty}\\\" defined but its lazy function is also returning a value for this property. The lazy route property \\\"${lazyRouteProperty}\\\" will be ignored.`\\n    );\\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\\n    }\\n  }\\n  Object.assign(routeToUpdate, routeUpdates);\\n  Object.assign(routeToUpdate, {\\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\\n    // since the logic will differ between frameworks.\\n    ...mapRouteProperties2(routeToUpdate),\\n    lazy: void 0\\n  });\\n}\\nasync function defaultDataStrategy({\\n  matches\\n}) {\\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\\n  return results.reduce(\\n    (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\\n    {}\\n  );\\n}\\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\\n  let loadRouteDefinitionsPromises = matches.map(\\n    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0\\n  );\\n  let dsMatches = matches.map((match, i) => {\\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\\n    let resolve = async (handlerOverride) => {\\n      if (handlerOverride && request.method === \\\"GET\\\" && (match.route.lazy || match.route.loader)) {\\n        shouldLoad = true;\\n      }\\n      return shouldLoad ? callLoaderOrAction(\\n        type,\\n        request,\\n        match,\\n        loadRoutePromise,\\n        handlerOverride,\\n        requestContext\\n      ) : Promise.resolve({ type: \\\"data\\\" /* data */, result: void 0 });\\n    };\\n    return {\\n      ...match,\\n      shouldLoad,\\n      resolve\\n    };\\n  });\\n  let results = await dataStrategyImpl({\\n    matches: dsMatches,\\n    request,\\n    params: matches[0].params,\\n    fetcherKey,\\n    context: requestContext\\n  });\\n  try {\\n    await Promise.all(loadRouteDefinitionsPromises);\\n  } catch (e) {\\n  }\\n  return results;\\n}\\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\\n  let result;\\n  let onReject;\\n  let runHandler = (handler) => {\\n    let reject;\\n    let abortPromise = new Promise((_, r) => reject = r);\\n    onReject = () => reject();\\n    request.signal.addEventListener(\\\"abort\\\", onReject);\\n    let actualHandler = (ctx) => {\\n      if (typeof handler !== \\\"function\\\") {\\n        return Promise.reject(\\n          new Error(\\n            `You cannot call the handler for a route which defines a boolean \\\"${type}\\\" [routeId: ${match.route.id}]`\\n          )\\n        );\\n      }\\n      return handler(\\n        {\\n          request,\\n          params: match.params,\\n          context: staticContext\\n        },\\n        ...ctx !== void 0 ? [ctx] : []\\n      );\\n    };\\n    let handlerPromise = (async () => {\\n      try {\\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\\n        return { type: \\\"data\\\", result: val };\\n      } catch (e) {\\n        return { type: \\\"error\\\", result: e };\\n      }\\n    })();\\n    return Promise.race([handlerPromise, abortPromise]);\\n  };\\n  try {\\n    let handler = match.route[type];\\n    if (loadRoutePromise) {\\n      if (handler) {\\n        let handlerError;\\n        let [value] = await Promise.all([\\n          // If the handler throws, don't let it immediately bubble out,\\n          // since we need to let the lazy() execution finish so we know if this\\n          // route has a boundary that can handle the error\\n          runHandler(handler).catch((e) => {\\n            handlerError = e;\\n          }),\\n          loadRoutePromise\\n        ]);\\n        if (handlerError !== void 0) {\\n          throw handlerError;\\n        }\\n        result = value;\\n      } else {\\n        await loadRoutePromise;\\n        handler = match.route[type];\\n        if (handler) {\\n          result = await runHandler(handler);\\n        } else if (type === \\\"action\\\") {\\n          let url = new URL(request.url);\\n          let pathname = url.pathname + url.search;\\n          throw getInternalRouterError(405, {\\n            method: request.method,\\n            pathname,\\n            routeId: match.route.id\\n          });\\n        } else {\\n          return { type: \\\"data\\\" /* data */, result: void 0 };\\n        }\\n      }\\n    } else if (!handler) {\\n      let url = new URL(request.url);\\n      let pathname = url.pathname + url.search;\\n      throw getInternalRouterError(404, {\\n        pathname\\n      });\\n    } else {\\n      result = await runHandler(handler);\\n    }\\n  } catch (e) {\\n    return { type: \\\"error\\\" /* error */, result: e };\\n  } finally {\\n    if (onReject) {\\n      request.signal.removeEventListener(\\\"abort\\\", onReject);\\n    }\\n  }\\n  return result;\\n}\\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\\n  let { result, type } = dataStrategyResult;\\n  if (isResponse(result)) {\\n    let data2;\\n    try {\\n      let contentType = result.headers.get(\\\"Content-Type\\\");\\n      if (contentType && /\\\\bapplication\\\\/json\\\\b/.test(contentType)) {\\n        if (result.body == null) {\\n          data2 = null;\\n        } else {\\n          data2 = await result.json();\\n        }\\n      } else {\\n        data2 = await result.text();\\n      }\\n    } catch (e) {\\n      return { type: \\\"error\\\" /* error */, error: e };\\n    }\\n    if (type === \\\"error\\\" /* error */) {\\n      return {\\n        type: \\\"error\\\" /* error */,\\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\\n        statusCode: result.status,\\n        headers: result.headers\\n      };\\n    }\\n    return {\\n      type: \\\"data\\\" /* data */,\\n      data: data2,\\n      statusCode: result.status,\\n      headers: result.headers\\n    };\\n  }\\n  if (type === \\\"error\\\" /* error */) {\\n    if (isDataWithResponseInit(result)) {\\n      if (result.data instanceof Error) {\\n        return {\\n          type: \\\"error\\\" /* error */,\\n          error: result.data,\\n          statusCode: result.init?.status\\n        };\\n      }\\n      result = new ErrorResponseImpl(\\n        result.init?.status || 500,\\n        void 0,\\n        result.data\\n      );\\n    }\\n    return {\\n      type: \\\"error\\\" /* error */,\\n      error: result,\\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\\n    };\\n  }\\n  if (isDataWithResponseInit(result)) {\\n    return {\\n      type: \\\"data\\\" /* data */,\\n      data: result.data,\\n      statusCode: result.init?.status,\\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\\n    };\\n  }\\n  return { type: \\\"data\\\" /* data */, data: result };\\n}\\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\\n  let location = response.headers.get(\\\"Location\\\");\\n  invariant(\\n    location,\\n    \\\"Redirects returned/thrown from loaders/actions must have a Location header\\\"\\n  );\\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\\n    let trimmedMatches = matches.slice(\\n      0,\\n      matches.findIndex((m) => m.route.id === routeId) + 1\\n    );\\n    location = normalizeTo(\\n      new URL(request.url),\\n      trimmedMatches,\\n      basename,\\n      location\\n    );\\n    response.headers.set(\\\"Location\\\", location);\\n  }\\n  return response;\\n}\\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\\n  if (ABSOLUTE_URL_REGEX.test(location)) {\\n    let normalizedLocation = location;\\n    let url = normalizedLocation.startsWith(\\\"//\\\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\\n    if (url.origin === currentUrl.origin && isSameBasename) {\\n      return url.pathname + url.search + url.hash;\\n    }\\n  }\\n  return location;\\n}\\nfunction createClientSideRequest(history, location, signal, submission) {\\n  let url = history.createURL(stripHashFromPath(location)).toString();\\n  let init = { signal };\\n  if (submission && isMutationMethod(submission.formMethod)) {\\n    let { formMethod, formEncType } = submission;\\n    init.method = formMethod.toUpperCase();\\n    if (formEncType === \\\"application/json\\\") {\\n      init.headers = new Headers({ \\\"Content-Type\\\": formEncType });\\n      init.body = JSON.stringify(submission.json);\\n    } else if (formEncType === \\\"text/plain\\\") {\\n      init.body = submission.text;\\n    } else if (formEncType === \\\"application/x-www-form-urlencoded\\\" && submission.formData) {\\n      init.body = convertFormDataToSearchParams(submission.formData);\\n    } else {\\n      init.body = submission.formData;\\n    }\\n  }\\n  return new Request(url, init);\\n}\\nfunction convertFormDataToSearchParams(formData) {\\n  let searchParams = new URLSearchParams();\\n  for (let [key, value] of formData.entries()) {\\n    searchParams.append(key, typeof value === \\\"string\\\" ? value : value.name);\\n  }\\n  return searchParams;\\n}\\nfunction convertSearchParamsToFormData(searchParams) {\\n  let formData = new FormData();\\n  for (let [key, value] of searchParams.entries()) {\\n    formData.append(key, value);\\n  }\\n  return formData;\\n}\\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\\n  let loaderData = {};\\n  let errors = null;\\n  let statusCode;\\n  let foundError = false;\\n  let loaderHeaders = {};\\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\\n  matches.forEach((match) => {\\n    if (!(match.route.id in results)) {\\n      return;\\n    }\\n    let id = match.route.id;\\n    let result = results[id];\\n    invariant(\\n      !isRedirectResult(result),\\n      \\\"Cannot handle redirect results in processLoaderData\\\"\\n    );\\n    if (isErrorResult(result)) {\\n      let error = result.error;\\n      if (pendingError !== void 0) {\\n        error = pendingError;\\n        pendingError = void 0;\\n      }\\n      errors = errors || {};\\n      if (skipLoaderErrorBubbling) {\\n        errors[id] = error;\\n      } else {\\n        let boundaryMatch = findNearestBoundary(matches, id);\\n        if (errors[boundaryMatch.route.id] == null) {\\n          errors[boundaryMatch.route.id] = error;\\n        }\\n      }\\n      if (!isStaticHandler) {\\n        loaderData[id] = ResetLoaderDataSymbol;\\n      }\\n      if (!foundError) {\\n        foundError = true;\\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\\n      }\\n      if (result.headers) {\\n        loaderHeaders[id] = result.headers;\\n      }\\n    } else {\\n      loaderData[id] = result.data;\\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\\n        statusCode = result.statusCode;\\n      }\\n      if (result.headers) {\\n        loaderHeaders[id] = result.headers;\\n      }\\n    }\\n  });\\n  if (pendingError !== void 0 && pendingActionResult) {\\n    errors = { [pendingActionResult[0]]: pendingError };\\n    loaderData[pendingActionResult[0]] = void 0;\\n  }\\n  return {\\n    loaderData,\\n    errors,\\n    statusCode: statusCode || 200,\\n    loaderHeaders\\n  };\\n}\\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\\n  let { loaderData, errors } = processRouteLoaderData(\\n    matches,\\n    results,\\n    pendingActionResult\\n  );\\n  revalidatingFetchers.forEach((rf) => {\\n    let { key, match, controller } = rf;\\n    let result = fetcherResults[key];\\n    invariant(result, \\\"Did not find corresponding fetcher result\\\");\\n    if (controller && controller.signal.aborted) {\\n      return;\\n    } else if (isErrorResult(result)) {\\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\\n      if (!(errors && errors[boundaryMatch.route.id])) {\\n        errors = {\\n          ...errors,\\n          [boundaryMatch.route.id]: result.error\\n        };\\n      }\\n      state.fetchers.delete(key);\\n    } else if (isRedirectResult(result)) {\\n      invariant(false, \\\"Unhandled fetcher revalidation redirect\\\");\\n    } else {\\n      let doneFetcher = getDoneFetcher(result.data);\\n      state.fetchers.set(key, doneFetcher);\\n    }\\n  });\\n  return { loaderData, errors };\\n}\\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\\n    merged[k] = v;\\n    return merged;\\n  }, {});\\n  for (let match of matches) {\\n    let id = match.route.id;\\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\\n      mergedLoaderData[id] = loaderData[id];\\n    }\\n    if (errors && errors.hasOwnProperty(id)) {\\n      break;\\n    }\\n  }\\n  return mergedLoaderData;\\n}\\nfunction getActionDataForCommit(pendingActionResult) {\\n  if (!pendingActionResult) {\\n    return {};\\n  }\\n  return isErrorResult(pendingActionResult[1]) ? {\\n    // Clear out prior actionData on errors\\n    actionData: {}\\n  } : {\\n    actionData: {\\n      [pendingActionResult[0]]: pendingActionResult[1].data\\n    }\\n  };\\n}\\nfunction findNearestBoundary(matches, routeId) {\\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\\n}\\nfunction getShortCircuitMatches(routes) {\\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \\\"/\\\") || {\\n    id: `__shim-error-route__`\\n  };\\n  return {\\n    matches: [\\n      {\\n        params: {},\\n        pathname: \\\"\\\",\\n        pathnameBase: \\\"\\\",\\n        route\\n      }\\n    ],\\n    route\\n  };\\n}\\nfunction getInternalRouterError(status, {\\n  pathname,\\n  routeId,\\n  method,\\n  type,\\n  message\\n} = {}) {\\n  let statusText = \\\"Unknown Server Error\\\";\\n  let errorMessage = \\\"Unknown @remix-run/router error\\\";\\n  if (status === 400) {\\n    statusText = \\\"Bad Request\\\";\\n    if (method && pathname && routeId) {\\n      errorMessage = `You made a ${method} request to \\\"${pathname}\\\" but did not provide a \\\\`loader\\\\` for route \\\"${routeId}\\\", so there is no way to handle the request.`;\\n    } else if (type === \\\"invalid-body\\\") {\\n      errorMessage = \\\"Unable to encode submission body\\\";\\n    }\\n  } else if (status === 403) {\\n    statusText = \\\"Forbidden\\\";\\n    errorMessage = `Route \\\"${routeId}\\\" does not match URL \\\"${pathname}\\\"`;\\n  } else if (status === 404) {\\n    statusText = \\\"Not Found\\\";\\n    errorMessage = `No route matches URL \\\"${pathname}\\\"`;\\n  } else if (status === 405) {\\n    statusText = \\\"Method Not Allowed\\\";\\n    if (method && pathname && routeId) {\\n      errorMessage = `You made a ${method.toUpperCase()} request to \\\"${pathname}\\\" but did not provide an \\\\`action\\\\` for route \\\"${routeId}\\\", so there is no way to handle the request.`;\\n    } else if (method) {\\n      errorMessage = `Invalid request method \\\"${method.toUpperCase()}\\\"`;\\n    }\\n  }\\n  return new ErrorResponseImpl(\\n    status || 500,\\n    statusText,\\n    new Error(errorMessage),\\n    true\\n  );\\n}\\nfunction findRedirect(results) {\\n  let entries = Object.entries(results);\\n  for (let i = entries.length - 1; i >= 0; i--) {\\n    let [key, result] = entries[i];\\n    if (isRedirectResult(result)) {\\n      return { key, result };\\n    }\\n  }\\n}\\nfunction stripHashFromPath(path) {\\n  let parsedPath = typeof path === \\\"string\\\" ? parsePath(path) : path;\\n  return createPath({ ...parsedPath, hash: \\\"\\\" });\\n}\\nfunction isHashChangeOnly(a, b) {\\n  if (a.pathname !== b.pathname || a.search !== b.search) {\\n    return false;\\n  }\\n  if (a.hash === \\\"\\\") {\\n    return b.hash !== \\\"\\\";\\n  } else if (a.hash === b.hash) {\\n    return true;\\n  } else if (b.hash !== \\\"\\\") {\\n    return true;\\n  }\\n  return false;\\n}\\nfunction isDataStrategyResult(result) {\\n  return result != null && typeof result === \\\"object\\\" && \\\"type\\\" in result && \\\"result\\\" in result && (result.type === \\\"data\\\" /* data */ || result.type === \\\"error\\\" /* error */);\\n}\\nfunction isRedirectDataStrategyResult(result) {\\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\\n}\\nfunction isErrorResult(result) {\\n  return result.type === \\\"error\\\" /* error */;\\n}\\nfunction isRedirectResult(result) {\\n  return (result && result.type) === \\\"redirect\\\" /* redirect */;\\n}\\nfunction isDataWithResponseInit(value) {\\n  return typeof value === \\\"object\\\" && value != null && \\\"type\\\" in value && \\\"data\\\" in value && \\\"init\\\" in value && value.type === \\\"DataWithResponseInit\\\";\\n}\\nfunction isResponse(value) {\\n  return value != null && typeof value.status === \\\"number\\\" && typeof value.statusText === \\\"string\\\" && typeof value.headers === \\\"object\\\" && typeof value.body !== \\\"undefined\\\";\\n}\\nfunction isRedirectStatusCode(statusCode) {\\n  return redirectStatusCodes.has(statusCode);\\n}\\nfunction isRedirectResponse(result) {\\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\\\"Location\\\");\\n}\\nfunction isValidMethod(method) {\\n  return validRequestMethods.has(method.toUpperCase());\\n}\\nfunction isMutationMethod(method) {\\n  return validMutationMethods.has(method.toUpperCase());\\n}\\nfunction hasNakedIndexQuery(search) {\\n  return new URLSearchParams(search).getAll(\\\"index\\\").some((v) => v === \\\"\\\");\\n}\\nfunction getTargetMatch(matches, location) {\\n  let search = typeof location === \\\"string\\\" ? parsePath(location).search : location.search;\\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \\\"\\\")) {\\n    return matches[matches.length - 1];\\n  }\\n  let pathMatches = getPathContributingMatches(matches);\\n  return pathMatches[pathMatches.length - 1];\\n}\\nfunction getSubmissionFromNavigation(navigation) {\\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\\n  if (!formMethod || !formAction || !formEncType) {\\n    return;\\n  }\\n  if (text != null) {\\n    return {\\n      formMethod,\\n      formAction,\\n      formEncType,\\n      formData: void 0,\\n      json: void 0,\\n      text\\n    };\\n  } else if (formData != null) {\\n    return {\\n      formMethod,\\n      formAction,\\n      formEncType,\\n      formData,\\n      json: void 0,\\n      text: void 0\\n    };\\n  } else if (json !== void 0) {\\n    return {\\n      formMethod,\\n      formAction,\\n      formEncType,\\n      formData: void 0,\\n      json,\\n      text: void 0\\n    };\\n  }\\n}\\nfunction getLoadingNavigation(location, submission) {\\n  if (submission) {\\n    let navigation = {\\n      state: \\\"loading\\\",\\n      location,\\n      formMethod: submission.formMethod,\\n      formAction: submission.formAction,\\n      formEncType: submission.formEncType,\\n      formData: submission.formData,\\n      json: submission.json,\\n      text: submission.text\\n    };\\n    return navigation;\\n  } else {\\n    let navigation = {\\n      state: \\\"loading\\\",\\n      location,\\n      formMethod: void 0,\\n      formAction: void 0,\\n      formEncType: void 0,\\n      formData: void 0,\\n      json: void 0,\\n      text: void 0\\n    };\\n    return navigation;\\n  }\\n}\\nfunction getSubmittingNavigation(location, submission) {\\n  let navigation = {\\n    state: \\\"submitting\\\",\\n    location,\\n    formMethod: submission.formMethod,\\n    formAction: submission.formAction,\\n    formEncType: submission.formEncType,\\n    formData: submission.formData,\\n    json: submission.json,\\n    text: submission.text\\n  };\\n  return navigation;\\n}\\nfunction getLoadingFetcher(submission, data2) {\\n  if (submission) {\\n    let fetcher = {\\n      state: \\\"loading\\\",\\n      formMethod: submission.formMethod,\\n      formAction: submission.formAction,\\n      formEncType: submission.formEncType,\\n      formData: submission.formData,\\n      json: submission.json,\\n      text: submission.text,\\n      data: data2\\n    };\\n    return fetcher;\\n  } else {\\n    let fetcher = {\\n      state: \\\"loading\\\",\\n      formMethod: void 0,\\n      formAction: void 0,\\n      formEncType: void 0,\\n      formData: void 0,\\n      json: void 0,\\n      text: void 0,\\n      data: data2\\n    };\\n    return fetcher;\\n  }\\n}\\nfunction getSubmittingFetcher(submission, existingFetcher) {\\n  let fetcher = {\\n    state: \\\"submitting\\\",\\n    formMethod: submission.formMethod,\\n    formAction: submission.formAction,\\n    formEncType: submission.formEncType,\\n    formData: submission.formData,\\n    json: submission.json,\\n    text: submission.text,\\n    data: existingFetcher ? existingFetcher.data : void 0\\n  };\\n  return fetcher;\\n}\\nfunction getDoneFetcher(data2) {\\n  let fetcher = {\\n    state: \\\"idle\\\",\\n    formMethod: void 0,\\n    formAction: void 0,\\n    formEncType: void 0,\\n    formData: void 0,\\n    json: void 0,\\n    text: void 0,\\n    data: data2\\n  };\\n  return fetcher;\\n}\\nfunction restoreAppliedTransitions(_window, transitions) {\\n  try {\\n    let sessionPositions = _window.sessionStorage.getItem(\\n      TRANSITIONS_STORAGE_KEY\\n    );\\n    if (sessionPositions) {\\n      let json = JSON.parse(sessionPositions);\\n      for (let [k, v] of Object.entries(json || {})) {\\n        if (v && Array.isArray(v)) {\\n          transitions.set(k, new Set(v || []));\\n        }\\n      }\\n    }\\n  } catch (e) {\\n  }\\n}\\nfunction persistAppliedTransitions(_window, transitions) {\\n  if (transitions.size > 0) {\\n    let json = {};\\n    for (let [k, v] of transitions) {\\n      json[k] = [...v];\\n    }\\n    try {\\n      _window.sessionStorage.setItem(\\n        TRANSITIONS_STORAGE_KEY,\\n        JSON.stringify(json)\\n      );\\n    } catch (error) {\\n      warning(\\n        false,\\n        `Failed to save applied view transitions in sessionStorage (${error}).`\\n      );\\n    }\\n  }\\n}\\nfunction createDeferred() {\\n  let resolve;\\n  let reject;\\n  let promise = new Promise((res, rej) => {\\n    resolve = async (val) => {\\n      res(val);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n    reject = async (error) => {\\n      rej(error);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n  });\\n  return {\\n    promise,\\n    //@ts-ignore\\n    resolve,\\n    //@ts-ignore\\n    reject\\n  };\\n}\\n\\n// lib/components.tsx\\nimport * as React3 from \\\"react\\\";\\n\\n// lib/context.ts\\nimport * as React from \\\"react\\\";\\nvar DataRouterContext = React.createContext(null);\\nDataRouterContext.displayName = \\\"DataRouter\\\";\\nvar DataRouterStateContext = React.createContext(null);\\nDataRouterStateContext.displayName = \\\"DataRouterState\\\";\\nvar ViewTransitionContext = React.createContext({\\n  isTransitioning: false\\n});\\nViewTransitionContext.displayName = \\\"ViewTransition\\\";\\nvar FetchersContext = React.createContext(\\n  /* @__PURE__ */ new Map()\\n);\\nFetchersContext.displayName = \\\"Fetchers\\\";\\nvar AwaitContext = React.createContext(null);\\nAwaitContext.displayName = \\\"Await\\\";\\nvar NavigationContext = React.createContext(\\n  null\\n);\\nNavigationContext.displayName = \\\"Navigation\\\";\\nvar LocationContext = React.createContext(\\n  null\\n);\\nLocationContext.displayName = \\\"Location\\\";\\nvar RouteContext = React.createContext({\\n  outlet: null,\\n  matches: [],\\n  isDataRoute: false\\n});\\nRouteContext.displayName = \\\"Route\\\";\\nvar RouteErrorContext = React.createContext(null);\\nRouteErrorContext.displayName = \\\"RouteError\\\";\\n\\n// lib/hooks.tsx\\nimport * as React2 from \\\"react\\\";\\nvar ENABLE_DEV_WARNINGS = true;\\nfunction useHref(to, { relative } = {}) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useHref() may be used only in the context of a <Router> component.`\\n  );\\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\\n  let joinedPathname = pathname;\\n  if (basename !== \\\"/\\\") {\\n    joinedPathname = pathname === \\\"/\\\" ? basename : joinPaths([basename, pathname]);\\n  }\\n  return navigator2.createHref({ pathname: joinedPathname, search, hash });\\n}\\nfunction useInRouterContext() {\\n  return React2.useContext(LocationContext) != null;\\n}\\nfunction useLocation() {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useLocation() may be used only in the context of a <Router> component.`\\n  );\\n  return React2.useContext(LocationContext).location;\\n}\\nfunction useNavigationType() {\\n  return React2.useContext(LocationContext).navigationType;\\n}\\nfunction useMatch(pattern) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useMatch() may be used only in the context of a <Router> component.`\\n  );\\n  let { pathname } = useLocation();\\n  return React2.useMemo(\\n    () => matchPath(pattern, decodePath(pathname)),\\n    [pathname, pattern]\\n  );\\n}\\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\\nfunction useIsomorphicLayoutEffect(cb) {\\n  let isStatic = React2.useContext(NavigationContext).static;\\n  if (!isStatic) {\\n    React2.useLayoutEffect(cb);\\n  }\\n}\\nfunction useNavigate() {\\n  let { isDataRoute } = React2.useContext(RouteContext);\\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\\n}\\nfunction useNavigateUnstable() {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useNavigate() may be used only in the context of a <Router> component.`\\n  );\\n  let dataRouterContext = React2.useContext(DataRouterContext);\\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\\n  let { matches } = React2.useContext(RouteContext);\\n  let { pathname: locationPathname } = useLocation();\\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\\n  let activeRef = React2.useRef(false);\\n  useIsomorphicLayoutEffect(() => {\\n    activeRef.current = true;\\n  });\\n  let navigate = React2.useCallback(\\n    (to, options = {}) => {\\n      warning(activeRef.current, navigateEffectWarning);\\n      if (!activeRef.current) return;\\n      if (typeof to === \\\"number\\\") {\\n        navigator2.go(to);\\n        return;\\n      }\\n      let path = resolveTo(\\n        to,\\n        JSON.parse(routePathnamesJson),\\n        locationPathname,\\n        options.relative === \\\"path\\\"\\n      );\\n      if (dataRouterContext == null && basename !== \\\"/\\\") {\\n        path.pathname = path.pathname === \\\"/\\\" ? basename : joinPaths([basename, path.pathname]);\\n      }\\n      (!!options.replace ? navigator2.replace : navigator2.push)(\\n        path,\\n        options.state,\\n        options\\n      );\\n    },\\n    [\\n      basename,\\n      navigator2,\\n      routePathnamesJson,\\n      locationPathname,\\n      dataRouterContext\\n    ]\\n  );\\n  return navigate;\\n}\\nvar OutletContext = React2.createContext(null);\\nfunction useOutletContext() {\\n  return React2.useContext(OutletContext);\\n}\\nfunction useOutlet(context) {\\n  let outlet = React2.useContext(RouteContext).outlet;\\n  if (outlet) {\\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\\n  }\\n  return outlet;\\n}\\nfunction useParams() {\\n  let { matches } = React2.useContext(RouteContext);\\n  let routeMatch = matches[matches.length - 1];\\n  return routeMatch ? routeMatch.params : {};\\n}\\nfunction useResolvedPath(to, { relative } = {}) {\\n  let { matches } = React2.useContext(RouteContext);\\n  let { pathname: locationPathname } = useLocation();\\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\\n  return React2.useMemo(\\n    () => resolveTo(\\n      to,\\n      JSON.parse(routePathnamesJson),\\n      locationPathname,\\n      relative === \\\"path\\\"\\n    ),\\n    [to, routePathnamesJson, locationPathname, relative]\\n  );\\n}\\nfunction useRoutes(routes, locationArg) {\\n  return useRoutesImpl(routes, locationArg);\\n}\\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useRoutes() may be used only in the context of a <Router> component.`\\n  );\\n  let { navigator: navigator2 } = React2.useContext(NavigationContext);\\n  let { matches: parentMatches } = React2.useContext(RouteContext);\\n  let routeMatch = parentMatches[parentMatches.length - 1];\\n  let parentParams = routeMatch ? routeMatch.params : {};\\n  let parentPathname = routeMatch ? routeMatch.pathname : \\\"/\\\";\\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \\\"/\\\";\\n  let parentRoute = routeMatch && routeMatch.route;\\n  if (ENABLE_DEV_WARNINGS) {\\n    let parentPath = parentRoute && parentRoute.path || \\\"\\\";\\n    warningOnce(\\n      parentPathname,\\n      !parentRoute || parentPath.endsWith(\\\"*\\\") || parentPath.endsWith(\\\"*?\\\"),\\n      `You rendered descendant <Routes> (or called \\\\`useRoutes()\\\\`) at \\\"${parentPathname}\\\" (under <Route path=\\\"${parentPath}\\\">) but the parent route path has no trailing \\\"*\\\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\\n\\nPlease change the parent <Route path=\\\"${parentPath}\\\"> to <Route path=\\\"${parentPath === \\\"/\\\" ? \\\"*\\\" : `${parentPath}/*`}\\\">.`\\n    );\\n  }\\n  let locationFromContext = useLocation();\\n  let location;\\n  if (locationArg) {\\n    let parsedLocationArg = typeof locationArg === \\\"string\\\" ? parsePath(locationArg) : locationArg;\\n    invariant(\\n      parentPathnameBase === \\\"/\\\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\\n      `When overriding the location using \\\\`<Routes location>\\\\` or \\\\`useRoutes(routes, location)\\\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \\\"${parentPathnameBase}\\\" but pathname \\\"${parsedLocationArg.pathname}\\\" was given in the \\\\`location\\\\` prop.`\\n    );\\n    location = parsedLocationArg;\\n  } else {\\n    location = locationFromContext;\\n  }\\n  let pathname = location.pathname || \\\"/\\\";\\n  let remainingPathname = pathname;\\n  if (parentPathnameBase !== \\\"/\\\") {\\n    let parentSegments = parentPathnameBase.replace(/^\\\\//, \\\"\\\").split(\\\"/\\\");\\n    let segments = pathname.replace(/^\\\\//, \\\"\\\").split(\\\"/\\\");\\n    remainingPathname = \\\"/\\\" + segments.slice(parentSegments.length).join(\\\"/\\\");\\n  }\\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\\n  if (ENABLE_DEV_WARNINGS) {\\n    warning(\\n      parentRoute || matches != null,\\n      `No routes matched location \\\"${location.pathname}${location.search}${location.hash}\\\" `\\n    );\\n    warning(\\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\\n      `Matched leaf route at location \\\"${location.pathname}${location.search}${location.hash}\\\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.`\\n    );\\n  }\\n  let renderedMatches = _renderMatches(\\n    matches && matches.map(\\n      (match) => Object.assign({}, match, {\\n        params: Object.assign({}, parentParams, match.params),\\n        pathname: joinPaths([\\n          parentPathnameBase,\\n          // Re-encode pathnames that were decoded inside matchRoutes\\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\\n        ]),\\n        pathnameBase: match.pathnameBase === \\\"/\\\" ? parentPathnameBase : joinPaths([\\n          parentPathnameBase,\\n          // Re-encode pathnames that were decoded inside matchRoutes\\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\\n        ])\\n      })\\n    ),\\n    parentMatches,\\n    dataRouterState,\\n    future\\n  );\\n  if (locationArg && renderedMatches) {\\n    return /* @__PURE__ */ React2.createElement(\\n      LocationContext.Provider,\\n      {\\n        value: {\\n          location: {\\n            pathname: \\\"/\\\",\\n            search: \\\"\\\",\\n            hash: \\\"\\\",\\n            state: null,\\n            key: \\\"default\\\",\\n            ...location\\n          },\\n          navigationType: \\\"POP\\\" /* Pop */\\n        }\\n      },\\n      renderedMatches\\n    );\\n  }\\n  return renderedMatches;\\n}\\nfunction DefaultErrorComponent() {\\n  let error = useRouteError();\\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\\n  let stack = error instanceof Error ? error.stack : null;\\n  let lightgrey = \\\"rgba(200,200,200, 0.5)\\\";\\n  let preStyles = { padding: \\\"0.5rem\\\", backgroundColor: lightgrey };\\n  let codeStyles = { padding: \\\"2px 4px\\\", backgroundColor: lightgrey };\\n  let devInfo = null;\\n  if (ENABLE_DEV_WARNINGS) {\\n    console.error(\\n      \\\"Error handled by React Router default ErrorBoundary:\\\",\\n      error\\n    );\\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\\\"p\\\", null, \\\"\\\\u{1F4BF} Hey developer \\\\u{1F44B}\\\"), /* @__PURE__ */ React2.createElement(\\\"p\\\", null, \\\"You can provide a way better UX than this when your app throws errors by providing your own \\\", /* @__PURE__ */ React2.createElement(\\\"code\\\", { style: codeStyles }, \\\"ErrorBoundary\\\"), \\\" or\\\", \\\" \\\", /* @__PURE__ */ React2.createElement(\\\"code\\\", { style: codeStyles }, \\\"errorElement\\\"), \\\" prop on your route.\\\"));\\n  }\\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\\\"h2\\\", null, \\\"Unexpected Application Error!\\\"), /* @__PURE__ */ React2.createElement(\\\"h3\\\", { style: { fontStyle: \\\"italic\\\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\\\"pre\\\", { style: preStyles }, stack) : null, devInfo);\\n}\\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\\nvar RenderErrorBoundary = class extends React2.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      location: props.location,\\n      revalidation: props.revalidation,\\n      error: props.error\\n    };\\n  }\\n  static getDerivedStateFromError(error) {\\n    return { error };\\n  }\\n  static getDerivedStateFromProps(props, state) {\\n    if (state.location !== props.location || state.revalidation !== \\\"idle\\\" && props.revalidation === \\\"idle\\\") {\\n      return {\\n        error: props.error,\\n        location: props.location,\\n        revalidation: props.revalidation\\n      };\\n    }\\n    return {\\n      error: props.error !== void 0 ? props.error : state.error,\\n      location: state.location,\\n      revalidation: props.revalidation || state.revalidation\\n    };\\n  }\\n  componentDidCatch(error, errorInfo) {\\n    console.error(\\n      \\\"React Router caught the following error during render\\\",\\n      error,\\n      errorInfo\\n    );\\n  }\\n  render() {\\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\\n      RouteErrorContext.Provider,\\n      {\\n        value: this.state.error,\\n        children: this.props.component\\n      }\\n    )) : this.props.children;\\n  }\\n};\\nfunction RenderedRoute({ routeContext, match, children }) {\\n  let dataRouterContext = React2.useContext(DataRouterContext);\\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\\n  }\\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\\n}\\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\\n  if (matches == null) {\\n    if (!dataRouterState) {\\n      return null;\\n    }\\n    if (dataRouterState.errors) {\\n      matches = dataRouterState.matches;\\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\\n      matches = dataRouterState.matches;\\n    } else {\\n      return null;\\n    }\\n  }\\n  let renderedMatches = matches;\\n  let errors = dataRouterState?.errors;\\n  if (errors != null) {\\n    let errorIndex = renderedMatches.findIndex(\\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\\n    );\\n    invariant(\\n      errorIndex >= 0,\\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\\n        errors\\n      ).join(\\\",\\\")}`\\n    );\\n    renderedMatches = renderedMatches.slice(\\n      0,\\n      Math.min(renderedMatches.length, errorIndex + 1)\\n    );\\n  }\\n  let renderFallback = false;\\n  let fallbackIndex = -1;\\n  if (dataRouterState) {\\n    for (let i = 0; i < renderedMatches.length; i++) {\\n      let match = renderedMatches[i];\\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\\n        fallbackIndex = i;\\n      }\\n      if (match.route.id) {\\n        let { loaderData, errors: errors2 } = dataRouterState;\\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\\n        if (match.route.lazy || needsToRunLoader) {\\n          renderFallback = true;\\n          if (fallbackIndex >= 0) {\\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\\n          } else {\\n            renderedMatches = [renderedMatches[0]];\\n          }\\n          break;\\n        }\\n      }\\n    }\\n  }\\n  return renderedMatches.reduceRight((outlet, match, index) => {\\n    let error;\\n    let shouldRenderHydrateFallback = false;\\n    let errorElement = null;\\n    let hydrateFallbackElement = null;\\n    if (dataRouterState) {\\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\\n      errorElement = match.route.errorElement || defaultErrorElement;\\n      if (renderFallback) {\\n        if (fallbackIndex < 0 && index === 0) {\\n          warningOnce(\\n            \\\"route-fallback\\\",\\n            false,\\n            \\\"No `HydrateFallback` element provided to render during initial hydration\\\"\\n          );\\n          shouldRenderHydrateFallback = true;\\n          hydrateFallbackElement = null;\\n        } else if (fallbackIndex === index) {\\n          shouldRenderHydrateFallback = true;\\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\\n        }\\n      }\\n    }\\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\\n    let getChildren = () => {\\n      let children;\\n      if (error) {\\n        children = errorElement;\\n      } else if (shouldRenderHydrateFallback) {\\n        children = hydrateFallbackElement;\\n      } else if (match.route.Component) {\\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\\n      } else if (match.route.element) {\\n        children = match.route.element;\\n      } else {\\n        children = outlet;\\n      }\\n      return /* @__PURE__ */ React2.createElement(\\n        RenderedRoute,\\n        {\\n          match,\\n          routeContext: {\\n            outlet,\\n            matches: matches2,\\n            isDataRoute: dataRouterState != null\\n          },\\n          children\\n        }\\n      );\\n    };\\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\\n      RenderErrorBoundary,\\n      {\\n        location: dataRouterState.location,\\n        revalidation: dataRouterState.revalidation,\\n        component: errorElement,\\n        error,\\n        children: getChildren(),\\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\\n      }\\n    ) : getChildren();\\n  }, null);\\n}\\nfunction getDataRouterConsoleError(hookName) {\\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\\n}\\nfunction useDataRouterContext(hookName) {\\n  let ctx = React2.useContext(DataRouterContext);\\n  invariant(ctx, getDataRouterConsoleError(hookName));\\n  return ctx;\\n}\\nfunction useDataRouterState(hookName) {\\n  let state = React2.useContext(DataRouterStateContext);\\n  invariant(state, getDataRouterConsoleError(hookName));\\n  return state;\\n}\\nfunction useRouteContext(hookName) {\\n  let route = React2.useContext(RouteContext);\\n  invariant(route, getDataRouterConsoleError(hookName));\\n  return route;\\n}\\nfunction useCurrentRouteId(hookName) {\\n  let route = useRouteContext(hookName);\\n  let thisRoute = route.matches[route.matches.length - 1];\\n  invariant(\\n    thisRoute.route.id,\\n    `${hookName} can only be used on routes that contain a unique \\\"id\\\"`\\n  );\\n  return thisRoute.route.id;\\n}\\nfunction useRouteId() {\\n  return useCurrentRouteId(\\\"useRouteId\\\" /* UseRouteId */);\\n}\\nfunction useNavigation() {\\n  let state = useDataRouterState(\\\"useNavigation\\\" /* UseNavigation */);\\n  return state.navigation;\\n}\\nfunction useRevalidator() {\\n  let dataRouterContext = useDataRouterContext(\\\"useRevalidator\\\" /* UseRevalidator */);\\n  let state = useDataRouterState(\\\"useRevalidator\\\" /* UseRevalidator */);\\n  return React2.useMemo(\\n    () => ({\\n      async revalidate() {\\n        await dataRouterContext.router.revalidate();\\n      },\\n      state: state.revalidation\\n    }),\\n    [dataRouterContext.router, state.revalidation]\\n  );\\n}\\nfunction useMatches() {\\n  let { matches, loaderData } = useDataRouterState(\\n    \\\"useMatches\\\" /* UseMatches */\\n  );\\n  return React2.useMemo(\\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\\n    [matches, loaderData]\\n  );\\n}\\nfunction useLoaderData() {\\n  let state = useDataRouterState(\\\"useLoaderData\\\" /* UseLoaderData */);\\n  let routeId = useCurrentRouteId(\\\"useLoaderData\\\" /* UseLoaderData */);\\n  return state.loaderData[routeId];\\n}\\nfunction useRouteLoaderData(routeId) {\\n  let state = useDataRouterState(\\\"useRouteLoaderData\\\" /* UseRouteLoaderData */);\\n  return state.loaderData[routeId];\\n}\\nfunction useActionData() {\\n  let state = useDataRouterState(\\\"useActionData\\\" /* UseActionData */);\\n  let routeId = useCurrentRouteId(\\\"useLoaderData\\\" /* UseLoaderData */);\\n  return state.actionData ? state.actionData[routeId] : void 0;\\n}\\nfunction useRouteError() {\\n  let error = React2.useContext(RouteErrorContext);\\n  let state = useDataRouterState(\\\"useRouteError\\\" /* UseRouteError */);\\n  let routeId = useCurrentRouteId(\\\"useRouteError\\\" /* UseRouteError */);\\n  if (error !== void 0) {\\n    return error;\\n  }\\n  return state.errors?.[routeId];\\n}\\nfunction useAsyncValue() {\\n  let value = React2.useContext(AwaitContext);\\n  return value?._data;\\n}\\nfunction useAsyncError() {\\n  let value = React2.useContext(AwaitContext);\\n  return value?._error;\\n}\\nvar blockerId = 0;\\nfunction useBlocker(shouldBlock) {\\n  let { router, basename } = useDataRouterContext(\\\"useBlocker\\\" /* UseBlocker */);\\n  let state = useDataRouterState(\\\"useBlocker\\\" /* UseBlocker */);\\n  let [blockerKey, setBlockerKey] = React2.useState(\\\"\\\");\\n  let blockerFunction = React2.useCallback(\\n    (arg) => {\\n      if (typeof shouldBlock !== \\\"function\\\") {\\n        return !!shouldBlock;\\n      }\\n      if (basename === \\\"/\\\") {\\n        return shouldBlock(arg);\\n      }\\n      let { currentLocation, nextLocation, historyAction } = arg;\\n      return shouldBlock({\\n        currentLocation: {\\n          ...currentLocation,\\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\\n        },\\n        nextLocation: {\\n          ...nextLocation,\\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\\n        },\\n        historyAction\\n      });\\n    },\\n    [basename, shouldBlock]\\n  );\\n  React2.useEffect(() => {\\n    let key = String(++blockerId);\\n    setBlockerKey(key);\\n    return () => router.deleteBlocker(key);\\n  }, [router]);\\n  React2.useEffect(() => {\\n    if (blockerKey !== \\\"\\\") {\\n      router.getBlocker(blockerKey, blockerFunction);\\n    }\\n  }, [router, blockerKey, blockerFunction]);\\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\\n}\\nfunction useNavigateStable() {\\n  let { router } = useDataRouterContext(\\\"useNavigate\\\" /* UseNavigateStable */);\\n  let id = useCurrentRouteId(\\\"useNavigate\\\" /* UseNavigateStable */);\\n  let activeRef = React2.useRef(false);\\n  useIsomorphicLayoutEffect(() => {\\n    activeRef.current = true;\\n  });\\n  let navigate = React2.useCallback(\\n    async (to, options = {}) => {\\n      warning(activeRef.current, navigateEffectWarning);\\n      if (!activeRef.current) return;\\n      if (typeof to === \\\"number\\\") {\\n        router.navigate(to);\\n      } else {\\n        await router.navigate(to, { fromRouteId: id, ...options });\\n      }\\n    },\\n    [router, id]\\n  );\\n  return navigate;\\n}\\nvar alreadyWarned = {};\\nfunction warningOnce(key, cond, message) {\\n  if (!cond && !alreadyWarned[key]) {\\n    alreadyWarned[key] = true;\\n    warning(false, message);\\n  }\\n}\\n\\n// lib/server-runtime/warnings.ts\\nvar alreadyWarned2 = {};\\nfunction warnOnce(condition, message) {\\n  if (!condition && !alreadyWarned2[message]) {\\n    alreadyWarned2[message] = true;\\n    console.warn(message);\\n  }\\n}\\n\\n// lib/components.tsx\\nvar ENABLE_DEV_WARNINGS2 = true;\\nfunction mapRouteProperties(route) {\\n  let updates = {\\n    // Note: this check also occurs in createRoutesFromChildren so update\\n    // there if you change this -- please and thank you!\\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\\n  };\\n  if (route.Component) {\\n    if (ENABLE_DEV_WARNINGS2) {\\n      if (route.element) {\\n        warning(\\n          false,\\n          \\\"You should not include both `Component` and `element` on your route - `Component` will be used.\\\"\\n        );\\n      }\\n    }\\n    Object.assign(updates, {\\n      element: React3.createElement(route.Component),\\n      Component: void 0\\n    });\\n  }\\n  if (route.HydrateFallback) {\\n    if (ENABLE_DEV_WARNINGS2) {\\n      if (route.hydrateFallbackElement) {\\n        warning(\\n          false,\\n          \\\"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\\\"\\n        );\\n      }\\n    }\\n    Object.assign(updates, {\\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\\n      HydrateFallback: void 0\\n    });\\n  }\\n  if (route.ErrorBoundary) {\\n    if (ENABLE_DEV_WARNINGS2) {\\n      if (route.errorElement) {\\n        warning(\\n          false,\\n          \\\"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\\\"\\n        );\\n      }\\n    }\\n    Object.assign(updates, {\\n      errorElement: React3.createElement(route.ErrorBoundary),\\n      ErrorBoundary: void 0\\n    });\\n  }\\n  return updates;\\n}\\nfunction createMemoryRouter(routes, opts) {\\n  return createRouter({\\n    basename: opts?.basename,\\n    future: opts?.future,\\n    history: createMemoryHistory({\\n      initialEntries: opts?.initialEntries,\\n      initialIndex: opts?.initialIndex\\n    }),\\n    hydrationData: opts?.hydrationData,\\n    routes,\\n    mapRouteProperties,\\n    dataStrategy: opts?.dataStrategy,\\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\\n  }).initialize();\\n}\\nvar Deferred = class {\\n  constructor() {\\n    this.status = \\\"pending\\\";\\n    this.promise = new Promise((resolve, reject) => {\\n      this.resolve = (value) => {\\n        if (this.status === \\\"pending\\\") {\\n          this.status = \\\"resolved\\\";\\n          resolve(value);\\n        }\\n      };\\n      this.reject = (reason) => {\\n        if (this.status === \\\"pending\\\") {\\n          this.status = \\\"rejected\\\";\\n          reject(reason);\\n        }\\n      };\\n    });\\n  }\\n};\\nfunction RouterProvider({\\n  router,\\n  flushSync: reactDomFlushSyncImpl\\n}) {\\n  let [state, setStateImpl] = React3.useState(router.state);\\n  let [pendingState, setPendingState] = React3.useState();\\n  let [vtContext, setVtContext] = React3.useState({\\n    isTransitioning: false\\n  });\\n  let [renderDfd, setRenderDfd] = React3.useState();\\n  let [transition, setTransition] = React3.useState();\\n  let [interruption, setInterruption] = React3.useState();\\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\\n  let setState = React3.useCallback(\\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\\n      newState.fetchers.forEach((fetcher, key) => {\\n        if (fetcher.data !== void 0) {\\n          fetcherData.current.set(key, fetcher.data);\\n        }\\n      });\\n      warnOnce(\\n        flushSync === false || reactDomFlushSyncImpl != null,\\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \\\"react-router/dom\\\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\\n      );\\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \\\"function\\\";\\n      warnOnce(\\n        viewTransitionOpts == null || isViewTransitionAvailable,\\n        \\\"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\\\"\\n      );\\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\\n        if (reactDomFlushSyncImpl && flushSync) {\\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\\n        } else {\\n          React3.startTransition(() => setStateImpl(newState));\\n        }\\n        return;\\n      }\\n      if (reactDomFlushSyncImpl && flushSync) {\\n        reactDomFlushSyncImpl(() => {\\n          if (transition) {\\n            renderDfd && renderDfd.resolve();\\n            transition.skipTransition();\\n          }\\n          setVtContext({\\n            isTransitioning: true,\\n            flushSync: true,\\n            currentLocation: viewTransitionOpts.currentLocation,\\n            nextLocation: viewTransitionOpts.nextLocation\\n          });\\n        });\\n        let t = router.window.document.startViewTransition(() => {\\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\\n        });\\n        t.finished.finally(() => {\\n          reactDomFlushSyncImpl(() => {\\n            setRenderDfd(void 0);\\n            setTransition(void 0);\\n            setPendingState(void 0);\\n            setVtContext({ isTransitioning: false });\\n          });\\n        });\\n        reactDomFlushSyncImpl(() => setTransition(t));\\n        return;\\n      }\\n      if (transition) {\\n        renderDfd && renderDfd.resolve();\\n        transition.skipTransition();\\n        setInterruption({\\n          state: newState,\\n          currentLocation: viewTransitionOpts.currentLocation,\\n          nextLocation: viewTransitionOpts.nextLocation\\n        });\\n      } else {\\n        setPendingState(newState);\\n        setVtContext({\\n          isTransitioning: true,\\n          flushSync: false,\\n          currentLocation: viewTransitionOpts.currentLocation,\\n          nextLocation: viewTransitionOpts.nextLocation\\n        });\\n      }\\n    },\\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\\n  );\\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\\n  React3.useEffect(() => {\\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\\n      setRenderDfd(new Deferred());\\n    }\\n  }, [vtContext]);\\n  React3.useEffect(() => {\\n    if (renderDfd && pendingState && router.window) {\\n      let newState = pendingState;\\n      let renderPromise = renderDfd.promise;\\n      let transition2 = router.window.document.startViewTransition(async () => {\\n        React3.startTransition(() => setStateImpl(newState));\\n        await renderPromise;\\n      });\\n      transition2.finished.finally(() => {\\n        setRenderDfd(void 0);\\n        setTransition(void 0);\\n        setPendingState(void 0);\\n        setVtContext({ isTransitioning: false });\\n      });\\n      setTransition(transition2);\\n    }\\n  }, [pendingState, renderDfd, router.window]);\\n  React3.useEffect(() => {\\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\\n      renderDfd.resolve();\\n    }\\n  }, [renderDfd, transition, state.location, pendingState]);\\n  React3.useEffect(() => {\\n    if (!vtContext.isTransitioning && interruption) {\\n      setPendingState(interruption.state);\\n      setVtContext({\\n        isTransitioning: true,\\n        flushSync: false,\\n        currentLocation: interruption.currentLocation,\\n        nextLocation: interruption.nextLocation\\n      });\\n      setInterruption(void 0);\\n    }\\n  }, [vtContext.isTransitioning, interruption]);\\n  let navigator2 = React3.useMemo(() => {\\n    return {\\n      createHref: router.createHref,\\n      encodeLocation: router.encodeLocation,\\n      go: (n) => router.navigate(n),\\n      push: (to, state2, opts) => router.navigate(to, {\\n        state: state2,\\n        preventScrollReset: opts?.preventScrollReset\\n      }),\\n      replace: (to, state2, opts) => router.navigate(to, {\\n        replace: true,\\n        state: state2,\\n        preventScrollReset: opts?.preventScrollReset\\n      })\\n    };\\n  }, [router]);\\n  let basename = router.basename || \\\"/\\\";\\n  let dataRouterContext = React3.useMemo(\\n    () => ({\\n      router,\\n      navigator: navigator2,\\n      static: false,\\n      basename\\n    }),\\n    [router, navigator2, basename]\\n  );\\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\\n    Router,\\n    {\\n      basename,\\n      location: state.location,\\n      navigationType: state.historyAction,\\n      navigator: navigator2\\n    },\\n    /* @__PURE__ */ React3.createElement(\\n      MemoizedDataRoutes,\\n      {\\n        routes: router.routes,\\n        future: router.future,\\n        state\\n      }\\n    )\\n  ))))), null);\\n}\\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\\nfunction DataRoutes({\\n  routes,\\n  future,\\n  state\\n}) {\\n  return useRoutesImpl(routes, void 0, state, future);\\n}\\nfunction MemoryRouter({\\n  basename,\\n  children,\\n  initialEntries,\\n  initialIndex\\n}) {\\n  let historyRef = React3.useRef();\\n  if (historyRef.current == null) {\\n    historyRef.current = createMemoryHistory({\\n      initialEntries,\\n      initialIndex,\\n      v5Compat: true\\n    });\\n  }\\n  let history = historyRef.current;\\n  let [state, setStateImpl] = React3.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React3.useCallback(\\n    (newState) => {\\n      React3.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React3.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nfunction Navigate({\\n  to,\\n  replace: replace2,\\n  state,\\n  relative\\n}) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of\\n    // the router loaded. We can help them understand how to avoid that.\\n    `<Navigate> may be used only in the context of a <Router> component.`\\n  );\\n  let { static: isStatic } = React3.useContext(NavigationContext);\\n  warning(\\n    !isStatic,\\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\\n  );\\n  let { matches } = React3.useContext(RouteContext);\\n  let { pathname: locationPathname } = useLocation();\\n  let navigate = useNavigate();\\n  let path = resolveTo(\\n    to,\\n    getResolveToMatches(matches),\\n    locationPathname,\\n    relative === \\\"path\\\"\\n  );\\n  let jsonPath = JSON.stringify(path);\\n  React3.useEffect(() => {\\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\\n  }, [navigate, jsonPath, relative, replace2, state]);\\n  return null;\\n}\\nfunction Outlet(props) {\\n  return useOutlet(props.context);\\n}\\nfunction Route(_props) {\\n  invariant(\\n    false,\\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\\n  );\\n}\\nfunction Router({\\n  basename: basenameProp = \\\"/\\\",\\n  children = null,\\n  location: locationProp,\\n  navigationType = \\\"POP\\\" /* Pop */,\\n  navigator: navigator2,\\n  static: staticProp = false\\n}) {\\n  invariant(\\n    !useInRouterContext(),\\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\\n  );\\n  let basename = basenameProp.replace(/^\\\\/*/, \\\"/\\\");\\n  let navigationContext = React3.useMemo(\\n    () => ({\\n      basename,\\n      navigator: navigator2,\\n      static: staticProp,\\n      future: {}\\n    }),\\n    [basename, navigator2, staticProp]\\n  );\\n  if (typeof locationProp === \\\"string\\\") {\\n    locationProp = parsePath(locationProp);\\n  }\\n  let {\\n    pathname = \\\"/\\\",\\n    search = \\\"\\\",\\n    hash = \\\"\\\",\\n    state = null,\\n    key = \\\"default\\\"\\n  } = locationProp;\\n  let locationContext = React3.useMemo(() => {\\n    let trailingPathname = stripBasename(pathname, basename);\\n    if (trailingPathname == null) {\\n      return null;\\n    }\\n    return {\\n      location: {\\n        pathname: trailingPathname,\\n        search,\\n        hash,\\n        state,\\n        key\\n      },\\n      navigationType\\n    };\\n  }, [basename, pathname, search, hash, state, key, navigationType]);\\n  warning(\\n    locationContext != null,\\n    `<Router basename=\\\"${basename}\\\"> is not able to match the URL \\\"${pathname}${search}${hash}\\\" because it does not start with the basename, so the <Router> won't render anything.`\\n  );\\n  if (locationContext == null) {\\n    return null;\\n  }\\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\\n}\\nfunction Routes({\\n  children,\\n  location\\n}) {\\n  return useRoutes(createRoutesFromChildren(children), location);\\n}\\nfunction Await({\\n  children,\\n  errorElement,\\n  resolve\\n}) {\\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\\n}\\nvar AwaitErrorBoundary = class extends React3.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = { error: null };\\n  }\\n  static getDerivedStateFromError(error) {\\n    return { error };\\n  }\\n  componentDidCatch(error, errorInfo) {\\n    console.error(\\n      \\\"<Await> caught the following error during render\\\",\\n      error,\\n      errorInfo\\n    );\\n  }\\n  render() {\\n    let { children, errorElement, resolve } = this.props;\\n    let promise = null;\\n    let status = 0 /* pending */;\\n    if (!(resolve instanceof Promise)) {\\n      status = 1 /* success */;\\n      promise = Promise.resolve();\\n      Object.defineProperty(promise, \\\"_tracked\\\", { get: () => true });\\n      Object.defineProperty(promise, \\\"_data\\\", { get: () => resolve });\\n    } else if (this.state.error) {\\n      status = 2 /* error */;\\n      let renderError = this.state.error;\\n      promise = Promise.reject().catch(() => {\\n      });\\n      Object.defineProperty(promise, \\\"_tracked\\\", { get: () => true });\\n      Object.defineProperty(promise, \\\"_error\\\", { get: () => renderError });\\n    } else if (resolve._tracked) {\\n      promise = resolve;\\n      status = \\\"_error\\\" in promise ? 2 /* error */ : \\\"_data\\\" in promise ? 1 /* success */ : 0 /* pending */;\\n    } else {\\n      status = 0 /* pending */;\\n      Object.defineProperty(resolve, \\\"_tracked\\\", { get: () => true });\\n      promise = resolve.then(\\n        (data2) => Object.defineProperty(resolve, \\\"_data\\\", { get: () => data2 }),\\n        (error) => Object.defineProperty(resolve, \\\"_error\\\", { get: () => error })\\n      );\\n    }\\n    if (status === 2 /* error */ && !errorElement) {\\n      throw promise._error;\\n    }\\n    if (status === 2 /* error */) {\\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\\n    }\\n    if (status === 1 /* success */) {\\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\\n    }\\n    throw promise;\\n  }\\n};\\nfunction ResolveAwait({\\n  children\\n}) {\\n  let data2 = useAsyncValue();\\n  let toRender = typeof children === \\\"function\\\" ? children(data2) : children;\\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\\n}\\nfunction createRoutesFromChildren(children, parentPath = []) {\\n  let routes = [];\\n  React3.Children.forEach(children, (element, index) => {\\n    if (!React3.isValidElement(element)) {\\n      return;\\n    }\\n    let treePath = [...parentPath, index];\\n    if (element.type === React3.Fragment) {\\n      routes.push.apply(\\n        routes,\\n        createRoutesFromChildren(element.props.children, treePath)\\n      );\\n      return;\\n    }\\n    invariant(\\n      element.type === Route,\\n      `[${typeof element.type === \\\"string\\\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\\n    );\\n    invariant(\\n      !element.props.index || !element.props.children,\\n      \\\"An index route cannot have child routes.\\\"\\n    );\\n    let route = {\\n      id: element.props.id || treePath.join(\\\"-\\\"),\\n      caseSensitive: element.props.caseSensitive,\\n      element: element.props.element,\\n      Component: element.props.Component,\\n      index: element.props.index,\\n      path: element.props.path,\\n      loader: element.props.loader,\\n      action: element.props.action,\\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\\n      HydrateFallback: element.props.HydrateFallback,\\n      errorElement: element.props.errorElement,\\n      ErrorBoundary: element.props.ErrorBoundary,\\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\\n      shouldRevalidate: element.props.shouldRevalidate,\\n      handle: element.props.handle,\\n      lazy: element.props.lazy\\n    };\\n    if (element.props.children) {\\n      route.children = createRoutesFromChildren(\\n        element.props.children,\\n        treePath\\n      );\\n    }\\n    routes.push(route);\\n  });\\n  return routes;\\n}\\nvar createRoutesFromElements = createRoutesFromChildren;\\nfunction renderMatches(matches) {\\n  return _renderMatches(matches);\\n}\\n\\n// lib/dom/lib.tsx\\nimport * as React10 from \\\"react\\\";\\n\\n// lib/dom/dom.ts\\nvar defaultMethod = \\\"get\\\";\\nvar defaultEncType = \\\"application/x-www-form-urlencoded\\\";\\nfunction isHtmlElement(object) {\\n  return object != null && typeof object.tagName === \\\"string\\\";\\n}\\nfunction isButtonElement(object) {\\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"button\\\";\\n}\\nfunction isFormElement(object) {\\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"form\\\";\\n}\\nfunction isInputElement(object) {\\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"input\\\";\\n}\\nfunction isModifiedEvent(event) {\\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\\n}\\nfunction shouldProcessLinkClick(event, target) {\\n  return event.button === 0 && // Ignore everything but left clicks\\n  (!target || target === \\\"_self\\\") && // Let browser handle \\\"target=_blank\\\" etc.\\n  !isModifiedEvent(event);\\n}\\nfunction createSearchParams(init = \\\"\\\") {\\n  return new URLSearchParams(\\n    typeof init === \\\"string\\\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\\n      let value = init[key];\\n      return memo2.concat(\\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\\n      );\\n    }, [])\\n  );\\n}\\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\\n  let searchParams = createSearchParams(locationSearch);\\n  if (defaultSearchParams) {\\n    defaultSearchParams.forEach((_, key) => {\\n      if (!searchParams.has(key)) {\\n        defaultSearchParams.getAll(key).forEach((value) => {\\n          searchParams.append(key, value);\\n        });\\n      }\\n    });\\n  }\\n  return searchParams;\\n}\\nvar _formDataSupportsSubmitter = null;\\nfunction isFormDataSubmitterSupported() {\\n  if (_formDataSupportsSubmitter === null) {\\n    try {\\n      new FormData(\\n        document.createElement(\\\"form\\\"),\\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\\n        0\\n      );\\n      _formDataSupportsSubmitter = false;\\n    } catch (e) {\\n      _formDataSupportsSubmitter = true;\\n    }\\n  }\\n  return _formDataSupportsSubmitter;\\n}\\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\\n  \\\"application/x-www-form-urlencoded\\\",\\n  \\\"multipart/form-data\\\",\\n  \\\"text/plain\\\"\\n]);\\nfunction getFormEncType(encType) {\\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\\n    warning(\\n      false,\\n      `\\\"${encType}\\\" is not a valid \\\\`encType\\\\` for \\\\`<Form>\\\\`/\\\\`<fetcher.Form>\\\\` and will default to \\\"${defaultEncType}\\\"`\\n    );\\n    return null;\\n  }\\n  return encType;\\n}\\nfunction getFormSubmissionInfo(target, basename) {\\n  let method;\\n  let action;\\n  let encType;\\n  let formData;\\n  let body;\\n  if (isFormElement(target)) {\\n    let attr = target.getAttribute(\\\"action\\\");\\n    action = attr ? stripBasename(attr, basename) : null;\\n    method = target.getAttribute(\\\"method\\\") || defaultMethod;\\n    encType = getFormEncType(target.getAttribute(\\\"enctype\\\")) || defaultEncType;\\n    formData = new FormData(target);\\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \\\"submit\\\" || target.type === \\\"image\\\")) {\\n    let form = target.form;\\n    if (form == null) {\\n      throw new Error(\\n        `Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>`\\n      );\\n    }\\n    let attr = target.getAttribute(\\\"formaction\\\") || form.getAttribute(\\\"action\\\");\\n    action = attr ? stripBasename(attr, basename) : null;\\n    method = target.getAttribute(\\\"formmethod\\\") || form.getAttribute(\\\"method\\\") || defaultMethod;\\n    encType = getFormEncType(target.getAttribute(\\\"formenctype\\\")) || getFormEncType(form.getAttribute(\\\"enctype\\\")) || defaultEncType;\\n    formData = new FormData(form, target);\\n    if (!isFormDataSubmitterSupported()) {\\n      let { name, type, value } = target;\\n      if (type === \\\"image\\\") {\\n        let prefix = name ? `${name}.` : \\\"\\\";\\n        formData.append(`${prefix}x`, \\\"0\\\");\\n        formData.append(`${prefix}y`, \\\"0\\\");\\n      } else if (name) {\\n        formData.append(name, value);\\n      }\\n    }\\n  } else if (isHtmlElement(target)) {\\n    throw new Error(\\n      `Cannot submit element that is not <form>, <button>, or <input type=\\\"submit|image\\\">`\\n    );\\n  } else {\\n    method = defaultMethod;\\n    action = null;\\n    encType = defaultEncType;\\n    body = target;\\n  }\\n  if (formData && encType === \\\"text/plain\\\") {\\n    body = formData;\\n    formData = void 0;\\n  }\\n  return { action, method: method.toLowerCase(), encType, formData, body };\\n}\\n\\n// lib/dom/ssr/components.tsx\\nimport * as React9 from \\\"react\\\";\\n\\n// lib/dom/ssr/invariant.ts\\nfunction invariant2(value, message) {\\n  if (value === false || value === null || typeof value === \\\"undefined\\\") {\\n    throw new Error(message);\\n  }\\n}\\n\\n// lib/dom/ssr/routeModules.ts\\nasync function loadRouteModule(route, routeModulesCache) {\\n  if (route.id in routeModulesCache) {\\n    return routeModulesCache[route.id];\\n  }\\n  try {\\n    let routeModule = await import(\\n      /* @vite-ignore */\\n      /* webpackIgnore: true */\\n      route.module\\n    );\\n    routeModulesCache[route.id] = routeModule;\\n    return routeModule;\\n  } catch (error) {\\n    console.error(\\n      `Error loading route module \\\\`${route.module}\\\\`, reloading page...`\\n    );\\n    console.error(error);\\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\\n    import.meta.hot) {\\n      throw error;\\n    }\\n    window.location.reload();\\n    return new Promise(() => {\\n    });\\n  }\\n}\\n\\n// lib/dom/ssr/links.ts\\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\\n  let descriptors = matches.map((match) => {\\n    let module = routeModules[match.route.id];\\n    let route = manifest.routes[match.route.id];\\n    return [\\n      route && route.css ? route.css.map((href) => ({ rel: \\\"stylesheet\\\", href })) : [],\\n      module?.links?.() || []\\n    ];\\n  }).flat(2);\\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\\n  return dedupeLinkDescriptors(descriptors, preloads);\\n}\\nasync function prefetchStyleLinks(route, routeModule) {\\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\\n  let descriptors = [];\\n  if (route.css) {\\n    descriptors.push(...route.css.map((href) => ({ rel: \\\"stylesheet\\\", href })));\\n  }\\n  if (routeModule.links) {\\n    descriptors.push(...routeModule.links());\\n  }\\n  if (descriptors.length === 0) return;\\n  let styleLinks = [];\\n  for (let descriptor of descriptors) {\\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \\\"stylesheet\\\") {\\n      styleLinks.push({\\n        ...descriptor,\\n        rel: \\\"preload\\\",\\n        as: \\\"style\\\"\\n      });\\n    }\\n  }\\n  let matchingLinks = styleLinks.filter(\\n    (link) => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${link.href}\\\"]`)\\n  );\\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\\n}\\nasync function prefetchStyleLink(descriptor) {\\n  return new Promise((resolve) => {\\n    let link = document.createElement(\\\"link\\\");\\n    Object.assign(link, descriptor);\\n    function removeLink() {\\n      if (document.head.contains(link)) {\\n        document.head.removeChild(link);\\n      }\\n    }\\n    link.onload = () => {\\n      removeLink();\\n      resolve();\\n    };\\n    link.onerror = () => {\\n      removeLink();\\n      resolve();\\n    };\\n    document.head.appendChild(link);\\n  });\\n}\\nfunction isPageLinkDescriptor(object) {\\n  return object != null && typeof object.page === \\\"string\\\";\\n}\\nfunction isHtmlLinkDescriptor(object) {\\n  if (object == null) {\\n    return false;\\n  }\\n  if (object.href == null) {\\n    return object.rel === \\\"preload\\\" && typeof object.imageSrcSet === \\\"string\\\" && typeof object.imageSizes === \\\"string\\\";\\n  }\\n  return typeof object.rel === \\\"string\\\" && typeof object.href === \\\"string\\\";\\n}\\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\\n  let links = await Promise.all(\\n    matches.map(async (match) => {\\n      let route = manifest.routes[match.route.id];\\n      if (route) {\\n        let mod = await loadRouteModule(route, routeModules);\\n        return mod.links ? mod.links() : [];\\n      }\\n      return [];\\n    })\\n  );\\n  return dedupeLinkDescriptors(\\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \\\"stylesheet\\\" || link.rel === \\\"preload\\\").map(\\n      (link) => link.rel === \\\"stylesheet\\\" ? { ...link, rel: \\\"prefetch\\\", as: \\\"style\\\" } : { ...link, rel: \\\"prefetch\\\" }\\n    )\\n  );\\n}\\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\\n  let isNew = (match, index) => {\\n    if (!currentMatches[index]) return true;\\n    return match.route.id !== currentMatches[index].route.id;\\n  };\\n  let matchPathChanged = (match, index) => {\\n    return (\\n      // param change, /users/123 -> /users/456\\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\\n      currentMatches[index].route.path?.endsWith(\\\"*\\\") && currentMatches[index].params[\\\"*\\\"] !== match.params[\\\"*\\\"]\\n    );\\n  };\\n  if (mode === \\\"assets\\\") {\\n    return nextMatches.filter(\\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\\n    );\\n  }\\n  if (mode === \\\"data\\\") {\\n    return nextMatches.filter((match, index) => {\\n      let manifestRoute = manifest.routes[match.route.id];\\n      if (!manifestRoute || !manifestRoute.hasLoader) {\\n        return false;\\n      }\\n      if (isNew(match, index) || matchPathChanged(match, index)) {\\n        return true;\\n      }\\n      if (match.route.shouldRevalidate) {\\n        let routeChoice = match.route.shouldRevalidate({\\n          currentUrl: new URL(\\n            location.pathname + location.search + location.hash,\\n            window.origin\\n          ),\\n          currentParams: currentMatches[0]?.params || {},\\n          nextUrl: new URL(page, window.origin),\\n          nextParams: match.params,\\n          defaultShouldRevalidate: true\\n        });\\n        if (typeof routeChoice === \\\"boolean\\\") {\\n          return routeChoice;\\n        }\\n      }\\n      return true;\\n    });\\n  }\\n  return [];\\n}\\nfunction getModuleLinkHrefs(matches, manifestPatch) {\\n  return dedupeHrefs(\\n    matches.map((match) => {\\n      let route = manifestPatch.routes[match.route.id];\\n      if (!route) return [];\\n      let hrefs = [route.module];\\n      if (route.imports) {\\n        hrefs = hrefs.concat(route.imports);\\n      }\\n      return hrefs;\\n    }).flat(1)\\n  );\\n}\\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\\n  return dedupeHrefs(\\n    matches.map((match) => {\\n      let route = manifest.routes[match.route.id];\\n      if (!route) return [];\\n      let hrefs = [route.module];\\n      if (route.imports) {\\n        hrefs = hrefs.concat(route.imports);\\n      }\\n      return hrefs;\\n    }).flat(1)\\n  );\\n}\\nfunction dedupeHrefs(hrefs) {\\n  return [...new Set(hrefs)];\\n}\\nfunction sortKeys(obj) {\\n  let sorted = {};\\n  let keys = Object.keys(obj).sort();\\n  for (let key of keys) {\\n    sorted[key] = obj[key];\\n  }\\n  return sorted;\\n}\\nfunction dedupeLinkDescriptors(descriptors, preloads) {\\n  let set = /* @__PURE__ */ new Set();\\n  let preloadsSet = new Set(preloads);\\n  return descriptors.reduce((deduped, descriptor) => {\\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \\\"script\\\" && descriptor.href && preloadsSet.has(descriptor.href);\\n    if (alreadyModulePreload) {\\n      return deduped;\\n    }\\n    let key = JSON.stringify(sortKeys(descriptor));\\n    if (!set.has(key)) {\\n      set.add(key);\\n      deduped.push({ key, link: descriptor });\\n    }\\n    return deduped;\\n  }, []);\\n}\\nvar _isPreloadSupported;\\nfunction isPreloadSupported() {\\n  if (_isPreloadSupported !== void 0) {\\n    return _isPreloadSupported;\\n  }\\n  let el = document.createElement(\\\"link\\\");\\n  _isPreloadSupported = el.relList.supports(\\\"preload\\\");\\n  el = null;\\n  return _isPreloadSupported;\\n}\\n\\n// lib/dom/ssr/markup.ts\\nvar ESCAPE_LOOKUP = {\\n  \\\"&\\\": \\\"\\\\\\\\u0026\\\",\\n  \\\">\\\": \\\"\\\\\\\\u003e\\\",\\n  \\\"<\\\": \\\"\\\\\\\\u003c\\\",\\n  \\\"\\\\u2028\\\": \\\"\\\\\\\\u2028\\\",\\n  \\\"\\\\u2029\\\": \\\"\\\\\\\\u2029\\\"\\n};\\nvar ESCAPE_REGEX = /[&><\\\\u2028\\\\u2029]/g;\\nfunction escapeHtml(html) {\\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\\n}\\nfunction createHtml(html) {\\n  return { __html: html };\\n}\\n\\n// lib/dom/ssr/single-fetch.tsx\\nimport * as React4 from \\\"react\\\";\\nimport { decode } from \\\"turbo-stream\\\";\\n\\n// lib/dom/ssr/data.ts\\nasync function createRequestInit(request) {\\n  let init = { signal: request.signal };\\n  if (request.method !== \\\"GET\\\") {\\n    init.method = request.method;\\n    let contentType = request.headers.get(\\\"Content-Type\\\");\\n    if (contentType && /\\\\bapplication\\\\/json\\\\b/.test(contentType)) {\\n      init.headers = { \\\"Content-Type\\\": contentType };\\n      init.body = JSON.stringify(await request.json());\\n    } else if (contentType && /\\\\btext\\\\/plain\\\\b/.test(contentType)) {\\n      init.headers = { \\\"Content-Type\\\": contentType };\\n      init.body = await request.text();\\n    } else if (contentType && /\\\\bapplication\\\\/x-www-form-urlencoded\\\\b/.test(contentType)) {\\n      init.body = new URLSearchParams(await request.text());\\n    } else {\\n      init.body = await request.formData();\\n    }\\n  }\\n  return init;\\n}\\n\\n// lib/dom/ssr/single-fetch.tsx\\nvar SingleFetchRedirectSymbol = Symbol(\\\"SingleFetchRedirect\\\");\\nfunction StreamTransfer({\\n  context,\\n  identifier,\\n  reader,\\n  textDecoder,\\n  nonce\\n}) {\\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\\n    return null;\\n  }\\n  if (!context.renderMeta.streamCache) {\\n    context.renderMeta.streamCache = {};\\n  }\\n  let { streamCache } = context.renderMeta;\\n  let promise = streamCache[identifier];\\n  if (!promise) {\\n    promise = streamCache[identifier] = reader.read().then((result) => {\\n      streamCache[identifier].result = {\\n        done: result.done,\\n        value: textDecoder.decode(result.value, { stream: true })\\n      };\\n    }).catch((e) => {\\n      streamCache[identifier].error = e;\\n    });\\n  }\\n  if (promise.error) {\\n    throw promise.error;\\n  }\\n  if (promise.result === void 0) {\\n    throw promise;\\n  }\\n  let { done, value } = promise.result;\\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\\n    \\\"script\\\",\\n    {\\n      nonce,\\n      dangerouslySetInnerHTML: {\\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\\n          JSON.stringify(value)\\n        )});`\\n      }\\n    }\\n  ) : null;\\n  if (done) {\\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\\n      \\\"script\\\",\\n      {\\n        nonce,\\n        dangerouslySetInnerHTML: {\\n          __html: `window.__reactRouterContext.streamController.close();`\\n        }\\n      }\\n    ));\\n  } else {\\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\\n      StreamTransfer,\\n      {\\n        context,\\n        identifier: identifier + 1,\\n        reader,\\n        textDecoder,\\n        nonce\\n      }\\n    )));\\n  }\\n}\\nfunction getSingleFetchDataStrategy(manifest, routeModules, getRouter) {\\n  return async ({ request, matches, fetcherKey }) => {\\n    if (request.method !== \\\"GET\\\") {\\n      return singleFetchActionStrategy(request, matches);\\n    }\\n    if (fetcherKey) {\\n      return singleFetchLoaderFetcherStrategy(request, matches);\\n    }\\n    return singleFetchLoaderNavigationStrategy(\\n      manifest,\\n      routeModules,\\n      getRouter(),\\n      request,\\n      matches\\n    );\\n  };\\n}\\nasync function singleFetchActionStrategy(request, matches) {\\n  let actionMatch = matches.find((m) => m.shouldLoad);\\n  invariant2(actionMatch, \\\"No action match found\\\");\\n  let actionStatus = void 0;\\n  let result = await actionMatch.resolve(async (handler) => {\\n    let result2 = await handler(async () => {\\n      let url = singleFetchUrl(request.url);\\n      let init = await createRequestInit(request);\\n      let { data: data2, status } = await fetchAndDecode(url, init);\\n      actionStatus = status;\\n      return unwrapSingleFetchResult(\\n        data2,\\n        actionMatch.route.id\\n      );\\n    });\\n    return result2;\\n  });\\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\\n    return { [actionMatch.route.id]: result };\\n  }\\n  return {\\n    [actionMatch.route.id]: {\\n      type: result.type,\\n      result: data(result.result, actionStatus)\\n    }\\n  };\\n}\\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, router, request, matches) {\\n  let routesParams = /* @__PURE__ */ new Set();\\n  let foundOptOutRoute = false;\\n  let routeDfds = matches.map(() => createDeferred2());\\n  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));\\n  let singleFetchDfd = createDeferred2();\\n  let url = stripIndexParam(singleFetchUrl(request.url));\\n  let init = await createRequestInit(request);\\n  let results = {};\\n  let resolvePromise = Promise.all(\\n    matches.map(\\n      async (m, i) => m.resolve(async (handler) => {\\n        routeDfds[i].resolve();\\n        let manifestRoute = manifest.routes[m.route.id];\\n        if (!m.shouldLoad) {\\n          if (!router.state.initialized) {\\n            return;\\n          }\\n          if (m.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\\n            foundOptOutRoute = true;\\n            return;\\n          }\\n        }\\n        if (manifestRoute && manifestRoute.hasClientLoader) {\\n          if (manifestRoute.hasLoader) {\\n            foundOptOutRoute = true;\\n          }\\n          try {\\n            let result = await fetchSingleLoader(\\n              handler,\\n              url,\\n              init,\\n              m.route.id\\n            );\\n            results[m.route.id] = { type: \\\"data\\\", result };\\n          } catch (e) {\\n            results[m.route.id] = { type: \\\"error\\\", result: e };\\n          }\\n          return;\\n        }\\n        if (manifestRoute && manifestRoute.hasLoader) {\\n          routesParams.add(m.route.id);\\n        }\\n        try {\\n          let result = await handler(async () => {\\n            let data2 = await singleFetchDfd.promise;\\n            return unwrapSingleFetchResults(data2, m.route.id);\\n          });\\n          results[m.route.id] = {\\n            type: \\\"data\\\",\\n            result\\n          };\\n        } catch (e) {\\n          results[m.route.id] = {\\n            type: \\\"error\\\",\\n            result: e\\n          };\\n        }\\n      })\\n    )\\n  );\\n  await routesLoadedPromise;\\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\\n    singleFetchDfd.resolve({});\\n  } else {\\n    try {\\n      if (foundOptOutRoute && routesParams.size > 0) {\\n        url.searchParams.set(\\n          \\\"_routes\\\",\\n          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\\\",\\\")\\n        );\\n      }\\n      let data2 = await fetchAndDecode(url, init);\\n      singleFetchDfd.resolve(data2.data);\\n    } catch (e) {\\n      singleFetchDfd.reject(e);\\n    }\\n  }\\n  await resolvePromise;\\n  return results;\\n}\\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\\n  let fetcherMatch = matches.find((m) => m.shouldLoad);\\n  invariant2(fetcherMatch, \\\"No fetcher match found\\\");\\n  let result = await fetcherMatch.resolve(async (handler) => {\\n    let url = stripIndexParam(singleFetchUrl(request.url));\\n    let init = await createRequestInit(request);\\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\\n  });\\n  return { [fetcherMatch.route.id]: result };\\n}\\nfunction fetchSingleLoader(handler, url, init, routeId) {\\n  return handler(async () => {\\n    let singleLoaderUrl = new URL(url);\\n    singleLoaderUrl.searchParams.set(\\\"_routes\\\", routeId);\\n    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);\\n    return unwrapSingleFetchResults(data2, routeId);\\n  });\\n}\\nfunction stripIndexParam(url) {\\n  let indexValues = url.searchParams.getAll(\\\"index\\\");\\n  url.searchParams.delete(\\\"index\\\");\\n  let indexValuesToKeep = [];\\n  for (let indexValue of indexValues) {\\n    if (indexValue) {\\n      indexValuesToKeep.push(indexValue);\\n    }\\n  }\\n  for (let toKeep of indexValuesToKeep) {\\n    url.searchParams.append(\\\"index\\\", toKeep);\\n  }\\n  return url;\\n}\\nfunction singleFetchUrl(reqUrl) {\\n  let url = typeof reqUrl === \\\"string\\\" ? new URL(\\n    reqUrl,\\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\\n    // don't assume window is available\\n    typeof window === \\\"undefined\\\" ? \\\"server://singlefetch/\\\" : window.location.origin\\n  ) : reqUrl;\\n  if (url.pathname === \\\"/\\\") {\\n    url.pathname = \\\"_root.data\\\";\\n  } else {\\n    url.pathname = `${url.pathname.replace(/\\\\/$/, \\\"\\\")}.data`;\\n  }\\n  return url;\\n}\\nasync function fetchAndDecode(url, init) {\\n  let res = await fetch(url, init);\\n  if (res.status === 404 && !res.headers.has(\\\"X-Remix-Response\\\")) {\\n    throw new ErrorResponseImpl(404, \\\"Not Found\\\", true);\\n  }\\n  invariant2(res.body, \\\"No response body to decode\\\");\\n  try {\\n    let decoded = await decodeViaTurboStream(res.body, window);\\n    return { status: res.status, data: decoded.value };\\n  } catch (e) {\\n    throw new Error(\\\"Unable to decode turbo-stream response\\\");\\n  }\\n}\\nfunction decodeViaTurboStream(body, global2) {\\n  return decode(body, {\\n    plugins: [\\n      (type, ...rest) => {\\n        if (type === \\\"SanitizedError\\\") {\\n          let [name, message, stack] = rest;\\n          let Constructor = Error;\\n          if (name && name in global2 && typeof global2[name] === \\\"function\\\") {\\n            Constructor = global2[name];\\n          }\\n          let error = new Constructor(message);\\n          error.stack = stack;\\n          return { value: error };\\n        }\\n        if (type === \\\"ErrorResponse\\\") {\\n          let [data2, status, statusText] = rest;\\n          return {\\n            value: new ErrorResponseImpl(status, statusText, data2)\\n          };\\n        }\\n        if (type === \\\"SingleFetchRedirect\\\") {\\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\\n        }\\n        if (type === \\\"SingleFetchClassInstance\\\") {\\n          return { value: rest[0] };\\n        }\\n        if (type === \\\"SingleFetchFallback\\\") {\\n          return { value: void 0 };\\n        }\\n      }\\n    ]\\n  });\\n}\\nfunction unwrapSingleFetchResults(results, routeId) {\\n  let redirect2 = results[SingleFetchRedirectSymbol];\\n  if (redirect2) {\\n    return unwrapSingleFetchResult(redirect2, routeId);\\n  }\\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\\n}\\nfunction unwrapSingleFetchResult(result, routeId) {\\n  if (\\\"error\\\" in result) {\\n    throw result.error;\\n  } else if (\\\"redirect\\\" in result) {\\n    let headers = {};\\n    if (result.revalidate) {\\n      headers[\\\"X-Remix-Revalidate\\\"] = \\\"yes\\\";\\n    }\\n    if (result.reload) {\\n      headers[\\\"X-Remix-Reload-Document\\\"] = \\\"yes\\\";\\n    }\\n    if (result.replace) {\\n      headers[\\\"X-Remix-Replace\\\"] = \\\"yes\\\";\\n    }\\n    throw redirect(result.redirect, { status: result.status, headers });\\n  } else if (\\\"data\\\" in result) {\\n    return result.data;\\n  } else {\\n    throw new Error(`No response found for routeId \\\"${routeId}\\\"`);\\n  }\\n}\\nfunction createDeferred2() {\\n  let resolve;\\n  let reject;\\n  let promise = new Promise((res, rej) => {\\n    resolve = async (val) => {\\n      res(val);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n    reject = async (error) => {\\n      rej(error);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n  });\\n  return {\\n    promise,\\n    //@ts-ignore\\n    resolve,\\n    //@ts-ignore\\n    reject\\n  };\\n}\\n\\n// lib/dom/ssr/fog-of-war.ts\\nimport * as React8 from \\\"react\\\";\\n\\n// lib/dom/ssr/routes.tsx\\nimport * as React7 from \\\"react\\\";\\n\\n// lib/dom/ssr/errorBoundaries.tsx\\nimport * as React5 from \\\"react\\\";\\nvar RemixErrorBoundary = class extends React5.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = { error: props.error || null, location: props.location };\\n  }\\n  static getDerivedStateFromError(error) {\\n    return { error };\\n  }\\n  static getDerivedStateFromProps(props, state) {\\n    if (state.location !== props.location) {\\n      return { error: props.error || null, location: props.location };\\n    }\\n    return { error: props.error || state.error, location: state.location };\\n  }\\n  render() {\\n    if (this.state.error) {\\n      return /* @__PURE__ */ React5.createElement(\\n        RemixRootDefaultErrorBoundary,\\n        {\\n          error: this.state.error,\\n          isOutsideRemixApp: true\\n        }\\n      );\\n    } else {\\n      return this.props.children;\\n    }\\n  }\\n};\\nfunction RemixRootDefaultErrorBoundary({\\n  error,\\n  isOutsideRemixApp\\n}) {\\n  console.error(error);\\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\\n    \\\"script\\\",\\n    {\\n      dangerouslySetInnerHTML: {\\n        __html: `\\n        console.log(\\n          \\\"\\\\u{1F4BF} Hey developer \\\\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\\\"\\n        );\\n      `\\n      }\\n    }\\n  );\\n  if (isRouteErrorResponse(error)) {\\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \\\"Unhandled Thrown Response!\\\" }, /* @__PURE__ */ React5.createElement(\\\"h1\\\", { style: { fontSize: \\\"24px\\\" } }, error.status, \\\" \\\", error.statusText), heyDeveloper);\\n  }\\n  let errorInstance;\\n  if (error instanceof Error) {\\n    errorInstance = error;\\n  } else {\\n    let errorString = error == null ? \\\"Unknown Error\\\" : typeof error === \\\"object\\\" && \\\"toString\\\" in error ? error.toString() : JSON.stringify(error);\\n    errorInstance = new Error(errorString);\\n  }\\n  return /* @__PURE__ */ React5.createElement(\\n    BoundaryShell,\\n    {\\n      title: \\\"Application Error!\\\",\\n      isOutsideRemixApp\\n    },\\n    /* @__PURE__ */ React5.createElement(\\\"h1\\\", { style: { fontSize: \\\"24px\\\" } }, \\\"Application Error\\\"),\\n    /* @__PURE__ */ React5.createElement(\\n      \\\"pre\\\",\\n      {\\n        style: {\\n          padding: \\\"2rem\\\",\\n          background: \\\"hsla(10, 50%, 50%, 0.1)\\\",\\n          color: \\\"red\\\",\\n          overflow: \\\"auto\\\"\\n        }\\n      },\\n      errorInstance.stack\\n    ),\\n    heyDeveloper\\n  );\\n}\\nfunction BoundaryShell({\\n  title,\\n  renderScripts,\\n  isOutsideRemixApp,\\n  children\\n}) {\\n  let { routeModules } = useFrameworkContext();\\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\\n    return children;\\n  }\\n  return /* @__PURE__ */ React5.createElement(\\\"html\\\", { lang: \\\"en\\\" }, /* @__PURE__ */ React5.createElement(\\\"head\\\", null, /* @__PURE__ */ React5.createElement(\\\"meta\\\", { charSet: \\\"utf-8\\\" }), /* @__PURE__ */ React5.createElement(\\n    \\\"meta\\\",\\n    {\\n      name: \\\"viewport\\\",\\n      content: \\\"width=device-width,initial-scale=1,viewport-fit=cover\\\"\\n    }\\n  ), /* @__PURE__ */ React5.createElement(\\\"title\\\", null, title)), /* @__PURE__ */ React5.createElement(\\\"body\\\", null, /* @__PURE__ */ React5.createElement(\\\"main\\\", { style: { fontFamily: \\\"system-ui, sans-serif\\\", padding: \\\"2rem\\\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\\n}\\n\\n// lib/dom/ssr/fallback.tsx\\nimport * as React6 from \\\"react\\\";\\nfunction RemixRootDefaultHydrateFallback() {\\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \\\"Loading...\\\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\\n    \\\"script\\\",\\n    {\\n      dangerouslySetInnerHTML: {\\n        __html: `\\n              console.log(\\n                \\\"\\\\u{1F4BF} Hey developer \\\\u{1F44B}. You can provide a way better UX than this \\\" +\\n                \\\"when your app is loading JS modules and/or running \\\\`clientLoader\\\\` \\\" +\\n                \\\"functions. Check out https://remix.run/route/hydrate-fallback \\\" +\\n                \\\"for more information.\\\"\\n              );\\n            `\\n      }\\n    }\\n  ));\\n}\\n\\n// lib/dom/ssr/routes.tsx\\nfunction groupRoutesByParentId(manifest) {\\n  let routes = {};\\n  Object.values(manifest).forEach((route) => {\\n    if (route) {\\n      let parentId = route.parentId || \\\"\\\";\\n      if (!routes[parentId]) {\\n        routes[parentId] = [];\\n      }\\n      routes[parentId].push(route);\\n    }\\n  });\\n  return routes;\\n}\\nfunction getRouteComponents(route, routeModule, isSpaMode) {\\n  let Component4 = getRouteModuleComponent(routeModule);\\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \\\"root\\\") ? routeModule.HydrateFallback : route.id === \\\"root\\\" ? RemixRootDefaultHydrateFallback : void 0;\\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \\\"root\\\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\\n  if (route.id === \\\"root\\\" && routeModule.Layout) {\\n    return {\\n      ...Component4 ? {\\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\\n      } : { Component: Component4 },\\n      ...ErrorBoundary ? {\\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\\n      } : { ErrorBoundary },\\n      ...HydrateFallback ? {\\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\\n      } : { HydrateFallback }\\n    };\\n  }\\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\\n}\\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\\n  return (routesByParentId[parentId] || []).map((route) => {\\n    let routeModule = routeModules[route.id];\\n    invariant2(\\n      routeModule,\\n      \\\"No `routeModule` available to create server routes\\\"\\n    );\\n    let dataRoute = {\\n      ...getRouteComponents(route, routeModule, isSpaMode),\\n      caseSensitive: route.caseSensitive,\\n      id: route.id,\\n      index: route.index,\\n      path: route.path,\\n      handle: routeModule.handle,\\n      // For SPA Mode, all routes are lazy except root.  However we tell the\\n      // router root is also lazy here too since we don't need a full\\n      // implementation - we just need a `lazy` prop to tell the RR rendering\\n      // where to stop which is always at the root route in SPA mode\\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\\n      // For partial hydration rendering, we need to indicate when the route\\n      // has a loader/clientLoader, but it won't ever be called during the static\\n      // render, so just give it a no-op function so we can render down to the\\n      // proper fallback\\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\\n      // We don't need action/shouldRevalidate on these routes since they're\\n      // for a static render\\n    };\\n    let children = createServerRoutes(\\n      manifest,\\n      routeModules,\\n      future,\\n      isSpaMode,\\n      route.id,\\n      routesByParentId,\\n      spaModeLazyPromise\\n    );\\n    if (children.length > 0) dataRoute.children = children;\\n    return dataRoute;\\n  });\\n}\\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, future, isSpaMode) {\\n  return createClientRoutes(\\n    manifest,\\n    routeModulesCache,\\n    initialState,\\n    isSpaMode,\\n    \\\"\\\",\\n    groupRoutesByParentId(manifest),\\n    needsRevalidation\\n  );\\n}\\nfunction preventInvalidServerHandlerCall(type, route, isSpaMode) {\\n  if (isSpaMode) {\\n    let fn2 = type === \\\"action\\\" ? \\\"serverAction()\\\" : \\\"serverLoader()\\\";\\n    let msg2 = `You cannot call ${fn2} in SPA Mode (routeId: \\\"${route.id}\\\")`;\\n    console.error(msg2);\\n    throw new ErrorResponseImpl(400, \\\"Bad Request\\\", new Error(msg2), true);\\n  }\\n  let fn = type === \\\"action\\\" ? \\\"serverAction()\\\" : \\\"serverLoader()\\\";\\n  let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \\\"${route.id}\\\")`;\\n  if (type === \\\"loader\\\" && !route.hasLoader || type === \\\"action\\\" && !route.hasAction) {\\n    console.error(msg);\\n    throw new ErrorResponseImpl(400, \\\"Bad Request\\\", new Error(msg), true);\\n  }\\n}\\nfunction noActionDefinedError(type, routeId) {\\n  let article = type === \\\"clientAction\\\" ? \\\"a\\\" : \\\"an\\\";\\n  let msg = `Route \\\"${routeId}\\\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\\\`${type}\\\\` function to the route`;\\n  console.error(msg);\\n  throw new ErrorResponseImpl(405, \\\"Method Not Allowed\\\", new Error(msg), true);\\n}\\nfunction createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\\n  return (routesByParentId[parentId] || []).map((route) => {\\n    let routeModule = routeModulesCache[route.id];\\n    function fetchServerHandler(singleFetch) {\\n      invariant2(\\n        typeof singleFetch === \\\"function\\\",\\n        \\\"No single fetch function available for route handler\\\"\\n      );\\n      return singleFetch();\\n    }\\n    function fetchServerLoader(singleFetch) {\\n      if (!route.hasLoader) return Promise.resolve(null);\\n      return fetchServerHandler(singleFetch);\\n    }\\n    function fetchServerAction(singleFetch) {\\n      if (!route.hasAction) {\\n        throw noActionDefinedError(\\\"action\\\", route.id);\\n      }\\n      return fetchServerHandler(singleFetch);\\n    }\\n    async function prefetchStylesAndCallHandler(handler) {\\n      let cachedModule = routeModulesCache[route.id];\\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\\n      try {\\n        return handler();\\n      } finally {\\n        await linkPrefetchPromise;\\n      }\\n    }\\n    let dataRoute = {\\n      id: route.id,\\n      index: route.index,\\n      path: route.path\\n    };\\n    if (routeModule) {\\n      Object.assign(dataRoute, {\\n        ...dataRoute,\\n        ...getRouteComponents(route, routeModule, isSpaMode),\\n        handle: routeModule.handle,\\n        shouldRevalidate: getShouldRevalidateFunction(\\n          routeModule,\\n          route.id,\\n          needsRevalidation\\n        )\\n      });\\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\\n      dataRoute.loader = async ({ request, params }, singleFetch) => {\\n        try {\\n          let result = await prefetchStylesAndCallHandler(async () => {\\n            invariant2(\\n              routeModule,\\n              \\\"No `routeModule` available for critical-route loader\\\"\\n            );\\n            if (!routeModule.clientLoader) {\\n              if (isSpaMode) return null;\\n              return fetchServerLoader(singleFetch);\\n            }\\n            return routeModule.clientLoader({\\n              request,\\n              params,\\n              async serverLoader() {\\n                preventInvalidServerHandlerCall(\\\"loader\\\", route, isSpaMode);\\n                if (isHydrationRequest) {\\n                  if (hasInitialData) {\\n                    return initialData;\\n                  }\\n                  if (hasInitialError) {\\n                    throw initialError;\\n                  }\\n                }\\n                return fetchServerLoader(singleFetch);\\n              }\\n            });\\n          });\\n          return result;\\n        } finally {\\n          isHydrationRequest = false;\\n        }\\n      };\\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\\n        route,\\n        routeModule,\\n        isSpaMode\\n      );\\n      dataRoute.action = ({ request, params }, singleFetch) => {\\n        return prefetchStylesAndCallHandler(async () => {\\n          invariant2(\\n            routeModule,\\n            \\\"No `routeModule` available for critical-route action\\\"\\n          );\\n          if (!routeModule.clientAction) {\\n            if (isSpaMode) {\\n              throw noActionDefinedError(\\\"clientAction\\\", route.id);\\n            }\\n            return fetchServerAction(singleFetch);\\n          }\\n          return routeModule.clientAction({\\n            request,\\n            params,\\n            async serverAction() {\\n              preventInvalidServerHandlerCall(\\\"action\\\", route, isSpaMode);\\n              return fetchServerAction(singleFetch);\\n            }\\n          });\\n        });\\n      };\\n    } else {\\n      if (!route.hasClientLoader) {\\n        dataRoute.loader = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\\n          if (isSpaMode) return Promise.resolve(null);\\n          return fetchServerLoader(singleFetch);\\n        });\\n      }\\n      if (!route.hasClientAction) {\\n        dataRoute.action = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\\n          if (isSpaMode) {\\n            throw noActionDefinedError(\\\"clientAction\\\", route.id);\\n          }\\n          return fetchServerAction(singleFetch);\\n        });\\n      }\\n      dataRoute.lazy = async () => {\\n        let mod = await loadRouteModuleWithBlockingLinks(\\n          route,\\n          routeModulesCache\\n        );\\n        let lazyRoute = { ...mod };\\n        if (mod.clientLoader) {\\n          let clientLoader = mod.clientLoader;\\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\\n            ...args,\\n            async serverLoader() {\\n              preventInvalidServerHandlerCall(\\\"loader\\\", route, isSpaMode);\\n              return fetchServerLoader(singleFetch);\\n            }\\n          });\\n        }\\n        if (mod.clientAction) {\\n          let clientAction = mod.clientAction;\\n          lazyRoute.action = (args, singleFetch) => clientAction({\\n            ...args,\\n            async serverAction() {\\n              preventInvalidServerHandlerCall(\\\"action\\\", route, isSpaMode);\\n              return fetchServerAction(singleFetch);\\n            }\\n          });\\n        }\\n        return {\\n          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},\\n          ...lazyRoute.action ? { action: lazyRoute.action } : {},\\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\\n          shouldRevalidate: getShouldRevalidateFunction(\\n            lazyRoute,\\n            route.id,\\n            needsRevalidation\\n          ),\\n          handle: lazyRoute.handle,\\n          // No need to wrap these in layout since the root route is never\\n          // loaded via route.lazy()\\n          Component: lazyRoute.Component,\\n          ErrorBoundary: lazyRoute.ErrorBoundary\\n        };\\n      };\\n    }\\n    let children = createClientRoutes(\\n      manifest,\\n      routeModulesCache,\\n      initialState,\\n      isSpaMode,\\n      route.id,\\n      routesByParentId,\\n      needsRevalidation\\n    );\\n    if (children.length > 0) dataRoute.children = children;\\n    return dataRoute;\\n  });\\n}\\nfunction getShouldRevalidateFunction(route, routeId, needsRevalidation) {\\n  if (needsRevalidation) {\\n    return wrapShouldRevalidateForHdr(\\n      routeId,\\n      route.shouldRevalidate,\\n      needsRevalidation\\n    );\\n  }\\n  if (route.shouldRevalidate) {\\n    let fn = route.shouldRevalidate;\\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\\n  }\\n  return route.shouldRevalidate;\\n}\\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\\n  let handledRevalidation = false;\\n  return (arg) => {\\n    if (!handledRevalidation) {\\n      handledRevalidation = true;\\n      return needsRevalidation.has(routeId);\\n    }\\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\\n  };\\n}\\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\\n  let routeModule = await loadRouteModule(route, routeModules);\\n  await prefetchStyleLinks(route, routeModule);\\n  return {\\n    Component: getRouteModuleComponent(routeModule),\\n    ErrorBoundary: routeModule.ErrorBoundary,\\n    clientAction: routeModule.clientAction,\\n    clientLoader: routeModule.clientLoader,\\n    handle: routeModule.handle,\\n    links: routeModule.links,\\n    meta: routeModule.meta,\\n    shouldRevalidate: routeModule.shouldRevalidate\\n  };\\n}\\nfunction getRouteModuleComponent(routeModule) {\\n  if (routeModule.default == null) return void 0;\\n  let isEmptyObject = typeof routeModule.default === \\\"object\\\" && Object.keys(routeModule.default).length === 0;\\n  if (!isEmptyObject) {\\n    return routeModule.default;\\n  }\\n}\\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\\n  return isSpaMode && route.id !== \\\"root\\\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\\n}\\n\\n// lib/dom/ssr/fog-of-war.ts\\nvar nextPaths = /* @__PURE__ */ new Set();\\nvar discoveredPathsMaxSize = 1e3;\\nvar discoveredPaths = /* @__PURE__ */ new Set();\\nvar URL_LIMIT = 7680;\\nfunction isFogOfWarEnabled(isSpaMode) {\\n  return !isSpaMode;\\n}\\nfunction getPartialManifest(manifest, router) {\\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\\n  let segments = router.state.location.pathname.split(\\\"/\\\").filter(Boolean);\\n  let paths = [\\\"/\\\"];\\n  segments.pop();\\n  while (segments.length > 0) {\\n    paths.push(`/${segments.join(\\\"/\\\")}`);\\n    segments.pop();\\n  }\\n  paths.forEach((path) => {\\n    let matches = matchRoutes(router.routes, path, router.basename);\\n    if (matches) {\\n      matches.forEach((m) => routeIds.add(m.route.id));\\n    }\\n  });\\n  let initialRoutes = [...routeIds].reduce(\\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\\n    {}\\n  );\\n  return {\\n    ...manifest,\\n    routes: initialRoutes\\n  };\\n}\\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, isSpaMode, basename) {\\n  if (!isFogOfWarEnabled(isSpaMode)) {\\n    return void 0;\\n  }\\n  return async ({ path, patch }) => {\\n    if (discoveredPaths.has(path)) {\\n      return;\\n    }\\n    await fetchAndApplyManifestPatches(\\n      [path],\\n      manifest,\\n      routeModules,\\n      isSpaMode,\\n      basename,\\n      patch\\n    );\\n  };\\n}\\nfunction useFogOFWarDiscovery(router, manifest, routeModules, isSpaMode) {\\n  React8.useEffect(() => {\\n    if (!isFogOfWarEnabled(isSpaMode) || navigator.connection?.saveData === true) {\\n      return;\\n    }\\n    function registerElement(el) {\\n      let path = el.tagName === \\\"FORM\\\" ? el.getAttribute(\\\"action\\\") : el.getAttribute(\\\"href\\\");\\n      if (!path) {\\n        return;\\n      }\\n      let url = new URL(path, window.location.origin);\\n      if (!discoveredPaths.has(url.pathname)) {\\n        nextPaths.add(url.pathname);\\n      }\\n    }\\n    async function fetchPatches() {\\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\\n        if (discoveredPaths.has(path)) {\\n          nextPaths.delete(path);\\n          return false;\\n        }\\n        return true;\\n      });\\n      if (lazyPaths.length === 0) {\\n        return;\\n      }\\n      try {\\n        await fetchAndApplyManifestPatches(\\n          lazyPaths,\\n          manifest,\\n          routeModules,\\n          isSpaMode,\\n          router.basename,\\n          router.patchRoutes\\n        );\\n      } catch (e) {\\n        console.error(\\\"Failed to fetch manifest patches\\\", e);\\n      }\\n    }\\n    document.body.querySelectorAll(\\\"a[data-discover], form[data-discover]\\\").forEach((el) => registerElement(el));\\n    fetchPatches();\\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\\n    function isElement(node) {\\n      return node.nodeType === Node.ELEMENT_NODE;\\n    }\\n    let observer = new MutationObserver((records) => {\\n      let elements = /* @__PURE__ */ new Set();\\n      records.forEach((r) => {\\n        [r.target, ...r.addedNodes].forEach((node) => {\\n          if (!isElement(node)) return;\\n          if (node.tagName === \\\"A\\\" && node.getAttribute(\\\"data-discover\\\")) {\\n            elements.add(node);\\n          } else if (node.tagName === \\\"FORM\\\" && node.getAttribute(\\\"data-discover\\\")) {\\n            elements.add(node);\\n          }\\n          if (node.tagName !== \\\"A\\\") {\\n            node.querySelectorAll(\\\"a[data-discover], form[data-discover]\\\").forEach((el) => elements.add(el));\\n          }\\n        });\\n      });\\n      elements.forEach((el) => registerElement(el));\\n      debouncedFetchPatches();\\n    });\\n    observer.observe(document.documentElement, {\\n      subtree: true,\\n      childList: true,\\n      attributes: true,\\n      attributeFilter: [\\\"data-discover\\\", \\\"href\\\", \\\"action\\\"]\\n    });\\n    return () => observer.disconnect();\\n  }, [isSpaMode, manifest, routeModules, router]);\\n}\\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, isSpaMode, basename, patchRoutes) {\\n  let manifestPath = `${basename != null ? basename : \\\"/\\\"}/__manifest`.replace(\\n    /\\\\/+/g,\\n    \\\"/\\\"\\n  );\\n  let url = new URL(manifestPath, window.location.origin);\\n  paths.sort().forEach((path) => url.searchParams.append(\\\"p\\\", path));\\n  url.searchParams.set(\\\"version\\\", manifest.version);\\n  if (url.toString().length > URL_LIMIT) {\\n    nextPaths.clear();\\n    return;\\n  }\\n  let res = await fetch(url);\\n  if (!res.ok) {\\n    throw new Error(`${res.status} ${res.statusText}`);\\n  } else if (res.status >= 400) {\\n    throw new Error(await res.text());\\n  }\\n  let serverPatches = await res.json();\\n  let knownRoutes = new Set(Object.keys(manifest.routes));\\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\\n    if (route && !knownRoutes.has(route.id)) {\\n      acc[route.id] = route;\\n    }\\n    return acc;\\n  }, {});\\n  Object.assign(manifest.routes, patches);\\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\\n  let parentIds = /* @__PURE__ */ new Set();\\n  Object.values(patches).forEach((patch) => {\\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\\n      parentIds.add(patch.parentId);\\n    }\\n  });\\n  parentIds.forEach(\\n    (parentId) => patchRoutes(\\n      parentId || null,\\n      createClientRoutes(patches, routeModules, null, isSpaMode, parentId)\\n    )\\n  );\\n}\\nfunction addToFifoQueue(path, queue) {\\n  if (queue.size >= discoveredPathsMaxSize) {\\n    let first = queue.values().next().value;\\n    queue.delete(first);\\n  }\\n  queue.add(path);\\n}\\nfunction debounce(callback, wait) {\\n  let timeoutId;\\n  return (...args) => {\\n    window.clearTimeout(timeoutId);\\n    timeoutId = window.setTimeout(() => callback(...args), wait);\\n  };\\n}\\n\\n// lib/dom/ssr/components.tsx\\nfunction useDataRouterContext2() {\\n  let context = React9.useContext(DataRouterContext);\\n  invariant2(\\n    context,\\n    \\\"You must render this element inside a <DataRouterContext.Provider> element\\\"\\n  );\\n  return context;\\n}\\nfunction useDataRouterStateContext() {\\n  let context = React9.useContext(DataRouterStateContext);\\n  invariant2(\\n    context,\\n    \\\"You must render this element inside a <DataRouterStateContext.Provider> element\\\"\\n  );\\n  return context;\\n}\\nvar FrameworkContext = React9.createContext(void 0);\\nFrameworkContext.displayName = \\\"FrameworkContext\\\";\\nfunction useFrameworkContext() {\\n  let context = React9.useContext(FrameworkContext);\\n  invariant2(\\n    context,\\n    \\\"You must render this element inside a <HydratedRouter> element\\\"\\n  );\\n  return context;\\n}\\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\\n  let frameworkContext = React9.useContext(FrameworkContext);\\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\\n  let ref = React9.useRef(null);\\n  React9.useEffect(() => {\\n    if (prefetch === \\\"render\\\") {\\n      setShouldPrefetch(true);\\n    }\\n    if (prefetch === \\\"viewport\\\") {\\n      let callback = (entries) => {\\n        entries.forEach((entry) => {\\n          setShouldPrefetch(entry.isIntersecting);\\n        });\\n      };\\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\\n      if (ref.current) observer.observe(ref.current);\\n      return () => {\\n        observer.disconnect();\\n      };\\n    }\\n  }, [prefetch]);\\n  React9.useEffect(() => {\\n    if (maybePrefetch) {\\n      let id = setTimeout(() => {\\n        setShouldPrefetch(true);\\n      }, 100);\\n      return () => {\\n        clearTimeout(id);\\n      };\\n    }\\n  }, [maybePrefetch]);\\n  let setIntent = () => {\\n    setMaybePrefetch(true);\\n  };\\n  let cancelIntent = () => {\\n    setMaybePrefetch(false);\\n    setShouldPrefetch(false);\\n  };\\n  if (!frameworkContext) {\\n    return [false, ref, {}];\\n  }\\n  if (prefetch !== \\\"intent\\\") {\\n    return [shouldPrefetch, ref, {}];\\n  }\\n  return [\\n    shouldPrefetch,\\n    ref,\\n    {\\n      onFocus: composeEventHandlers(onFocus, setIntent),\\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\\n    }\\n  ];\\n}\\nfunction composeEventHandlers(theirHandler, ourHandler) {\\n  return (event) => {\\n    theirHandler && theirHandler(event);\\n    if (!event.defaultPrevented) {\\n      ourHandler(event);\\n    }\\n  };\\n}\\nfunction getActiveMatches(matches, errors, isSpaMode) {\\n  if (isSpaMode && !isHydrated) {\\n    return [matches[0]];\\n  }\\n  if (errors) {\\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\\n    return matches.slice(0, errorIdx + 1);\\n  }\\n  return matches;\\n}\\nfunction Links() {\\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\\n  let keyedLinks = React9.useMemo(\\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\\n    [matches, routeModules, manifest]\\n  );\\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, criticalCss ? /* @__PURE__ */ React9.createElement(\\\"style\\\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, keyedLinks.map(\\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\\\"link\\\", { key, ...link })\\n  ));\\n}\\nfunction PrefetchPageLinks({\\n  page,\\n  ...dataLinkProps\\n}) {\\n  let { router } = useDataRouterContext2();\\n  let matches = React9.useMemo(\\n    () => matchRoutes(router.routes, page, router.basename),\\n    [router.routes, page, router.basename]\\n  );\\n  if (!matches) {\\n    return null;\\n  }\\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\\n}\\nfunction useKeyedPrefetchLinks(matches) {\\n  let { manifest, routeModules } = useFrameworkContext();\\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\\n  React9.useEffect(() => {\\n    let interrupted = false;\\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\\n      (links) => {\\n        if (!interrupted) {\\n          setKeyedPrefetchLinks(links);\\n        }\\n      }\\n    );\\n    return () => {\\n      interrupted = true;\\n    };\\n  }, [matches, manifest, routeModules]);\\n  return keyedPrefetchLinks;\\n}\\nfunction PrefetchPageLinksImpl({\\n  page,\\n  matches: nextMatches,\\n  ...linkProps\\n}) {\\n  let location = useLocation();\\n  let { manifest, routeModules } = useFrameworkContext();\\n  let { loaderData, matches } = useDataRouterStateContext();\\n  let newMatchesForData = React9.useMemo(\\n    () => getNewMatchesForLinks(\\n      page,\\n      nextMatches,\\n      matches,\\n      manifest,\\n      location,\\n      \\\"data\\\"\\n    ),\\n    [page, nextMatches, matches, manifest, location]\\n  );\\n  let newMatchesForAssets = React9.useMemo(\\n    () => getNewMatchesForLinks(\\n      page,\\n      nextMatches,\\n      matches,\\n      manifest,\\n      location,\\n      \\\"assets\\\"\\n    ),\\n    [page, nextMatches, matches, manifest, location]\\n  );\\n  let dataHrefs = React9.useMemo(() => {\\n    if (page === location.pathname + location.search + location.hash) {\\n      return [];\\n    }\\n    let routesParams = /* @__PURE__ */ new Set();\\n    let foundOptOutRoute = false;\\n    nextMatches.forEach((m) => {\\n      let manifestRoute = manifest.routes[m.route.id];\\n      if (!manifestRoute || !manifestRoute.hasLoader) {\\n        return;\\n      }\\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\\n        foundOptOutRoute = true;\\n      } else if (manifestRoute.hasClientLoader) {\\n        foundOptOutRoute = true;\\n      } else {\\n        routesParams.add(m.route.id);\\n      }\\n    });\\n    if (routesParams.size === 0) {\\n      return [];\\n    }\\n    let url = singleFetchUrl(page);\\n    if (foundOptOutRoute && routesParams.size > 0) {\\n      url.searchParams.set(\\n        \\\"_routes\\\",\\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\\\",\\\")\\n      );\\n    }\\n    return [url.pathname + url.search];\\n  }, [\\n    loaderData,\\n    location,\\n    manifest,\\n    newMatchesForData,\\n    nextMatches,\\n    page,\\n    routeModules\\n  ]);\\n  let moduleHrefs = React9.useMemo(\\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\\n    [newMatchesForAssets, manifest]\\n  );\\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React9.createElement(\\\"link\\\", { key: href, rel: \\\"prefetch\\\", as: \\\"fetch\\\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React9.createElement(\\\"link\\\", { key: href, rel: \\\"modulepreload\\\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\\n    // these don't spread `linkProps` because they are full link descriptors\\n    // already with their own props\\n    /* @__PURE__ */ React9.createElement(\\\"link\\\", { key, ...link })\\n  )));\\n}\\nfunction Meta() {\\n  let { isSpaMode, routeModules } = useFrameworkContext();\\n  let {\\n    errors,\\n    matches: routerMatches,\\n    loaderData\\n  } = useDataRouterStateContext();\\n  let location = useLocation();\\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\\n  let error = null;\\n  if (errors) {\\n    error = errors[_matches[_matches.length - 1].route.id];\\n  }\\n  let meta = [];\\n  let leafMeta = null;\\n  let matches = [];\\n  for (let i = 0; i < _matches.length; i++) {\\n    let _match = _matches[i];\\n    let routeId = _match.route.id;\\n    let data2 = loaderData[routeId];\\n    let params = _match.params;\\n    let routeModule = routeModules[routeId];\\n    let routeMeta = [];\\n    let match = {\\n      id: routeId,\\n      data: data2,\\n      meta: [],\\n      params: _match.params,\\n      pathname: _match.pathname,\\n      handle: _match.route.handle,\\n      error\\n    };\\n    matches[i] = match;\\n    if (routeModule?.meta) {\\n      routeMeta = typeof routeModule.meta === \\\"function\\\" ? routeModule.meta({\\n        data: data2,\\n        params,\\n        location,\\n        matches,\\n        error\\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\\n    } else if (leafMeta) {\\n      routeMeta = [...leafMeta];\\n    }\\n    routeMeta = routeMeta || [];\\n    if (!Array.isArray(routeMeta)) {\\n      throw new Error(\\n        \\\"The route at \\\" + _match.route.path + \\\" returns an invalid value. All route meta functions must return an array of meta objects.\\\\n\\\\nTo reference the meta function API, see https://remix.run/route/meta\\\"\\n      );\\n    }\\n    match.meta = routeMeta;\\n    matches[i] = match;\\n    meta = [...routeMeta];\\n    leafMeta = meta;\\n  }\\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\\n    if (!metaProps) {\\n      return null;\\n    }\\n    if (\\\"tagName\\\" in metaProps) {\\n      let { tagName, ...rest } = metaProps;\\n      if (!isValidMetaTag(tagName)) {\\n        console.warn(\\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\\n        );\\n        return null;\\n      }\\n      let Comp = tagName;\\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\\n    }\\n    if (\\\"title\\\" in metaProps) {\\n      return /* @__PURE__ */ React9.createElement(\\\"title\\\", { key: \\\"title\\\" }, String(metaProps.title));\\n    }\\n    if (\\\"charset\\\" in metaProps) {\\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\\n      delete metaProps.charset;\\n    }\\n    if (\\\"charSet\\\" in metaProps && metaProps.charSet != null) {\\n      return typeof metaProps.charSet === \\\"string\\\" ? /* @__PURE__ */ React9.createElement(\\\"meta\\\", { key: \\\"charSet\\\", charSet: metaProps.charSet }) : null;\\n    }\\n    if (\\\"script:ld+json\\\" in metaProps) {\\n      try {\\n        let json = JSON.stringify(metaProps[\\\"script:ld+json\\\"]);\\n        return /* @__PURE__ */ React9.createElement(\\n          \\\"script\\\",\\n          {\\n            key: `script:ld+json:${json}`,\\n            type: \\\"application/ld+json\\\",\\n            dangerouslySetInnerHTML: { __html: json }\\n          }\\n        );\\n      } catch (err) {\\n        return null;\\n      }\\n    }\\n    return /* @__PURE__ */ React9.createElement(\\\"meta\\\", { key: JSON.stringify(metaProps), ...metaProps });\\n  }));\\n}\\nfunction isValidMetaTag(tagName) {\\n  return typeof tagName === \\\"string\\\" && /^(meta|link)$/.test(tagName);\\n}\\nvar isHydrated = false;\\nfunction Scripts(props) {\\n  let { manifest, serverHandoffString, isSpaMode, renderMeta } = useFrameworkContext();\\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\\n  let { matches: routerMatches } = useDataRouterStateContext();\\n  let enableFogOfWar = isFogOfWarEnabled(isSpaMode);\\n  if (renderMeta) {\\n    renderMeta.didRenderScripts = true;\\n  }\\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\\n  React9.useEffect(() => {\\n    isHydrated = true;\\n  }, []);\\n  let initialScripts = React9.useMemo(() => {\\n    let streamScript = \\\"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\\\";\\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \\\" \\\";\\n    let routeModulesScript = !isStatic ? \\\" \\\" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \\\"\\\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \\\"\\\"};\\n${matches.map(\\n      (match, index) => `import * as route${index} from ${JSON.stringify(\\n        manifest.routes[match.route.id].module\\n      )};`\\n    ).join(\\\"\\\\n\\\")}\\n  ${enableFogOfWar ? (\\n      // Inline a minimal manifest with the SSR matches\\n      `window.__reactRouterManifest = ${JSON.stringify(\\n        getPartialManifest(manifest, router),\\n        null,\\n        2\\n      )};`\\n    ) : \\\"\\\"}\\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\\\",\\\")}};\\n\\nimport(${JSON.stringify(manifest.entry.module)});`;\\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\\n      \\\"script\\\",\\n      {\\n        ...props,\\n        suppressHydrationWarning: true,\\n        dangerouslySetInnerHTML: createHtml(contextScript),\\n        type: void 0\\n      }\\n    ), /* @__PURE__ */ React9.createElement(\\n      \\\"script\\\",\\n      {\\n        ...props,\\n        suppressHydrationWarning: true,\\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\\n        type: \\\"module\\\",\\n        async: true\\n      }\\n    ));\\n  }, []);\\n  let routePreloads = matches.map((match) => {\\n    let route = manifest.routes[match.route.id];\\n    return route ? (route.imports || []).concat([route.module]) : [];\\n  }).flat(1);\\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\\n    \\\"link\\\",\\n    {\\n      rel: \\\"modulepreload\\\",\\n      href: manifest.url,\\n      crossOrigin: props.crossOrigin\\n    }\\n  ) : null, /* @__PURE__ */ React9.createElement(\\n    \\\"link\\\",\\n    {\\n      rel: \\\"modulepreload\\\",\\n      href: manifest.entry.module,\\n      crossOrigin: props.crossOrigin\\n    }\\n  ), dedupe(preloads).map((path) => /* @__PURE__ */ React9.createElement(\\n    \\\"link\\\",\\n    {\\n      key: path,\\n      rel: \\\"modulepreload\\\",\\n      href: path,\\n      crossOrigin: props.crossOrigin\\n    }\\n  )), initialScripts);\\n}\\nfunction dedupe(array) {\\n  return [...new Set(array)];\\n}\\nfunction mergeRefs(...refs) {\\n  return (value) => {\\n    refs.forEach((ref) => {\\n      if (typeof ref === \\\"function\\\") {\\n        ref(value);\\n      } else if (ref != null) {\\n        ref.current = value;\\n      }\\n    });\\n  };\\n}\\n\\n// lib/dom/lib.tsx\\nvar isBrowser = typeof window !== \\\"undefined\\\" && typeof window.document !== \\\"undefined\\\" && typeof window.document.createElement !== \\\"undefined\\\";\\ntry {\\n  if (isBrowser) {\\n    window.__reactRouterVersion = \\\"7.1.1\\\";\\n  }\\n} catch (e) {\\n}\\nfunction createBrowserRouter(routes, opts) {\\n  return createRouter({\\n    basename: opts?.basename,\\n    future: opts?.future,\\n    history: createBrowserHistory({ window: opts?.window }),\\n    hydrationData: opts?.hydrationData || parseHydrationData(),\\n    routes,\\n    mapRouteProperties,\\n    dataStrategy: opts?.dataStrategy,\\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\\n    window: opts?.window\\n  }).initialize();\\n}\\nfunction createHashRouter(routes, opts) {\\n  return createRouter({\\n    basename: opts?.basename,\\n    future: opts?.future,\\n    history: createHashHistory({ window: opts?.window }),\\n    hydrationData: opts?.hydrationData || parseHydrationData(),\\n    routes,\\n    mapRouteProperties,\\n    dataStrategy: opts?.dataStrategy,\\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\\n    window: opts?.window\\n  }).initialize();\\n}\\nfunction parseHydrationData() {\\n  let state = window?.__staticRouterHydrationData;\\n  if (state && state.errors) {\\n    state = {\\n      ...state,\\n      errors: deserializeErrors(state.errors)\\n    };\\n  }\\n  return state;\\n}\\nfunction deserializeErrors(errors) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (val && val.__type === \\\"RouteErrorResponse\\\") {\\n      serialized[key] = new ErrorResponseImpl(\\n        val.status,\\n        val.statusText,\\n        val.data,\\n        val.internal === true\\n      );\\n    } else if (val && val.__type === \\\"Error\\\") {\\n      if (val.__subType) {\\n        let ErrorConstructor = window[val.__subType];\\n        if (typeof ErrorConstructor === \\\"function\\\") {\\n          try {\\n            let error = new ErrorConstructor(val.message);\\n            error.stack = \\\"\\\";\\n            serialized[key] = error;\\n          } catch (e) {\\n          }\\n        }\\n      }\\n      if (serialized[key] == null) {\\n        let error = new Error(val.message);\\n        error.stack = \\\"\\\";\\n        serialized[key] = error;\\n      }\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\nfunction BrowserRouter({\\n  basename,\\n  children,\\n  window: window2\\n}) {\\n  let historyRef = React10.useRef();\\n  if (historyRef.current == null) {\\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\\n  }\\n  let history = historyRef.current;\\n  let [state, setStateImpl] = React10.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React10.useCallback(\\n    (newState) => {\\n      React10.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React10.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nfunction HashRouter({ basename, children, window: window2 }) {\\n  let historyRef = React10.useRef();\\n  if (historyRef.current == null) {\\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\\n  }\\n  let history = historyRef.current;\\n  let [state, setStateImpl] = React10.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React10.useCallback(\\n    (newState) => {\\n      React10.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React10.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nfunction HistoryRouter({\\n  basename,\\n  children,\\n  history\\n}) {\\n  let [state, setStateImpl] = React10.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React10.useCallback(\\n    (newState) => {\\n      React10.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React10.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nHistoryRouter.displayName = \\\"unstable_HistoryRouter\\\";\\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\nvar Link = React10.forwardRef(\\n  function LinkWithRef({\\n    onClick,\\n    discover = \\\"render\\\",\\n    prefetch = \\\"none\\\",\\n    relative,\\n    reloadDocument,\\n    replace: replace2,\\n    state,\\n    target,\\n    to,\\n    preventScrollReset,\\n    viewTransition,\\n    ...rest\\n  }, forwardedRef) {\\n    let { basename } = React10.useContext(NavigationContext);\\n    let isAbsolute = typeof to === \\\"string\\\" && ABSOLUTE_URL_REGEX2.test(to);\\n    let absoluteHref;\\n    let isExternal = false;\\n    if (typeof to === \\\"string\\\" && isAbsolute) {\\n      absoluteHref = to;\\n      if (isBrowser) {\\n        try {\\n          let currentUrl = new URL(window.location.href);\\n          let targetUrl = to.startsWith(\\\"//\\\") ? new URL(currentUrl.protocol + to) : new URL(to);\\n          let path = stripBasename(targetUrl.pathname, basename);\\n          if (targetUrl.origin === currentUrl.origin && path != null) {\\n            to = path + targetUrl.search + targetUrl.hash;\\n          } else {\\n            isExternal = true;\\n          }\\n        } catch (e) {\\n          warning(\\n            false,\\n            `<Link to=\\\"${to}\\\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\\n          );\\n        }\\n      }\\n    }\\n    let href = useHref(to, { relative });\\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\\n      prefetch,\\n      rest\\n    );\\n    let internalOnClick = useLinkClickHandler(to, {\\n      replace: replace2,\\n      state,\\n      target,\\n      preventScrollReset,\\n      relative,\\n      viewTransition\\n    });\\n    function handleClick(event) {\\n      if (onClick) onClick(event);\\n      if (!event.defaultPrevented) {\\n        internalOnClick(event);\\n      }\\n    }\\n    let link = (\\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\\n      /* @__PURE__ */ React10.createElement(\\n        \\\"a\\\",\\n        {\\n          ...rest,\\n          ...prefetchHandlers,\\n          href: absoluteHref || href,\\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\\n          ref: mergeRefs(forwardedRef, prefetchRef),\\n          target,\\n          \\\"data-discover\\\": !isAbsolute && discover === \\\"render\\\" ? \\\"true\\\" : void 0\\n        }\\n      )\\n    );\\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href })) : link;\\n  }\\n);\\nLink.displayName = \\\"Link\\\";\\nvar NavLink = React10.forwardRef(\\n  function NavLinkWithRef({\\n    \\\"aria-current\\\": ariaCurrentProp = \\\"page\\\",\\n    caseSensitive = false,\\n    className: classNameProp = \\\"\\\",\\n    end = false,\\n    style: styleProp,\\n    to,\\n    viewTransition,\\n    children,\\n    ...rest\\n  }, ref) {\\n    let path = useResolvedPath(to, { relative: rest.relative });\\n    let location = useLocation();\\n    let routerState = React10.useContext(DataRouterStateContext);\\n    let { navigator: navigator2, basename } = React10.useContext(NavigationContext);\\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\\n    // eslint-disable-next-line react-hooks/rules-of-hooks\\n    useViewTransitionState(path) && viewTransition === true;\\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\\n    let locationPathname = location.pathname;\\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\\n    if (!caseSensitive) {\\n      locationPathname = locationPathname.toLowerCase();\\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\\n      toPathname = toPathname.toLowerCase();\\n    }\\n    if (nextLocationPathname && basename) {\\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\\n    }\\n    const endSlashPosition = toPathname !== \\\"/\\\" && toPathname.endsWith(\\\"/\\\") ? toPathname.length - 1 : toPathname.length;\\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \\\"/\\\";\\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \\\"/\\\");\\n    let renderProps = {\\n      isActive,\\n      isPending,\\n      isTransitioning\\n    };\\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\\n    let className;\\n    if (typeof classNameProp === \\\"function\\\") {\\n      className = classNameProp(renderProps);\\n    } else {\\n      className = [\\n        classNameProp,\\n        isActive ? \\\"active\\\" : null,\\n        isPending ? \\\"pending\\\" : null,\\n        isTransitioning ? \\\"transitioning\\\" : null\\n      ].filter(Boolean).join(\\\" \\\");\\n    }\\n    let style = typeof styleProp === \\\"function\\\" ? styleProp(renderProps) : styleProp;\\n    return /* @__PURE__ */ React10.createElement(\\n      Link,\\n      {\\n        ...rest,\\n        \\\"aria-current\\\": ariaCurrent,\\n        className,\\n        ref,\\n        style,\\n        to,\\n        viewTransition\\n      },\\n      typeof children === \\\"function\\\" ? children(renderProps) : children\\n    );\\n  }\\n);\\nNavLink.displayName = \\\"NavLink\\\";\\nvar Form = React10.forwardRef(\\n  ({\\n    discover = \\\"render\\\",\\n    fetcherKey,\\n    navigate,\\n    reloadDocument,\\n    replace: replace2,\\n    state,\\n    method = defaultMethod,\\n    action,\\n    onSubmit,\\n    relative,\\n    preventScrollReset,\\n    viewTransition,\\n    ...props\\n  }, forwardedRef) => {\\n    let submit = useSubmit();\\n    let formAction = useFormAction(action, { relative });\\n    let formMethod = method.toLowerCase() === \\\"get\\\" ? \\\"get\\\" : \\\"post\\\";\\n    let isAbsolute = typeof action === \\\"string\\\" && ABSOLUTE_URL_REGEX2.test(action);\\n    let submitHandler = (event) => {\\n      onSubmit && onSubmit(event);\\n      if (event.defaultPrevented) return;\\n      event.preventDefault();\\n      let submitter = event.nativeEvent.submitter;\\n      let submitMethod = submitter?.getAttribute(\\\"formmethod\\\") || method;\\n      submit(submitter || event.currentTarget, {\\n        fetcherKey,\\n        method: submitMethod,\\n        navigate,\\n        replace: replace2,\\n        state,\\n        relative,\\n        preventScrollReset,\\n        viewTransition\\n      });\\n    };\\n    return /* @__PURE__ */ React10.createElement(\\n      \\\"form\\\",\\n      {\\n        ref: forwardedRef,\\n        method: formMethod,\\n        action: formAction,\\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\\n        ...props,\\n        \\\"data-discover\\\": !isAbsolute && discover === \\\"render\\\" ? \\\"true\\\" : void 0\\n      }\\n    );\\n  }\\n);\\nForm.displayName = \\\"Form\\\";\\nfunction ScrollRestoration({\\n  getKey,\\n  storageKey,\\n  ...props\\n}) {\\n  let remixContext = React10.useContext(FrameworkContext);\\n  let { basename } = React10.useContext(NavigationContext);\\n  let location = useLocation();\\n  let matches = useMatches();\\n  useScrollRestoration({ getKey, storageKey });\\n  let ssrKey = React10.useMemo(\\n    () => {\\n      if (!remixContext || !getKey) return null;\\n      let userKey = getScrollRestorationKey(\\n        location,\\n        matches,\\n        basename,\\n        getKey\\n      );\\n      return userKey !== location.key ? userKey : null;\\n    },\\n    // Nah, we only need this the first time for the SSR render\\n    // eslint-disable-next-line react-hooks/exhaustive-deps\\n    []\\n  );\\n  if (!remixContext || remixContext.isSpaMode) {\\n    return null;\\n  }\\n  let restoreScroll = ((storageKey2, restoreKey) => {\\n    if (!window.history.state || !window.history.state.key) {\\n      let key = Math.random().toString(32).slice(2);\\n      window.history.replaceState({ key }, \\\"\\\");\\n    }\\n    try {\\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \\\"{}\\\");\\n      let storedY = positions[restoreKey || window.history.state.key];\\n      if (typeof storedY === \\\"number\\\") {\\n        window.scrollTo(0, storedY);\\n      }\\n    } catch (error) {\\n      console.error(error);\\n      sessionStorage.removeItem(storageKey2);\\n    }\\n  }).toString();\\n  return /* @__PURE__ */ React10.createElement(\\n    \\\"script\\\",\\n    {\\n      ...props,\\n      suppressHydrationWarning: true,\\n      dangerouslySetInnerHTML: {\\n        __html: `(${restoreScroll})(${JSON.stringify(\\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\\n        )}, ${JSON.stringify(ssrKey)})`\\n      }\\n    }\\n  );\\n}\\nScrollRestoration.displayName = \\\"ScrollRestoration\\\";\\nfunction getDataRouterConsoleError2(hookName) {\\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\\n}\\nfunction useDataRouterContext3(hookName) {\\n  let ctx = React10.useContext(DataRouterContext);\\n  invariant(ctx, getDataRouterConsoleError2(hookName));\\n  return ctx;\\n}\\nfunction useDataRouterState2(hookName) {\\n  let state = React10.useContext(DataRouterStateContext);\\n  invariant(state, getDataRouterConsoleError2(hookName));\\n  return state;\\n}\\nfunction useLinkClickHandler(to, {\\n  target,\\n  replace: replaceProp,\\n  state,\\n  preventScrollReset,\\n  relative,\\n  viewTransition\\n} = {}) {\\n  let navigate = useNavigate();\\n  let location = useLocation();\\n  let path = useResolvedPath(to, { relative });\\n  return React10.useCallback(\\n    (event) => {\\n      if (shouldProcessLinkClick(event, target)) {\\n        event.preventDefault();\\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\\n        navigate(to, {\\n          replace: replace2,\\n          state,\\n          preventScrollReset,\\n          relative,\\n          viewTransition\\n        });\\n      }\\n    },\\n    [\\n      location,\\n      navigate,\\n      path,\\n      replaceProp,\\n      state,\\n      target,\\n      to,\\n      preventScrollReset,\\n      relative,\\n      viewTransition\\n    ]\\n  );\\n}\\nfunction useSearchParams(defaultInit) {\\n  warning(\\n    typeof URLSearchParams !== \\\"undefined\\\",\\n    `You cannot use the \\\\`useSearchParams\\\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\\n  );\\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\\n  let hasSetSearchParamsRef = React10.useRef(false);\\n  let location = useLocation();\\n  let searchParams = React10.useMemo(\\n    () => (\\n      // Only merge in the defaults if we haven't yet called setSearchParams.\\n      // Once we call that we want those to take precedence, otherwise you can't\\n      // remove a param with setSearchParams({}) if it has an initial value\\n      getSearchParamsForLocation(\\n        location.search,\\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\\n      )\\n    ),\\n    [location.search]\\n  );\\n  let navigate = useNavigate();\\n  let setSearchParams = React10.useCallback(\\n    (nextInit, navigateOptions) => {\\n      const newSearchParams = createSearchParams(\\n        typeof nextInit === \\\"function\\\" ? nextInit(searchParams) : nextInit\\n      );\\n      hasSetSearchParamsRef.current = true;\\n      navigate(\\\"?\\\" + newSearchParams, navigateOptions);\\n    },\\n    [navigate, searchParams]\\n  );\\n  return [searchParams, setSearchParams];\\n}\\nvar fetcherId = 0;\\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\\nfunction useSubmit() {\\n  let { router } = useDataRouterContext3(\\\"useSubmit\\\" /* UseSubmit */);\\n  let { basename } = React10.useContext(NavigationContext);\\n  let currentRouteId = useRouteId();\\n  return React10.useCallback(\\n    async (target, options = {}) => {\\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\\n        target,\\n        basename\\n      );\\n      if (options.navigate === false) {\\n        let key = options.fetcherKey || getUniqueFetcherId();\\n        await router.fetch(key, currentRouteId, options.action || action, {\\n          preventScrollReset: options.preventScrollReset,\\n          formData,\\n          body,\\n          formMethod: options.method || method,\\n          formEncType: options.encType || encType,\\n          flushSync: options.flushSync\\n        });\\n      } else {\\n        await router.navigate(options.action || action, {\\n          preventScrollReset: options.preventScrollReset,\\n          formData,\\n          body,\\n          formMethod: options.method || method,\\n          formEncType: options.encType || encType,\\n          replace: options.replace,\\n          state: options.state,\\n          fromRouteId: currentRouteId,\\n          flushSync: options.flushSync,\\n          viewTransition: options.viewTransition\\n        });\\n      }\\n    },\\n    [router, basename, currentRouteId]\\n  );\\n}\\nfunction useFormAction(action, { relative } = {}) {\\n  let { basename } = React10.useContext(NavigationContext);\\n  let routeContext = React10.useContext(RouteContext);\\n  invariant(routeContext, \\\"useFormAction must be used inside a RouteContext\\\");\\n  let [match] = routeContext.matches.slice(-1);\\n  let path = { ...useResolvedPath(action ? action : \\\".\\\", { relative }) };\\n  let location = useLocation();\\n  if (action == null) {\\n    path.search = location.search;\\n    let params = new URLSearchParams(path.search);\\n    let indexValues = params.getAll(\\\"index\\\");\\n    let hasNakedIndexParam = indexValues.some((v) => v === \\\"\\\");\\n    if (hasNakedIndexParam) {\\n      params.delete(\\\"index\\\");\\n      indexValues.filter((v) => v).forEach((v) => params.append(\\\"index\\\", v));\\n      let qs = params.toString();\\n      path.search = qs ? `?${qs}` : \\\"\\\";\\n    }\\n  }\\n  if ((!action || action === \\\".\\\") && match.route.index) {\\n    path.search = path.search ? path.search.replace(/^\\\\?/, \\\"?index&\\\") : \\\"?index\\\";\\n  }\\n  if (basename !== \\\"/\\\") {\\n    path.pathname = path.pathname === \\\"/\\\" ? basename : joinPaths([basename, path.pathname]);\\n  }\\n  return createPath(path);\\n}\\nfunction useFetcher({\\n  key\\n} = {}) {\\n  let { router } = useDataRouterContext3(\\\"useFetcher\\\" /* UseFetcher */);\\n  let state = useDataRouterState2(\\\"useFetcher\\\" /* UseFetcher */);\\n  let fetcherData = React10.useContext(FetchersContext);\\n  let route = React10.useContext(RouteContext);\\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\\n  invariant(route, `useFetcher must be used inside a RouteContext`);\\n  invariant(\\n    routeId != null,\\n    `useFetcher can only be used on routes that contain a unique \\\"id\\\"`\\n  );\\n  let defaultKey = React10.useId();\\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\\n  if (key && key !== fetcherKey) {\\n    setFetcherKey(key);\\n  }\\n  React10.useEffect(() => {\\n    router.getFetcher(fetcherKey);\\n    return () => router.deleteFetcher(fetcherKey);\\n  }, [router, fetcherKey]);\\n  let load = React10.useCallback(\\n    async (href, opts) => {\\n      invariant(routeId, \\\"No routeId available for fetcher.load()\\\");\\n      await router.fetch(fetcherKey, routeId, href, opts);\\n    },\\n    [fetcherKey, routeId, router]\\n  );\\n  let submitImpl = useSubmit();\\n  let submit = React10.useCallback(\\n    async (target, opts) => {\\n      await submitImpl(target, {\\n        ...opts,\\n        navigate: false,\\n        fetcherKey\\n      });\\n    },\\n    [fetcherKey, submitImpl]\\n  );\\n  let FetcherForm = React10.useMemo(() => {\\n    let FetcherForm2 = React10.forwardRef(\\n      (props, ref) => {\\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\\n      }\\n    );\\n    FetcherForm2.displayName = \\\"fetcher.Form\\\";\\n    return FetcherForm2;\\n  }, [fetcherKey]);\\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\\n  let data2 = fetcherData.get(fetcherKey);\\n  let fetcherWithComponents = React10.useMemo(\\n    () => ({\\n      Form: FetcherForm,\\n      submit,\\n      load,\\n      ...fetcher,\\n      data: data2\\n    }),\\n    [FetcherForm, submit, load, fetcher, data2]\\n  );\\n  return fetcherWithComponents;\\n}\\nfunction useFetchers() {\\n  let state = useDataRouterState2(\\\"useFetchers\\\" /* UseFetchers */);\\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\\n    ...fetcher,\\n    key\\n  }));\\n}\\nvar SCROLL_RESTORATION_STORAGE_KEY = \\\"react-router-scroll-positions\\\";\\nvar savedScrollPositions = {};\\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\\n  let key = null;\\n  if (getKey) {\\n    if (basename !== \\\"/\\\") {\\n      key = getKey(\\n        {\\n          ...location,\\n          pathname: stripBasename(location.pathname, basename) || location.pathname\\n        },\\n        matches\\n      );\\n    } else {\\n      key = getKey(location, matches);\\n    }\\n  }\\n  if (key == null) {\\n    key = location.key;\\n  }\\n  return key;\\n}\\nfunction useScrollRestoration({\\n  getKey,\\n  storageKey\\n} = {}) {\\n  let { router } = useDataRouterContext3(\\\"useScrollRestoration\\\" /* UseScrollRestoration */);\\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\\n    \\\"useScrollRestoration\\\" /* UseScrollRestoration */\\n  );\\n  let { basename } = React10.useContext(NavigationContext);\\n  let location = useLocation();\\n  let matches = useMatches();\\n  let navigation = useNavigation();\\n  React10.useEffect(() => {\\n    window.history.scrollRestoration = \\\"manual\\\";\\n    return () => {\\n      window.history.scrollRestoration = \\\"auto\\\";\\n    };\\n  }, []);\\n  usePageHide(\\n    React10.useCallback(() => {\\n      if (navigation.state === \\\"idle\\\") {\\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\\n        savedScrollPositions[key] = window.scrollY;\\n      }\\n      try {\\n        sessionStorage.setItem(\\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\\n          JSON.stringify(savedScrollPositions)\\n        );\\n      } catch (error) {\\n        warning(\\n          false,\\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\\n        );\\n      }\\n      window.history.scrollRestoration = \\\"auto\\\";\\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\\n  );\\n  if (typeof document !== \\\"undefined\\\") {\\n    React10.useLayoutEffect(() => {\\n      try {\\n        let sessionPositions = sessionStorage.getItem(\\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\\n        );\\n        if (sessionPositions) {\\n          savedScrollPositions = JSON.parse(sessionPositions);\\n        }\\n      } catch (e) {\\n      }\\n    }, [storageKey]);\\n    React10.useLayoutEffect(() => {\\n      let disableScrollRestoration = router?.enableScrollRestoration(\\n        savedScrollPositions,\\n        () => window.scrollY,\\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\\n      );\\n      return () => disableScrollRestoration && disableScrollRestoration();\\n    }, [router, basename, getKey]);\\n    React10.useLayoutEffect(() => {\\n      if (restoreScrollPosition === false) {\\n        return;\\n      }\\n      if (typeof restoreScrollPosition === \\\"number\\\") {\\n        window.scrollTo(0, restoreScrollPosition);\\n        return;\\n      }\\n      if (location.hash) {\\n        let el = document.getElementById(\\n          decodeURIComponent(location.hash.slice(1))\\n        );\\n        if (el) {\\n          el.scrollIntoView();\\n          return;\\n        }\\n      }\\n      if (preventScrollReset === true) {\\n        return;\\n      }\\n      window.scrollTo(0, 0);\\n    }, [location, restoreScrollPosition, preventScrollReset]);\\n  }\\n}\\nfunction useBeforeUnload(callback, options) {\\n  let { capture } = options || {};\\n  React10.useEffect(() => {\\n    let opts = capture != null ? { capture } : void 0;\\n    window.addEventListener(\\\"beforeunload\\\", callback, opts);\\n    return () => {\\n      window.removeEventListener(\\\"beforeunload\\\", callback, opts);\\n    };\\n  }, [callback, capture]);\\n}\\nfunction usePageHide(callback, options) {\\n  let { capture } = options || {};\\n  React10.useEffect(() => {\\n    let opts = capture != null ? { capture } : void 0;\\n    window.addEventListener(\\\"pagehide\\\", callback, opts);\\n    return () => {\\n      window.removeEventListener(\\\"pagehide\\\", callback, opts);\\n    };\\n  }, [callback, capture]);\\n}\\nfunction usePrompt({\\n  when,\\n  message\\n}) {\\n  let blocker = useBlocker(when);\\n  React10.useEffect(() => {\\n    if (blocker.state === \\\"blocked\\\") {\\n      let proceed = window.confirm(message);\\n      if (proceed) {\\n        setTimeout(blocker.proceed, 0);\\n      } else {\\n        blocker.reset();\\n      }\\n    }\\n  }, [blocker, message]);\\n  React10.useEffect(() => {\\n    if (blocker.state === \\\"blocked\\\" && !when) {\\n      blocker.reset();\\n    }\\n  }, [blocker, when]);\\n}\\nfunction useViewTransitionState(to, opts = {}) {\\n  let vtContext = React10.useContext(ViewTransitionContext);\\n  invariant(\\n    vtContext != null,\\n    \\\"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\\\"\\n  );\\n  let { basename } = useDataRouterContext3(\\n    \\\"useViewTransitionState\\\" /* useViewTransitionState */\\n  );\\n  let path = useResolvedPath(to, { relative: opts.relative });\\n  if (!vtContext.isTransitioning) {\\n    return false;\\n  }\\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\\n}\\n\\n// lib/dom/server.tsx\\nimport * as React11 from \\\"react\\\";\\nfunction StaticRouter({\\n  basename,\\n  children,\\n  location: locationProp = \\\"/\\\"\\n}) {\\n  if (typeof locationProp === \\\"string\\\") {\\n    locationProp = parsePath(locationProp);\\n  }\\n  let action = \\\"POP\\\" /* Pop */;\\n  let location = {\\n    pathname: locationProp.pathname || \\\"/\\\",\\n    search: locationProp.search || \\\"\\\",\\n    hash: locationProp.hash || \\\"\\\",\\n    state: locationProp.state != null ? locationProp.state : null,\\n    key: locationProp.key || \\\"default\\\"\\n  };\\n  let staticNavigator = getStatelessNavigator();\\n  return /* @__PURE__ */ React11.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location,\\n      navigationType: action,\\n      navigator: staticNavigator,\\n      static: true\\n    }\\n  );\\n}\\nfunction StaticRouterProvider({\\n  context,\\n  router,\\n  hydrate = true,\\n  nonce\\n}) {\\n  invariant(\\n    router && context,\\n    \\\"You must provide `router` and `context` to <StaticRouterProvider>\\\"\\n  );\\n  let dataRouterContext = {\\n    router,\\n    navigator: getStatelessNavigator(),\\n    static: true,\\n    staticContext: context,\\n    basename: context.basename || \\\"/\\\"\\n  };\\n  let fetchersContext = /* @__PURE__ */ new Map();\\n  let hydrateScript = \\\"\\\";\\n  if (hydrate !== false) {\\n    let data2 = {\\n      loaderData: context.loaderData,\\n      actionData: context.actionData,\\n      errors: serializeErrors(context.errors)\\n    };\\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\\n  }\\n  let { state } = dataRouterContext.router;\\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\\n    Router,\\n    {\\n      basename: dataRouterContext.basename,\\n      location: state.location,\\n      navigationType: state.historyAction,\\n      navigator: dataRouterContext.navigator,\\n      static: dataRouterContext.static\\n    },\\n    /* @__PURE__ */ React11.createElement(\\n      DataRoutes2,\\n      {\\n        routes: router.routes,\\n        future: router.future,\\n        state\\n      }\\n    )\\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\\n    \\\"script\\\",\\n    {\\n      suppressHydrationWarning: true,\\n      nonce,\\n      dangerouslySetInnerHTML: { __html: hydrateScript }\\n    }\\n  ) : null);\\n}\\nfunction DataRoutes2({\\n  routes,\\n  future,\\n  state\\n}) {\\n  return useRoutesImpl(routes, void 0, state, future);\\n}\\nfunction serializeErrors(errors) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (isRouteErrorResponse(val)) {\\n      serialized[key] = { ...val, __type: \\\"RouteErrorResponse\\\" };\\n    } else if (val instanceof Error) {\\n      serialized[key] = {\\n        message: val.message,\\n        __type: \\\"Error\\\",\\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\\n        // can re-create the same type during hydration.\\n        ...val.name !== \\\"Error\\\" ? {\\n          __subType: val.name\\n        } : {}\\n      };\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\nfunction getStatelessNavigator() {\\n  return {\\n    createHref,\\n    encodeLocation,\\n    push(to) {\\n      throw new Error(\\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\\\`navigate(${JSON.stringify(to)})\\\\` somewhere in your app.`\\n      );\\n    },\\n    replace(to) {\\n      throw new Error(\\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\\\`navigate(${JSON.stringify(to)}, { replace: true })\\\\` somewhere in your app.`\\n      );\\n    },\\n    go(delta) {\\n      throw new Error(\\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\\\`navigate(${delta})\\\\` somewhere in your app.`\\n      );\\n    },\\n    back() {\\n      throw new Error(\\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\\n      );\\n    },\\n    forward() {\\n      throw new Error(\\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\\n      );\\n    }\\n  };\\n}\\nfunction createStaticHandler2(routes, opts) {\\n  return createStaticHandler(routes, {\\n    ...opts,\\n    mapRouteProperties\\n  });\\n}\\nfunction createStaticRouter(routes, context, opts = {}) {\\n  let manifest = {};\\n  let dataRoutes = convertRoutesToDataRoutes(\\n    routes,\\n    mapRouteProperties,\\n    void 0,\\n    manifest\\n  );\\n  let matches = context.matches.map((match) => {\\n    let route = manifest[match.route.id] || match.route;\\n    return {\\n      ...match,\\n      route\\n    };\\n  });\\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\\n  return {\\n    get basename() {\\n      return context.basename;\\n    },\\n    get future() {\\n      return {\\n        ...opts?.future\\n      };\\n    },\\n    get state() {\\n      return {\\n        historyAction: \\\"POP\\\" /* Pop */,\\n        location: context.location,\\n        matches,\\n        loaderData: context.loaderData,\\n        actionData: context.actionData,\\n        errors: context.errors,\\n        initialized: true,\\n        navigation: IDLE_NAVIGATION,\\n        restoreScrollPosition: null,\\n        preventScrollReset: false,\\n        revalidation: \\\"idle\\\",\\n        fetchers: /* @__PURE__ */ new Map(),\\n        blockers: /* @__PURE__ */ new Map()\\n      };\\n    },\\n    get routes() {\\n      return dataRoutes;\\n    },\\n    get window() {\\n      return void 0;\\n    },\\n    initialize() {\\n      throw msg(\\\"initialize\\\");\\n    },\\n    subscribe() {\\n      throw msg(\\\"subscribe\\\");\\n    },\\n    enableScrollRestoration() {\\n      throw msg(\\\"enableScrollRestoration\\\");\\n    },\\n    navigate() {\\n      throw msg(\\\"navigate\\\");\\n    },\\n    fetch() {\\n      throw msg(\\\"fetch\\\");\\n    },\\n    revalidate() {\\n      throw msg(\\\"revalidate\\\");\\n    },\\n    createHref,\\n    encodeLocation,\\n    getFetcher() {\\n      return IDLE_FETCHER;\\n    },\\n    deleteFetcher() {\\n      throw msg(\\\"deleteFetcher\\\");\\n    },\\n    dispose() {\\n      throw msg(\\\"dispose\\\");\\n    },\\n    getBlocker() {\\n      return IDLE_BLOCKER;\\n    },\\n    deleteBlocker() {\\n      throw msg(\\\"deleteBlocker\\\");\\n    },\\n    patchRoutes() {\\n      throw msg(\\\"patchRoutes\\\");\\n    },\\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\\n    _internalSetRoutes() {\\n      throw msg(\\\"_internalSetRoutes\\\");\\n    }\\n  };\\n}\\nfunction createHref(to) {\\n  return typeof to === \\\"string\\\" ? to : createPath(to);\\n}\\nfunction encodeLocation(to) {\\n  let href = typeof to === \\\"string\\\" ? to : createPath(to);\\n  href = href.replace(/ $/, \\\"%20\\\");\\n  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, \\\"http://localhost\\\");\\n  return {\\n    pathname: encoded.pathname,\\n    search: encoded.search,\\n    hash: encoded.hash\\n  };\\n}\\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\nvar ESCAPE_LOOKUP2 = {\\n  \\\"&\\\": \\\"\\\\\\\\u0026\\\",\\n  \\\">\\\": \\\"\\\\\\\\u003e\\\",\\n  \\\"<\\\": \\\"\\\\\\\\u003c\\\",\\n  \\\"\\\\u2028\\\": \\\"\\\\\\\\u2028\\\",\\n  \\\"\\\\u2029\\\": \\\"\\\\\\\\u2029\\\"\\n};\\nvar ESCAPE_REGEX2 = /[&><\\\\u2028\\\\u2029]/g;\\nfunction htmlEscape(str) {\\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\\n}\\n\\n// lib/dom/ssr/server.tsx\\nimport * as React12 from \\\"react\\\";\\nfunction ServerRouter({\\n  context,\\n  url,\\n  nonce\\n}) {\\n  if (typeof url === \\\"string\\\") {\\n    url = new URL(url);\\n  }\\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\\n  let routes = createServerRoutes(\\n    manifest.routes,\\n    routeModules,\\n    context.future,\\n    context.isSpaMode\\n  );\\n  context.staticHandlerContext.loaderData = {\\n    ...context.staticHandlerContext.loaderData\\n  };\\n  for (let match of context.staticHandlerContext.matches) {\\n    let routeId = match.route.id;\\n    let route = routeModules[routeId];\\n    let manifestRoute = context.manifest.routes[routeId];\\n    if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\\n      delete context.staticHandlerContext.loaderData[routeId];\\n    }\\n  }\\n  let router = createStaticRouter(routes, context.staticHandlerContext);\\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\\n    FrameworkContext.Provider,\\n    {\\n      value: {\\n        manifest,\\n        routeModules,\\n        criticalCss,\\n        serverHandoffString,\\n        future: context.future,\\n        isSpaMode: context.isSpaMode,\\n        serializeError: context.serializeError,\\n        renderMeta: context.renderMeta\\n      }\\n    },\\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\\n      StaticRouterProvider,\\n      {\\n        router,\\n        context: context.staticHandlerContext,\\n        hydrate: false\\n      }\\n    ))\\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\\n    StreamTransfer,\\n    {\\n      context,\\n      identifier: 0,\\n      reader: context.serverHandoffStream.getReader(),\\n      textDecoder: new TextDecoder(),\\n      nonce\\n    }\\n  )) : null);\\n}\\n\\n// lib/dom/ssr/routes-test-stub.tsx\\nimport * as React13 from \\\"react\\\";\\nfunction createRoutesStub(routes, context = {}) {\\n  return function RoutesTestStub({\\n    initialEntries,\\n    initialIndex,\\n    hydrationData,\\n    future\\n  }) {\\n    let routerRef = React13.useRef();\\n    let remixContextRef = React13.useRef();\\n    if (routerRef.current == null) {\\n      remixContextRef.current = {\\n        future: {},\\n        manifest: {\\n          routes: {},\\n          entry: { imports: [], module: \\\"\\\" },\\n          url: \\\"\\\",\\n          version: \\\"\\\"\\n        },\\n        routeModules: {},\\n        isSpaMode: false\\n      };\\n      let patched = processRoutes(\\n        // @ts-expect-error loader/action context types don't match :/\\n        convertRoutesToDataRoutes(routes, (r) => r),\\n        context,\\n        remixContextRef.current.manifest,\\n        remixContextRef.current.routeModules\\n      );\\n      routerRef.current = createMemoryRouter(patched, {\\n        initialEntries,\\n        initialIndex,\\n        hydrationData\\n      });\\n    }\\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\\n  };\\n}\\nfunction processRoutes(routes, context, manifest, routeModules, parentId) {\\n  return routes.map((route) => {\\n    if (!route.id) {\\n      throw new Error(\\n        \\\"Expected a route.id in @remix-run/testing processRoutes() function\\\"\\n      );\\n    }\\n    let { loader, action } = route;\\n    let newRoute = {\\n      id: route.id,\\n      path: route.path,\\n      index: route.index,\\n      Component: route.Component,\\n      HydrateFallback: route.HydrateFallback,\\n      ErrorBoundary: route.ErrorBoundary,\\n      action: action ? (args) => action({ ...args, context }) : void 0,\\n      loader: loader ? (args) => loader({ ...args, context }) : void 0,\\n      handle: route.handle,\\n      shouldRevalidate: route.shouldRevalidate\\n    };\\n    let entryRoute = {\\n      id: route.id,\\n      path: route.path,\\n      index: route.index,\\n      parentId,\\n      hasAction: route.action != null,\\n      hasLoader: route.loader != null,\\n      // When testing routes, you should just be stubbing loader/action, not\\n      // trying to re-implement the full loader/clientLoader/SSR/hydration flow.\\n      // That is better tested via E2E tests.\\n      hasClientAction: false,\\n      hasClientLoader: false,\\n      hasErrorBoundary: route.ErrorBoundary != null,\\n      module: \\\"build/stub-path-to-module.js\\\"\\n      // any need for this?\\n    };\\n    manifest.routes[newRoute.id] = entryRoute;\\n    routeModules[route.id] = {\\n      default: route.Component || Outlet,\\n      ErrorBoundary: route.ErrorBoundary || void 0,\\n      handle: route.handle,\\n      links: route.links,\\n      meta: route.meta,\\n      shouldRevalidate: route.shouldRevalidate\\n    };\\n    if (route.children) {\\n      newRoute.children = processRoutes(\\n        route.children,\\n        context,\\n        manifest,\\n        routeModules,\\n        newRoute.id\\n      );\\n    }\\n    return newRoute;\\n  });\\n}\\n\\n// lib/server-runtime/cookies.ts\\nimport { parse, serialize } from \\\"cookie\\\";\\n\\n// lib/server-runtime/crypto.ts\\nvar encoder = new TextEncoder();\\nvar sign = async (value, secret) => {\\n  let data2 = encoder.encode(value);\\n  let key = await createKey2(secret, [\\\"sign\\\"]);\\n  let signature = await crypto.subtle.sign(\\\"HMAC\\\", key, data2);\\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\\n    /=+$/,\\n    \\\"\\\"\\n  );\\n  return value + \\\".\\\" + hash;\\n};\\nvar unsign = async (cookie, secret) => {\\n  let index = cookie.lastIndexOf(\\\".\\\");\\n  let value = cookie.slice(0, index);\\n  let hash = cookie.slice(index + 1);\\n  let data2 = encoder.encode(value);\\n  let key = await createKey2(secret, [\\\"verify\\\"]);\\n  let signature = byteStringToUint8Array(atob(hash));\\n  let valid = await crypto.subtle.verify(\\\"HMAC\\\", key, signature, data2);\\n  return valid ? value : false;\\n};\\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\\n  \\\"raw\\\",\\n  encoder.encode(secret),\\n  { name: \\\"HMAC\\\", hash: \\\"SHA-256\\\" },\\n  false,\\n  usages\\n);\\nfunction byteStringToUint8Array(byteString) {\\n  let array = new Uint8Array(byteString.length);\\n  for (let i = 0; i < byteString.length; i++) {\\n    array[i] = byteString.charCodeAt(i);\\n  }\\n  return array;\\n}\\n\\n// lib/server-runtime/cookies.ts\\nvar createCookie = (name, cookieOptions = {}) => {\\n  let { secrets = [], ...options } = {\\n    path: \\\"/\\\",\\n    sameSite: \\\"lax\\\",\\n    ...cookieOptions\\n  };\\n  warnOnceAboutExpiresCookie(name, options.expires);\\n  return {\\n    get name() {\\n      return name;\\n    },\\n    get isSigned() {\\n      return secrets.length > 0;\\n    },\\n    get expires() {\\n      return typeof options.maxAge !== \\\"undefined\\\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\\n    },\\n    async parse(cookieHeader, parseOptions) {\\n      if (!cookieHeader) return null;\\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\\n      if (name in cookies) {\\n        let value = cookies[name];\\n        if (typeof value === \\\"string\\\" && value !== \\\"\\\") {\\n          let decoded = await decodeCookieValue(value, secrets);\\n          return decoded;\\n        } else {\\n          return \\\"\\\";\\n        }\\n      } else {\\n        return null;\\n      }\\n    },\\n    async serialize(value, serializeOptions) {\\n      return serialize(\\n        name,\\n        value === \\\"\\\" ? \\\"\\\" : await encodeCookieValue(value, secrets),\\n        {\\n          ...options,\\n          ...serializeOptions\\n        }\\n      );\\n    }\\n  };\\n};\\nvar isCookie = (object) => {\\n  return object != null && typeof object.name === \\\"string\\\" && typeof object.isSigned === \\\"boolean\\\" && typeof object.parse === \\\"function\\\" && typeof object.serialize === \\\"function\\\";\\n};\\nasync function encodeCookieValue(value, secrets) {\\n  let encoded = encodeData(value);\\n  if (secrets.length > 0) {\\n    encoded = await sign(encoded, secrets[0]);\\n  }\\n  return encoded;\\n}\\nasync function decodeCookieValue(value, secrets) {\\n  if (secrets.length > 0) {\\n    for (let secret of secrets) {\\n      let unsignedValue = await unsign(value, secret);\\n      if (unsignedValue !== false) {\\n        return decodeData(unsignedValue);\\n      }\\n    }\\n    return null;\\n  }\\n  return decodeData(value);\\n}\\nfunction encodeData(value) {\\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\\n}\\nfunction decodeData(value) {\\n  try {\\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\\n  } catch (error) {\\n    return {};\\n  }\\n}\\nfunction myEscape(value) {\\n  let str = value.toString();\\n  let result = \\\"\\\";\\n  let index = 0;\\n  let chr, code;\\n  while (index < str.length) {\\n    chr = str.charAt(index++);\\n    if (/[\\\\w*+\\\\-./@]/.exec(chr)) {\\n      result += chr;\\n    } else {\\n      code = chr.charCodeAt(0);\\n      if (code < 256) {\\n        result += \\\"%\\\" + hex(code, 2);\\n      } else {\\n        result += \\\"%u\\\" + hex(code, 4).toUpperCase();\\n      }\\n    }\\n  }\\n  return result;\\n}\\nfunction hex(code, length) {\\n  let result = code.toString(16);\\n  while (result.length < length) result = \\\"0\\\" + result;\\n  return result;\\n}\\nfunction myUnescape(value) {\\n  let str = value.toString();\\n  let result = \\\"\\\";\\n  let index = 0;\\n  let chr, part;\\n  while (index < str.length) {\\n    chr = str.charAt(index++);\\n    if (chr === \\\"%\\\") {\\n      if (str.charAt(index) === \\\"u\\\") {\\n        part = str.slice(index + 1, index + 5);\\n        if (/^[\\\\da-f]{4}$/i.exec(part)) {\\n          result += String.fromCharCode(parseInt(part, 16));\\n          index += 5;\\n          continue;\\n        }\\n      } else {\\n        part = str.slice(index, index + 2);\\n        if (/^[\\\\da-f]{2}$/i.exec(part)) {\\n          result += String.fromCharCode(parseInt(part, 16));\\n          index += 2;\\n          continue;\\n        }\\n      }\\n    }\\n    result += chr;\\n  }\\n  return result;\\n}\\nfunction warnOnceAboutExpiresCookie(name, expires) {\\n  warnOnce(\\n    !expires,\\n    `The \\\"${name}\\\" cookie has an \\\"expires\\\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\\\`commitSession(session, { expires })\\\\` if using a session storage object, or \\\\`cookie.serialize(\\\"value\\\", { expires })\\\\` if you're using the cookie directly.`\\n  );\\n}\\n\\n// lib/server-runtime/entry.ts\\nfunction createEntryRouteModules(manifest) {\\n  return Object.keys(manifest).reduce((memo2, routeId) => {\\n    let route = manifest[routeId];\\n    if (route) {\\n      memo2[routeId] = route.module;\\n    }\\n    return memo2;\\n  }, {});\\n}\\n\\n// lib/server-runtime/mode.ts\\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\\n  ServerMode2[\\\"Development\\\"] = \\\"development\\\";\\n  ServerMode2[\\\"Production\\\"] = \\\"production\\\";\\n  ServerMode2[\\\"Test\\\"] = \\\"test\\\";\\n  return ServerMode2;\\n})(ServerMode || {});\\nfunction isServerMode(value) {\\n  return value === \\\"development\\\" /* Development */ || value === \\\"production\\\" /* Production */ || value === \\\"test\\\" /* Test */;\\n}\\n\\n// lib/server-runtime/errors.ts\\nfunction sanitizeError(error, serverMode) {\\n  if (error instanceof Error && serverMode !== \\\"development\\\" /* Development */) {\\n    let sanitized = new Error(\\\"Unexpected Server Error\\\");\\n    sanitized.stack = void 0;\\n    return sanitized;\\n  }\\n  return error;\\n}\\nfunction sanitizeErrors(errors, serverMode) {\\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\\n  }, {});\\n}\\nfunction serializeError(error, serverMode) {\\n  let sanitized = sanitizeError(error, serverMode);\\n  return {\\n    message: sanitized.message,\\n    stack: sanitized.stack\\n  };\\n}\\nfunction serializeErrors2(errors, serverMode) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (isRouteErrorResponse(val)) {\\n      serialized[key] = { ...val, __type: \\\"RouteErrorResponse\\\" };\\n    } else if (val instanceof Error) {\\n      let sanitized = sanitizeError(val, serverMode);\\n      serialized[key] = {\\n        message: sanitized.message,\\n        stack: sanitized.stack,\\n        __type: \\\"Error\\\",\\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\\n        // can re-create the same type during hydration.  This will only apply\\n        // in dev mode since all production errors are sanitized to normal\\n        // Error instances\\n        ...sanitized.name !== \\\"Error\\\" ? {\\n          __subType: sanitized.name\\n        } : {}\\n      };\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\n\\n// lib/server-runtime/routeMatching.ts\\nfunction matchServerRoutes(routes, pathname, basename) {\\n  let matches = matchRoutes(\\n    routes,\\n    pathname,\\n    basename\\n  );\\n  if (!matches) return null;\\n  return matches.map((match) => ({\\n    params: match.params,\\n    pathname: match.pathname,\\n    route: match.route\\n  }));\\n}\\n\\n// lib/server-runtime/data.ts\\nasync function callRouteHandler(handler, args) {\\n  let result = await handler({\\n    request: stripRoutesParam(stripIndexParam2(args.request)),\\n    params: args.params,\\n    context: args.context\\n  });\\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\\n    throw new Response(null, result.init);\\n  }\\n  return result;\\n}\\nfunction stripIndexParam2(request) {\\n  let url = new URL(request.url);\\n  let indexValues = url.searchParams.getAll(\\\"index\\\");\\n  url.searchParams.delete(\\\"index\\\");\\n  let indexValuesToKeep = [];\\n  for (let indexValue of indexValues) {\\n    if (indexValue) {\\n      indexValuesToKeep.push(indexValue);\\n    }\\n  }\\n  for (let toKeep of indexValuesToKeep) {\\n    url.searchParams.append(\\\"index\\\", toKeep);\\n  }\\n  let init = {\\n    method: request.method,\\n    body: request.body,\\n    headers: request.headers,\\n    signal: request.signal\\n  };\\n  if (init.body) {\\n    init.duplex = \\\"half\\\";\\n  }\\n  return new Request(url.href, init);\\n}\\nfunction stripRoutesParam(request) {\\n  let url = new URL(request.url);\\n  url.searchParams.delete(\\\"_routes\\\");\\n  let init = {\\n    method: request.method,\\n    body: request.body,\\n    headers: request.headers,\\n    signal: request.signal\\n  };\\n  if (init.body) {\\n    init.duplex = \\\"half\\\";\\n  }\\n  return new Request(url.href, init);\\n}\\n\\n// lib/server-runtime/invariant.ts\\nfunction invariant3(value, message) {\\n  if (value === false || value === null || typeof value === \\\"undefined\\\") {\\n    console.error(\\n      \\\"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\\\"\\n    );\\n    throw new Error(message);\\n  }\\n}\\n\\n// lib/server-runtime/routes.ts\\nfunction groupRoutesByParentId2(manifest) {\\n  let routes = {};\\n  Object.values(manifest).forEach((route) => {\\n    if (route) {\\n      let parentId = route.parentId || \\\"\\\";\\n      if (!routes[parentId]) {\\n        routes[parentId] = [];\\n      }\\n      routes[parentId].push(route);\\n    }\\n  });\\n  return routes;\\n}\\nfunction createRoutes(manifest, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId2(manifest)) {\\n  return (routesByParentId[parentId] || []).map((route) => ({\\n    ...route,\\n    children: createRoutes(manifest, route.id, routesByParentId)\\n  }));\\n}\\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId2(manifest)) {\\n  return (routesByParentId[parentId] || []).map((route) => {\\n    let commonRoute = {\\n      // Always include root due to default boundaries\\n      hasErrorBoundary: route.id === \\\"root\\\" || route.module.ErrorBoundary != null,\\n      id: route.id,\\n      path: route.path,\\n      // Need to use RR's version in the param typed here to permit the optional\\n      // context even though we know it'll always be provided in remix\\n      loader: route.module.loader ? async (args) => {\\n        if (args.request.headers.has(\\\"X-React-Router-Prerender-Data\\\")) {\\n          const preRenderedData = args.request.headers.get(\\n            \\\"X-React-Router-Prerender-Data\\\"\\n          );\\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\\n          invariant3(encoded, \\\"Missing prerendered data for route\\\");\\n          let uint8array = new TextEncoder().encode(encoded);\\n          let stream = new ReadableStream({\\n            start(controller) {\\n              controller.enqueue(uint8array);\\n              controller.close();\\n            }\\n          });\\n          let decoded = await decodeViaTurboStream(stream, global);\\n          let data2 = decoded.value;\\n          invariant3(\\n            data2 && route.id in data2,\\n            \\\"Unable to decode prerendered data\\\"\\n          );\\n          let result = data2[route.id];\\n          invariant3(\\\"data\\\" in result, \\\"Unable to process prerendered data\\\");\\n          return result.data;\\n        }\\n        let val = await callRouteHandler(route.module.loader, args);\\n        return val;\\n      } : void 0,\\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\\n      handle: route.module.handle\\n    };\\n    return route.index ? {\\n      index: true,\\n      ...commonRoute\\n    } : {\\n      caseSensitive: route.caseSensitive,\\n      children: createStaticHandlerDataRoutes(\\n        manifest,\\n        future,\\n        route.id,\\n        routesByParentId\\n      ),\\n      ...commonRoute\\n    };\\n  });\\n}\\n\\n// lib/server-runtime/markup.ts\\nvar ESCAPE_LOOKUP3 = {\\n  \\\"&\\\": \\\"\\\\\\\\u0026\\\",\\n  \\\">\\\": \\\"\\\\\\\\u003e\\\",\\n  \\\"<\\\": \\\"\\\\\\\\u003c\\\",\\n  \\\"\\\\u2028\\\": \\\"\\\\\\\\u2028\\\",\\n  \\\"\\\\u2029\\\": \\\"\\\\\\\\u2029\\\"\\n};\\nvar ESCAPE_REGEX3 = /[&><\\\\u2028\\\\u2029]/g;\\nfunction escapeHtml2(html) {\\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\\n}\\n\\n// lib/server-runtime/serverHandoff.ts\\nfunction createServerHandoffString(serverHandoff) {\\n  return escapeHtml2(JSON.stringify(serverHandoff));\\n}\\n\\n// lib/server-runtime/dev.ts\\nvar globalDevServerHooksKey = \\\"__reactRouterDevServerHooks\\\";\\nfunction setDevServerHooks(devServerHooks) {\\n  globalThis[globalDevServerHooksKey] = devServerHooks;\\n}\\nfunction getDevServerHooks() {\\n  return globalThis[globalDevServerHooksKey];\\n}\\n\\n// lib/server-runtime/single-fetch.ts\\nimport { encode } from \\\"turbo-stream\\\";\\n\\n// lib/server-runtime/headers.ts\\nimport { splitCookiesString } from \\\"set-cookie-parser\\\";\\nfunction getDocumentHeaders(build, context) {\\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\\n  let errorHeaders;\\n  if (boundaryIdx >= 0) {\\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\\n    context.matches.slice(boundaryIdx).some((match) => {\\n      let id = match.route.id;\\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\\n        errorHeaders = actionHeaders[id];\\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\\n        errorHeaders = loaderHeaders[id];\\n      }\\n      return errorHeaders != null;\\n    });\\n  }\\n  return matches.reduce((parentHeaders, match, idx) => {\\n    let { id } = match.route;\\n    let route = build.routes[id];\\n    invariant3(route, `Route with id \\\"${id}\\\" not found in build`);\\n    let routeModule = route.module;\\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\\n    let actionHeaders = context.actionHeaders[id] || new Headers();\\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\\n    if (routeModule.headers == null) {\\n      let headers2 = new Headers(parentHeaders);\\n      if (includeErrorCookies) {\\n        prependCookies(errorHeaders, headers2);\\n      }\\n      prependCookies(actionHeaders, headers2);\\n      prependCookies(loaderHeaders, headers2);\\n      return headers2;\\n    }\\n    let headers = new Headers(\\n      routeModule.headers ? typeof routeModule.headers === \\\"function\\\" ? routeModule.headers({\\n        loaderHeaders,\\n        parentHeaders,\\n        actionHeaders,\\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\\n      }) : routeModule.headers : void 0\\n    );\\n    if (includeErrorCookies) {\\n      prependCookies(errorHeaders, headers);\\n    }\\n    prependCookies(actionHeaders, headers);\\n    prependCookies(loaderHeaders, headers);\\n    prependCookies(parentHeaders, headers);\\n    return headers;\\n  }, new Headers());\\n}\\nfunction prependCookies(parentHeaders, childHeaders) {\\n  let parentSetCookieString = parentHeaders.get(\\\"Set-Cookie\\\");\\n  if (parentSetCookieString) {\\n    let cookies = splitCookiesString(parentSetCookieString);\\n    cookies.forEach((cookie) => {\\n      childHeaders.append(\\\"Set-Cookie\\\", cookie);\\n    });\\n  }\\n}\\n\\n// lib/server-runtime/single-fetch.ts\\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\\nfunction getSingleFetchDataStrategy2({\\n  isActionDataRequest,\\n  loadRouteIds\\n} = {}) {\\n  return async ({ request, matches }) => {\\n    if (isActionDataRequest && request.method === \\\"GET\\\") {\\n      return {};\\n    }\\n    let matchesToLoad = loadRouteIds ? matches.filter((m) => loadRouteIds.includes(m.route.id)) : matches;\\n    let results = await Promise.all(\\n      matchesToLoad.map((match) => match.resolve())\\n    );\\n    return results.reduce(\\n      (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\\n      {}\\n    );\\n  };\\n}\\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\\n  try {\\n    let handlerRequest = new Request(handlerUrl, {\\n      method: request.method,\\n      body: request.body,\\n      headers: request.headers,\\n      signal: request.signal,\\n      ...request.body ? { duplex: \\\"half\\\" } : void 0\\n    });\\n    let result = await staticHandler.query(handlerRequest, {\\n      requestContext: loadContext,\\n      skipLoaderErrorBubbling: true,\\n      dataStrategy: getSingleFetchDataStrategy2({\\n        isActionDataRequest: true\\n      })\\n    });\\n    if (isResponse(result)) {\\n      return {\\n        result: getSingleFetchRedirect(\\n          result.status,\\n          result.headers,\\n          build.basename\\n        ),\\n        headers: result.headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    let context = result;\\n    let headers = getDocumentHeaders(build, context);\\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\\\"Location\\\")) {\\n      return {\\n        result: getSingleFetchRedirect(\\n          context.statusCode,\\n          headers,\\n          build.basename\\n        ),\\n        headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    if (context.errors) {\\n      Object.values(context.errors).forEach((err) => {\\n        if (!isRouteErrorResponse(err) || err.error) {\\n          handleError(err);\\n        }\\n      });\\n      context.errors = sanitizeErrors(context.errors, serverMode);\\n    }\\n    let singleFetchResult;\\n    if (context.errors) {\\n      singleFetchResult = { error: Object.values(context.errors)[0] };\\n    } else {\\n      singleFetchResult = { data: Object.values(context.actionData || {})[0] };\\n    }\\n    return {\\n      result: singleFetchResult,\\n      headers,\\n      status: context.statusCode\\n    };\\n  } catch (error) {\\n    handleError(error);\\n    return {\\n      result: { error },\\n      headers: new Headers(),\\n      status: 500\\n    };\\n  }\\n}\\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\\n  try {\\n    let handlerRequest = new Request(handlerUrl, {\\n      headers: request.headers,\\n      signal: request.signal\\n    });\\n    let loadRouteIds = new URL(request.url).searchParams.get(\\\"_routes\\\")?.split(\\\",\\\") || void 0;\\n    let result = await staticHandler.query(handlerRequest, {\\n      requestContext: loadContext,\\n      skipLoaderErrorBubbling: true,\\n      dataStrategy: getSingleFetchDataStrategy2({\\n        loadRouteIds\\n      })\\n    });\\n    if (isResponse(result)) {\\n      return {\\n        result: {\\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\\n            result.status,\\n            result.headers,\\n            build.basename\\n          )\\n        },\\n        headers: result.headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    let context = result;\\n    let headers = getDocumentHeaders(build, context);\\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\\\"Location\\\")) {\\n      return {\\n        result: {\\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\\n            context.statusCode,\\n            headers,\\n            build.basename\\n          )\\n        },\\n        headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    if (context.errors) {\\n      Object.values(context.errors).forEach((err) => {\\n        if (!isRouteErrorResponse(err) || err.error) {\\n          handleError(err);\\n        }\\n      });\\n      context.errors = sanitizeErrors(context.errors, serverMode);\\n    }\\n    let results = {};\\n    let loadedMatches = loadRouteIds ? context.matches.filter(\\n      (m) => m.route.loader && loadRouteIds.includes(m.route.id)\\n    ) : context.matches;\\n    loadedMatches.forEach((m) => {\\n      let { id } = m.route;\\n      if (context.errors && context.errors.hasOwnProperty(id)) {\\n        results[id] = { error: context.errors[id] };\\n      } else if (context.loaderData.hasOwnProperty(id)) {\\n        results[id] = { data: context.loaderData[id] };\\n      }\\n    });\\n    return {\\n      result: results,\\n      headers,\\n      status: context.statusCode\\n    };\\n  } catch (error) {\\n    handleError(error);\\n    return {\\n      result: { root: { error } },\\n      headers: new Headers(),\\n      status: 500\\n    };\\n  }\\n}\\nfunction getSingleFetchRedirect(status, headers, basename) {\\n  let redirect2 = headers.get(\\\"Location\\\");\\n  if (basename) {\\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\\n  }\\n  return {\\n    redirect: redirect2,\\n    status,\\n    revalidate: (\\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\\n      // detail of ?_data requests as our way to tell the front end to revalidate when\\n      // we didn't have a response body to include that information in.\\n      // With single fetch, we tell the front end via this revalidate boolean field.\\n      // However, we're respecting it for now because it may be something folks have\\n      // used in their own responses\\n      // TODO(v3): Consider removing or making this official public API\\n      headers.has(\\\"X-Remix-Revalidate\\\") || headers.has(\\\"Set-Cookie\\\")\\n    ),\\n    reload: headers.has(\\\"X-Remix-Reload-Document\\\"),\\n    replace: headers.has(\\\"X-Remix-Replace\\\")\\n  };\\n}\\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\\n  let controller = new AbortController();\\n  let timeoutId = setTimeout(\\n    () => controller.abort(new Error(\\\"Server Timeout\\\")),\\n    typeof streamTimeout === \\\"number\\\" ? streamTimeout : 4950\\n  );\\n  requestSignal.addEventListener(\\\"abort\\\", () => clearTimeout(timeoutId));\\n  return encode(data2, {\\n    signal: controller.signal,\\n    plugins: [\\n      (value) => {\\n        if (value instanceof Error) {\\n          let { name, message, stack } = serverMode === \\\"production\\\" /* Production */ ? sanitizeError(value, serverMode) : value;\\n          return [\\\"SanitizedError\\\", name, message, stack];\\n        }\\n        if (value instanceof ErrorResponseImpl) {\\n          let { data: data3, status, statusText } = value;\\n          return [\\\"ErrorResponse\\\", data3, status, statusText];\\n        }\\n        if (value && typeof value === \\\"object\\\" && SingleFetchRedirectSymbol in value) {\\n          return [\\\"SingleFetchRedirect\\\", value[SingleFetchRedirectSymbol]];\\n        }\\n      }\\n    ],\\n    postPlugins: [\\n      (value) => {\\n        if (!value) return;\\n        if (typeof value !== \\\"object\\\") return;\\n        return [\\n          \\\"SingleFetchClassInstance\\\",\\n          Object.fromEntries(Object.entries(value))\\n        ];\\n      },\\n      () => [\\\"SingleFetchFallback\\\"]\\n    ]\\n  });\\n}\\n\\n// lib/server-runtime/server.ts\\nfunction derive(build, mode) {\\n  let routes = createRoutes(build.routes);\\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\\n  let serverMode = isServerMode(mode) ? mode : \\\"production\\\" /* Production */;\\n  let staticHandler = createStaticHandler(dataRoutes, {\\n    basename: build.basename\\n  });\\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\\n    if (serverMode !== \\\"test\\\" /* Test */ && !request.signal.aborted) {\\n      console.error(\\n        // @ts-expect-error This is \\\"private\\\" from users but intended for internal use\\n        isRouteErrorResponse(error) && error.error ? error.error : error\\n      );\\n    }\\n  });\\n  return {\\n    routes,\\n    dataRoutes,\\n    serverMode,\\n    staticHandler,\\n    errorHandler\\n  };\\n}\\nvar createRequestHandler = (build, mode) => {\\n  let _build;\\n  let routes;\\n  let serverMode;\\n  let staticHandler;\\n  let errorHandler;\\n  return async function requestHandler(request, loadContext = {}) {\\n    _build = typeof build === \\\"function\\\" ? await build() : build;\\n    if (typeof build === \\\"function\\\") {\\n      let derived = derive(_build, mode);\\n      routes = derived.routes;\\n      serverMode = derived.serverMode;\\n      staticHandler = derived.staticHandler;\\n      errorHandler = derived.errorHandler;\\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\\n      let derived = derive(_build, mode);\\n      routes = derived.routes;\\n      serverMode = derived.serverMode;\\n      staticHandler = derived.staticHandler;\\n      errorHandler = derived.errorHandler;\\n    }\\n    let url = new URL(request.url);\\n    let params = {};\\n    let handleError = (error) => {\\n      if (mode === \\\"development\\\" /* Development */) {\\n        getDevServerHooks()?.processRequestError?.(error);\\n      }\\n      errorHandler(error, {\\n        context: loadContext,\\n        params,\\n        request\\n      });\\n    };\\n    let manifestUrl = `${_build.basename ?? \\\"/\\\"}/__manifest`.replace(\\n      /\\\\/+/g,\\n      \\\"/\\\"\\n    );\\n    if (url.pathname === manifestUrl) {\\n      try {\\n        let res = await handleManifestRequest(_build, routes, url);\\n        return res;\\n      } catch (e) {\\n        handleError(e);\\n        return new Response(\\\"Unknown Server Error\\\", { status: 500 });\\n      }\\n    }\\n    let matches = matchServerRoutes(routes, url.pathname, _build.basename);\\n    if (matches && matches.length > 0) {\\n      Object.assign(params, matches[0].params);\\n    }\\n    let response;\\n    if (url.pathname.endsWith(\\\".data\\\")) {\\n      let handlerUrl = new URL(request.url);\\n      handlerUrl.pathname = handlerUrl.pathname.replace(/\\\\.data$/, \\\"\\\").replace(/^\\\\/_root$/, \\\"/\\\");\\n      let singleFetchMatches = matchServerRoutes(\\n        routes,\\n        handlerUrl.pathname,\\n        _build.basename\\n      );\\n      response = await handleSingleFetchRequest(\\n        serverMode,\\n        _build,\\n        staticHandler,\\n        request,\\n        handlerUrl,\\n        loadContext,\\n        handleError\\n      );\\n      if (_build.entry.module.handleDataRequest) {\\n        response = await _build.entry.module.handleDataRequest(response, {\\n          context: loadContext,\\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\\n          request\\n        });\\n        if (isRedirectResponse(response)) {\\n          let result = getSingleFetchRedirect(\\n            response.status,\\n            response.headers,\\n            _build.basename\\n          );\\n          if (request.method === \\\"GET\\\") {\\n            result = {\\n              [SingleFetchRedirectSymbol]: result\\n            };\\n          }\\n          let headers = new Headers(response.headers);\\n          headers.set(\\\"Content-Type\\\", \\\"text/x-script\\\");\\n          return new Response(\\n            encodeViaTurboStream(\\n              result,\\n              request.signal,\\n              _build.entry.module.streamTimeout,\\n              serverMode\\n            ),\\n            {\\n              status: SINGLE_FETCH_REDIRECT_STATUS,\\n              headers\\n            }\\n          );\\n        }\\n      }\\n    } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\\n      response = await handleResourceRequest(\\n        serverMode,\\n        staticHandler,\\n        matches.slice(-1)[0].route.id,\\n        request,\\n        loadContext,\\n        handleError\\n      );\\n    } else {\\n      let criticalCss = mode === \\\"development\\\" /* Development */ ? await getDevServerHooks()?.getCriticalCss?.(_build, url.pathname) : void 0;\\n      response = await handleDocumentRequest(\\n        serverMode,\\n        _build,\\n        staticHandler,\\n        request,\\n        loadContext,\\n        handleError,\\n        criticalCss\\n      );\\n    }\\n    if (request.method === \\\"HEAD\\\") {\\n      return new Response(null, {\\n        headers: response.headers,\\n        status: response.status,\\n        statusText: response.statusText\\n      });\\n    }\\n    return response;\\n  };\\n};\\nasync function handleManifestRequest(build, routes, url) {\\n  let patches = {};\\n  if (url.searchParams.has(\\\"p\\\")) {\\n    for (let path of url.searchParams.getAll(\\\"p\\\")) {\\n      let matches = matchServerRoutes(routes, path, build.basename);\\n      if (matches) {\\n        for (let match of matches) {\\n          let routeId = match.route.id;\\n          let route = build.assets.routes[routeId];\\n          if (route) {\\n            patches[routeId] = route;\\n          }\\n        }\\n      }\\n    }\\n    return Response.json(patches, {\\n      headers: {\\n        \\\"Cache-Control\\\": \\\"public, max-age=31536000, immutable\\\"\\n      }\\n    });\\n  }\\n  return new Response(\\\"Invalid Request\\\", { status: 400 });\\n}\\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\\n  let { result, headers, status } = request.method !== \\\"GET\\\" ? await singleFetchAction(\\n    build,\\n    serverMode,\\n    staticHandler,\\n    request,\\n    handlerUrl,\\n    loadContext,\\n    handleError\\n  ) : await singleFetchLoaders(\\n    build,\\n    serverMode,\\n    staticHandler,\\n    request,\\n    handlerUrl,\\n    loadContext,\\n    handleError\\n  );\\n  let resultHeaders = new Headers(headers);\\n  resultHeaders.set(\\\"X-Remix-Response\\\", \\\"yes\\\");\\n  if (status === 304) {\\n    return new Response(null, { status: 304, headers: resultHeaders });\\n  }\\n  resultHeaders.set(\\\"Content-Type\\\", \\\"text/x-script\\\");\\n  return new Response(\\n    encodeViaTurboStream(\\n      result,\\n      request.signal,\\n      build.entry.module.streamTimeout,\\n      serverMode\\n    ),\\n    {\\n      status: status || 200,\\n      headers: resultHeaders\\n    }\\n  );\\n}\\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\\n  let context;\\n  try {\\n    context = await staticHandler.query(request, {\\n      requestContext: loadContext\\n    });\\n  } catch (error) {\\n    handleError(error);\\n    return new Response(null, { status: 500 });\\n  }\\n  if (isResponse(context)) {\\n    return context;\\n  }\\n  let headers = getDocumentHeaders(build, context);\\n  if (context.statusCode === 304) {\\n    return new Response(null, { status: 304, headers });\\n  }\\n  if (context.errors) {\\n    Object.values(context.errors).forEach((err) => {\\n      if (!isRouteErrorResponse(err) || err.error) {\\n        handleError(err);\\n      }\\n    });\\n    context.errors = sanitizeErrors(context.errors, serverMode);\\n  }\\n  let state = {\\n    loaderData: context.loaderData,\\n    actionData: context.actionData,\\n    errors: serializeErrors2(context.errors, serverMode)\\n  };\\n  let entryContext = {\\n    manifest: build.assets,\\n    routeModules: createEntryRouteModules(build.routes),\\n    staticHandlerContext: context,\\n    criticalCss,\\n    serverHandoffString: createServerHandoffString({\\n      basename: build.basename,\\n      criticalCss,\\n      future: build.future,\\n      isSpaMode: build.isSpaMode\\n    }),\\n    serverHandoffStream: encodeViaTurboStream(\\n      state,\\n      request.signal,\\n      build.entry.module.streamTimeout,\\n      serverMode\\n    ),\\n    renderMeta: {},\\n    future: build.future,\\n    isSpaMode: build.isSpaMode,\\n    serializeError: (err) => serializeError(err, serverMode)\\n  };\\n  let handleDocumentRequestFunction = build.entry.module.default;\\n  try {\\n    return await handleDocumentRequestFunction(\\n      request,\\n      context.statusCode,\\n      headers,\\n      entryContext,\\n      loadContext\\n    );\\n  } catch (error) {\\n    handleError(error);\\n    let errorForSecondRender = error;\\n    if (isResponse(error)) {\\n      try {\\n        let data2 = await unwrapResponse(error);\\n        errorForSecondRender = new ErrorResponseImpl(\\n          error.status,\\n          error.statusText,\\n          data2\\n        );\\n      } catch (e) {\\n      }\\n    }\\n    context = getStaticContextFromError(\\n      staticHandler.dataRoutes,\\n      context,\\n      errorForSecondRender\\n    );\\n    if (context.errors) {\\n      context.errors = sanitizeErrors(context.errors, serverMode);\\n    }\\n    let state2 = {\\n      loaderData: context.loaderData,\\n      actionData: context.actionData,\\n      errors: serializeErrors2(context.errors, serverMode)\\n    };\\n    entryContext = {\\n      ...entryContext,\\n      staticHandlerContext: context,\\n      serverHandoffString: createServerHandoffString({\\n        basename: build.basename,\\n        future: build.future,\\n        isSpaMode: build.isSpaMode\\n      }),\\n      serverHandoffStream: encodeViaTurboStream(\\n        state2,\\n        request.signal,\\n        build.entry.module.streamTimeout,\\n        serverMode\\n      ),\\n      renderMeta: {}\\n    };\\n    try {\\n      return await handleDocumentRequestFunction(\\n        request,\\n        context.statusCode,\\n        headers,\\n        entryContext,\\n        loadContext\\n      );\\n    } catch (error2) {\\n      handleError(error2);\\n      return returnLastResortErrorResponse(error2, serverMode);\\n    }\\n  }\\n}\\nasync function handleResourceRequest(serverMode, staticHandler, routeId, request, loadContext, handleError) {\\n  try {\\n    let response = await staticHandler.queryRoute(request, {\\n      routeId,\\n      requestContext: loadContext\\n    });\\n    invariant3(\\n      isResponse(response),\\n      \\\"Expected a Response to be returned from resource route handler\\\"\\n    );\\n    return response;\\n  } catch (error) {\\n    if (isResponse(error)) {\\n      error.headers.set(\\\"X-Remix-Catch\\\", \\\"yes\\\");\\n      return error;\\n    }\\n    if (isRouteErrorResponse(error)) {\\n      if (error) {\\n        handleError(error);\\n      }\\n      return errorResponseToJson(error, serverMode);\\n    }\\n    handleError(error);\\n    return returnLastResortErrorResponse(error, serverMode);\\n  }\\n}\\nfunction errorResponseToJson(errorResponse, serverMode) {\\n  return Response.json(\\n    serializeError(\\n      // @ts-expect-error This is \\\"private\\\" from users but intended for internal use\\n      errorResponse.error || new Error(\\\"Unexpected Server Error\\\"),\\n      serverMode\\n    ),\\n    {\\n      status: errorResponse.status,\\n      statusText: errorResponse.statusText,\\n      headers: {\\n        \\\"X-Remix-Error\\\": \\\"yes\\\"\\n      }\\n    }\\n  );\\n}\\nfunction returnLastResortErrorResponse(error, serverMode) {\\n  let message = \\\"Unexpected Server Error\\\";\\n  if (serverMode !== \\\"production\\\" /* Production */) {\\n    message += `\\n\\n${String(error)}`;\\n  }\\n  return new Response(message, {\\n    status: 500,\\n    headers: {\\n      \\\"Content-Type\\\": \\\"text/plain\\\"\\n    }\\n  });\\n}\\nfunction unwrapResponse(response) {\\n  let contentType = response.headers.get(\\\"Content-Type\\\");\\n  return contentType && /\\\\bapplication\\\\/json\\\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\\n}\\n\\n// lib/server-runtime/sessions.ts\\nfunction flash(name) {\\n  return `__flash_${name}__`;\\n}\\nvar createSession = (initialData = {}, id = \\\"\\\") => {\\n  let map = new Map(Object.entries(initialData));\\n  return {\\n    get id() {\\n      return id;\\n    },\\n    get data() {\\n      return Object.fromEntries(map);\\n    },\\n    has(name) {\\n      return map.has(name) || map.has(flash(name));\\n    },\\n    get(name) {\\n      if (map.has(name)) return map.get(name);\\n      let flashName = flash(name);\\n      if (map.has(flashName)) {\\n        let value = map.get(flashName);\\n        map.delete(flashName);\\n        return value;\\n      }\\n      return void 0;\\n    },\\n    set(name, value) {\\n      map.set(name, value);\\n    },\\n    flash(name, value) {\\n      map.set(flash(name), value);\\n    },\\n    unset(name) {\\n      map.delete(name);\\n    }\\n  };\\n};\\nvar isSession = (object) => {\\n  return object != null && typeof object.id === \\\"string\\\" && typeof object.data !== \\\"undefined\\\" && typeof object.has === \\\"function\\\" && typeof object.get === \\\"function\\\" && typeof object.set === \\\"function\\\" && typeof object.flash === \\\"function\\\" && typeof object.unset === \\\"function\\\";\\n};\\nfunction createSessionStorage({\\n  cookie: cookieArg,\\n  createData,\\n  readData,\\n  updateData,\\n  deleteData\\n}) {\\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \\\"__session\\\", cookieArg);\\n  warnOnceAboutSigningSessionCookie(cookie);\\n  return {\\n    async getSession(cookieHeader, options) {\\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\\n      let data2 = id && await readData(id);\\n      return createSession(data2 || {}, id || \\\"\\\");\\n    },\\n    async commitSession(session, options) {\\n      let { id, data: data2 } = session;\\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\\n      if (id) {\\n        await updateData(id, data2, expires);\\n      } else {\\n        id = await createData(data2, expires);\\n      }\\n      return cookie.serialize(id, options);\\n    },\\n    async destroySession(session, options) {\\n      await deleteData(session.id);\\n      return cookie.serialize(\\\"\\\", {\\n        ...options,\\n        maxAge: void 0,\\n        expires: /* @__PURE__ */ new Date(0)\\n      });\\n    }\\n  };\\n}\\nfunction warnOnceAboutSigningSessionCookie(cookie) {\\n  warnOnce(\\n    cookie.isSigned,\\n    `The \\\"${cookie.name}\\\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`\\n  );\\n}\\n\\n// lib/server-runtime/sessions/cookieStorage.ts\\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \\\"__session\\\", cookieArg);\\n  warnOnceAboutSigningSessionCookie(cookie);\\n  return {\\n    async getSession(cookieHeader, options) {\\n      return createSession(\\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\\n      );\\n    },\\n    async commitSession(session, options) {\\n      let serializedCookie = await cookie.serialize(session.data, options);\\n      if (serializedCookie.length > 4096) {\\n        throw new Error(\\n          \\\"Cookie length will exceed browser maximum. Length: \\\" + serializedCookie.length\\n        );\\n      }\\n      return serializedCookie;\\n    },\\n    async destroySession(_session, options) {\\n      return cookie.serialize(\\\"\\\", {\\n        ...options,\\n        maxAge: void 0,\\n        expires: /* @__PURE__ */ new Date(0)\\n      });\\n    }\\n  };\\n}\\n\\n// lib/server-runtime/sessions/memoryStorage.ts\\nfunction createMemorySessionStorage({ cookie } = {}) {\\n  let map = /* @__PURE__ */ new Map();\\n  return createSessionStorage({\\n    cookie,\\n    async createData(data2, expires) {\\n      let id = Math.random().toString(36).substring(2, 10);\\n      map.set(id, { data: data2, expires });\\n      return id;\\n    },\\n    async readData(id) {\\n      if (map.has(id)) {\\n        let { data: data2, expires } = map.get(id);\\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\\n          return data2;\\n        }\\n        if (expires) map.delete(id);\\n      }\\n      return null;\\n    },\\n    async updateData(id, data2, expires) {\\n      map.set(id, { data: data2, expires });\\n    },\\n    async deleteData(id) {\\n      map.delete(id);\\n    }\\n  });\\n}\\n\\n// lib/dom/ssr/errors.ts\\nfunction deserializeErrors2(errors) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (val && val.__type === \\\"RouteErrorResponse\\\") {\\n      serialized[key] = new ErrorResponseImpl(\\n        val.status,\\n        val.statusText,\\n        val.data,\\n        val.internal === true\\n      );\\n    } else if (val && val.__type === \\\"Error\\\") {\\n      if (val.__subType) {\\n        let ErrorConstructor = window[val.__subType];\\n        if (typeof ErrorConstructor === \\\"function\\\") {\\n          try {\\n            let error = new ErrorConstructor(val.message);\\n            error.stack = val.stack;\\n            serialized[key] = error;\\n          } catch (e) {\\n          }\\n        }\\n      }\\n      if (serialized[key] == null) {\\n        let error = new Error(val.message);\\n        error.stack = val.stack;\\n        serialized[key] = error;\\n      }\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\n\\nexport {\\n  Action,\\n  createBrowserHistory,\\n  invariant,\\n  createPath,\\n  parsePath,\\n  matchRoutes,\\n  generatePath,\\n  matchPath,\\n  resolvePath,\\n  data,\\n  redirect,\\n  redirectDocument,\\n  replace,\\n  ErrorResponseImpl,\\n  isRouteErrorResponse,\\n  IDLE_NAVIGATION,\\n  IDLE_FETCHER,\\n  IDLE_BLOCKER,\\n  createRouter,\\n  DataRouterContext,\\n  DataRouterStateContext,\\n  ViewTransitionContext,\\n  FetchersContext,\\n  NavigationContext,\\n  LocationContext,\\n  RouteContext,\\n  useHref,\\n  useInRouterContext,\\n  useLocation,\\n  useNavigationType,\\n  useMatch,\\n  useNavigate,\\n  useOutletContext,\\n  useOutlet,\\n  useParams,\\n  useResolvedPath,\\n  useRoutes,\\n  useNavigation,\\n  useRevalidator,\\n  useMatches,\\n  useLoaderData,\\n  useRouteLoaderData,\\n  useActionData,\\n  useRouteError,\\n  useAsyncValue,\\n  useAsyncError,\\n  useBlocker,\\n  mapRouteProperties,\\n  createMemoryRouter,\\n  RouterProvider,\\n  MemoryRouter,\\n  Navigate,\\n  Outlet,\\n  Route,\\n  Router,\\n  Routes,\\n  Await,\\n  createRoutesFromChildren,\\n  createRoutesFromElements,\\n  renderMatches,\\n  createSearchParams,\\n  SingleFetchRedirectSymbol,\\n  getSingleFetchDataStrategy,\\n  decodeViaTurboStream,\\n  RemixErrorBoundary,\\n  createClientRoutesWithHMRRevalidationOptOut,\\n  createClientRoutes,\\n  shouldHydrateRouteLoader,\\n  getPatchRoutesOnNavigationFunction,\\n  useFogOFWarDiscovery,\\n  FrameworkContext,\\n  Links,\\n  PrefetchPageLinks,\\n  Meta,\\n  Scripts,\\n  createBrowserRouter,\\n  createHashRouter,\\n  BrowserRouter,\\n  HashRouter,\\n  HistoryRouter,\\n  Link,\\n  NavLink,\\n  Form,\\n  ScrollRestoration,\\n  useLinkClickHandler,\\n  useSearchParams,\\n  useSubmit,\\n  useFormAction,\\n  useFetcher,\\n  useFetchers,\\n  useScrollRestoration,\\n  useBeforeUnload,\\n  usePrompt,\\n  useViewTransitionState,\\n  StaticRouter,\\n  StaticRouterProvider,\\n  createStaticHandler2 as createStaticHandler,\\n  createStaticRouter,\\n  ServerRouter,\\n  createRoutesStub,\\n  createCookie,\\n  isCookie,\\n  ServerMode,\\n  setDevServerHooks,\\n  createRequestHandler,\\n  createSession,\\n  isSession,\\n  createSessionStorage,\\n  createCookieSessionStorage,\\n  createMemorySessionStorage,\\n  deserializeErrors2 as deserializeErrors\\n};\\n\",\"/**\\n * @license\\n * Copyright 2017 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\\n */\\n\\nexport const CONSTANTS = {\\n  /**\\n   * @define {boolean} Whether this is the client Node.js SDK.\\n   */\\n  NODE_CLIENT: false,\\n  /**\\n   * @define {boolean} Whether this is the Admin Node.js SDK.\\n   */\\n  NODE_ADMIN: false,\\n\\n  /**\\n   * Firebase SDK Version\\n   */\\n  SDK_VERSION: '${JSCORE_VERSION}'\\n};\\n\",\"/**\\n * @license\\n * Copyright 2017 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nconst stringToByteArray = function (str: string): number[] {\\n  // TODO(user): Use native implementations if/when available\\n  const out: number[] = [];\\n  let p = 0;\\n  for (let i = 0; i < str.length; i++) {\\n    let c = str.charCodeAt(i);\\n    if (c < 128) {\\n      out[p++] = c;\\n    } else if (c < 2048) {\\n      out[p++] = (c >> 6) | 192;\\n      out[p++] = (c & 63) | 128;\\n    } else if (\\n      (c & 0xfc00) === 0xd800 &&\\n      i + 1 < str.length &&\\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\\n    ) {\\n      // Surrogate Pair\\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\\n      out[p++] = (c >> 18) | 240;\\n      out[p++] = ((c >> 12) & 63) | 128;\\n      out[p++] = ((c >> 6) & 63) | 128;\\n      out[p++] = (c & 63) | 128;\\n    } else {\\n      out[p++] = (c >> 12) | 224;\\n      out[p++] = ((c >> 6) & 63) | 128;\\n      out[p++] = (c & 63) | 128;\\n    }\\n  }\\n  return out;\\n};\\n\\n/**\\n * Turns an array of numbers into the string given by the concatenation of the\\n * characters to which the numbers correspond.\\n * @param bytes Array of numbers representing characters.\\n * @return Stringification of the array.\\n */\\nconst byteArrayToString = function (bytes: number[]): string {\\n  // TODO(user): Use native implementations if/when available\\n  const out: string[] = [];\\n  let pos = 0,\\n    c = 0;\\n  while (pos < bytes.length) {\\n    const c1 = bytes[pos++];\\n    if (c1 < 128) {\\n      out[c++] = String.fromCharCode(c1);\\n    } else if (c1 > 191 && c1 < 224) {\\n      const c2 = bytes[pos++];\\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\\n    } else if (c1 > 239 && c1 < 365) {\\n      // Surrogate Pair\\n      const c2 = bytes[pos++];\\n      const c3 = bytes[pos++];\\n      const c4 = bytes[pos++];\\n      const u =\\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\\n        0x10000;\\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\\n    } else {\\n      const c2 = bytes[pos++];\\n      const c3 = bytes[pos++];\\n      out[c++] = String.fromCharCode(\\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\\n      );\\n    }\\n  }\\n  return out.join('');\\n};\\n\\ninterface Base64 {\\n  byteToCharMap_: { [key: number]: string } | null;\\n  charToByteMap_: { [key: string]: number } | null;\\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\\n  charToByteMapWebSafe_: { [key: string]: number } | null;\\n  ENCODED_VALS_BASE: string;\\n  readonly ENCODED_VALS: string;\\n  readonly ENCODED_VALS_WEBSAFE: string;\\n  HAS_NATIVE_SUPPORT: boolean;\\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\\n  encodeString(input: string, webSafe?: boolean): string;\\n  decodeString(input: string, webSafe: boolean): string;\\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\\n  init_(): void;\\n}\\n\\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\\n// Static lookup maps, lazily populated by init_()\\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\\nexport const base64: Base64 = {\\n  /**\\n   * Maps bytes to characters.\\n   */\\n  byteToCharMap_: null,\\n\\n  /**\\n   * Maps characters to bytes.\\n   */\\n  charToByteMap_: null,\\n\\n  /**\\n   * Maps bytes to websafe characters.\\n   * @private\\n   */\\n  byteToCharMapWebSafe_: null,\\n\\n  /**\\n   * Maps websafe characters to bytes.\\n   * @private\\n   */\\n  charToByteMapWebSafe_: null,\\n\\n  /**\\n   * Our default alphabet, shared between\\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\\n   */\\n  ENCODED_VALS_BASE:\\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\\n\\n  /**\\n   * Our default alphabet. Value 64 (=) is special; it means \\\"nothing.\\\"\\n   */\\n  get ENCODED_VALS() {\\n    return this.ENCODED_VALS_BASE + '+/=';\\n  },\\n\\n  /**\\n   * Our websafe alphabet.\\n   */\\n  get ENCODED_VALS_WEBSAFE() {\\n    return this.ENCODED_VALS_BASE + '-_.';\\n  },\\n\\n  /**\\n   * Whether this browser supports the atob and btoa functions. This extension\\n   * started at Mozilla but is now implemented by many browsers. We use the\\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\\n   * but still allowing the standard per-browser compilations.\\n   *\\n   */\\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\\n\\n  /**\\n   * Base64-encode an array of bytes.\\n   *\\n   * @param input An array of bytes (numbers with\\n   *     value in [0, 255]) to encode.\\n   * @param webSafe Boolean indicating we should use the\\n   *     alternative alphabet.\\n   * @return The base64 encoded string.\\n   */\\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\\n    if (!Array.isArray(input)) {\\n      throw Error('encodeByteArray takes an array as a parameter');\\n    }\\n\\n    this.init_();\\n\\n    const byteToCharMap = webSafe\\n      ? this.byteToCharMapWebSafe_!\\n      : this.byteToCharMap_!;\\n\\n    const output = [];\\n\\n    for (let i = 0; i < input.length; i += 3) {\\n      const byte1 = input[i];\\n      const haveByte2 = i + 1 < input.length;\\n      const byte2 = haveByte2 ? input[i + 1] : 0;\\n      const haveByte3 = i + 2 < input.length;\\n      const byte3 = haveByte3 ? input[i + 2] : 0;\\n\\n      const outByte1 = byte1 >> 2;\\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\\n      let outByte4 = byte3 & 0x3f;\\n\\n      if (!haveByte3) {\\n        outByte4 = 64;\\n\\n        if (!haveByte2) {\\n          outByte3 = 64;\\n        }\\n      }\\n\\n      output.push(\\n        byteToCharMap[outByte1],\\n        byteToCharMap[outByte2],\\n        byteToCharMap[outByte3],\\n        byteToCharMap[outByte4]\\n      );\\n    }\\n\\n    return output.join('');\\n  },\\n\\n  /**\\n   * Base64-encode a string.\\n   *\\n   * @param input A string to encode.\\n   * @param webSafe If true, we should use the\\n   *     alternative alphabet.\\n   * @return The base64 encoded string.\\n   */\\n  encodeString(input: string, webSafe?: boolean): string {\\n    // Shortcut for Mozilla browsers that implement\\n    // a native base64 encoder in the form of \\\"btoa/atob\\\"\\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\\n      return btoa(input);\\n    }\\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\\n  },\\n\\n  /**\\n   * Base64-decode a string.\\n   *\\n   * @param input to decode.\\n   * @param webSafe True if we should use the\\n   *     alternative alphabet.\\n   * @return string representing the decoded value.\\n   */\\n  decodeString(input: string, webSafe: boolean): string {\\n    // Shortcut for Mozilla browsers that implement\\n    // a native base64 encoder in the form of \\\"btoa/atob\\\"\\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\\n      return atob(input);\\n    }\\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\\n  },\\n\\n  /**\\n   * Base64-decode a string.\\n   *\\n   * In base-64 decoding, groups of four characters are converted into three\\n   * bytes.  If the encoder did not apply padding, the input length may not\\n   * be a multiple of 4.\\n   *\\n   * In this case, the last group will have fewer than 4 characters, and\\n   * padding will be inferred.  If the group has one or two characters, it decodes\\n   * to one byte.  If the group has three characters, it decodes to two bytes.\\n   *\\n   * @param input Input to decode.\\n   * @param webSafe True if we should use the web-safe alphabet.\\n   * @return bytes representing the decoded value.\\n   */\\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\\n    this.init_();\\n\\n    const charToByteMap = webSafe\\n      ? this.charToByteMapWebSafe_!\\n      : this.charToByteMap_!;\\n\\n    const output: number[] = [];\\n\\n    for (let i = 0; i < input.length; ) {\\n      const byte1 = charToByteMap[input.charAt(i++)];\\n\\n      const haveByte2 = i < input.length;\\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\\n      ++i;\\n\\n      const haveByte3 = i < input.length;\\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\\n      ++i;\\n\\n      const haveByte4 = i < input.length;\\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\\n      ++i;\\n\\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\\n        throw new DecodeBase64StringError();\\n      }\\n\\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\\n      output.push(outByte1);\\n\\n      if (byte3 !== 64) {\\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\\n        output.push(outByte2);\\n\\n        if (byte4 !== 64) {\\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\\n          output.push(outByte3);\\n        }\\n      }\\n    }\\n\\n    return output;\\n  },\\n\\n  /**\\n   * Lazy static initialization function. Called before\\n   * accessing any of the static map variables.\\n   * @private\\n   */\\n  init_() {\\n    if (!this.byteToCharMap_) {\\n      this.byteToCharMap_ = {};\\n      this.charToByteMap_ = {};\\n      this.byteToCharMapWebSafe_ = {};\\n      this.charToByteMapWebSafe_ = {};\\n\\n      // We want quick mappings back and forth, so we precompute two maps.\\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\\n\\n        // Be forgiving when decoding and correctly decode both encodings.\\n        if (i >= this.ENCODED_VALS_BASE.length) {\\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\\n        }\\n      }\\n    }\\n  }\\n};\\n\\n/**\\n * An error encountered while decoding base64 string.\\n */\\nexport class DecodeBase64StringError extends Error {\\n  readonly name = 'DecodeBase64StringError';\\n}\\n\\n/**\\n * URL-safe base64 encoding\\n */\\nexport const base64Encode = function (str: string): string {\\n  const utf8Bytes = stringToByteArray(str);\\n  return base64.encodeByteArray(utf8Bytes, true);\\n};\\n\\n/**\\n * URL-safe base64 encoding (without \\\".\\\" padding in the end).\\n * e.g. Used in JSON Web Token (JWT) parts.\\n */\\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\\n  // Use base64url encoding and remove padding in the end (dot characters).\\n  return base64Encode(str).replace(/\\\\./g, '');\\n};\\n\\n/**\\n * URL-safe base64 decoding\\n *\\n * NOTE: DO NOT use the global atob() function - it does NOT support the\\n * base64Url variant encoding.\\n *\\n * @param str To be decoded\\n * @return Decoded result, if possible\\n */\\nexport const base64Decode = function (str: string): string | null {\\n  try {\\n    return base64.decodeString(str, true);\\n  } catch (e) {\\n    console.error('base64Decode failed: ', e);\\n  }\\n  return null;\\n};\\n\",\"/**\\n * @license\\n * Copyright 2022 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nimport { base64Decode } from './crypt';\\nimport { getGlobal } from './global';\\n\\n/**\\n * Keys for experimental properties on the `FirebaseDefaults` object.\\n * @public\\n */\\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\\n\\n/**\\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\\n * either as a property of globalThis, a shell environment variable, or a\\n * cookie.\\n *\\n * This object can be used to automatically configure and initialize\\n * a Firebase app as well as any emulators.\\n *\\n * @public\\n */\\nexport interface FirebaseDefaults {\\n  config?: Record<string, string>;\\n  emulatorHosts?: Record<string, string>;\\n  _authTokenSyncURL?: string;\\n  _authIdTokenMaxAge?: number;\\n  /**\\n   * Override Firebase's runtime environment detection and\\n   * force the SDK to act as if it were in the specified environment.\\n   */\\n  forceEnvironment?: 'browser' | 'node';\\n  [key: string]: unknown;\\n}\\n\\ndeclare global {\\n  // Need `var` for this to work.\\n  // eslint-disable-next-line no-var\\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\\n}\\n\\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\\n  getGlobal().__FIREBASE_DEFAULTS__;\\n\\n/**\\n * Attempt to read defaults from a JSON string provided to\\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\\n * The dots are in parens because certain compilers (Vite?) cannot\\n * handle seeing that variable in comments.\\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\\n */\\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\\n    return;\\n  }\\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\\n  if (defaultsJsonString) {\\n    return JSON.parse(defaultsJsonString);\\n  }\\n};\\n\\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\\n  if (typeof document === 'undefined') {\\n    return;\\n  }\\n  let match;\\n  try {\\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\\n  } catch (e) {\\n    // Some environments such as Angular Universal SSR have a\\n    // `document` object but error on accessing `document.cookie`.\\n    return;\\n  }\\n  const decoded = match && base64Decode(match[1]);\\n  return decoded && JSON.parse(decoded);\\n};\\n\\n/**\\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\\n * (1) if such an object exists as a property of `globalThis`\\n * (2) if such an object was provided on a shell environment variable\\n * (3) if such an object exists in a cookie\\n * @public\\n */\\nexport const getDefaults = (): FirebaseDefaults | undefined => {\\n  try {\\n    return (\\n      getDefaultsFromGlobal() ||\\n      getDefaultsFromEnvVariable() ||\\n      getDefaultsFromCookie()\\n    );\\n  } catch (e) {\\n    /**\\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\\n     * to any environment case we have not accounted for. Log to\\n     * info instead of swallowing so we can find these unknown cases\\n     * and add paths for them if needed.\\n     */\\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\\n    return;\\n  }\\n};\\n\\n/**\\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\\n * for the given product.\\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\\n * @public\\n */\\nexport const getDefaultEmulatorHost = (\\n  productName: string\\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\\n\\n/**\\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\\n * for the given product.\\n * @returns a pair of hostname and port like `[\\\"::1\\\", 4000]` if available\\n * @public\\n */\\nexport const getDefaultEmulatorHostnameAndPort = (\\n  productName: string\\n): [hostname: string, port: number] | undefined => {\\n  const host = getDefaultEmulatorHost(productName);\\n  if (!host) {\\n    return undefined;\\n  }\\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\\n  }\\n  // eslint-disable-next-line no-restricted-globals\\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\\n  if (host[0] === '[') {\\n    // Bracket-quoted `[ipv6addr]:port` => return \\\"ipv6addr\\\" (without brackets).\\n    return [host.substring(1, separatorIndex - 1), port];\\n  } else {\\n    return [host.substring(0, separatorIndex), port];\\n  }\\n};\\n\\n/**\\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\\n * @public\\n */\\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\\n  getDefaults()?.config;\\n\\n/**\\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\\n * prefixed by \\\"_\\\")\\n * @public\\n */\\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\\n  name: T\\n): FirebaseDefaults[`_${T}`] =>\\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\\n\",\"/**\\n * @license\\n * Copyright 2022 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * Polyfill for `globalThis` object.\\n * @returns the `globalThis` object for the given environment.\\n * @public\\n */\\nexport function getGlobal(): typeof globalThis {\\n  if (typeof self !== 'undefined') {\\n    return self;\\n  }\\n  if (typeof window !== 'undefined') {\\n    return window;\\n  }\\n  if (typeof global !== 'undefined') {\\n    return global;\\n  }\\n  throw new Error('Unable to locate global object.');\\n}\\n\",\"/**\\n * @license\\n * Copyright 2017 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nexport class Deferred<R> {\\n  promise: Promise<R>;\\n  reject: (value?: unknown) => void = () => {};\\n  resolve: (value?: unknown) => void = () => {};\\n  constructor() {\\n    this.promise = new Promise((resolve, reject) => {\\n      this.resolve = resolve as (value?: unknown) => void;\\n      this.reject = reject as (value?: unknown) => void;\\n    });\\n  }\\n\\n  /**\\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\\n   */\\n  wrapCallback(\\n    callback?: (error?: unknown, value?: unknown) => void\\n  ): (error: unknown, value?: unknown) => void {\\n    return (error, value?) => {\\n      if (error) {\\n        this.reject(error);\\n      } else {\\n        this.resolve(value);\\n      }\\n      if (typeof callback === 'function') {\\n        // Attaching noop handler just in case developer wasn't expecting\\n        // promises\\n        this.promise.catch(() => {});\\n\\n        // Some of our callbacks don't expect a value and our own tests\\n        // assert that the parameter length is 1\\n        if (callback.length === 1) {\\n          callback(error);\\n        } else {\\n          callback(error, value);\\n        }\\n      }\\n    };\\n  }\\n}\\n\",\"/**\\n * @license\\n * Copyright 2021 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nimport { base64urlEncodeWithoutPadding } from './crypt';\\n\\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\\n/* eslint-disable camelcase */\\n\\nexport type FirebaseSignInProvider =\\n  | 'custom'\\n  | 'email'\\n  | '${PASSWORD_11};\\r\\nimport { AuthProvider } from './components/auth/AuthContext';\\r\\nimport Login from './components/auth/Login';\\r\\nimport ProtectedRoute from './components/auth/ProtectedRoute';\\r\\nimport ResetPassword from './components/auth/ResetPassword';\\r\\nimport Signup from './components/auth/Signup';\\r\\nimport Dashboard from './components/Dashboard';\\r\\n\\r\\n// Create a custom theme\\r\\nconst theme = createTheme({\\r\\n  palette: {\\r\\n    primary: {\\r\\n      main: '#1976d2', // You can customize this color\\r\\n    },\\r\\n    secondary: {\\r\\n      main: '#dc004e', // You can customize this color\\r\\n    },\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction App() {\\r\\n  return (\\r\\n    <ThemeProvider theme={theme}>\\r\\n      <Router>\\r\\n        <AuthProvider>\\r\\n          <Routes>\\r\\n            {/* Public routes */}\\r\\n            <Route path=\\\"/login\\\" element={<Login />} />\\r\\n            <Route path=\\\"/signup\\\" element={<Signup />} />\\r\\n            <Route path=\\\"/reset-password\\\" element={<ResetPassword />} />\\r\\n\\r\\n            {/* Protected routes */}\\r\\n            <Route\\r\\n              path=\\\"/\\\"\\r\\n              element={\\r\\n                <ProtectedRoute>\\r\\n                  <Dashboard />\\r\\n                </ProtectedRoute>\\r\\n              }\\r\\n            />\\r\\n            <Route\\r\\n              path=\\\"/dashboard\\\"\\r\\n              element={\\r\\n                <ProtectedRoute>\\r\\n                  <Dashboard />\\r\\n                </ProtectedRoute>\\r\\n              }\\r\\n            />\\r\\n          </Routes>\\r\\n        </AuthProvider>\\r\\n      </Router>\\r\\n    </ThemeProvider>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"import React from 'react';\\r\\nimport { createRoot } from 'react-dom/client';\\r\\nimport App from './App';\\r\\nimport './index.css';\\r\\n\\r\\nconst root = createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\"],\"names\":[\"reactIs\",\"require\",\"REACT_STATICS\",\"childContextTypes\",\"contextType\",\"contextTypes\",\"defaultProps\",\"displayName\",\"getDefaultProps\",\"getDerivedStateFromError\",\"getDerivedStateFromProps\",\"mixins\",\"propTypes\",\"type\",\"KNOWN_STATICS\",\"name\",\"length\",\"prototype\",\"caller\",\"callee\",\"arguments\",\"arity\",\"MEMO_STATICS\",\"compare\",\"TYPE_STATICS\",\"getStatics\",\"component\",\"isMemo\",\"ForwardRef\",\"render\",\"Memo\",\"defineProperty\",\"Object\",\"getOwnPropertyNames\",\"getOwnPropertySymbols\",\"getOwnPropertyDescriptor\",\"getPrototypeOf\",\"objectPrototype\",\"module\",\"exports\",\"hoistNonReactStatics\",\"targetComponent\",\"sourceComponent\",\"blacklist\",\"inheritedComponent\",\"keys\",\"concat\",\"targetStatics\",\"sourceStatics\",\"i\",\"key\",\"descriptor\",\"e\",\"Scheduler\",\"React\",\"ReactDOM\",\"formatProdErrorMessage\",\"code\",\"url\",\"encodeURIComponent\",\"isValidContainer\",\"node\",\"nodeType\",\"REACT_LEGACY_ELEMENT_TYPE\",\"Symbol\",\"for\",\"REACT_ELEMENT_TYPE\",\"REACT_PORTAL_TYPE\",\"REACT_FRAGMENT_TYPE\",\"REACT_STRICT_MODE_TYPE\",\"REACT_PROFILER_TYPE\",\"REACT_PROVIDER_TYPE\",\"REACT_CONSUMER_TYPE\",\"REACT_CONTEXT_TYPE\",\"REACT_FORWARD_REF_TYPE\",\"REACT_SUSPENSE_TYPE\",\"REACT_SUSPENSE_LIST_TYPE\",\"REACT_MEMO_TYPE\",\"REACT_LAZY_TYPE\",\"REACT_OFFSCREEN_TYPE\",\"REACT_MEMO_CACHE_SENTINEL\",\"MAYBE_ITERATOR_SYMBOL\",\"iterator\",\"getIteratorFn\",\"maybeIterable\",\"REACT_CLIENT_REFERENCE\",\"getComponentNameFromType\",\"$$typeof\",\"_context\",\"innerType\",\"_payload\",\"_init\",\"x\",\"prefix\",\"suffix\",\"ReactSharedInternals\",\"__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\",\"assign\",\"describeBuiltInComponentFrame\",\"Error\",\"match\",\"stack\",\"trim\",\"indexOf\",\"reentry\",\"describeNativeComponentFrame\",\"fn\",\"construct\",\"previousPrepareStackTrace\",\"prepareStackTrace\",\"RunInRootFrame\",\"DetermineComponentFrameRoot\",\"Fake\",\"set\",\"Reflect\",\"control\",\"call\",\"x$0\",\"x$1\",\"catch\",\"sample\",\"namePropDescriptor\",\"configurable\",\"value\",\"_RunInRootFrame$Deter\",\"sampleStack\",\"controlStack\",\"sampleLines\",\"split\",\"controlLines\",\"includes\",\"frame\",\"replace\",\"describeFiber\",\"fiber\",\"tag\",\"getStackByFiberInDevAndProd\",\"workInProgress\",\"info\",\"return\",\"message\",\"getNearestMountedFiber\",\"nearestMounted\",\"alternate\",\"flags\",\"getSuspenseInstanceFromFiber\",\"suspenseState\",\"memoizedState\",\"dehydrated\",\"assertIsMounted\",\"findCurrentHostFiberImpl\",\"child\",\"sibling\",\"isArrayImpl\",\"Array\",\"isArray\",\"ReactDOMSharedInternals\",\"__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\",\"sharedNotPendingObject\",\"pending\",\"data\",\"method\",\"action\",\"valueStack\",\"index\",\"createCursor\",\"defaultValue\",\"current\",\"pop\",\"cursor\",\"push\",\"contextStackCursor\",\"contextFiberStackCursor\",\"rootInstanceStackCursor\",\"hostTransitionProviderCursor\",\"pushHostContainer\",\"nextRootInstance\",\"documentElement\",\"namespaceURI\",\"getOwnHostContext\",\"parentNode\",\"tagName\",\"getChildHostContextProd\",\"popHostContainer\",\"pushHostContext\",\"context\",\"JSCompiler_inline_result\",\"popHostContext\",\"HostTransitionContext\",\"_currentValue\",\"hasOwnProperty\",\"scheduleCallback$3\",\"unstable_scheduleCallback\",\"cancelCallback$1\",\"unstable_cancelCallback\",\"shouldYield\",\"unstable_shouldYield\",\"requestPaint\",\"unstable_requestPaint\",\"now\",\"unstable_now\",\"getCurrentPriorityLevel\",\"unstable_getCurrentPriorityLevel\",\"ImmediatePriority\",\"unstable_ImmediatePriority\",\"UserBlockingPriority\",\"unstable_UserBlockingPriority\",\"NormalPriority$1\",\"unstable_NormalPriority\",\"LowPriority\",\"unstable_LowPriority\",\"IdlePriority\",\"unstable_IdlePriority\",\"log$1\",\"log\",\"unstable_setDisableYieldValue\",\"rendererID\",\"injectedHook\",\"setIsStrictModeForDevtools\",\"newIsStrictMode\",\"setStrictMode\",\"err\",\"clz32\",\"Math\",\"LN2\",\"nextTransitionLane\",\"nextRetryLane\",\"getHighestPriorityLanes\",\"lanes\",\"pendingSyncLanes\",\"getNextLanes\",\"root\",\"wipLanes\",\"pendingLanes\",\"nextLanes\",\"suspendedLanes\",\"pingedLanes\",\"warmLanes\",\"finishedLanes\",\"nonIdlePendingLanes\",\"checkIfRootIsPrerendering\",\"renderLanes\",\"computeExpirationTime\",\"lane\",\"currentTime\",\"claimNextTransitionLane\",\"claimNextRetryLane\",\"createLaneMap\",\"initial\",\"laneMap\",\"markRootUpdated$1\",\"updateLane\",\"markSpawnedDeferredLane\",\"spawnedLane\",\"entangledLanes\",\"spawnedLaneIndex\",\"entanglements\",\"markRootEntangled\",\"rootEntangledLanes\",\"index$8\",\"lanesToEventPriority\",\"resolveUpdatePriority\",\"updatePriority\",\"p\",\"window\",\"event\",\"getEventPriority\",\"randomKey\",\"random\",\"toString\",\"slice\",\"internalInstanceKey\",\"internalPropsKey\",\"internalContainerInstanceKey\",\"internalEventHandlersKey\",\"internalEventHandlerListenersKey\",\"internalEventHandlesSetKey\",\"internalRootNodeResourcesKey\",\"internalHoistableMarker\",\"detachDeletedInstance\",\"getClosestInstanceFromNode\",\"targetNode\",\"targetInst\",\"getParentSuspenseInstance\",\"getInstanceFromNode\",\"getNodeFromInstance\",\"inst\",\"stateNode\",\"getResourcesFromRoot\",\"resources\",\"hoistableStyles\",\"Map\",\"hoistableScripts\",\"markNodeAsHoistable\",\"allNativeEvents\",\"Set\",\"registrationNameDependencies\",\"registerTwoPhaseEvent\",\"registrationName\",\"dependencies\",\"registerDirectEvent\",\"add\",\"canUseDOM\",\"document\",\"createElement\",\"VALID_ATTRIBUTE_NAME_REGEX\",\"RegExp\",\"illegalAttributeNameCache\",\"validatedAttributeNameCache\",\"setValueForAttribute\",\"attributeName\",\"test\",\"removeAttribute\",\"prefix$10\",\"toLowerCase\",\"setAttribute\",\"setValueForKnownAttribute\",\"setValueForNamespacedAttribute\",\"namespace\",\"setAttributeNS\",\"getToStringValue\",\"isCheckable\",\"elem\",\"nodeName\",\"track\",\"_valueTracker\",\"valueField\",\"constructor\",\"currentValue\",\"get\",\"this\",\"enumerable\",\"getValue\",\"setValue\",\"stopTracking\",\"trackValueOnNode\",\"updateValueIfChanged\",\"tracker\",\"lastValue\",\"checked\",\"getActiveElement\",\"doc\",\"activeElement\",\"body\",\"escapeSelectorAttributeValueInsideDoubleQuotesRegex\",\"escapeSelectorAttributeValueInsideDoubleQuotes\",\"ch\",\"charCodeAt\",\"updateInput\",\"element\",\"lastDefaultValue\",\"defaultChecked\",\"setDefaultValue\",\"initInput\",\"isHydrating\",\"ownerDocument\",\"updateOptions\",\"multiple\",\"propValue\",\"setDefaultSelected\",\"options\",\"selected\",\"defaultSelected\",\"disabled\",\"updateTextarea\",\"initTextarea\",\"children\",\"textContent\",\"setTextContent\",\"text\",\"firstChild\",\"lastChild\",\"nodeValue\",\"unitlessNumbers\",\"setValueForStyle\",\"style\",\"styleName\",\"isCustomProperty\",\"setProperty\",\"cssFloat\",\"has\",\"setValueForStyles\",\"styles\",\"prevStyles\",\"styleName$16\",\"styleName$17\",\"isCustomElement\",\"aliases\",\"isJavaScriptProtocol\",\"sanitizeURL\",\"currentReplayingEvent\",\"getEventTarget\",\"nativeEvent\",\"target\",\"srcElement\",\"correspondingUseElement\",\"restoreTarget\",\"restoreQueue\",\"restoreStateOfTarget\",\"internalInstance\",\"props\",\"a\",\"querySelectorAll\",\"otherNode\",\"form\",\"otherProps\",\"isInsideEventHandler\",\"batchedUpdates$1\",\"b\",\"flushSyncWork$1\",\"getListener\",\"passiveBrowserEventsSupported\",\"addEventListener\",\"removeEventListener\",\"startText\",\"fallbackText\",\"getData\",\"start\",\"end\",\"startValue\",\"startLength\",\"endValue\",\"endLength\",\"minEnd\",\"getEventCharCode\",\"keyCode\",\"charCode\",\"functionThatReturnsTrue\",\"functionThatReturnsFalse\",\"createSyntheticEvent\",\"Interface\",\"SyntheticBaseEvent\",\"reactName\",\"reactEventType\",\"nativeEventTarget\",\"propName\",\"_reactName\",\"_targetInst\",\"currentTarget\",\"isDefaultPrevented\",\"defaultPrevented\",\"returnValue\",\"isPropagationStopped\",\"preventDefault\",\"stopPropagation\",\"cancelBubble\",\"persist\",\"isPersistent\",\"lastMovementX\",\"lastMovementY\",\"lastMouseEvent\",\"EventInterface\",\"eventPhase\",\"bubbles\",\"cancelable\",\"timeStamp\",\"Date\",\"isTrusted\",\"SyntheticEvent\",\"UIEventInterface\",\"view\",\"detail\",\"SyntheticUIEvent\",\"MouseEventInterface\",\"screenX\",\"screenY\",\"clientX\",\"clientY\",\"pageX\",\"pageY\",\"ctrlKey\",\"shiftKey\",\"altKey\",\"metaKey\",\"getModifierState\",\"getEventModifierState\",\"button\",\"buttons\",\"relatedTarget\",\"fromElement\",\"toElement\",\"movementX\",\"movementY\",\"SyntheticMouseEvent\",\"SyntheticDragEvent\",\"dataTransfer\",\"SyntheticFocusEvent\",\"SyntheticAnimationEvent\",\"animationName\",\"elapsedTime\",\"pseudoElement\",\"SyntheticClipboardEvent\",\"clipboardData\",\"SyntheticCompositionEvent\",\"normalizeKey\",\"Esc\",\"Spacebar\",\"Left\",\"Up\",\"Right\",\"Down\",\"Del\",\"Win\",\"Menu\",\"Apps\",\"Scroll\",\"MozPrintableKey\",\"translateToKey\",\"modifierKeyToProp\",\"Alt\",\"Control\",\"Meta\",\"Shift\",\"modifierStateGetter\",\"keyArg\",\"SyntheticKeyboardEvent\",\"String\",\"fromCharCode\",\"location\",\"repeat\",\"locale\",\"which\",\"SyntheticPointerEvent\",\"pointerId\",\"width\",\"height\",\"pressure\",\"tangentialPressure\",\"tiltX\",\"tiltY\",\"twist\",\"pointerType\",\"isPrimary\",\"SyntheticTouchEvent\",\"touches\",\"targetTouches\",\"changedTouches\",\"SyntheticTransitionEvent\",\"propertyName\",\"SyntheticWheelEvent\",\"deltaX\",\"wheelDeltaX\",\"deltaY\",\"wheelDeltaY\",\"wheelDelta\",\"deltaZ\",\"deltaMode\",\"SyntheticToggleEvent\",\"newState\",\"oldState\",\"END_KEYCODES\",\"canUseCompositionEvent\",\"documentMode\",\"canUseTextInputEvent\",\"useFallbackCompositionData\",\"SPACEBAR_CHAR\",\"hasSpaceKeypress\",\"isFallbackCompositionEnd\",\"domEventName\",\"getDataFromCustomEvent\",\"isComposing\",\"supportedInputTypes\",\"color\",\"date\",\"datetime\",\"email\",\"month\",\"number\",\"password\",\"range\",\"search\",\"tel\",\"time\",\"week\",\"isTextInputElement\",\"createAndAccumulateChangeEvent\",\"dispatchQueue\",\"accumulateTwoPhaseListeners\",\"listeners\",\"activeElement$1\",\"activeElementInst$1\",\"runEventInBatch\",\"processDispatchQueue\",\"getInstIfValueChanged\",\"getTargetInstForChangeEvent\",\"isInputEventSupported\",\"JSCompiler_inline_result$jscomp$283\",\"isSupported$jscomp$inline_418\",\"element$jscomp$inline_419\",\"oninput\",\"stopWatchingForValueChange\",\"detachEvent\",\"handlePropertyChange\",\"handleEventsForInputEventPolyfill\",\"attachEvent\",\"getTargetInstForInputEventPolyfill\",\"getTargetInstForClickEvent\",\"getTargetInstForInputOrChangeEvent\",\"objectIs\",\"is\",\"y\",\"shallowEqual\",\"objA\",\"objB\",\"keysA\",\"keysB\",\"currentKey\",\"getLeafNode\",\"getNodeForCharacterOffset\",\"offset\",\"nodeEnd\",\"nextSibling\",\"containsNode\",\"outerNode\",\"innerNode\",\"contains\",\"compareDocumentPosition\",\"getActiveElementDeep\",\"containerInfo\",\"defaultView\",\"HTMLIFrameElement\",\"contentWindow\",\"href\",\"hasSelectionCapabilities\",\"contentEditable\",\"restoreSelection\",\"priorSelectionInformation\",\"curFocusedElem\",\"focusedElem\",\"priorSelectionRange\",\"selectionRange\",\"selectionStart\",\"selectionEnd\",\"min\",\"getSelection\",\"extend\",\"endMarker\",\"rangeCount\",\"anchorNode\",\"anchorOffset\",\"focusNode\",\"focusOffset\",\"createRange\",\"setStart\",\"removeAllRanges\",\"addRange\",\"setEnd\",\"left\",\"scrollLeft\",\"top\",\"scrollTop\",\"focus\",\"skipSelectionChangeEvent\",\"activeElementInst\",\"lastSelection\",\"mouseDown\",\"constructSelectEvent\",\"makePrefixMap\",\"styleProp\",\"eventName\",\"prefixes\",\"vendorPrefixes\",\"animationend\",\"animationiteration\",\"animationstart\",\"transitionrun\",\"transitionstart\",\"transitioncancel\",\"transitionend\",\"prefixedEventNames\",\"getVendorPrefixedEventName\",\"prefixMap\",\"animation\",\"transition\",\"ANIMATION_END\",\"ANIMATION_ITERATION\",\"ANIMATION_START\",\"TRANSITION_RUN\",\"TRANSITION_START\",\"TRANSITION_CANCEL\",\"TRANSITION_END\",\"topLevelEventsToReactNames\",\"simpleEventPluginEvents\",\"registerSimpleEvent\",\"concurrentQueues\",\"concurrentQueuesIndex\",\"concurrentlyUpdatedLanes\",\"finishQueueingConcurrentUpdates\",\"endIndex\",\"queue\",\"update\",\"next\",\"markUpdateLaneFromFiberToRoot\",\"enqueueUpdate$1\",\"enqueueConcurrentHookUpdate\",\"getRootForUpdatedFiber\",\"enqueueConcurrentRenderForLane\",\"sourceFiber\",\"isHidden\",\"parent\",\"childLanes\",\"_visibility\",\"hiddenUpdates\",\"nestedUpdateCount\",\"rootWithNestedUpdates\",\"emptyContextObject\",\"CapturedStacks\",\"WeakMap\",\"createCapturedValueAtFiber\",\"source\",\"existing\",\"forkStack\",\"forkStackIndex\",\"treeForkProvider\",\"treeForkCount\",\"idStack\",\"idStackIndex\",\"treeContextProvider\",\"treeContextId\",\"treeContextOverflow\",\"pushTreeFork\",\"totalChildren\",\"pushTreeId\",\"baseIdWithLeadingBit\",\"baseLength\",\"numberOfOverflowBits\",\"pushMaterializedTreeId\",\"popTreeContext\",\"hydrationParentFiber\",\"nextHydratableInstance\",\"hydrationErrors\",\"rootOrSingletonContext\",\"HydrationMismatchException\",\"throwOnHydrationMismatch\",\"queueHydrationError\",\"prepareToHydrateHostInstance\",\"instance\",\"memoizedProps\",\"listenToNonDelegatedEvent\",\"mediaEventTypes\",\"suppressHydrationWarning\",\"checkForUnmatchedText\",\"popover\",\"onScroll\",\"onScrollEnd\",\"onClick\",\"onclick\",\"noop$1\",\"popToNextHostParent\",\"popHydrationState\",\"JSCompiler_temp\",\"shouldClear\",\"shouldSetTextContent\",\"getNextHydratable\",\"resetHydrationState\",\"error\",\"SuspenseException\",\"SuspenseyCommitException\",\"noopSuspenseyCommitThenable\",\"then\",\"isThenableResolved\",\"thenable\",\"status\",\"noop$3\",\"trackUsedThenable\",\"thenableState\",\"reason\",\"workInProgressRoot\",\"shellSuspendCounter\",\"fulfilledValue\",\"fulfilledThenable\",\"rejectedThenable\",\"suspendedThenable\",\"getSuspendedThenable\",\"thenableState$1\",\"thenableIndexCounter$1\",\"unwrapThenable\",\"coerceRef\",\"ref\",\"throwOnInvalidObjectType\",\"returnFiber\",\"newChild\",\"join\",\"resolveLazy\",\"lazyType\",\"init\",\"createChildReconciler\",\"shouldTrackSideEffects\",\"deleteChild\",\"childToDelete\",\"deletions\",\"deleteRemainingChildren\",\"currentFirstChild\",\"mapRemainingChildren\",\"existingChildren\",\"useFiber\",\"pendingProps\",\"createWorkInProgress\",\"placeChild\",\"newFiber\",\"lastPlacedIndex\",\"newIndex\",\"placeSingleChild\",\"updateTextNode\",\"createFiberFromText\",\"mode\",\"updateElement\",\"elementType\",\"updateFragment\",\"createFiberFromTypeAndProps\",\"updatePortal\",\"portal\",\"implementation\",\"createFiberFromPortal\",\"fragment\",\"createFiberFromFragment\",\"createChild\",\"readContextDuringReconciliation\",\"updateSlot\",\"oldFiber\",\"updateFromMap\",\"newIdx\",\"reconcileChildFibersImpl\",\"newChildren\",\"resultingFirstChild\",\"previousNewFiber\",\"nextOldFiber\",\"delete\",\"forEach\",\"reconcileChildrenArray\",\"step\",\"done\",\"reconcileChildrenIterator\",\"firstChildFiber\",\"createFiberImplClass\",\"reconcileChildFibers\",\"mountChildFibers\",\"currentTreeHiddenStackCursor\",\"prevEntangledRenderLanesCursor\",\"pushHiddenContext\",\"entangledRenderLanes\",\"baseLanes\",\"reuseHiddenContextOnStack\",\"popHiddenContext\",\"suspenseHandlerStackCursor\",\"shellBoundary\",\"pushPrimaryTreeSuspenseHandler\",\"handler\",\"suspenseStackCursor\",\"pushOffscreenSuspenseHandler\",\"reuseSuspenseHandlerOnStack\",\"popSuspenseHandler\",\"findFirstSuspended\",\"row\",\"state\",\"revealOrder\",\"AbortControllerLocal\",\"AbortController\",\"signal\",\"aborted\",\"listener\",\"abort\",\"scheduleCallback$2\",\"NormalPriority\",\"CacheContext\",\"Consumer\",\"Provider\",\"_currentValue2\",\"_threadCount\",\"createCache\",\"controller\",\"refCount\",\"releaseCache\",\"cache\",\"currentEntangledListeners\",\"currentEntangledPendingCount\",\"currentEntangledLane\",\"currentEntangledActionThenable\",\"pingEngtangledActionScope\",\"prevOnStartTransitionFinish\",\"S\",\"entangledListeners\",\"requestTransitionLane\",\"resolve\",\"entangleAsyncAction\",\"resumedCache\",\"peekCacheFromPool\",\"cacheResumedFromPreviousRender\",\"pooledCache\",\"pushTransition\",\"offscreenWorkInProgress\",\"prevCachePool\",\"pool\",\"getSuspendedCache\",\"cacheFromPool\",\"currentlyRenderingFiber$1\",\"currentHook\",\"workInProgressHook\",\"didScheduleRenderPhaseUpdate\",\"didScheduleRenderPhaseUpdateDuringThisPass\",\"shouldDoubleInvokeUserFnsInHooksDEV\",\"localIdCounter\",\"thenableIndexCounter\",\"globalClientIdCounter\",\"throwInvalidHookError\",\"areHookInputsEqual\",\"nextDeps\",\"prevDeps\",\"renderWithHooks\",\"Component\",\"secondArg\",\"nextRenderLanes\",\"updateQueue\",\"H\",\"HooksDispatcherOnMount\",\"HooksDispatcherOnUpdate\",\"renderWithHooksAgain\",\"finishRenderingHooks\",\"ContextOnlyDispatcher\",\"didRenderTooFewHooks\",\"didReceiveUpdate\",\"checkIfContextChanged\",\"numberOfReRenders\",\"lastEffect\",\"events\",\"stores\",\"memoCache\",\"HooksDispatcherOnRerender\",\"TransitionAwareHostComponent\",\"dispatcher\",\"maybeThenable\",\"useState\",\"useThenable\",\"checkDidRenderIdHook\",\"didRenderIdHook\",\"bailoutHooks\",\"resetHooksOnUnwind\",\"mountWorkInProgressHook\",\"hook\",\"baseState\",\"baseQueue\",\"updateWorkInProgressHook\",\"nextCurrentHook\",\"nextWorkInProgressHook\",\"use\",\"usable\",\"readContext\",\"useMemoCache\",\"size\",\"map\",\"array\",\"basicStateReducer\",\"updateReducer\",\"reducer\",\"updateReducerImpl\",\"lastRenderedReducer\",\"pendingQueue\",\"baseFirst\",\"newBaseQueueFirst\",\"newBaseQueueLast\",\"didReadFromEntangledAsyncAction$54\",\"workInProgressRootRenderLanes\",\"revertLane\",\"hasEagerState\",\"eagerState\",\"workInProgressRootSkippedLanes\",\"lastRenderedState\",\"dispatch\",\"rerenderReducer\",\"lastRenderPhaseUpdate\",\"updateSyncExternalStore\",\"subscribe\",\"getSnapshot\",\"getServerSnapshot\",\"isHydrating$jscomp$0\",\"snapshotChanged\",\"updateEffect\",\"subscribeToStore\",\"bind\",\"pushEffect\",\"updateStoreInstance\",\"destroy\",\"pushStoreConsistencyCheck\",\"renderedSnapshot\",\"nextSnapshot\",\"checkIfSnapshotChanged\",\"forceStoreRerender\",\"latestGetSnapshot\",\"nextValue\",\"scheduleUpdateOnFiber\",\"mountStateImpl\",\"initialState\",\"initialStateInitializer\",\"updateOptimisticImpl\",\"passthrough\",\"dispatchActionState\",\"actionQueue\",\"setPendingState\",\"setState\",\"payload\",\"isRenderPhaseUpdate\",\"actionNode\",\"isTransition\",\"T\",\"runActionStateAction\",\"prevState\",\"prevTransition\",\"currentTransition\",\"onStartTransitionFinish\",\"handleActionReturnValue\",\"onActionError\",\"error$60\",\"nextState\",\"onActionSuccess\",\"notifyActionListeners\",\"last\",\"actionStateReducer\",\"mountActionState\",\"initialStateProp\",\"ssrFormState\",\"formState\",\"JSCompiler_inline_result$jscomp$0\",\"inRootOrSingleton\",\"dispatchSetState\",\"dispatchOptimisticSetState\",\"updateActionState\",\"updateActionStateImpl\",\"stateHook\",\"currentStateHook\",\"actionQueueHook\",\"actionStateActionEffect\",\"rerenderActionState\",\"create\",\"deps\",\"updateRef\",\"mountEffectImpl\",\"fiberFlags\",\"hookFlags\",\"updateEffectImpl\",\"mountEffect\",\"updateInsertionEffect\",\"updateLayoutEffect\",\"imperativeHandleEffect\",\"refCleanup\",\"updateImperativeHandle\",\"mountDebugValue\",\"updateCallback\",\"callback\",\"updateMemo\",\"nextCreate\",\"mountDeferredValueImpl\",\"initialValue\",\"requestDeferredLane\",\"updateDeferredValueImpl\",\"prevValue\",\"startTransition\",\"pendingState\",\"finishedState\",\"previousPriority\",\"dispatchSetStateInternal\",\"result\",\"thenableWithOverride\",\"chainThenableValue\",\"requestUpdateLane\",\"noop$2\",\"startHostTransition\",\"formFiber\",\"formData\",\"ensureFormComponentIsStateful\",\"requestFormReset$1\",\"existingStateHook\",\"initialResetState\",\"useHostTransitionStatus\",\"updateId\",\"updateRefresh\",\"refreshCache\",\"provider\",\"root$63\",\"enqueueUpdate\",\"createUpdate\",\"entangleTransitions\",\"dispatchReducerAction\",\"enqueueRenderPhaseUpdate\",\"entangleTransitionUpdate\",\"currentState\",\"throwIfDuringRender\",\"queueLanes\",\"useCallback\",\"useContext\",\"useEffect\",\"useImperativeHandle\",\"useLayoutEffect\",\"useInsertionEffect\",\"useMemo\",\"useReducer\",\"useRef\",\"useDebugValue\",\"useDeferredValue\",\"useTransition\",\"useSyncExternalStore\",\"useId\",\"useCacheRefresh\",\"useFormState\",\"useActionState\",\"useOptimistic\",\"initialArg\",\"identifierPrefix\",\"booleanOrThenable\",\"applyDerivedStateFromProps\",\"ctor\",\"nextProps\",\"classComponentUpdater\",\"isMounted\",\"_reactInternals\",\"enqueueSetState\",\"enqueueReplaceState\",\"enqueueForceUpdate\",\"checkShouldComponentUpdate\",\"oldProps\",\"newProps\",\"nextContext\",\"shouldComponentUpdate\",\"isPureReactComponent\",\"callComponentWillReceiveProps\",\"componentWillReceiveProps\",\"UNSAFE_componentWillReceiveProps\",\"resolveClassComponentProps\",\"baseProps\",\"propName$67\",\"reportGlobalError\",\"reportError\",\"ErrorEvent\",\"dispatchEvent\",\"process\",\"emit\",\"console\",\"defaultOnUncaughtError\",\"defaultOnCaughtError\",\"defaultOnRecoverableError\",\"logUncaughtError\",\"errorInfo\",\"onUncaughtError\",\"componentStack\",\"e$68\",\"setTimeout\",\"logCaughtError\",\"boundary\",\"onCaughtError\",\"errorBoundary\",\"e$69\",\"createRootErrorUpdate\",\"createClassErrorUpdate\",\"initializeClassErrorUpdate\",\"componentDidCatch\",\"legacyErrorBoundariesThatAlreadyFailed\",\"SelectiveHydrationException\",\"reconcileChildren\",\"nextChildren\",\"updateForwardRef\",\"propsWithoutRef\",\"prepareToReadContext\",\"bailoutOnAlreadyFinishedWork\",\"updateMemoComponent\",\"shouldConstruct\",\"updateSimpleMemoComponent\",\"checkScheduledUpdateOrContext\",\"prevProps\",\"updateFunctionComponent\",\"updateOffscreenComponent\",\"nextIsDetached\",\"_pendingVisibility\",\"markRef\",\"deferHiddenOffscreenComponent\",\"cachePool\",\"nextBaseLanes\",\"propagateParentContextChanges\",\"replayFunctionComponent\",\"updateClassComponent\",\"updater\",\"refs\",\"initializeUpdateQueue\",\"getSnapshotBeforeUpdate\",\"UNSAFE_componentWillMount\",\"componentWillMount\",\"processUpdateQueue\",\"suspendIfUpdateReadFromEntangledAsyncAction\",\"componentDidMount\",\"unresolvedOldProps\",\"oldContext\",\"contextType$jscomp$0\",\"hasForceUpdate\",\"cloneUpdateQueue\",\"UNSAFE_componentWillUpdate\",\"componentWillUpdate\",\"componentDidUpdate\",\"mountHostRootWithoutHydrating\",\"SUSPENDED_MARKER\",\"treeContext\",\"retryLane\",\"mountSuspenseOffscreenState\",\"getRemainingWorkInPrimaryTree\",\"primaryTreeDidDefer\",\"workInProgressDeferredLane\",\"updateSuspenseComponent\",\"showFallback\",\"didSuspend\",\"JSCompiler_temp$jscomp$0\",\"nextInstance\",\"c\",\"id\",\"overflow\",\"fallback\",\"mountWorkInProgressOffscreenFiber\",\"mountSuspensePrimaryChildren\",\"retrySuspenseComponentWithoutHydrating\",\"dataset\",\"digest\",\"dgst\",\"renderDidSuspendDelayIfPossible\",\"retryDehydratedSuspenseBoundary\",\"_reactRetry\",\"subtreeFlags\",\"primaryChildren\",\"offscreenProps\",\"createFiberFromOffscreen\",\"scheduleSuspenseWorkOnFiber\",\"propagationRoot\",\"scheduleContextWorkOnParentPath\",\"initSuspenseListRenderState\",\"isBackwards\",\"tail\",\"lastContentRow\",\"tailMode\",\"renderState\",\"rendering\",\"renderingStartTime\",\"updateSuspenseListComponent\",\"beginWork\",\"pushProvider\",\"didSuspendBefore\",\"attemptEarlyBailoutIfNoScheduledUpdate\",\"lazyComponent\",\"propagateContextChanges\",\"isDehydrated\",\"getResource\",\"getOwnerDocumentFromRootContainer\",\"setInitialProperties\",\"resolveSingletonInstance\",\"anyProps\",\"hasAttribute\",\"getAttribute\",\"rel\",\"crossOrigin\",\"title\",\"src\",\"canHydrateInstance\",\"canHydrateTextInstance\",\"pooledCacheLanes\",\"valueCursor\",\"currentlyRenderingFiber\",\"lastContextDependency\",\"providerFiber\",\"popProvider\",\"contexts\",\"forcePropagateEntireTree\",\"list\",\"nextFiber\",\"firstContext\",\"dependency\",\"isInsidePropagationBailout\",\"currentParent\",\"currentDependencies\",\"memoizedValue\",\"readContextForConsumer\",\"consumer\",\"firstBaseUpdate\",\"lastBaseUpdate\",\"shared\",\"hiddenCallbacks\",\"callbacks\",\"executionContext\",\"enqueueCapturedUpdate\",\"capturedUpdate\",\"newFirst\",\"newLast\",\"clone\",\"didReadFromEntangledAsyncAction\",\"workInProgress$jscomp$0\",\"instance$jscomp$0\",\"lastPendingUpdate\",\"firstPendingUpdate\",\"isHiddenUpdate\",\"callCallback\",\"commitCallbacks\",\"commitHookEffectListMount\",\"finishedWork\",\"firstEffect\",\"captureCommitPhaseError\",\"commitHookEffectListUnmount\",\"nearestMountedAncestor$jscomp$0\",\"nearestMountedAncestor\",\"commitClassCallbacks\",\"safelyCallComponentWillUnmount\",\"componentWillUnmount\",\"safelyAttachRef\",\"instanceToUse\",\"safelyDetachRef\",\"error$112\",\"commitHostMount\",\"autoFocus\",\"srcSet\",\"srcset\",\"commitHostUpdate\",\"domElement\",\"lastProps\",\"propKey\",\"lastProp\",\"setProp\",\"propKey$203\",\"propKey$219\",\"propKey$224\",\"propKey$229\",\"setPropOnCustomElement\",\"propKey$234\",\"updateProperties\",\"isHostParent\",\"getHostSibling\",\"insertOrAppendPlacementNodeIntoContainer\",\"before\",\"insertBefore\",\"appendChild\",\"_reactRootContainer\",\"insertOrAppendPlacementNode\",\"offscreenSubtreeIsHidden\",\"offscreenSubtreeWasHidden\",\"needsFormReset\",\"PossiblyWeakSet\",\"WeakSet\",\"nextEffect\",\"shouldFireAfterActiveInstanceBlur\",\"commitLayoutEffectOnFiber\",\"finishedRoot\",\"recursivelyTraverseLayoutEffects\",\"__reactInternalSnapshotBeforeUpdate\",\"error$111\",\"commitSuspenseHydrationCallbacks\",\"prevOffscreenSubtreeIsHidden\",\"prevOffscreenSubtreeWasHidden\",\"recursivelyTraverseReappearLayoutEffects\",\"detachFiberAfterEffects\",\"hostParent\",\"hostParentIsContainer\",\"recursivelyTraverseDeletionEffects\",\"commitDeletionEffectsOnFiber\",\"deletedFiber\",\"onCommitFiberUnmount\",\"count\",\"removeChild\",\"prevHostParent\",\"prevHostParentIsContainer\",\"attributes\",\"removeAttributeNode\",\"prevHostParentIsContainer$119\",\"clearSuspenseBoundary\",\"retryIfBlockedOn\",\"attachSuspenseRetryListeners\",\"wakeables\",\"retryCache\",\"_retryCache\",\"getRetryCache\",\"wakeable\",\"retry\",\"resolveRetryWakeable\",\"recursivelyTraverseMutationEffects\",\"root$jscomp$0\",\"parentFiber\",\"commitMutationEffectsOnFiber\",\"currentHoistableRoot\",\"commitReconciliationEffects\",\"hoistableRoot\",\"currentResource\",\"getElementsByTagName\",\"head\",\"querySelector\",\"maybeNodes\",\"getHydratableHoistableCache\",\"splice\",\"content\",\"property\",\"httpEquiv\",\"charSet\",\"mountHoistable\",\"acquireResource\",\"nextNode\",\"tagCaches\",\"getHoistableRoot\",\"recursivelyResetForms\",\"globalMostRecentFallbackTime\",\"_current\",\"recursivelyTraverseDisappearLayoutEffects\",\"display\",\"retryQueue\",\"parent$jscomp$0\",\"parent$113\",\"parent$115\",\"reset\",\"finishedRoot$jscomp$0\",\"includeWorkInProgressEffects\",\"commitOffscreenPassiveMountEffects\",\"previousCache\",\"commitCachePassiveMountEffect\",\"recursivelyTraversePassiveMountEffects\",\"committedLanes\",\"committedTransitions\",\"commitPassiveMountOnFiber\",\"_finishedWork$memoize2\",\"onPostCommit\",\"passiveEffectDuration\",\"recursivelyTraverseAtomicPassiveEffects\",\"recursivelyTraverseReconnectPassiveEffects\",\"committedLanes$jscomp$0\",\"committedTransitions$jscomp$0\",\"suspenseyCommitFlag\",\"recursivelyAccumulateSuspenseyCommit\",\"accumulateSuspenseyCommitOnFiber\",\"resource\",\"suspendedState\",\"media\",\"matchMedia\",\"matches\",\"loading\",\"getStyleKey\",\"getStylesheetSelectorFromKey\",\"_p\",\"onUnsuspend\",\"stylesheetPropsFromRawProps\",\"preloadPropsMap\",\"adoptPreloadPropsForStylesheet\",\"linkInstance\",\"Promise\",\"reject\",\"onload\",\"onerror\",\"stylesheets\",\"preload\",\"suspendResource\",\"previousHoistableRoot\",\"detachAlternateSiblings\",\"previousFiber\",\"recursivelyTraversePassiveUnmountEffects\",\"commitPassiveUnmountEffectsInsideOfDeletedTree_begin\",\"commitPassiveUnmountOnFiber\",\"recursivelyTraverseDisconnectPassiveEffects\",\"deletedSubtreeRoot\",\"FiberNode\",\"isReactComponent\",\"resetWorkInProgress\",\"owner\",\"fiberTag\",\"hostContext\",\"itemProp\",\"precedence\",\"onLoad\",\"onError\",\"async\",\"isHostHoistableType\",\"elements\",\"primaryChildInstance\",\"_pendingMarkers\",\"_transitions\",\"detach\",\"attach\",\"pendingChildren\",\"markUpdate\",\"preloadResourceAndSuspendIfNeeded\",\"preloadResource\",\"scheduleRetryEffect\",\"workInProgressSuspendedRetryLanes\",\"cutOffTailIfNeeded\",\"hasRenderedATailFallback\",\"lastTailNode\",\"lastTailNode$131\",\"bubbleProperties\",\"completedWork\",\"didBailout\",\"newChildLanes\",\"child$132\",\"completeWork\",\"pendingContext\",\"queueRecoverableErrors\",\"createElementNS\",\"innerHTML\",\"createTextNode\",\"cache$144\",\"listenToAllSupportedEvents\",\"workInProgressRootExitStatus\",\"workInProgressRootRenderTargetTime\",\"unwindWork\",\"unwindInterruptedWork\",\"interruptedWork\",\"DefaultAsyncDispatcher\",\"getCacheForType\",\"resourceType\",\"cacheForType\",\"PossiblyWeakMap\",\"workInProgressSuspendedReason\",\"workInProgressThrownValue\",\"workInProgressRootDidSkipSuspendedSiblings\",\"workInProgressRootIsPrerendering\",\"workInProgressRootDidAttachPingListener\",\"workInProgressRootInterleavedUpdatedLanes\",\"workInProgressRootPingedLanes\",\"workInProgressRootConcurrentErrors\",\"workInProgressRootRecoverableErrors\",\"workInProgressRootDidIncludeRecursiveRenderUpdate\",\"Infinity\",\"workInProgressTransitions\",\"rootDoesHavePassiveEffects\",\"rootWithPendingPassiveEffects\",\"pendingPassiveEffectsLanes\",\"pendingPassiveEffectsRemainingLanes\",\"pendingPassiveTransitions\",\"suspenseHandler\",\"cancelPendingCommit\",\"prepareFreshStack\",\"markRootSuspended\",\"ensureRootIsScheduled\",\"performWorkOnRoot\",\"forceSync\",\"shouldTimeSlice\",\"expiredLanes\",\"exitStatus\",\"prevExecutionContext\",\"prevDispatcher\",\"pushDispatcher\",\"prevAsyncDispatcher\",\"pushAsyncDispatcher\",\"thrownValue\",\"throwAndUnwindWorkLoop\",\"replaySuspendedUnitOfWork\",\"hostFiber\",\"completeUnitOfWork\",\"resetWorkInProgressStack\",\"workLoopConcurrent\",\"thrownValue$166\",\"handleThrow\",\"A\",\"renderRootConcurrent\",\"renderRootSync\",\"renderWasConcurrent\",\"isRenderConsistentWithExternalStores\",\"errorRecoveryDisabledLanes\",\"wasRootDehydrated\",\"timeoutHandle\",\"scheduleTimeout\",\"commitRootWhenReady\",\"errors\",\"apply\",\"recoverableErrors\",\"transitions\",\"didIncludeRenderPhaseUpdate\",\"updatedLanes\",\"suspendedRetryLanes\",\"didSkipSuspendedSiblings\",\"suspendedCommitReason\",\"completedRenderStartTime\",\"completedRenderEndTime\",\"unsuspend\",\"noop\",\"insertSuspendedStylesheets\",\"commit\",\"stylesheetTimer\",\"clearTimeout\",\"waitForCommitToBeReady\",\"commitRoot\",\"check\",\"didAttemptEntireTree\",\"expirationTimes\",\"index$6\",\"flushSyncWorkAcrossRoots_impl\",\"cancelTimeout\",\"allEntangledLanes\",\"index$4\",\"shouldYieldForPrerendering\",\"unitOfWork\",\"workLoopSync\",\"thrownValue$164\",\"performUnitOfWork\",\"suspendedReason\",\"rootRenderLanes\",\"attachPingListener\",\"markerInstances\",\"cause\",\"wrapperError\",\"throwException\",\"unwindUnitOfWork\",\"skipSiblings\",\"previousUpdateLanePriority\",\"renderPriorityLevel\",\"flushPassiveEffects\",\"callbackNode\",\"callbackPriority\",\"remainingLanes\",\"previouslyPendingLanes\",\"index$7\",\"hiddenUpdatesForLane\",\"markRootFinished\",\"priorityLevel\",\"scheduleCallback$1\",\"eventsEnabled\",\"_enabled\",\"selection\",\"e$20\",\"indexWithinAnchor\",\"indexWithinFocus\",\"selectionInformation\",\"resolvedPrevProps\",\"clearContainerSparingly\",\"commitBeforeMutationEffects\",\"releaseRootPooledCache\",\"onCommitFiberRoot\",\"onCommitRoot\",\"onRecoverableError\",\"commitRootImpl\",\"root$170\",\"renderPriority\",\"onPostCommitFiberRoot\",\"captureCommitPhaseErrorOnRoot\",\"rootFiber\",\"pingCache\",\"threadIDs\",\"pingSuspendedRoot\",\"retryTimedOutBoundary\",\"boundaryFiber\",\"firstScheduledRoot\",\"lastScheduledRoot\",\"didScheduleMicrotask\",\"mightHavePendingSyncWork\",\"isFlushingWork\",\"currentEventTransitionLane\",\"cb\",\"processRootScheduleInMicrotask\",\"scheduleMicrotask\",\"syncTransitionLanes\",\"onlyLegacy\",\"didPerformSomeWork\",\"root$172\",\"performSyncWorkOnRoot\",\"currentPopstateTransitionEvent\",\"shouldAttemptEagerTransition\",\"prev\",\"scheduleTaskForRootDuringMicrotask\",\"index$5\",\"expirationTime\",\"performWorkOnRootViaSchedulerTask\",\"didTimeout\",\"originalCallbackNode\",\"workInProgressRootRenderLanes$jscomp$0\",\"coerceFormActionProp\",\"actionProp\",\"createFormDataWithSubmitter\",\"submitter\",\"temp\",\"FormData\",\"i$jscomp$inline_1439\",\"eventName$jscomp$inline_1440\",\"toUpperCase\",\"nonDelegatedEvents\",\"eventSystemFlags\",\"_dispatchQueue$i\",\"previousInstance\",\"i$jscomp$0\",\"_dispatchListeners$i\",\"targetElement\",\"listenerSetKey\",\"addTrappedEventListener\",\"listenToNativeEvent\",\"isCapturePhaseListener\",\"listeningMarker\",\"rootContainerElement\",\"targetContainer\",\"listenerWrapper\",\"dispatchDiscreteEvent\",\"dispatchContinuousEvent\",\"capture\",\"passive\",\"dispatchEventForPluginEventSystem\",\"targetInst$jscomp$0\",\"ancestorInst\",\"nodeTag\",\"container\",\"grandTag\",\"SyntheticEventCtor\",\"inCapturePhase\",\"accumulateTargetOnly\",\"reactEventName\",\"lastHostComponent\",\"_instance\",\"createDispatchListener\",\"parentWindow\",\"getParent\",\"accumulateEnterLeaveListenersForEvent\",\"getTargetInstFunc\",\"handleEventFunc\",\"fallbackData\",\"eventType\",\"getNativeBeforeInputChars\",\"char\",\"getFallbackBeforeInputChars\",\"maybeTargetInst\",\"formAction\",\"extractEvents$1\",\"targetFiber\",\"captureName\",\"_instance2\",\"unshift\",\"common\",\"_instance3\",\"NORMALIZE_NEWLINES_REGEX\",\"NORMALIZE_NULL_AND_REPLACEMENT_REGEX\",\"normalizeMarkupForTextOrAttribute\",\"markup\",\"serverText\",\"clientText\",\"formEncType\",\"formMethod\",\"formTarget\",\"encType\",\"__html\",\"muted\",\"isNaN\",\"endsWith\",\"hasSrc\",\"hasSrcSet\",\"propValue$186\",\"parentNamespace\",\"dangerouslySetInnerHTML\",\"localPromise\",\"queueMicrotask\",\"handleErrorInNextTick\",\"parentInstance\",\"suspenseInstance\",\"depth\",\"targetInstance\",\"previousSibling\",\"rootContainerInstance\",\"preconnectsSet\",\"getRootNode\",\"previousDispatcher\",\"d\",\"f\",\"previousWasRendering\",\"wasRendering\",\"r\",\"formInst\",\"D\",\"preconnectAs\",\"C\",\"L\",\"as\",\"globalDocument\",\"preloadSelector\",\"imageSrcSet\",\"imageSizes\",\"getScriptKey\",\"getScriptSelectorFromKey\",\"m\",\"X\",\"scripts\",\"adoptPreloadPropsForScript\",\"link\",\"insertStylesheet\",\"M\",\"limitedEscapedHref\",\"currentProps\",\"styles$242\",\"resource$243\",\"integrity\",\"hrefLang\",\"referrerPolicy\",\"preloadProps\",\"preloadStylesheet\",\"rawProps\",\"styleProps\",\"instance$248\",\"nodes\",\"prior\",\"stylesheetProps\",\"scriptProps\",\"keyAttribute\",\"caches\",\"nodeKey\",\"precedencesByRoot\",\"insertStylesheetIntoRoot\",\"precedences\",\"FiberRootNode\",\"hydrate\",\"incompleteTransitions\",\"createFiberRoot\",\"initialChildren\",\"hydrationCallbacks\",\"isStrictMode\",\"transitionCallbacks\",\"getContextForSubtree\",\"parentComponent\",\"updateContainerImpl\",\"markRetryLaneImpl\",\"markRetryLaneIfNotHydrated\",\"attemptContinuousHydration\",\"blockedOn\",\"findInstanceBlockingEvent\",\"return_targetInst\",\"clearIfContinuousEvent\",\"queuedFocus\",\"accumulateOrCreateContinuousQueuedReplayableEvent\",\"queuedDrag\",\"queuedMouse\",\"queuedPointers\",\"queuedPointerCaptures\",\"queueIfContinuousEvent\",\"discreteReplayableEvents\",\"findInstanceBlockingTarget\",\"hasScheduledReplayAttempt\",\"queuedExplicitHydrationTargets\",\"existingQueuedEvent\",\"targetContainers\",\"attemptExplicitHydrationTarget\",\"queuedTarget\",\"priority\",\"runWithPriority\",\"attemptReplayContinuousQueuedEvent\",\"queuedEvent\",\"nextBlockedOn\",\"nativeEventClone\",\"shift\",\"attemptReplayContinuousQueuedEventInMap\",\"replayUnblockedEvents\",\"scheduleCallbackIfUnblocked\",\"unblocked\",\"lastScheduledReplayQueue\",\"scheduleReplayQueueIfNeeded\",\"formReplayingQueue\",\"submitterOrAction\",\"unblock\",\"$$reactFormReplay\",\"formProps\",\"ReactDOMRoot\",\"internalRoot\",\"_internalRoot\",\"ReactDOMHydrationRoot\",\"unmount\",\"unstable_scheduleHydration\",\"isomorphicReactPackageVersion$jscomp$inline_1686\",\"version\",\"findDOMNode\",\"componentOrElement\",\"parentA\",\"parentB\",\"didFindChild\",\"child$2\",\"findCurrentFiberUsingSlowPath\",\"internals$jscomp$inline_2165\",\"bundleType\",\"rendererPackageName\",\"currentDispatcherRef\",\"findFiberByHostInstance\",\"reconcilerVersion\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"hook$jscomp$inline_2166\",\"isDisabled\",\"supportsFiber\",\"inject\",\"createRoot\",\"unstable_strictMode\",\"unstable_transitionCallbacks\",\"Internals\",\"getCrossOriginStringAs\",\"input\",\"createPortal\",\"createPortal$1\",\"flushSync\",\"previousTransition\",\"previousUpdatePriority\",\"preconnect\",\"prefetchDNS\",\"preinit\",\"fetchPriority\",\"nonce\",\"preinitModule\",\"preloadModule\",\"requestFormReset\",\"unstable_batchedUpdates\",\"permalink\",\"useFormStatus\",\"checkDCE\",\"g\",\"h\",\"k\",\"l\",\"n\",\"q\",\"t\",\"v\",\"w\",\"z\",\"u\",\"AsyncMode\",\"ConcurrentMode\",\"ContextConsumer\",\"ContextProvider\",\"Element\",\"Fragment\",\"Lazy\",\"Portal\",\"Profiler\",\"StrictMode\",\"Suspense\",\"isAsyncMode\",\"isConcurrentMode\",\"isContextConsumer\",\"isContextProvider\",\"isElement\",\"isForwardRef\",\"isFragment\",\"isLazy\",\"isPortal\",\"isProfiler\",\"isSuspense\",\"isValidElementType\",\"typeOf\",\"cookieNameRegExp\",\"cookieValueRegExp\",\"domainValueRegExp\",\"pathValueRegExp\",\"__toString\",\"NullObject\",\"startIndex\",\"str\",\"max\",\"decode\",\"decodeURIComponent\",\"jsxProd\",\"config\",\"maybeKey\",\"jsx\",\"jsxs\",\"ReactNoopUpdateQueue\",\"emptyObject\",\"ComponentDummy\",\"PureComponent\",\"partialState\",\"forceUpdate\",\"pureComponentPrototype\",\"ReactElement\",\"self\",\"isValidElement\",\"object\",\"userProvidedKeyEscapeRegex\",\"getElementKey\",\"escaperLookup\",\"escape\",\"mapIntoArray\",\"escapedPrefix\",\"nameSoFar\",\"oldElement\",\"newKey\",\"invokeCallback\",\"nextNamePrefix\",\"resolveThenable\",\"mapChildren\",\"func\",\"lazyInitializer\",\"_status\",\"_result\",\"moduleObject\",\"default\",\"Children\",\"forEachFunc\",\"forEachContext\",\"toArray\",\"only\",\"act\",\"cloneElement\",\"childArray\",\"createContext\",\"childrenLength\",\"createRef\",\"forwardRef\",\"lazy\",\"memo\",\"scope\",\"unstable_useCacheRefresh\",\"Context\",\"heap\",\"parentIndex\",\"peek\",\"first\",\"halfLength\",\"leftIndex\",\"rightIndex\",\"right\",\"diff\",\"sortIndex\",\"performance\",\"localPerformance\",\"localDate\",\"initialTime\",\"taskQueue\",\"timerQueue\",\"taskIdCounter\",\"currentTask\",\"currentPriorityLevel\",\"isPerformingWork\",\"isHostCallbackScheduled\",\"isHostTimeoutScheduled\",\"localSetTimeout\",\"localClearTimeout\",\"localSetImmediate\",\"setImmediate\",\"advanceTimers\",\"timer\",\"startTime\",\"handleTimeout\",\"requestHostCallback\",\"firstTimer\",\"requestHostTimeout\",\"schedulePerformWorkUntilDeadline\",\"isMessageLoopRunning\",\"taskTimeoutID\",\"frameInterval\",\"shouldYieldToHost\",\"performWorkUntilDeadline\",\"hasMoreWork\",\"previousPriorityLevel\",\"continuationCallback\",\"MessageChannel\",\"channel\",\"port\",\"port2\",\"port1\",\"onmessage\",\"postMessage\",\"ms\",\"unstable_Profiling\",\"task\",\"unstable_continueExecution\",\"unstable_forceFrameRate\",\"fps\",\"floor\",\"unstable_getFirstCallbackNode\",\"unstable_next\",\"eventHandler\",\"unstable_pauseExecution\",\"unstable_runWithPriority\",\"delay\",\"timeout\",\"unstable_wrapCallback\",\"parentPriorityLevel\",\"__webpack_module_cache__\",\"__webpack_require__\",\"moduleId\",\"cachedModule\",\"undefined\",\"__webpack_modules__\",\"leafPrototypes\",\"getProto\",\"obj\",\"__esModule\",\"ns\",\"def\",\"definition\",\"o\",\"globalThis\",\"Function\",\"prop\",\"toStringTag\",\"_objectWithoutPropertiesLoose\",\"s\",\"propertyIsEnumerable\",\"_typeof\",\"toPropertyKey\",\"toPrimitive\",\"TypeError\",\"Number\",\"_defineProperty\",\"writable\",\"ownKeys\",\"filter\",\"_objectSpread2\",\"getOwnPropertyDescriptors\",\"defineProperties\",\"formatMuiErrorMessage\",\"URL\",\"_len\",\"args\",\"_key\",\"arg\",\"searchParams\",\"append\",\"isPlainObject\",\"item\",\"deepClone\",\"output\",\"deepmerge\",\"_objectSpread\",\"val\",\"MIN_SAFE_INTEGER\",\"MAX_SAFE_INTEGER\",\"clampWrapper\",\"clamp\",\"decomposeColor\",\"charAt\",\"re\",\"colors\",\"parseInt\",\"round\",\"hexToRgb\",\"marker\",\"substring\",\"_formatMuiErrorMessage\",\"colorSpace\",\"values\",\"parseFloat\",\"private_safeColorChannel\",\"warning\",\"decomposedColor\",\"idx\",\"colorChannel\",\"recomposeColor\",\"hslToRgb\",\"rgb\",\"getLuminance\",\"toFixed\",\"alpha\",\"private_safeAlpha\",\"darken\",\"coefficient\",\"private_safeDarken\",\"lighten\",\"private_safeLighten\",\"private_safeEmphasize\",\"emphasize\",\"black\",\"white\",\"A100\",\"A200\",\"A400\",\"A700\",\"getLight\",\"primary\",\"secondary\",\"divider\",\"background\",\"paper\",\"active\",\"hover\",\"hoverOpacity\",\"selectedOpacity\",\"disabledBackground\",\"disabledOpacity\",\"focusOpacity\",\"activatedOpacity\",\"light\",\"getDark\",\"icon\",\"dark\",\"addLightOrDark\",\"intent\",\"direction\",\"shade\",\"tonalOffset\",\"tonalOffsetLight\",\"tonalOffsetDark\",\"main\",\"createPalette\",\"palette\",\"contrastThreshold\",\"other\",\"_objectWithoutProperties\",\"_excluded\",\"blue\",\"getDefaultPrimary\",\"purple\",\"getDefaultSecondary\",\"red\",\"getDefaultError\",\"lightBlue\",\"getDefaultInfo\",\"success\",\"green\",\"getDefaultSuccess\",\"orange\",\"getDefaultWarning\",\"getContrastText\",\"contrastText\",\"foreground\",\"lumA\",\"lumB\",\"getContrastRatio\",\"augmentColor\",\"_ref\",\"mainShade\",\"lightShade\",\"darkShade\",\"JSON\",\"stringify\",\"modeHydrated\",\"grey\",\"createGetCssVar\",\"appendVar\",\"vars\",\"field\",\"_len2\",\"fallbacks\",\"_key2\",\"xs\",\"sm\",\"md\",\"lg\",\"xl\",\"defaultBreakpoints\",\"up\",\"defaultContainerQueries\",\"containerQueries\",\"containerName\",\"handleBreakpoints\",\"styleFromPropValue\",\"theme\",\"themeBreakpoints\",\"breakpoints\",\"reduce\",\"acc\",\"breakpoint\",\"breakpointKeys\",\"startsWith\",\"some\",\"isCqShorthand\",\"containerKey\",\"shorthand\",\"containerQuery\",\"getContainerQuery\",\"cssKey\",\"createEmptyBreakpointObject\",\"_breakpointsInput$key\",\"breakpointsInput\",\"removeUnusedBreakpoints\",\"breakpointOutput\",\"capitalize\",\"string\",\"getPath\",\"path\",\"checkVars\",\"getStyleValue\",\"themeMapping\",\"transform\",\"propValueFinal\",\"userValue\",\"cssProperty\",\"themeKey\",\"filterProps\",\"properties\",\"directions\",\"marginX\",\"marginY\",\"paddingX\",\"paddingY\",\"getCssProperties\",\"memoize\",\"dir\",\"marginKeys\",\"paddingKeys\",\"spacingKeys\",\"createUnaryUnit\",\"_getPath\",\"themeSpacing\",\"abs\",\"transformed\",\"createUnarySpacing\",\"transformer\",\"resolveCssProperty\",\"cssProperties\",\"getStyleFromPropValue\",\"merge\",\"margin\",\"padding\",\"spacing\",\"createSpacing\",\"spacingInput\",\"mui\",\"argsInput\",\"argument\",\"prepareTypographyVars\",\"typography\",\"entries\",\"entry\",\"fontStyle\",\"fontVariant\",\"fontWeight\",\"fontStretch\",\"fontSize\",\"lineHeight\",\"fontFamily\",\"assignNestedKeys\",\"arrayKeys\",\"cssVarsParser\",\"shouldSkipGeneratingVar\",\"css\",\"varsWithDefaults\",\"walkObjectDeep\",\"shouldSkipPaths\",\"cssVar\",\"resolvedValue\",\"getCssValue\",\"recurse\",\"parentKeys\",\"parserConfig\",\"getSelector\",\"defaultGetSelector\",\"disableCssColorScheme\",\"colorSchemeSelector\",\"selector\",\"colorSchemes\",\"components\",\"defaultColorScheme\",\"otherTheme\",\"rootVars\",\"rootCss\",\"rootVarsWithDefaults\",\"themeVars\",\"colorSchemesMap\",\"defaultScheme\",\"otherColorSchemes\",\"_toPropertyKey\",\"scheme\",\"colorScheme\",\"cssObject\",\"rule\",\"_colorSchemes$colorSc\",\"generateThemeVars\",\"_ref2\",\"schemeVars\",\"generateStyleSheets\",\"insertStyleSheet\",\"defaultSchemeVal\",\"_colorSchemes$colorSc2\",\"cssColorSheme\",\"finalCss\",\"_ref3\",\"_colorSchemes$key\",\"handlers\",\"borderTransform\",\"createBorderStyle\",\"border\",\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\",\"borderColor\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"outline\",\"outlineColor\",\"borderRadius\",\"compose\",\"gap\",\"columnGap\",\"rowGap\",\"paletteTransform\",\"sizingTransform\",\"maxWidth\",\"_props$theme\",\"_props$theme2\",\"breakpointsValues\",\"unit\",\"minWidth\",\"maxHeight\",\"minHeight\",\"bgcolor\",\"backgroundColor\",\"pt\",\"pr\",\"pb\",\"pl\",\"px\",\"py\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"paddingInline\",\"paddingInlineStart\",\"paddingInlineEnd\",\"paddingBlock\",\"paddingBlockStart\",\"paddingBlockEnd\",\"mt\",\"mr\",\"mb\",\"ml\",\"mx\",\"my\",\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\",\"marginInline\",\"marginInlineStart\",\"marginInlineEnd\",\"marginBlock\",\"marginBlockStart\",\"marginBlockEnd\",\"displayPrint\",\"textOverflow\",\"visibility\",\"whiteSpace\",\"flexBasis\",\"flexDirection\",\"flexWrap\",\"justifyContent\",\"alignItems\",\"alignContent\",\"order\",\"flex\",\"flexGrow\",\"flexShrink\",\"alignSelf\",\"justifyItems\",\"justifySelf\",\"gridColumn\",\"gridRow\",\"gridAutoFlow\",\"gridAutoColumns\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"gridTemplateAreas\",\"gridArea\",\"position\",\"zIndex\",\"bottom\",\"boxShadow\",\"boxSizing\",\"font\",\"letterSpacing\",\"textTransform\",\"textAlign\",\"styleFunctionSx\",\"getThemeValue\",\"_theme$unstable_sxCon\",\"sx\",\"unstable_sxConfig\",\"defaultSxConfig\",\"traverse\",\"sxInput\",\"sxObject\",\"emptyBreakpoints\",\"breakpointsKeys\",\"styleKey\",\"maybeFn\",\"callIfFn\",\"objects\",\"allKeys\",\"union\",\"every\",\"objectsHaveSameKeys\",\"sorted\",\"sort\",\"_a$match\",\"_b$match\",\"regex\",\"sortContainerQueries\",\"unstable_createStyleFunctionSx\",\"createBreakpoints\",\"sortedValues\",\"breakpointsAsArray\",\"breakpoint1\",\"breakpoint2\",\"sortBreakpointsValues\",\"down\",\"between\",\"not\",\"keyIndex\",\"applyStyles\",\"_theme$colorSchemes\",\"getColorSchemeSelector\",\"paletteInput\",\"shape\",\"shapeInput\",\"muiTheme\",\"themeInput\",\"toContainerQuery\",\"mediaQuery\",\"attachCq\",\"cssContainerQueries\",\"unstable_sx\",\"createMixins\",\"toolbar\",\"caseAllCaps\",\"defaultFontFamily\",\"createTypography\",\"fontWeightLight\",\"fontWeightRegular\",\"fontWeightMedium\",\"fontWeightBold\",\"htmlFontSize\",\"allVariants\",\"pxToRem\",\"pxToRem2\",\"coef\",\"buildVariant\",\"casing\",\"variants\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"overline\",\"inherit\",\"createShadow\",\"easing\",\"easeInOut\",\"easeOut\",\"easeIn\",\"sharp\",\"duration\",\"shortest\",\"shorter\",\"short\",\"standard\",\"complex\",\"enteringScreen\",\"leavingScreen\",\"formatMs\",\"milliseconds\",\"getAutoHeightDuration\",\"constant\",\"createTransitions\",\"inputTransitions\",\"mergedEasing\",\"mergedDuration\",\"durationOption\",\"easingOption\",\"animatedProp\",\"mobileStepper\",\"fab\",\"speedDial\",\"appBar\",\"drawer\",\"modal\",\"snackbar\",\"tooltip\",\"stringifyTheme\",\"serializableTheme\",\"serializeTheme\",\"createThemeNoVars\",\"mixinsInput\",\"transitionsInput\",\"typographyInput\",\"systemTheme\",\"systemCreateTheme\",\"shadows\",\"toRuntimeSource\",\"getOverlayAlpha\",\"elevation\",\"alphaValue\",\"defaultDarkOverlays\",\"_\",\"overlay\",\"getOpacity\",\"inputPlaceholder\",\"inputUnderline\",\"switchTrackDisabled\",\"switchTrack\",\"getOverlays\",\"_keys$\",\"cssVarPrefix\",\"rootSelector\",\"excludedVariables\",\"excludeVariablesFromRoot\",\"setColor\",\"toRgb\",\"setColorChannel\",\"safeColorChannel\",\"silent\",\"attachColorScheme\",\"restTheme\",\"_scheme2\",\"_scheme3\",\"_scheme4\",\"_scheme\",\"opacity\",\"overlays\",\"rest\",\"createColorScheme\",\"_createThemeNoVars\",\"createThemeWithVars\",\"colorSchemesInput\",\"defaultColorSchemeInput\",\"defaultShouldSkipGeneratingVar\",\"_excluded2\",\"firstColorScheme\",\"getCssVar\",\"systemCreateGetCssVar\",\"defaultSchemeInput\",\"builtInLight\",\"builtInDark\",\"setCssVarColor\",\"tokens\",\"colorToken\",\"Alert\",\"safeDarken\",\"safeLighten\",\"AppBar\",\"Avatar\",\"Button\",\"Chip\",\"FilledInput\",\"LinearProgress\",\"Skeleton\",\"Slider\",\"snackbarContentBackground\",\"safeEmphasize\",\"SnackbarContent\",\"SpeedDialAction\",\"StepConnector\",\"StepContent\",\"Switch\",\"TableCell\",\"safeAlpha\",\"Tooltip\",\"prepareCssVars\",\"generateSpacing\",\"createGetColorSchemeSelector\",\"createTheme\",\"cssVariables\",\"initialColorSchemes\",\"initialDefaultColorScheme\",\"paletteOptions\",\"useTheme\",\"ThemeContext\",\"localTheme\",\"outerTheme\",\"mergeOuterLocalTheme\",\"nested\",\"_jsx\",\"StyleSheet\",\"_this\",\"_insertTag\",\"tags\",\"insertionPoint\",\"prepend\",\"isSpeedy\",\"speedy\",\"ctr\",\"_proto\",\"insert\",\"createStyleElement\",\"sheet\",\"styleSheets\",\"ownerNode\",\"sheetForTag\",\"insertRule\",\"cssRules\",\"flush\",\"_tag$parentNode\",\"from\",\"pattern\",\"replacement\",\"indexof\",\"charat\",\"substr\",\"begin\",\"strlen\",\"sizeof\",\"line\",\"column\",\"character\",\"characters\",\"copy\",\"caret\",\"token\",\"alloc\",\"dealloc\",\"delimit\",\"delimiter\",\"whitespace\",\"escaping\",\"commenter\",\"identifier\",\"MS\",\"MOZ\",\"WEBKIT\",\"COMMENT\",\"RULESET\",\"DECLARATION\",\"KEYFRAMES\",\"serialize\",\"compile\",\"parse\",\"rules\",\"rulesets\",\"pseudo\",\"points\",\"declarations\",\"atrule\",\"previous\",\"variable\",\"scanning\",\"ampersand\",\"reference\",\"comment\",\"declaration\",\"ruleset\",\"post\",\"j\",\"identifierWithPointTracking\",\"getRules\",\"parsed\",\"toRules\",\"fixedElements\",\"compat\",\"isImplicitRule\",\"parentRules\",\"removeLabel\",\"hash\",\"defaultStylisPlugins\",\"combine\",\"exec\",\"ssrStyles\",\"_insert\",\"stylisPlugins\",\"inserted\",\"nodesToHydrate\",\"attrib\",\"currentSheet\",\"finalizingPlugins\",\"serializer\",\"collection\",\"middleware\",\"serialized\",\"shouldCache\",\"stylis\",\"registered\",\"getRegisteredStyles\",\"registeredStyles\",\"classNames\",\"rawClassName\",\"className\",\"registerStyles\",\"isStringTag\",\"insertStyles\",\"unitlessKeys\",\"animationIterationCount\",\"aspectRatio\",\"borderImageOutset\",\"borderImageSlice\",\"borderImageWidth\",\"boxFlex\",\"boxFlexGroup\",\"boxOrdinalGroup\",\"columnCount\",\"columns\",\"flexPositive\",\"flexNegative\",\"flexOrder\",\"gridRowEnd\",\"gridRowSpan\",\"gridRowStart\",\"gridColumnEnd\",\"gridColumnSpan\",\"gridColumnStart\",\"msGridRow\",\"msGridRowSpan\",\"msGridColumn\",\"msGridColumnSpan\",\"orphans\",\"scale\",\"tabSize\",\"widows\",\"zoom\",\"WebkitLineClamp\",\"fillOpacity\",\"floodOpacity\",\"stopOpacity\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"hyphenateRegex\",\"animationRegex\",\"isProcessableValue\",\"processStyleName\",\"processStyleValue\",\"p1\",\"p2\",\"unitless\",\"handleInterpolation\",\"mergedProps\",\"interpolation\",\"componentSelector\",\"__emotion_styles\",\"keyframes\",\"anim\",\"serializedStyles\",\"asString\",\"interpolated\",\"_i\",\"createStringFromObject\",\"previousCursor\",\"cached\",\"labelPattern\",\"serializeStyles\",\"stringMode\",\"strings\",\"raw\",\"lastIndex\",\"identifierName\",\"len\",\"hashString\",\"useInsertionEffectAlwaysWithSyncFallback\",\"useInsertionEffectWithLayoutFallback\",\"EmotionCacheContext\",\"HTMLElement\",\"withEmotionCache\",\"hasOwn\",\"typePropName\",\"Insertion\",\"Emotion\",\"cssProp\",\"WrappedComponent\",\"Emotion$1\",\"defaultTheme\",\"contextTheme\",\"RtlContext\",\"useRtl\",\"resolveProps\",\"defaultSlotProps\",\"slotProps\",\"slotKey\",\"slotPropName\",\"PropsContext\",\"useDefaultProps\",\"params\",\"styleOverrides\",\"getThemeProps\",\"EMPTY_THEME\",\"useThemeScoping\",\"themeId\",\"upperTheme\",\"isPrivate\",\"resolvedTheme\",\"mergedTheme\",\"useThemeWithoutDefault\",\"upperPrivateTheme\",\"usePrivateTheme\",\"engineTheme\",\"privateTheme\",\"rtlValue\",\"MuiThemeProvider\",\"StyledEngineThemeContext\",\"RtlProvider\",\"DefaultPropsProvider\",\"ThemeProviderNoVars\",\"scopedTheme\",\"THEME_ID\",\"SystemThemeProvider\",\"argsLength\",\"createElementArgArray\",\"createEmotionProps\",\"JSX\",\"Global\",\"sheetRef\",\"rehydrating\",\"sheetRefCurrent\",\"nextElementSibling\",\"insertable\",\"GlobalStyles\",\"globalStyles\",\"DEFAULT_MODE_STORAGE_KEY\",\"DEFAULT_COLOR_SCHEME_STORAGE_KEY\",\"DEFAULT_ATTRIBUTE\",\"getSystemMode\",\"processState\",\"systemMode\",\"initializeValue\",\"localStorage\",\"getItem\",\"setItem\",\"_unused\",\"useCurrentColorScheme\",\"defaultMode\",\"defaultLightColorScheme\",\"defaultDarkColorScheme\",\"supportedColorSchemes\",\"modeStorageKey\",\"colorSchemeStorageKey\",\"storageWindow\",\"noSsr\",\"joinedColorSchemes\",\"isMultiSchemes\",\"initialMode\",\"lightColorScheme\",\"darkColorScheme\",\"isClient\",\"setIsClient\",\"getColorScheme\",\"setMode\",\"newMode\",\"_unused2\",\"setColorScheme\",\"_unused4\",\"newLightColorScheme\",\"newDarkColorScheme\",\"_unused3\",\"handleMediaQuery\",\"mediaListener\",\"addListener\",\"removeListener\",\"handleStorage\",\"newValue\",\"defaultConfig\",\"attribute\",\"CssVarsProvider\",\"InternalCssVarsProvider\",\"useColorScheme\",\"getInitColorSchemeScript\",\"deprecatedGetInitColorSchemeScript\",\"defaultModeStorageKey\",\"defaultColorSchemeStorageKey\",\"disableTransitionOnChange\",\"designSystemTransitionOnChange\",\"resolveTheme\",\"defaultContext\",\"allColorSchemes\",\"ColorSchemeContext\",\"defaultColorSchemes\",\"defaultComponents\",\"_colorSchemes$restThe\",\"_restThemeProp$palett\",\"_memoTheme$generateSt\",\"themeProp\",\"documentNode\",\"colorSchemeNode\",\"disableNestedContext\",\"disableStyleSheetGeneration\",\"hasMounted\",\"muiUseTheme\",\"ctx\",\"initialTheme\",\"restThemeProp\",\"stateMode\",\"stateColorScheme\",\"memoTheme\",\"_restThemeProp$genera\",\"calculatedColorScheme\",\"schemeKey\",\"classList\",\"remove\",\"attr\",\"getComputedStyle\",\"contextValue\",\"shouldGenerateStyleSheet\",\"_jsxs\",\"ThemeProvider\",\"initialAttribute\",\"setter\",\"InitColorSchemeScript\",\"createCssVarsProvider\",\"newTheme\",\"PopStateEventType\",\"createBrowserHistory\",\"getUrlBasedHistory\",\"window2\",\"globalHistory\",\"pathname\",\"createLocation\",\"usr\",\"to\",\"createPath\",\"invariant\",\"cond\",\"warn\",\"getHistoryState\",\"parsePath\",\"parsedPath\",\"hashIndex\",\"searchIndex\",\"getLocation\",\"createHref2\",\"validateLocation\",\"v5Compat\",\"history\",\"getIndex\",\"handlePop\",\"nextIndex\",\"delta\",\"createURL\",\"base\",\"origin\",\"replaceState\",\"listen\",\"createHref\",\"encodeLocation\",\"historyState\",\"pushState\",\"DOMException\",\"go\",\"matchRoutes\",\"routes\",\"locationArg\",\"matchRoutesImpl\",\"basename\",\"allowPartial\",\"stripBasename\",\"branches\",\"flattenRoutes\",\"score\",\"siblings\",\"compareIndexes\",\"routesMeta\",\"meta\",\"childrenIndex\",\"rankRouteBranches\",\"decoded\",\"decodePath\",\"matchRouteBranch\",\"parentsMeta\",\"parentPath\",\"flattenRoute\",\"route\",\"relativePath\",\"caseSensitive\",\"joinPaths\",\"computeScore\",\"_route$path\",\"exploded\",\"explodeOptionalSegments\",\"segments\",\"isOptional\",\"required\",\"restExploded\",\"subpath\",\"paramRe\",\"dynamicSegmentValue\",\"indexRouteValue\",\"emptySegmentValue\",\"staticSegmentValue\",\"splatPenalty\",\"isSplat\",\"initialScore\",\"segment\",\"branch\",\"matchedParams\",\"matchedPathname\",\"remainingPathname\",\"matchPath\",\"pathnameBase\",\"normalizePathname\",\"matcher\",\"compiledParams\",\"regexpSource\",\"paramName\",\"compilePath\",\"captureGroups\",\"memo2\",\"splatValue\",\"nextChar\",\"getInvalidPathError\",\"dest\",\"getPathContributingMatches\",\"getResolveToMatches\",\"pathMatches\",\"resolveTo\",\"toArg\",\"routePathnames\",\"locationPathname\",\"isPathRelative\",\"isEmptyPath\",\"toPathname\",\"routePathnameIndex\",\"toSegments\",\"fromPathname\",\"resolvePathname\",\"normalizeSearch\",\"normalizeHash\",\"resolvePath\",\"hasExplicitTrailingSlash\",\"hasCurrentTrailingSlash\",\"paths\",\"isRouteErrorResponse\",\"statusText\",\"internal\",\"validMutationMethodsArr\",\"validRequestMethodsArr\",\"DataRouterContext\",\"DataRouterStateContext\",\"ViewTransitionContext\",\"isTransitioning\",\"FetchersContext\",\"AwaitContext\",\"NavigationContext\",\"LocationContext\",\"RouteContext\",\"outlet\",\"isDataRoute\",\"RouteErrorContext\",\"useInRouterContext\",\"React2\",\"useLocation\",\"navigateEffectWarning\",\"useIsomorphicLayoutEffect\",\"static\",\"useNavigate\",\"router\",\"useDataRouterContext\",\"useCurrentRouteId\",\"activeRef\",\"navigate\",\"fromRouteId\",\"useNavigateStable\",\"dataRouterContext\",\"navigator\",\"navigator2\",\"routePathnamesJson\",\"relative\",\"useNavigateUnstable\",\"useResolvedPath\",\"useRoutesImpl\",\"dataRouterState\",\"future\",\"parentMatches\",\"routeMatch\",\"parentParams\",\"parentPathname\",\"parentPathnameBase\",\"parentRoute\",\"warningOnce\",\"locationFromContext\",\"_parsedLocationArg$pa\",\"parsedLocationArg\",\"parentSegments\",\"renderedMatches\",\"_renderMatches\",\"navigationType\",\"DefaultErrorComponent\",\"useRouteError\",\"lightgrey\",\"preStyles\",\"codeStyles\",\"devInfo\",\"defaultErrorElement\",\"RenderErrorBoundary\",\"super\",\"revalidation\",\"routeContext\",\"RenderedRoute\",\"_ref9\",\"staticContext\",\"errorElement\",\"ErrorBoundary\",\"_deepestRenderedBoundaryId\",\"initialized\",\"errorIndex\",\"findIndex\",\"renderFallback\",\"fallbackIndex\",\"HydrateFallback\",\"hydrateFallbackElement\",\"loaderData\",\"errors2\",\"needsToRunLoader\",\"loader\",\"reduceRight\",\"shouldRenderHydrateFallback\",\"matches2\",\"getChildren\",\"getDataRouterConsoleError\",\"hookName\",\"useDataRouterState\",\"useRouteContext\",\"thisRoute\",\"_state$errors\",\"routeId\",\"alreadyWarned\",\"React3\",\"_ref12\",\"Navigate\",\"_ref14\",\"replace2\",\"isStatic\",\"jsonPath\",\"Route\",\"_props\",\"Router\",\"_ref15\",\"basenameProp\",\"locationProp\",\"staticProp\",\"navigationContext\",\"locationContext\",\"trailingPathname\",\"Routes\",\"_ref16\",\"createRoutesFromChildren\",\"treePath\",\"hasErrorBoundary\",\"shouldRevalidate\",\"handle\",\"defaultMethod\",\"defaultEncType\",\"isHtmlElement\",\"_formDataSupportsSubmitter\",\"supportedFormEncTypes\",\"getFormEncType\",\"getFormSubmissionInfo\",\"isButtonElement\",\"isInputElement\",\"isFormDataSubmitterSupported\",\"invariant2\",\"loadRouteModule\",\"routeModulesCache\",\"routeModule\",\"import\",\"__reactRouterContext\",\"isSpaMode\",\"reload\",\"isPageLinkDescriptor\",\"page\",\"isHtmlLinkDescriptor\",\"getNewMatchesForLinks\",\"nextMatches\",\"currentMatches\",\"manifest\",\"isNew\",\"matchPathChanged\",\"_currentMatches$index\",\"manifestRoute\",\"hasLoader\",\"_currentMatches$\",\"routeChoice\",\"currentUrl\",\"currentParams\",\"nextUrl\",\"nextParams\",\"defaultShouldRevalidate\",\"dedupeHrefs\",\"hrefs\",\"dedupeLinkDescriptors\",\"descriptors\",\"preloads\",\"preloadsSet\",\"deduped\",\"sortKeys\",\"createHtml\",\"html\",\"singleFetchUrl\",\"reqUrl\",\"React5\",\"RemixRootDefaultErrorBoundary\",\"_ref21\",\"isOutsideRemixApp\",\"errorInstance\",\"heyDeveloper\",\"BoundaryShell\",\"errorString\",\"_ref22\",\"_routeModules$root\",\"renderScripts\",\"routeModules\",\"useFrameworkContext\",\"Layout\",\"lang\",\"Scripts\",\"isFogOfWarEnabled\",\"useDataRouterContext2\",\"React9\",\"useDataRouterStateContext\",\"FrameworkContext\",\"composeEventHandlers\",\"theirHandler\",\"ourHandler\",\"getActiveMatches\",\"isHydrated\",\"errorIdx\",\"PrefetchPageLinks\",\"_ref29\",\"dataLinkProps\",\"PrefetchPageLinksImpl\",\"useKeyedPrefetchLinks\",\"keyedPrefetchLinks\",\"setKeyedPrefetchLinks\",\"interrupted\",\"all\",\"mod\",\"links\",\"flat\",\"getKeyedPrefetchLinks\",\"_ref30\",\"linkProps\",\"newMatchesForData\",\"newMatchesForAssets\",\"dataHrefs\",\"routesParams\",\"foundOptOutRoute\",\"_routeModules$m$route2\",\"m2\",\"hasClientLoader\",\"moduleHrefs\",\"manifestPatch\",\"imports\",\"getModuleLinkHrefs\",\"_ref31\",\"serverHandoffString\",\"renderMeta\",\"routerMatches\",\"enableFogOfWar\",\"didRenderScripts\",\"initialScripts\",\"_manifest$hmr\",\"contextScript\",\"routeModulesScript\",\"hmr\",\"runtime\",\"routeIds\",\"Boolean\",\"initialRoutes\",\"getPartialManifest\",\"routePreloads\",\"mergeRefs\",\"_len3\",\"_key3\",\"isBrowser\",\"__reactRouterVersion\",\"BrowserRouter\",\"_ref32\",\"historyRef\",\"React10\",\"setStateImpl\",\"ABSOLUTE_URL_REGEX2\",\"Link\",\"_ref35\",\"forwardedRef\",\"absoluteHref\",\"discover\",\"prefetch\",\"reloadDocument\",\"preventScrollReset\",\"viewTransition\",\"_excluded4\",\"isAbsolute\",\"isExternal\",\"targetUrl\",\"protocol\",\"joinedPathname\",\"useHref\",\"shouldPrefetch\",\"prefetchRef\",\"prefetchHandlers\",\"theirElementProps\",\"frameworkContext\",\"maybePrefetch\",\"setMaybePrefetch\",\"setShouldPrefetch\",\"onFocus\",\"onBlur\",\"onMouseEnter\",\"onMouseLeave\",\"onTouchStart\",\"observer\",\"IntersectionObserver\",\"isIntersecting\",\"threshold\",\"observe\",\"disconnect\",\"setIntent\",\"cancelIntent\",\"usePrefetchBehavior\",\"internalOnClick\",\"replaceProp\",\"isModifiedEvent\",\"shouldProcessLinkClick\",\"useLinkClickHandler\",\"NavLink\",\"_ref36\",\"ariaCurrentProp\",\"classNameProp\",\"_excluded5\",\"routerState\",\"opts\",\"vtContext\",\"useDataRouterContext3\",\"currentPath\",\"currentLocation\",\"nextPath\",\"nextLocation\",\"useViewTransitionState\",\"nextLocationPathname\",\"navigation\",\"endSlashPosition\",\"isActive\",\"isPending\",\"renderProps\",\"ariaCurrent\",\"Form\",\"_ref37\",\"fetcherKey\",\"onSubmit\",\"_excluded6\",\"submit\",\"useSubmit\",\"URLSearchParams\",\"indexValues\",\"getAll\",\"hasNakedIndexParam\",\"qs\",\"useFormAction\",\"submitMethod\",\"getDataRouterConsoleError2\",\"fetcherId\",\"getUniqueFetcherId\",\"currentRouteId\",\"fetch\",\"TextEncoder\",\"stringToByteArray$1\",\"out\",\"base64\",\"byteToCharMap_\",\"charToByteMap_\",\"byteToCharMapWebSafe_\",\"charToByteMapWebSafe_\",\"ENCODED_VALS_BASE\",\"ENCODED_VALS\",\"ENCODED_VALS_WEBSAFE\",\"HAS_NATIVE_SUPPORT\",\"atob\",\"encodeByteArray\",\"webSafe\",\"init_\",\"byteToCharMap\",\"byte1\",\"haveByte2\",\"byte2\",\"haveByte3\",\"byte3\",\"outByte1\",\"outByte2\",\"outByte3\",\"outByte4\",\"encodeString\",\"btoa\",\"decodeString\",\"bytes\",\"pos\",\"c1\",\"c2\",\"c3\",\"byteArrayToString\",\"decodeStringToByteArray\",\"charToByteMap\",\"byte4\",\"DecodeBase64StringError\",\"base64urlEncodeWithoutPadding\",\"utf8Bytes\",\"base64Encode\",\"base64Decode\",\"getDefaultsFromGlobal\",\"global\",\"getGlobal\",\"__FIREBASE_DEFAULTS__\",\"getDefaults\",\"getDefaultsFromEnvVariable\",\"defaultsJsonString\",\"getDefaultsFromCookie\",\"cookie\",\"getDefaultEmulatorHost\",\"productName\",\"_a\",\"_b\",\"emulatorHosts\",\"getDefaultEmulatorHostnameAndPort\",\"host\",\"separatorIndex\",\"lastIndexOf\",\"getDefaultAppConfig\",\"getExperimentalSetting\",\"Deferred\",\"promise\",\"wrapCallback\",\"createMockUserToken\",\"projectId\",\"uid\",\"project\",\"iat\",\"sub\",\"user_id\",\"iss\",\"aud\",\"exp\",\"auth_time\",\"firebase\",\"sign_in_provider\",\"identities\",\"alg\",\"getUA\",\"isBrowserExtension\",\"chrome\",\"browser\",\"isSafari\",\"forceEnvironment\",\"isNode\",\"userAgent\",\"isIndexedDBAvailable\",\"indexedDB\",\"validateIndexedDBOpenable\",\"preExist\",\"DB_CHECK_NAME\",\"request\",\"open\",\"onsuccess\",\"close\",\"deleteDatabase\",\"onupgradeneeded\",\"FirebaseError\",\"customData\",\"setPrototypeOf\",\"captureStackTrace\",\"ErrorFactory\",\"service\",\"serviceName\",\"fullCode\",\"template\",\"PATTERN\",\"replaceTemplate\",\"fullMessage\",\"deepEqual\",\"aKeys\",\"bKeys\",\"aProp\",\"bProp\",\"isObject\",\"thing\",\"querystring\",\"querystringParams\",\"arrayVal\",\"querystringDecode\",\"extractQuerystring\",\"queryStart\",\"fragmentStart\",\"ObserverProxy\",\"executor\",\"onNoObservers\",\"observers\",\"unsubscribes\",\"observerCount\",\"finalized\",\"forEachObserver\",\"complete\",\"nextOrObserver\",\"methods\",\"implementsAnyMethods\",\"unsub\",\"unsubscribeOne\",\"finalError\",\"sendOne\",\"calculateBackoffMillis\",\"backoffCount\",\"backoffFactor\",\"currBaseValue\",\"pow\",\"randomWait\",\"getModularInstance\",\"_delegate\",\"instanceFactory\",\"multipleInstances\",\"serviceProps\",\"instantiationMode\",\"onInstanceCreated\",\"setInstantiationMode\",\"setMultipleInstances\",\"setServiceProps\",\"setInstanceCreatedCallback\",\"DEFAULT_ENTRY_NAME\",\"instances\",\"instancesDeferred\",\"instancesOptions\",\"onInitCallbacks\",\"normalizedIdentifier\",\"normalizeInstanceIdentifier\",\"deferred\",\"isInitialized\",\"shouldAutoInitialize\",\"getOrInitializeService\",\"instanceIdentifier\",\"getImmediate\",\"optional\",\"getComponent\",\"setComponent\",\"isComponentEager\",\"instanceDeferred\",\"clearInstance\",\"services\",\"INTERNAL\",\"_delete\",\"isComponentSet\",\"getOptions\",\"initialize\",\"onInit\",\"existingCallbacks\",\"existingInstance\",\"invokeOnInitCallbacks\",\"normalizeIdentifierForFactory\",\"ComponentContainer\",\"providers\",\"addComponent\",\"getProvider\",\"addOrOverwriteComponent\",\"getProviders\",\"LogLevel\",\"levelStringToEnum\",\"DEBUG\",\"VERBOSE\",\"INFO\",\"WARN\",\"ERROR\",\"SILENT\",\"defaultLogLevel\",\"ConsoleMethod\",\"defaultLogHandler\",\"logType\",\"logLevel\",\"toISOString\",\"Logger\",\"_logLevel\",\"_logHandler\",\"_userLogHandler\",\"setLogLevel\",\"logHandler\",\"userLogHandler\",\"debug\",\"_len4\",\"_key4\",\"_len5\",\"_key5\",\"_len6\",\"_key6\",\"idbProxyableTypes\",\"cursorAdvanceMethods\",\"cursorRequestMap\",\"transactionDoneMap\",\"transactionStoreNamesMap\",\"transformCache\",\"reverseTransformCache\",\"idbProxyTraps\",\"receiver\",\"IDBTransaction\",\"objectStoreNames\",\"objectStore\",\"wrap\",\"wrapFunction\",\"IDBDatabase\",\"transaction\",\"IDBCursor\",\"advance\",\"continue\",\"continuePrimaryKey\",\"unwrap\",\"storeNames\",\"tx\",\"transformCachableValue\",\"unlisten\",\"cacheDonePromiseForTransaction\",\"IDBObjectStore\",\"IDBIndex\",\"Proxy\",\"instanceOfAny\",\"IDBRequest\",\"promisifyRequest\",\"openDB\",\"blocked\",\"upgrade\",\"blocking\",\"terminated\",\"openPromise\",\"oldVersion\",\"newVersion\",\"db\",\"readMethods\",\"writeMethods\",\"cachedMethods\",\"getMethod\",\"targetFuncName\",\"useIndex\",\"isWrite\",\"storeName\",\"store\",\"oldTraps\",\"PlatformLoggerServiceImpl\",\"getPlatformInfoString\",\"isVersionServiceProvider\",\"library\",\"logString\",\"logger\",\"PLATFORM_LOG_STRING\",\"name$q\",\"name$p\",\"name$n\",\"name$o\",\"name$l\",\"name$m\",\"name$k\",\"name$j\",\"name$i\",\"name$h\",\"name$g\",\"name$f\",\"name$e\",\"name$d\",\"name$c\",\"name$b\",\"name$a\",\"name$9\",\"name$8\",\"name$7\",\"name$6\",\"name$5\",\"name$4\",\"name$3\",\"name$1\",\"name$2\",\"_apps\",\"_serverApps\",\"_components\",\"_addComponent\",\"app\",\"_registerComponent\",\"componentName\",\"serverApp\",\"_getProvider\",\"heartbeatController\",\"triggerHeartbeat\",\"_isFirebaseServerApp\",\"settings\",\"ERROR_FACTORY\",\"FirebaseAppImpl\",\"_isDeleted\",\"_options\",\"_config\",\"_name\",\"_automaticDataCollectionEnabled\",\"automaticDataCollectionEnabled\",\"_container\",\"checkDestroyed\",\"isDeleted\",\"appName\",\"SDK_VERSION\",\"initializeApp\",\"rawConfig\",\"existingApp\",\"newApp\",\"getApp\",\"registerVersion\",\"libraryKeyOrName\",\"variant\",\"libraryMismatch\",\"versionMismatch\",\"STORE_NAME\",\"dbPromise\",\"getDbPromise\",\"createObjectStore\",\"originalErrorMessage\",\"writeHeartbeatsToIndexedDB\",\"heartbeatObject\",\"put\",\"computeKey\",\"idbGetError\",\"appId\",\"HeartbeatServiceImpl\",\"_heartbeatsCache\",\"_storage\",\"HeartbeatStorageImpl\",\"_heartbeatsCachePromise\",\"read\",\"agent\",\"getUTCDateString\",\"heartbeats\",\"lastSentHeartbeatDate\",\"singleDateHeartbeat\",\"hbTimestamp\",\"valueOf\",\"overwrite\",\"getHeartbeatsHeader\",\"heartbeatsToSend\",\"unsentEntries\",\"heartbeatsCache\",\"maxSize\",\"heartbeatEntry\",\"find\",\"hb\",\"dates\",\"countBytes\",\"extractHeartbeatsForHeader\",\"headerString\",\"_canUseIndexedDBPromise\",\"runIndexedDBEnvironmentCheck\",\"idbHeartbeatObject\",\"readHeartbeatsFromIndexedDB\",\"heartbeatsObject\",\"existingHeartbeatsObject\",\"version$1\",\"PENDING_TIMEOUT_MS\",\"PACKAGE_VERSION\",\"INTERNAL_AUTH_VERSION\",\"TOKEN_EXPIRATION_BUFFER\",\"isServerError\",\"getInstallationsEndpoint\",\"extractAuthTokenInfoFromResponse\",\"response\",\"requestStatus\",\"expiresIn\",\"responseExpiresIn\",\"creationTime\",\"getErrorFromResponse\",\"requestName\",\"errorData\",\"json\",\"serverCode\",\"serverMessage\",\"serverStatus\",\"getHeaders\",\"apiKey\",\"Headers\",\"Accept\",\"getHeadersWithAuth\",\"appConfig\",\"refreshToken\",\"headers\",\"getAuthorizationHeader\",\"retryIfServerError\",\"sleep\",\"VALID_FID_PATTERN\",\"generateFid\",\"fidByteArray\",\"Uint8Array\",\"crypto\",\"msCrypto\",\"getRandomValues\",\"fid\",\"b64String\",\"encode\",\"getKey\",\"fidChangeCallbacks\",\"fidChanged\",\"callFidChangeCallbacks\",\"getBroadcastChannel\",\"closeBroadcastChannel\",\"broadcastFidChange\",\"broadcastChannel\",\"BroadcastChannel\",\"OBJECT_STORE_NAME\",\"oldValue\",\"updateFn\",\"getInstallationEntry\",\"installations\",\"registrationPromise\",\"installationEntry\",\"oldEntry\",\"registrationStatus\",\"clearTimedOutRequest\",\"updateOrCreateInstallationEntry\",\"entryWithPromise\",\"onLine\",\"inProgressEntry\",\"registrationTime\",\"registeredInstallationEntry\",\"_ref4\",\"_ref5\",\"heartbeatServiceProvider\",\"endpoint\",\"heartbeatService\",\"heartbeatsHeader\",\"authVersion\",\"sdkVersion\",\"ok\",\"responseValue\",\"authToken\",\"createInstallationRequest\",\"registerInstallation\",\"waitUntilFidRegistration\",\"triggerRegistrationIfNecessary\",\"updateInstallationRequest\",\"generateAuthTokenRequest\",\"_ref6\",\"_ref7\",\"getGenerateAuthTokenEndpoint\",\"installation\",\"refreshAuthToken\",\"tokenPromise\",\"forceRefresh\",\"isEntryRegistered\",\"oldAuthToken\",\"isAuthTokenExpired\",\"isAuthTokenValid\",\"updateAuthTokenRequest\",\"waitUntilAuthTokenRequest\",\"inProgressAuthToken\",\"requestTime\",\"makeAuthTokenRequestInProgressEntry\",\"updatedInstallationEntry\",\"fetchAuthTokenFromServer\",\"getToken\",\"installationsImpl\",\"completeInstallationRegistration\",\"getMissingValueError\",\"valueName\",\"INSTALLATIONS_NAME\",\"publicFactory\",\"configKeys\",\"keyName\",\"extractAppConfig\",\"internalFactory\",\"getId\",\"ANALYTICS_TYPE\",\"GTAG_URL\",\"createGtagTrustedTypesScriptURL\",\"gtagURL\",\"promiseAllSettled\",\"promises\",\"insertScriptTag\",\"dataLayerName\",\"measurementId\",\"trustedTypesPolicy\",\"policyName\",\"policyOptions\",\"trustedTypes\",\"createPolicy\",\"createTrustedTypesPolicy\",\"createScriptURL\",\"script\",\"gtagScriptURL\",\"wrapGtag\",\"gtagCore\",\"initializationPromisesMap\",\"dynamicConfigPromisesList\",\"measurementIdToAppId\",\"command\",\"gtagParams\",\"initializationPromisesToWaitFor\",\"gaSendToList\",\"dynamicConfigResults\",\"sendToId\",\"foundConfig\",\"initializationPromise\",\"gtagOnEvent\",\"correspondingAppId\",\"gtagOnConfig\",\"consentAction\",\"fieldName\",\"customParams\",\"defaultRetryData\",\"throttleMetadata\",\"intervalMillis\",\"getThrottleMetadata\",\"setThrottleMetadata\",\"metadata\",\"deleteThrottleMetadata\",\"fetchDynamicConfigWithRetry\",\"retryData\",\"timeoutMillis\",\"throttleEndTimeMillis\",\"AnalyticsAbortSignal\",\"attemptFetchDynamicConfigWithRetry\",\"appFields\",\"backoffMillis\",\"setAbortableTimeout\",\"appUrl\",\"errorMessage\",\"jsonResponse\",\"_ignored\",\"httpStatus\",\"responseMessage\",\"fetchDynamicConfig\",\"isRetriableError\",\"defaultEventParametersForInit\",\"defaultConsentSettingsForInit\",\"_setConsentDefaultForInit\",\"consentSettings\",\"_setDefaultEventParametersForInit\",\"_initializeAnalytics\",\"dynamicConfigPromise\",\"fidPromise\",\"validateIndexedDB\",\"envIsValid\",\"dynamicConfig\",\"scriptTags\",\"findGtagScriptOnPage\",\"configProperties\",\"AnalyticsService\",\"gtagCoreFunction\",\"wrappedGtagFunction\",\"gtagName\",\"globalInitDone\",\"warnOnBrowserContextMismatch\",\"mismatchedEnvMessages\",\"cookieEnabled\",\"details\",\"factory\",\"dataLayer\",\"getOrCreateDataLayer\",\"wrappedGtag\",\"gtagFunctionName\",\"_args\",\"wrapOrCreateGtag\",\"logEvent\",\"analyticsInstance\",\"eventParams\",\"gtagFunction\",\"logEvent$1\",\"analyticsOptions\",\"analytics\",\"__rest\",\"SuppressedError\",\"_prodErrorMap\",\"prodErrorMap\",\"_DEFAULT_AUTH_ERROR_FACTORY\",\"logClient\",\"_logError\",\"msg\",\"_fail\",\"authOrCode\",\"createErrorInternal\",\"_createError\",\"_errorWithCustomMessage\",\"auth\",\"errorMap\",\"_serverAppCurrentUserOperationNotSupportedError\",\"_assertInstanceOf\",\"fullParams\",\"_errorFactory\",\"_assert\",\"assertion\",\"_key7\",\"debugFail\",\"failure\",\"debugAssert\",\"_getCurrentUrl\",\"_isHttpOrHttps\",\"_getCurrentScheme\",\"Delay\",\"shortDelay\",\"longDelay\",\"isMobile\",\"_emulatorUrl\",\"emulator\",\"FetchProvider\",\"fetchImpl\",\"headersImpl\",\"responseImpl\",\"Response\",\"SERVER_ERROR_MAP\",\"DEFAULT_API_TIMEOUT_MS\",\"_addTidIfNecessary\",\"tenantId\",\"_performApiRequest\",\"_performFetchWithErrorHandling\",\"query\",\"_getAdditionalHeaders\",\"languageCode\",\"fetchArgs\",\"_getFinalTarget\",\"apiHost\",\"customErrorMap\",\"fetchFn\",\"_canInitEmulator\",\"networkTimeout\",\"NetworkTimeout\",\"race\",\"clearNetworkTimeout\",\"_makeTaggedError\",\"serverErrorCode\",\"serverErrorMessage\",\"authError\",\"_performSignInRequest\",\"serverResponse\",\"_serverResponse\",\"apiScheme\",\"_parseEnforcementState\",\"enforcementStateStr\",\"errorParams\",\"phoneNumber\",\"_tokenResponse\",\"isEnterprise\",\"grecaptcha\",\"enterprise\",\"RecaptchaConfig\",\"siteKey\",\"recaptchaEnforcementState\",\"recaptchaKey\",\"getProviderEnforcementState\",\"providerStr\",\"enforcementState\",\"isProviderEnabled\",\"isAnyProviderEnabled\",\"getRecaptchaConfig\",\"getAccountInfo\",\"utcTimestampToDateString\",\"utcTimestamp\",\"getTime\",\"toUTCString\",\"secondsStringToMilliseconds\",\"seconds\",\"_parseToken\",\"algorithm\",\"signature\",\"_tokenExpiresIn\",\"parsedToken\",\"_logoutIfInvalidated\",\"user\",\"isUserInvalidated\",\"currentUser\",\"signOut\",\"ProactiveRefresh\",\"isRunning\",\"timerId\",\"errorBackoff\",\"_start\",\"schedule\",\"_stop\",\"getInterval\",\"wasError\",\"interval\",\"stsTokenManager\",\"iteration\",\"getIdToken\",\"UserMetadata\",\"createdAt\",\"lastLoginAt\",\"_initializeTime\",\"lastSignInTime\",\"_copy\",\"toJSON\",\"_reloadWithoutSaving\",\"idToken\",\"users\",\"coreAccount\",\"_notifyReloadListener\",\"newProviderData\",\"providerUserInfo\",\"extractProviderData\",\"providerData\",\"original\",\"newData\",\"providerId\",\"oldIsAnonymous\",\"isAnonymous\",\"newIsAnonymous\",\"passwordHash\",\"updates\",\"localId\",\"photoURL\",\"photoUrl\",\"emailVerified\",\"rawId\",\"StsTokenManager\",\"accessToken\",\"isExpired\",\"updateFromServerResponse\",\"updateTokensAndExpiration\",\"updateFromIdToken\",\"refresh\",\"clearRefreshToken\",\"oldToken\",\"tokenApiHost\",\"access_token\",\"expires_in\",\"refresh_token\",\"requestStsToken\",\"expiresInSec\",\"fromJSON\",\"manager\",\"_assign\",\"_clone\",\"_performRefresh\",\"assertStringOrUndefined\",\"UserImpl\",\"opt\",\"proactiveRefresh\",\"reloadUserInfo\",\"reloadListener\",\"_persistUserIfCurrent\",\"_notifyListenersIfCurrent\",\"getIdTokenResult\",\"userInternal\",\"claims\",\"signInProvider\",\"authTime\",\"issuedAtTime\",\"signInSecondFactor\",\"userInfo\",\"newUser\",\"_onReload\",\"_startProactiveRefresh\",\"_stopProactiveRefresh\",\"_updateTokensIfNecessary\",\"tokensRefreshed\",\"deleteAccount\",\"_redirectEventId\",\"_fromJSON\",\"_c\",\"_d\",\"_e\",\"_f\",\"_g\",\"_h\",\"plainObjectTokenManager\",\"_fromIdTokenResponse\",\"idTokenResponse\",\"_fromGetAccountInfoResponse\",\"instanceCache\",\"_getInstance\",\"cls\",\"InMemoryPersistence\",\"storage\",\"_isAvailable\",\"_set\",\"_get\",\"_remove\",\"_addListener\",\"_listener\",\"_removeListener\",\"inMemoryPersistence\",\"_persistenceKeyName\",\"PersistenceUserManager\",\"persistence\",\"userKey\",\"fullUserKey\",\"fullPersistenceKey\",\"boundEventHandler\",\"_onStorageEvent\",\"setCurrentUser\",\"getCurrentUser\",\"blob\",\"removeCurrentUser\",\"savePersistenceForRedirect\",\"setPersistence\",\"newPersistence\",\"persistenceHierarchy\",\"availablePersistences\",\"selectedPersistence\",\"userToMigrate\",\"migrationHierarchy\",\"_shouldAllowMigration\",\"_getBrowserName\",\"ua\",\"_isIEMobile\",\"_isFirefox\",\"_isBlackBerry\",\"_isWebOS\",\"_isSafari\",\"_isChromeIOS\",\"_isAndroid\",\"_isIOS\",\"_isIE10\",\"isIE\",\"_isMobileBrowser\",\"_getClientVersion\",\"clientPlatform\",\"reportedPlatform\",\"frameworks\",\"reportedFrameworks\",\"AuthMiddlewareQueue\",\"pushCallback\",\"onAbort\",\"wrappedCallback\",\"runMiddleware\",\"nextUser\",\"onAbortStack\",\"beforeStateCallback\",\"reverse\",\"originalMessage\",\"PasswordPolicyImpl\",\"responseOptions\",\"customStrengthOptions\",\"minPasswordLength\",\"maxPasswordLength\",\"containsLowercaseCharacter\",\"containsLowercaseLetter\",\"containsUppercaseCharacter\",\"containsUppercaseLetter\",\"containsNumericCharacter\",\"containsNonAlphanumericCharacter\",\"allowedNonAlphanumericCharacters\",\"forceUpgradeOnSignin\",\"schemaVersion\",\"validatePassword\",\"isValid\",\"passwordPolicy\",\"validatePasswordLengthOptions\",\"validatePasswordCharacterOptions\",\"meetsMinPasswordLength\",\"meetsMaxPasswordLength\",\"passwordChar\",\"updatePasswordCharacterOptionsStatuses\",\"AuthImpl\",\"appCheckServiceProvider\",\"emulatorConfig\",\"operations\",\"authStateSubscription\",\"Subscription\",\"idTokenSubscription\",\"beforeStateQueue\",\"redirectUser\",\"isProactiveRefreshEnabled\",\"EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\",\"_isInitialized\",\"_deleted\",\"_initializationPromise\",\"_popupRedirectResolver\",\"_agentRecaptchaConfig\",\"_tenantRecaptchaConfigs\",\"_projectPasswordPolicy\",\"_tenantPasswordPolicies\",\"lastNotifiedUid\",\"appVerificationDisabledForTesting\",\"clientVersion\",\"sdkClientVersion\",\"_initializeWithPersistence\",\"popupRedirectResolver\",\"persistenceManager\",\"_shouldInitProactively\",\"_initialize\",\"initializeCurrentUser\",\"assertedPersistence\",\"_currentUser\",\"_updateCurrentUser\",\"initializeCurrentUserFromIdToken\",\"directlySetCurrentUser\",\"authIdToken\",\"previouslyStoredUser\",\"futureCurrentUser\",\"needsTocheckMiddleware\",\"authDomain\",\"getOrInitRedirectPersistenceManager\",\"redirectUserEventId\",\"storedUserEventId\",\"tryRedirectSignIn\",\"_overrideRedirectResult\",\"reloadAndSetCurrentUserOrClear\",\"redirectResolver\",\"_completeRedirectFn\",\"_setRedirectUser\",\"useDeviceLanguage\",\"navigatorLanguage\",\"languages\",\"language\",\"_getUserLanguage\",\"updateCurrentUser\",\"userExtern\",\"skipBeforeStateCallbacks\",\"notifyAuthListeners\",\"redirectPersistenceManager\",\"_getRecaptchaConfig\",\"_getPasswordPolicyInternal\",\"_updatePasswordPolicy\",\"_getPasswordPolicy\",\"_getPersistence\",\"_updateErrorMap\",\"onAuthStateChanged\",\"completed\",\"registerStateListener\",\"beforeAuthStateChanged\",\"onIdTokenChanged\",\"authStateReady\",\"unsubscribe\",\"revokeAccessToken\",\"tokenType\",\"revokeToken\",\"redirectManager\",\"resolver\",\"_redirectPersistence\",\"_redirectUserForId\",\"currentUid\",\"subscription\",\"isUnsubscribed\",\"addObserver\",\"_logFramework\",\"framework\",\"_getFrameworks\",\"appCheckToken\",\"_getAppCheckToken\",\"appCheckTokenResult\",\"_logWarn\",\"_castAuth\",\"proxy\",\"createSubscribe\",\"externalJSProvider\",\"loadJS\",\"recaptchaV2Script\",\"recaptchaEnterpriseScript\",\"gapiScript\",\"_loadJS\",\"_generateCallbackName\",\"MockGreCAPTCHATopLevel\",\"MockGreCAPTCHA\",\"ready\",\"execute\",\"_siteKey\",\"_parameters\",\"FAKE_TOKEN\",\"RecaptchaEnterpriseVerifier\",\"authExtern\",\"verify\",\"retrieveRecaptchaToken\",\"clientType\",\"retrieveSiteKey\",\"injectRecaptchaFields\",\"isCaptchaResp\",\"isFakeToken\",\"verifier\",\"captchaResponse\",\"newRequest\",\"phoneEnrollmentInfo\",\"recaptchaToken\",\"phoneSignInInfo\",\"handleRecaptchaFlow\",\"authInstance\",\"actionName\",\"actionMethod\",\"recaptchaAuthProvider\",\"requestWithRecaptcha\",\"requestWithRecaptchaFields\",\"_initializeRecaptchaConfig\",\"authInternal\",\"connectAuthEmulator\",\"disableWarnings\",\"extractProtocol\",\"authority\",\"hostAndPort\",\"bracketedIPv6\",\"parsePort\",\"extractHostAndPort\",\"portStr\",\"freeze\",\"attachBanner\",\"el\",\"sty\",\"innerText\",\"readyState\",\"emitEmulatorWarning\",\"protocolEnd\",\"AuthCredential\",\"signInMethod\",\"_getIdTokenResponse\",\"_auth\",\"_linkToIdToken\",\"_idToken\",\"_getReauthenticationResolver\",\"linkEmailPassword\",\"signInWithPassword\",\"sendOobCode\",\"sendPasswordResetEmail$1\",\"EmailAuthCredential\",\"_email\",\"_password\",\"_tenantId\",\"_fromEmailAndPassword\",\"_fromEmailAndCode\",\"oobCode\",\"returnSecureToken\",\"signInWithEmailLink$1\",\"signInWithEmailLinkForLinking\",\"signInWithIdp\",\"OAuthCredential\",\"pendingToken\",\"_fromParams\",\"cred\",\"oauthToken\",\"oauthTokenSecret\",\"secret\",\"buildRequest\",\"autoCreate\",\"requestUri\",\"postBody\",\"sendPhoneVerificationCode\",\"VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\",\"PhoneAuthCredential\",\"_fromVerification\",\"verificationId\",\"verificationCode\",\"_fromTokenResponse\",\"temporaryProof\",\"signInWithPhoneNumber$1\",\"_makeVerificationRequest\",\"linkWithPhoneNumber$1\",\"operation\",\"verifyPhoneNumberForExisting\",\"sessionInfo\",\"ActionCodeURL\",\"actionLink\",\"parseMode\",\"continueUrl\",\"parseLink\",\"doubleDeepLink\",\"iOSDeepLink\",\"parseDeepLink\",\"EmailAuthProvider\",\"PROVIDER_ID\",\"credential\",\"credentialWithLink\",\"emailLink\",\"actionCodeUrl\",\"EMAIL_PASSWORD_SIGN_IN_METHOD\",\"EMAIL_LINK_SIGN_IN_METHOD\",\"FederatedAuthProvider\",\"defaultLanguageCode\",\"customParameters\",\"setDefaultLanguage\",\"setCustomParameters\",\"customOAuthParameters\",\"getCustomParameters\",\"BaseOAuthProvider\",\"scopes\",\"addScope\",\"getScopes\",\"FacebookAuthProvider\",\"FACEBOOK_SIGN_IN_METHOD\",\"credentialFromResult\",\"userCredential\",\"credentialFromTaggedObject\",\"credentialFromError\",\"tokenResponse\",\"oauthAccessToken\",\"GoogleAuthProvider\",\"GOOGLE_SIGN_IN_METHOD\",\"oauthIdToken\",\"GithubAuthProvider\",\"GITHUB_SIGN_IN_METHOD\",\"TwitterAuthProvider\",\"TWITTER_SIGN_IN_METHOD\",\"signUp\",\"UserCredentialImpl\",\"operationType\",\"providerIdForResponse\",\"_forOperation\",\"MultiFactorError\",\"_fromErrorAndOperation\",\"_processCredentialSavingMfaContextIfNecessary\",\"_link$1\",\"bypassAuthState\",\"_reauthenticate\",\"_signInWithCredential\",\"signInWithCredential\",\"_setActionCodeSettingsOnRequest\",\"actionCodeSettings\",\"dynamicLinkDomain\",\"canHandleCodeInApp\",\"handleCodeInApp\",\"iOS\",\"bundleId\",\"iOSBundleId\",\"android\",\"packageName\",\"androidInstallApp\",\"installApp\",\"androidMinimumVersionCode\",\"minimumVersion\",\"androidPackageName\",\"recachePasswordPolicy\",\"updateProfile\",\"profileRequest\",\"updateProfile$1\",\"passwordProvider\",\"_ref10\",\"startEnrollPhoneMfa\",\"STORAGE_AVAILABLE_KEY\",\"BrowserPersistenceClass\",\"storageRetriever\",\"removeItem\",\"BrowserLocalPersistence\",\"poll\",\"onStorageEvent\",\"localCache\",\"pollTimer\",\"fallbackToPolling\",\"forAllChangedKeys\",\"_oldValue\",\"notifyListeners\",\"detachListener\",\"stopPolling\",\"triggerListeners\",\"storedValue\",\"startPolling\",\"setInterval\",\"StorageEvent\",\"clearInterval\",\"attachListener\",\"browserLocalPersistence\",\"BrowserSessionPersistence\",\"sessionStorage\",\"browserSessionPersistence\",\"Receiver\",\"eventTarget\",\"handlersMap\",\"handleEvent\",\"receivers\",\"isListeningto\",\"newInstance\",\"messageEvent\",\"eventId\",\"ports\",\"fulfilled\",\"_allSettled\",\"_subscribe\",\"_unsubscribe\",\"_generateEventId\",\"digits\",\"Sender\",\"removeMessageHandler\",\"messageChannel\",\"onMessage\",\"_send\",\"completionTimer\",\"ackTimer\",\"finally\",\"_window\",\"_isWorker\",\"DB_NAME\",\"DB_OBJECTSTORE_NAME\",\"DB_DATA_KEYPATH\",\"DBPromise\",\"toPromise\",\"getObjectStore\",\"isReadWrite\",\"_openDatabase\",\"keyPath\",\"_deleteDatabase\",\"_putObject\",\"_deleteObject\",\"IndexedDBLocalPersistence\",\"pendingWrites\",\"sender\",\"serviceWorkerReceiverAvailable\",\"activeServiceWorker\",\"_workerInitializationPromise\",\"initializeServiceWorkerMessaging\",\"_openDb\",\"_withRetries\",\"op\",\"numAttempts\",\"initializeReceiver\",\"initializeSender\",\"_origin\",\"keyProcessed\",\"_poll\",\"_data\",\"serviceWorker\",\"_getActiveServiceWorker\",\"results\",\"notifyServiceWorker\",\"_getServiceWorkerController\",\"_withPendingWrite\",\"write\",\"getObject\",\"getAllRequest\",\"keysInResult\",\"fbase_key\",\"localKey\",\"indexedDBLocalPersistence\",\"startSignInPhoneMfa\",\"RECAPTCHA_VERIFIER_TYPE\",\"_verifyPhoneNumber\",\"phoneInfoOptions\",\"session\",\"startPhoneMfaEnrollmentRequest\",\"startPhoneMfaEnrollmentResponse\",\"injectRecaptchaV2Token\",\"phoneSessionInfo\",\"mfaEnrollmentId\",\"multiFactorHint\",\"multiFactorUid\",\"startPhoneMfaSignInRequest\",\"mfaPendingCredential\",\"startPhoneMfaSignInResponse\",\"phoneResponseInfo\",\"sendPhoneVerificationCodeRequest\",\"sendPhoneVerificationCodeResponse\",\"_reset\",\"recaptchaV2Verifier\",\"recaptchaV2Token\",\"recaptchaVersion\",\"PhoneAuthProvider\",\"verifyPhoneNumber\",\"phoneOptions\",\"applicationVerifier\",\"_withDefaultResolver\",\"resolverOverride\",\"PHONE_SIGN_IN_METHOD\",\"IdpCredential\",\"_buildIdpRequest\",\"sessionId\",\"returnIdpCredential\",\"_signIn\",\"_reauth\",\"_link\",\"AbstractPopupRedirectOperation\",\"pendingPromise\",\"eventManager\",\"onExecution\",\"registerConsumer\",\"onAuthEvent\",\"urlResponse\",\"getIdpTask\",\"unregisterAndCleanUp\",\"unregisterConsumer\",\"cleanUp\",\"_POLL_WINDOW_CLOSE_TIMEOUT\",\"PopupOperation\",\"authWindow\",\"pollId\",\"currentPopupAction\",\"cancel\",\"executeNotNull\",\"_openPopup\",\"associatedEvent\",\"_originValidation\",\"_isIframeWebStorageSupported\",\"isSupported\",\"pollUserCancellation\",\"closed\",\"redirectOutcomeMap\",\"RedirectAction\",\"readyOutcome\",\"hasPendingRedirect\",\"pendingRedirectKey\",\"resolverPersistence\",\"_getAndClearPendingRedirectStatus\",\"_getRedirectResult\",\"resolverExtern\",\"AuthEventManager\",\"cachedEventUids\",\"consumers\",\"queuedRedirectEvent\",\"hasHandledPotentialRedirect\",\"lastProcessedEventTime\",\"authEventConsumer\",\"isEventForConsumer\",\"sendToConsumer\",\"saveEventToCache\",\"onEvent\",\"hasEventBeenHandled\",\"handled\",\"isNullRedirectEvent\",\"isRedirectEvent\",\"eventIdMatches\",\"clear\",\"eventUid\",\"_ref13\",\"IP_ADDRESS_REGEX\",\"HTTP_REGEX\",\"_validateOrigin\",\"authorizedDomains\",\"_getProjectConfig\",\"domain\",\"matchDomain\",\"expected\",\"hostname\",\"ceUrl\",\"escapedDomainPattern\",\"NETWORK_TIMEOUT\",\"resetUnloadedGapiModules\",\"beacon\",\"___jsl\",\"hint\",\"CP\",\"loadGapi\",\"loadGapiIframe\",\"gapi\",\"load\",\"iframes\",\"getContext\",\"ontimeout\",\"Iframe\",\"cbName\",\"cachedGApiLoader\",\"PING_TIMEOUT\",\"IFRAME_ATTRIBUTES\",\"tabindex\",\"EID_FROM_APIHOST\",\"getIframeUrl\",\"eid\",\"fw\",\"_openIframe\",\"_loadGapi\",\"where\",\"messageHandlersFilter\",\"CROSS_ORIGIN_IFRAMES_FILTER\",\"dontclear\",\"iframe\",\"restyle\",\"setHideOnLeave\",\"networkError\",\"networkErrorTimer\",\"clearTimerAndResolve\",\"ping\",\"BASE_POPUP_OPTIONS\",\"resizable\",\"statusbar\",\"AuthPopup\",\"_open\",\"screen\",\"availHeight\",\"availWidth\",\"scrollbars\",\"optionsString\",\"accum\",\"standalone\",\"_isIOSStandalone\",\"click\",\"createEvent\",\"initMouseEvent\",\"openAsNewWindowIOS\",\"newWin\",\"WIDGET_PATH\",\"EMULATOR_WIDGET_PATH\",\"FIREBASE_APP_CHECK_FRAGMENT_ID\",\"_getRedirectUrl\",\"authType\",\"redirectUrl\",\"additionalParams\",\"isEmpty\",\"tid\",\"paramsDict\",\"appCheckTokenFragment\",\"getHandlerBase\",\"WEB_STORAGE_SUPPORT_KEY\",\"browserPopupRedirectResolver\",\"eventManagers\",\"originValidationPromises\",\"_openRedirect\",\"_setWindowLocation\",\"initAndGetManager\",\"register\",\"iframeEvent\",\"authEvent\",\"send\",\"AuthInterop\",\"internalListeners\",\"getUid\",\"assertAuthConfigured\",\"addAuthTokenListener\",\"updateProactiveRefresh\",\"removeAuthTokenListener\",\"authIdTokenMaxAge\",\"lastPostedIdToken\",\"charset\",\"getScriptParentElement\",\"hierarchy\",\"_initializeAuthInstance\",\"_instanceIdentifier\",\"getVersionForPlatform\",\"blockSize\",\"B\",\"isFinite\",\"F\",\"G\",\"I\",\"J\",\"ceil\",\"E\",\"and\",\"or\",\"xor\",\"bloom_blob_es2018\",\"Md5\",\"multiply\",\"modulo\",\"toNumber\",\"getBits\",\"fromNumber\",\"fromString\",\"Integer\",\"commonjsGlobal\",\"aa\",\"ca\",\"ba\",\"da\",\"ea\",\"fa\",\"ha\",\"ia\",\"ja\",\"ka\",\"Qb\",\"la\",\"ma\",\"oa\",\"pa\",\"qa\",\"sa\",\"ta\",\"va\",\"wa\",\"xa\",\"za\",\"Ba\",\"Ca\",\"Ea\",\"Da\",\"N\",\"Fa\",\"Ga\",\"Ha\",\"Ia\",\"Ja\",\"Ka\",\"Ma\",\"La\",\"Na\",\"Oa\",\"Qa\",\"once\",\"Ra\",\"Sa\",\"K\",\"Ta\",\"Ua\",\"Xa\",\"Va\",\"Wa\",\"Ya\",\"Za\",\"$a\",\"ab\",\"bb\",\"eb\",\"fb\",\"gb\",\"ib\",\"jb\",\"kb\",\"lb\",\"OPEN\",\"wb\",\"nb\",\"ob\",\"qb\",\"rb\",\"sb\",\"STAT_EVENT\",\"stat\",\"tb\",\"ub\",\"vb\",\"yb\",\"Cb\",\"Ab\",\"NO_ERROR\",\"TIMEOUT\",\"xb\",\"Bb\",\"Hb\",\"zb\",\"Pb\",\"Db\",\"R\",\"U\",\"O\",\"W\",\"P\",\"Eb\",\"XMLHttpRequest\",\"Fb\",\"Gb\",\"Ib\",\"Jb\",\"Kb\",\"Lb\",\"Mb\",\"Y\",\"Sb\",\"Wb\",\"Ob\",\"Ub\",\"Q\",\"Rb\",\"Xb\",\"Yb\",\"Zb\",\"$b\",\"ac\",\"Aa\",\"ya\",\"getResponseHeader\",\"bc\",\"cc\",\"dc\",\"ec\",\"fc\",\"gc\",\"Z\",\"Nb\",\"TextDecoder\",\"stream\",\"Tb\",\"getAllResponseHeaders\",\"ra\",\"Vb\",\"hc\",\"ic\",\"PerformanceNavigationTiming\",\"getEntriesByType\",\"nextHopProtocol\",\"loadTimes\",\"wasFetchedViaSpdy\",\"jc\",\"kc\",\"nc\",\"na\",\"V\",\"mc\",\"lc\",\"oc\",\"qc\",\"rc\",\"sc\",\"tc\",\"uc\",\"Dc\",\"Ac\",\"vc\",\"Bc\",\"decodeURI\",\"encodeURI\",\"Cc\",\"wc\",\"xc\",\"yc\",\"zc\",\"pc\",\"Ec\",\"onabort\",\"Hc\",\"Ic\",\"Jc\",\"Kc\",\"responseType\",\"responseText\",\"onreadystatechange\",\"Nc\",\"Pa\",\"ga\",\"Mc\",\"Lc\",\"Oc\",\"Pc\",\"credentials\",\"Request\",\"arrayBuffer\",\"ReadableStream\",\"getReader\",\"setRequestHeader\",\"Qc\",\"Rc\",\"Sc\",\"Uc\",\"Vc\",\"Wc\",\"Tc\",\"mozResponseArrayBuffer\",\"Xc\",\"internalChannelParams\",\"Yc\",\"xmlHttpFactory\",\"useFetchStreams\",\"supportsCrossDomainXhr\",\"concurrentRequestLimit\",\"fastHandshake\",\"encodeInitMessageHeaders\",\"forceLongPolling\",\"detectBufferingProxy\",\"longPollingTimeout\",\"Zc\",\"$c\",\"sendBeacon\",\"Image\",\"ad\",\"ed\",\"dd\",\"cd\",\"fd\",\"bd\",\"Fc\",\"Gc\",\"gd\",\"hd\",\"messageUrlParams\",\"messageHeaders\",\"clientProtocolHeaderRequired\",\"initMessageHeaders\",\"messageContentType\",\"sendRawJson\",\"httpSessionIdParam\",\"__headers__\",\"statusCode\",\"__status__\",\"__sm__\",\"jd\",\"withCredentials\",\"connect\",\"OSID\",\"OAID\",\"__data__\",\"createWebChannel\",\"createWebChannelTransport\",\"webchannel_blob_es2018\",\"getStatEventTarget\",\"Event\",\"Stat\",\"PROXY\",\"NOPROXY\",\"HTTP_ERROR\",\"ErrorCode\",\"COMPLETE\",\"EventType\",\"CLOSE\",\"MESSAGE\",\"WebChannel\",\"FetchXmlHttpFactory\",\"listenOnce\",\"getLastError\",\"getLastErrorCode\",\"getStatus\",\"getResponseJson\",\"getResponseText\",\"setWithCredentials\",\"XhrIo\",\"User\",\"isAuthenticated\",\"toKey\",\"isEqual\",\"UNAUTHENTICATED\",\"GOOGLE_CREDENTIALS\",\"FIRST_PARTY\",\"MOCK_USER\",\"__PRIVATE_getLogLevel\",\"__PRIVATE_logDebug\",\"__PRIVATE_argToString\",\"__PRIVATE_logError\",\"__PRIVATE_logWarn\",\"fail\",\"__PRIVATE_hardAssert\",\"__PRIVATE_debugCast\",\"OK\",\"CANCELLED\",\"UNKNOWN\",\"INVALID_ARGUMENT\",\"DEADLINE_EXCEEDED\",\"NOT_FOUND\",\"ALREADY_EXISTS\",\"PERMISSION_DENIED\",\"RESOURCE_EXHAUSTED\",\"FAILED_PRECONDITION\",\"ABORTED\",\"OUT_OF_RANGE\",\"UNIMPLEMENTED\",\"UNAVAILABLE\",\"DATA_LOSS\",\"FirestoreError\",\"__PRIVATE_Deferred\",\"__PRIVATE_OAuthToken\",\"__PRIVATE_EmptyAuthCredentialsProvider\",\"invalidateToken\",\"enqueueRetryable\",\"shutdown\",\"__PRIVATE_EmulatorAuthCredentialsProvider\",\"changeListener\",\"__PRIVATE_FirebaseAuthCredentialsProvider\",\"__PRIVATE_guardedChangeListener\",\"__PRIVATE_awaitNextToken\",\"__PRIVATE_registerAuth\",\"__PRIVATE_FirstPartyToken\",\"__PRIVATE_FirstPartyAuthCredentialsProvider\",\"AppCheckToken\",\"__PRIVATE_FirebaseAppCheckTokenProvider\",\"appCheck\",\"onTokenChanged\",\"__PRIVATE_registerAppCheck\",\"addTokenListener\",\"removeTokenListener\",\"__PRIVATE_primitiveComparator\",\"__PRIVATE_arrayEquals\",\"Timestamp\",\"fromMillis\",\"fromDate\",\"nanoseconds\",\"toDate\",\"toMillis\",\"_compareTo\",\"padStart\",\"SnapshotVersion\",\"fromTimestamp\",\"timestamp\",\"compareTo\",\"toMicroseconds\",\"toTimestamp\",\"BasePath\",\"comparator\",\"limit\",\"popFirst\",\"popLast\",\"firstSegment\",\"lastSegment\",\"isPrefixOf\",\"isImmediateParentOf\",\"ResourcePath\",\"canonicalString\",\"toUriEncodedString\",\"emptyPath\",\"FieldPath$1\",\"isValidIdentifier\",\"isKeyField\",\"keyField\",\"fromServerFormat\",\"__PRIVATE_addCurrentSegment\",\"DocumentKey\",\"fromPath\",\"fromName\",\"empty\",\"collectionGroup\",\"hasCollectionId\",\"getCollectionGroup\",\"getCollectionPath\",\"isDocumentKey\",\"fromSegments\",\"FieldIndex\",\"indexId\",\"fields\",\"indexState\",\"UNKNOWN_ID\",\"__PRIVATE_newIndexOffsetSuccessorFromReadTime\",\"IndexOffset\",\"__PRIVATE_newIndexOffsetFromDocument\",\"readTime\",\"documentKey\",\"largestBatchId\",\"__PRIVATE_indexOffsetComparator\",\"PersistenceTransaction\",\"onCommittedListeners\",\"addOnCommittedListener\",\"raiseOnCommittedEvent\",\"PersistencePromise\",\"nextCallback\",\"catchCallback\",\"isDone\",\"callbackAttached\",\"wrapFailure\",\"wrapSuccess\",\"wrapUserFunction\",\"waitFor\",\"mapArray\",\"doWhile\",\"__PRIVATE_getAndroidVersion\",\"__PRIVATE_isIndexedDbTransactionError\",\"__PRIVATE_ListenSequence\",\"previousValue\",\"sequenceNumberHandler\",\"ie\",\"se\",\"writeSequenceNumber\",\"__PRIVATE_isNullOrUndefined\",\"__PRIVATE_isNegativeZero\",\"oe\",\"__PRIVATE_objectSize\",\"SortedMap\",\"LLRBNode\",\"EMPTY\",\"BLACK\",\"minKey\",\"maxKey\",\"inorderTraversal\",\"reverseTraversal\",\"getIterator\",\"SortedMapIterator\",\"getIteratorFrom\",\"getReverseIterator\",\"getReverseIteratorFrom\",\"isReverse\",\"nodeStack\",\"getNext\",\"hasNext\",\"RED\",\"fixUp\",\"removeMin\",\"isRed\",\"moveRedLeft\",\"rotateRight\",\"moveRedRight\",\"rotateLeft\",\"colorFlip\",\"checkMaxDepth\",\"SortedSet\",\"forEachInRange\",\"forEachWhile\",\"firstAfterOrEqual\",\"SortedSetIterator\",\"unionWith\",\"iter\",\"FieldMask\",\"covers\",\"__PRIVATE_Base64DecodeError\",\"ByteString\",\"binaryString\",\"fromBase64String\",\"fromUint8Array\",\"toBase64\",\"toUint8Array\",\"approximateByteSize\",\"EMPTY_BYTE_STRING\",\"ne\",\"__PRIVATE_normalizeTimestamp\",\"nanos\",\"__PRIVATE_normalizeNumber\",\"__PRIVATE_normalizeByteString\",\"__PRIVATE_isServerTimestamp\",\"mapValue\",\"__type__\",\"stringValue\",\"__PRIVATE_getPreviousValue\",\"__previous_value__\",\"__PRIVATE_getLocalWriteTime\",\"__local_write_time__\",\"timestampValue\",\"DatabaseId\",\"database\",\"isDefaultDatabase\",\"__PRIVATE_typeOrder\",\"__PRIVATE_isMaxValue\",\"__PRIVATE_isVectorValue\",\"__PRIVATE_valueEquals\",\"booleanValue\",\"bytesValue\",\"referenceValue\",\"geoPointValue\",\"latitude\",\"longitude\",\"integerValue\",\"doubleValue\",\"arrayValue\",\"__PRIVATE_arrayValueContains\",\"__PRIVATE_valueCompare\",\"__PRIVATE_compareTimestamps\",\"__PRIVATE_compareArrays\",\"canonicalId\",\"__PRIVATE_canonifyValue\",\"isInteger\",\"__PRIVATE_isMapValue\",\"__PRIVATE_deepClone\",\"ObjectValue\",\"getFieldsMap\",\"setAll\",\"applyChanges\",\"MutableDocument\",\"documentType\",\"createTime\",\"documentState\",\"newInvalidDocument\",\"newFoundDocument\",\"newNoDocument\",\"newUnknownDocument\",\"convertToFoundDocument\",\"convertToNoDocument\",\"convertToUnknownDocument\",\"setHasCommittedMutations\",\"setHasLocalMutations\",\"setReadTime\",\"hasLocalMutations\",\"hasCommittedMutations\",\"hasPendingWrites\",\"isValidDocument\",\"isFoundDocument\",\"isNoDocument\",\"isUnknownDocument\",\"mutableCopy\",\"Bound\",\"inclusive\",\"__PRIVATE_boundCompareToDocument\",\"__PRIVATE_boundEquals\",\"OrderBy\",\"__PRIVATE_orderByEquals\",\"Filter\",\"FieldFilter\",\"createKeyFieldInFilter\",\"__PRIVATE_KeyFieldFilter\",\"__PRIVATE_ArrayContainsFilter\",\"__PRIVATE_InFilter\",\"__PRIVATE_NotInFilter\",\"__PRIVATE_ArrayContainsAnyFilter\",\"__PRIVATE_KeyFieldInFilter\",\"__PRIVATE_KeyFieldNotInFilter\",\"matchesComparison\",\"isInequality\",\"getFlattenedFilters\",\"getFilters\",\"CompositeFilter\",\"filters\",\"ae\",\"__PRIVATE_compositeFilterIsConjunction\",\"__PRIVATE_compositeFilterIsFlatConjunction\",\"__PRIVATE_compositeFilterIsFlat\",\"__PRIVATE_canonifyFilter\",\"__PRIVATE_filterEquals\",\"__PRIVATE_stringifyFilter\",\"__PRIVATE_extractDocumentKeysFromArrayValue\",\"nullValue\",\"__PRIVATE_TargetImpl\",\"orderBy\",\"startAt\",\"endAt\",\"ue\",\"__PRIVATE_newTarget\",\"__PRIVATE_canonifyTarget\",\"__PRIVATE_targetEquals\",\"__PRIVATE_QueryImpl\",\"explicitOrderBy\",\"limitType\",\"ce\",\"le\",\"he\",\"__PRIVATE_newQuery\",\"__PRIVATE_queryMatchesAllDocuments\",\"__PRIVATE_isCollectionGroupQuery\",\"__PRIVATE_queryNormalizedOrderBy\",\"__PRIVATE_queryToTarget\",\"__PRIVATE__queryToTarget\",\"__PRIVATE_queryWithLimit\",\"__PRIVATE_queryEquals\",\"__PRIVATE_canonifyQuery\",\"__PRIVATE_stringifyQuery\",\"__PRIVATE_queryMatches\",\"__PRIVATE_newQueryComparator\",\"__PRIVATE_compareDocs\",\"ObjectMap\",\"mapKeyFn\",\"equalsFn\",\"inner\",\"innerSize\",\"__PRIVATE_mutableDocumentMap\",\"documentMap\",\"__PRIVATE_convertOverlayedDocumentMapToDocumentMap\",\"overlayedDocument\",\"__PRIVATE_newOverlayMap\",\"__PRIVATE_newDocumentKeyMap\",\"__PRIVATE_newMutationMap\",\"__PRIVATE_documentKeySet\",\"__PRIVATE_targetIdSet\",\"__PRIVATE_toDouble\",\"useProto3Json\",\"__PRIVATE_toInteger\",\"TransformOperation\",\"__PRIVATE_applyTransformOperationToLocalView\",\"__PRIVATE_ServerTimestampTransform\",\"__PRIVATE_ArrayUnionTransformOperation\",\"__PRIVATE_applyArrayUnionTransformOperation\",\"__PRIVATE_ArrayRemoveTransformOperation\",\"__PRIVATE_applyArrayRemoveTransformOperation\",\"__PRIVATE_computeTransformOperationBaseValue\",\"asNumber\",\"Pe\",\"__PRIVATE_applyTransformOperationToRemoteDocument\",\"__PRIVATE_NumericIncrementTransformOperation\",\"__PRIVATE_coercedFieldValuesArray\",\"Precondition\",\"updateTime\",\"exists\",\"none\",\"isNone\",\"__PRIVATE_preconditionIsValidForDocument\",\"Mutation\",\"__PRIVATE_calculateOverlayMutation\",\"__PRIVATE_DeleteMutation\",\"__PRIVATE_SetMutation\",\"__PRIVATE_PatchMutation\",\"__PRIVATE_mutationApplyToRemoteDocument\",\"__PRIVATE_serverTransformResults\",\"fieldTransforms\",\"transformResults\",\"precondition\",\"__PRIVATE_getPatch\",\"__PRIVATE_mutationApplyToLocalView\",\"__PRIVATE_localTransformResults\",\"fieldMask\",\"__PRIVATE_mutationEquals\",\"__PRIVATE_fieldTransformEquals\",\"getFieldMask\",\"MutationBatch\",\"batchId\",\"localWriteTime\",\"baseMutations\",\"mutations\",\"applyToRemoteDocument\",\"mutationResults\",\"applyToLocalView\",\"applyToLocalDocumentSet\",\"mutatedFields\",\"Overlay\",\"mutation\",\"__PRIVATE_mapCodeFromRpcCode\",\"JsonProtoSerializer\",\"databaseId\",\"__PRIVATE_fromVersion\",\"__PRIVATE_toResourcePath\",\"__PRIVATE_fromResourceName\",\"__PRIVATE_isValidResourceName\",\"__PRIVATE_fromQueryPath\",\"__PRIVATE_extractLocalPathFromResourceName\",\"__PRIVATE_convertQueryTargetToQuery\",\"structuredQuery\",\"allDescendants\",\"collectionId\",\"__PRIVATE_fromFilter\",\"__PRIVATE_fromFieldPathReference\",\"unaryFilter\",\"NaN\",\"fieldFilter\",\"compositeFilter\",\"fieldPath\",\"__PRIVATE_LocalSerializer\",\"ht\",\"__PRIVATE_fromBundledQuery\",\"__PRIVATE_FirestoreIndexValueWriter\",\"Et\",\"dt\",\"At\",\"Rt\",\"Vt\",\"ft\",\"gt\",\"yt\",\"wt\",\"St\",\"bt\",\"Dt\",\"vt\",\"Ct\",\"__PRIVATE_MemoryIndexManager\",\"__PRIVATE_MemoryCollectionParentIndex\",\"addToCollectionParentIndex\",\"ln\",\"getCollectionParents\",\"getEntries\",\"addFieldIndex\",\"deleteFieldIndex\",\"deleteAllFieldIndexes\",\"createTargetIndexes\",\"getDocumentsMatchingTarget\",\"getIndexType\",\"getFieldIndexes\",\"getNextCollectionGroupToUpdate\",\"getMinOffset\",\"getMinOffsetFromCollectionGroup\",\"updateCollectionGroup\",\"updateIndexEntries\",\"LruParams\",\"withCacheSize\",\"DEFAULT_COLLECTION_PERCENTILE\",\"DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\",\"cacheSizeCollectionThreshold\",\"percentileToCollect\",\"maximumSequenceNumbersToCollect\",\"DEFAULT\",\"DISABLED\",\"__PRIVATE_TargetIdGenerator\",\"kn\",\"qn\",\"Qn\",\"RemoteDocumentChangeBuffer\",\"changes\",\"changesApplied\",\"addEntry\",\"assertNotApplied\",\"removeEntry\",\"getEntry\",\"getFromCache\",\"getAllFromCache\",\"OverlayedDocument\",\"LocalDocumentsView\",\"remoteDocumentCache\",\"mutationQueue\",\"documentOverlayCache\",\"indexManager\",\"getDocument\",\"getOverlay\",\"getDocuments\",\"getLocalViewOfDocuments\",\"populateOverlays\",\"computeViews\",\"getOverlayedDocuments\",\"recalculateAndSaveOverlays\",\"getAllMutationBatchesAffectingDocumentKeys\",\"saveOverlays\",\"recalculateAndSaveOverlaysForDocumentKeys\",\"getDocumentsMatchingQuery\",\"getDocumentsMatchingDocumentQuery\",\"getDocumentsMatchingCollectionGroupQuery\",\"getDocumentsMatchingCollectionQuery\",\"getNextDocuments\",\"getAllFromCollectionGroup\",\"getOverlaysForCollectionGroup\",\"getOverlaysForCollection\",\"__PRIVATE_MemoryBundleCache\",\"Tr\",\"Ir\",\"getBundleMetadata\",\"saveBundleMetadata\",\"getNamedQuery\",\"saveNamedQuery\",\"bundledQuery\",\"__PRIVATE_MemoryDocumentOverlayCache\",\"Er\",\"Tt\",\"removeOverlaysForBatchId\",\"__PRIVATE_MemoryGlobalsCache\",\"sessionToken\",\"getSessionToken\",\"setSessionToken\",\"__PRIVATE_ReferenceSet\",\"dr\",\"__PRIVATE_DocReference\",\"Ar\",\"Rr\",\"Vr\",\"addReference\",\"removeReference\",\"gr\",\"yr\",\"wr\",\"Sr\",\"containsKey\",\"br\",\"__PRIVATE_MemoryMutationQueue\",\"referenceDelegate\",\"Dr\",\"vr\",\"checkEmpty\",\"addMutationBatch\",\"lookupMutationBatch\",\"Cr\",\"getNextMutationBatchAfterBatchId\",\"Fr\",\"getHighestUnacknowledgedBatchId\",\"getAllMutationBatches\",\"getAllMutationBatchesAffectingDocumentKey\",\"POSITIVE_INFINITY\",\"Mr\",\"getAllMutationBatchesAffectingQuery\",\"removeMutationBatch\",\"Or\",\"markPotentiallyOrphaned\",\"Ln\",\"performConsistencyCheck\",\"__PRIVATE_MemoryRemoteDocumentCacheImpl\",\"Nr\",\"docs\",\"setIndexManager\",\"Lr\",\"newChangeBuffer\",\"__PRIVATE_MemoryRemoteDocumentChangeBuffer\",\"getSize\",\"hr\",\"__PRIVATE_MemoryTargetCache\",\"Br\",\"lastRemoteSnapshotVersion\",\"highestTargetId\",\"kr\",\"qr\",\"targetCount\",\"Qr\",\"forEachTarget\",\"getLastRemoteSnapshotVersion\",\"getHighestSequenceNumber\",\"allocateTargetId\",\"setTargetsMetadata\",\"Un\",\"targetId\",\"sequenceNumber\",\"addTargetData\",\"updateTargetData\",\"removeTargetData\",\"removeTargets\",\"removeMatchingKeysForTargetId\",\"getTargetCount\",\"getTargetData\",\"addMatchingKeys\",\"removeMatchingKeys\",\"getMatchingKeysForTargetId\",\"__PRIVATE_MemoryPersistence\",\"Kr\",\"$r\",\"Ur\",\"Wr\",\"Gr\",\"zr\",\"jr\",\"started\",\"setDatabaseDeletedListener\",\"setNetworkEnabled\",\"getIndexManager\",\"getDocumentOverlayCache\",\"getMutationQueue\",\"getGlobalsCache\",\"getTargetCache\",\"getRemoteDocumentCache\",\"getBundleCache\",\"runTransaction\",\"__PRIVATE_MemoryTransaction\",\"Hr\",\"Jr\",\"Yr\",\"currentSequenceNumber\",\"__PRIVATE_MemoryEagerDelegate\",\"Xr\",\"ei\",\"ti\",\"Zr\",\"removeTarget\",\"ni\",\"updateLimboDocument\",\"__PRIVATE_LocalViewChanges\",\"fromCache\",\"Wi\",\"Gi\",\"zi\",\"docChanges\",\"QueryContext\",\"_documentReadCount\",\"documentReadCount\",\"incrementDocumentReadCount\",\"__PRIVATE_QueryEngine\",\"ji\",\"Hi\",\"Ji\",\"Yi\",\"Zi\",\"Xi\",\"es\",\"ts\",\"rs\",\"ss\",\"os\",\"__PRIVATE_LocalStoreImpl\",\"_s\",\"us\",\"cs\",\"ls\",\"hs\",\"Ps\",\"localDocuments\",\"collectGarbage\",\"collect\",\"__PRIVATE_newLocalStore\",\"__PRIVATE_localStoreHandleUserChange\",\"Ts\",\"removedBatchIds\",\"addedBatchIds\",\"__PRIVATE_LocalClientState\",\"activeTargetIds\",\"ps\",\"ys\",\"gs\",\"updateTimeMs\",\"__PRIVATE_MemorySharedClientState\",\"_o\",\"ao\",\"onlineStateHandler\",\"addPendingMutation\",\"updateMutationState\",\"addLocalQueryTarget\",\"updateQueryState\",\"removeLocalQueryTarget\",\"isLocalQueryTarget\",\"clearQueryState\",\"getAllActiveQueryTargets\",\"isActiveQueryTarget\",\"handleUserChange\",\"setOnlineState\",\"notifyBundleLoaded\",\"__PRIVATE_NoopConnectivityMonitor\",\"uo\",\"__PRIVATE_BrowserConnectivityMonitor\",\"co\",\"lo\",\"ho\",\"Po\",\"To\",\"Io\",\"me\",\"__PRIVATE_generateUniqueDebugId\",\"fe\",\"BatchGetDocuments\",\"Commit\",\"RunQuery\",\"RunAggregationQuery\",\"__PRIVATE_StreamBridge\",\"Eo\",\"Ao\",\"Ro\",\"Vo\",\"mo\",\"fo\",\"po\",\"yo\",\"wo\",\"So\",\"bo\",\"Do\",\"vo\",\"ge\",\"__PRIVATE_WebChannelConnection\",\"Co\",\"databaseInfo\",\"ssl\",\"Fo\",\"Mo\",\"xo\",\"Oo\",\"No\",\"Lo\",\"Bo\",\"ko\",\"terminate\",\"autoDetectLongPolling\",\"longPollingOptions\",\"qo\",\"forwardChannelRequestTimeoutMs\",\"timeoutSeconds\",\"__PRIVATE_closeFn\",\"__PRIVATE_unguardedEventListen\",\"__PRIVATE_newSerializer\",\"__PRIVATE_ExponentialBackoff\",\"li\",\"Qo\",\"Ko\",\"$o\",\"Uo\",\"Wo\",\"Go\",\"zo\",\"jo\",\"Ho\",\"enqueueAfterDelay\",\"Jo\",\"skipDelay\",\"__PRIVATE_DatastoreImpl\",\"authCredentials\",\"appCheckCredentials\",\"connection\",\"S_\",\"b_\",\"_ref11\",\"__PRIVATE_OnlineStateTracker\",\"asyncQueue\",\"D_\",\"v_\",\"C_\",\"F_\",\"M_\",\"x_\",\"O_\",\"N_\",\"__PRIVATE_RemoteStoreImpl\",\"localStore\",\"datastore\",\"remoteSyncer\",\"L_\",\"q_\",\"Q_\",\"enqueueAndForget\",\"__PRIVATE_canUseNetwork\",\"k_\",\"__PRIVATE_disableNetworkInternal\",\"K_\",\"__PRIVATE_enableNetworkInternal\",\"__PRIVATE_remoteStoreApplyPrimaryState\",\"DelayedOperation\",\"targetTimeMs\",\"removalCallback\",\"createAndSchedule\",\"timerHandle\",\"handleDelayElapsed\",\"__PRIVATE_EventManagerImpl\",\"queries\",\"__PRIVATE_newQueriesObjectMap\",\"onlineState\",\"J_\",\"__PRIVATE_raiseSnapshotsInSyncEvent\",\"X_\",\"pe\",\"ye\",\"Cache\",\"__PRIVATE_SyncEngineImpl\",\"remoteStore\",\"sharedClientState\",\"maxConcurrentLimboResolutions\",\"isPrimaryClient\",\"__PRIVATE_syncEngineApplyOnlineStateChange\",\"snapshot\",\"R_\",\"__PRIVATE_syncEngineEmitNewSnapsAndNotifyLocalStore\",\"targetChanges\",\"snapshotVersion\",\"withLastLimboFreeSnapshotVersion\",\"__PRIVATE_syncEngineHandleCredentialChange\",\"__PRIVATE_MemoryOfflineComponentProvider\",\"kind\",\"synchronizeTabs\",\"gcScheduler\",\"indexBackfillerScheduler\",\"initialUser\",\"stop\",\"build\",\"OnlineComponentProvider\",\"createDatastore\",\"createRemoteStore\",\"createEventManager\",\"syncEngine\",\"createSyncEngine\",\"handleCredentialChange\",\"__PRIVATE_cloneLongPollingOptions\",\"we\",\"__PRIVATE_valueDescription\",\"__PRIVATE_cast\",\"FirestoreSettingsImpl\",\"ignoreUndefinedProperties\",\"cacheSizeBytes\",\"__PRIVATE_validateIsNotUsedTogether\",\"experimentalForceLongPolling\",\"experimentalAutoDetectLongPolling\",\"experimentalLongPollingOptions\",\"Firestore$1\",\"_authCredentials\",\"_appCheckCredentials\",\"_databaseId\",\"_app\",\"_persistenceKey\",\"_settings\",\"_settingsFrozen\",\"_terminateTask\",\"_initialized\",\"_terminated\",\"_setSettings\",\"sessionIndex\",\"iamToken\",\"authTokenFactory\",\"client\",\"_getSettings\",\"_freezeSettings\",\"_terminate\",\"_restart\",\"__PRIVATE_AsyncQueueImpl\",\"Iu\",\"Eu\",\"du\",\"Au\",\"Ru\",\"Vu\",\"mu\",\"r_\",\"fu\",\"visibilityState\",\"gu\",\"isShuttingDown\",\"enqueue\",\"enqueueAndForgetEvenWhileRestricted\",\"pu\",\"yu\",\"enterRestrictedMode\",\"wu\",\"Su\",\"verifyOperationInProgress\",\"bu\",\"Du\",\"vu\",\"Cu\",\"Firestore\",\"_queue\",\"_firestoreClient\",\"DEFAULT_HOST\",\"CONFIG_STORAGE_BUCKET_KEY\",\"StorageError\",\"status_\",\"prependCode\",\"_baseMessage\",\"_codeEquals\",\"StorageErrorCode\",\"unknown\",\"retryLimitExceeded\",\"RETRY_LIMIT_EXCEEDED\",\"canceled\",\"CANCELED\",\"invalidArgument\",\"appDeleted\",\"APP_DELETED\",\"Location\",\"bucket\",\"path_\",\"isRoot\",\"fullServerUrl\",\"bucketOnlyServerUrl\",\"makeFromBucketSpec\",\"bucketString\",\"bucketLocation\",\"makeFromUrl\",\"INVALID_DEFAULT_BUCKET\",\"bucketDomain\",\"gsRegex\",\"httpModify\",\"loc\",\"firebaseStorageHost\",\"groups\",\"indices\",\"postModify\",\"group\",\"captures\",\"bucketValue\",\"pathValue\",\"INVALID_URL\",\"invalidUrl\",\"FailRequest\",\"promise_\",\"getPromise\",\"validateNumber\",\"minValue\",\"maxValue\",\"makeQueryString\",\"queryPart\",\"isRetryStatusCode\",\"additionalRetryCodes\",\"isFiveHundredCode\",\"isExtraRetryCode\",\"isAdditionalRetryCode\",\"NetworkRequest\",\"url_\",\"method_\",\"headers_\",\"body_\",\"successCodes_\",\"additionalRetryCodes_\",\"callback_\",\"errorCallback_\",\"timeout_\",\"progressCallback_\",\"connectionFactory_\",\"pendingConnection_\",\"backoffId_\",\"canceled_\",\"appDelete_\",\"resolve_\",\"reject_\",\"start_\",\"doTheRequest\",\"backoffCallback\",\"RequestEndStatus\",\"progressListener\",\"progressEvent\",\"loaded\",\"total\",\"lengthComputable\",\"addUploadProgressListener\",\"removeUploadProgressListener\",\"hitServer\",\"getErrorCode\",\"wasCanceled\",\"ABORT\",\"successCode\",\"backoffDone\",\"requestWentThrough\",\"wasSuccessCode\",\"getResponse\",\"isJustDef\",\"getErrorText\",\"doRequest\",\"backoffCompleteCb\",\"waitSeconds\",\"retryTimeoutId\",\"globalTimeoutId\",\"hitTimeout\",\"cancelState\",\"triggeredCallback\",\"triggerCallback\",\"callWithDelay\",\"millis\",\"responseHandler\",\"clearGlobalTimeout\",\"waitMillis\",\"stopped\",\"wasTimeout\",\"appDelete\",\"lastComponent\",\"Reference\",\"_service\",\"_location\",\"_newRef\",\"fullPath\",\"newPath\",\"_throwIfRoot\",\"INVALID_ROOT_OPERATION\",\"invalidRootOperation\",\"extractBucket\",\"FirebaseStorageImpl\",\"_authProvider\",\"_appCheckProvider\",\"_url\",\"_firebaseVersion\",\"_bucket\",\"_host\",\"_protocol\",\"_appId\",\"_maxOperationRetryTime\",\"_maxUploadRetryTime\",\"_requests\",\"maxUploadRetryTime\",\"maxOperationRetryTime\",\"_getAuthToken\",\"_overrideAuthToken\",\"tokenData\",\"_makeStorageReference\",\"_makeRequest\",\"requestInfo\",\"requestFactory\",\"firebaseVersion\",\"urlParams\",\"addGmpidHeader_\",\"addAuthHeader_\",\"addVersionHeader_\",\"addAppCheckHeader_\",\"successCodes\",\"errorHandler\",\"progressCallback\",\"makeRequest\",\"makeRequestWithTokens\",\"STORAGE_TYPE\",\"authProvider\",\"appCheckProvider\",\"storageBucket\",\"messagingSenderId\",\"initializeAuth\",\"authTokenSyncPath\",\"isSecureContext\",\"authTokenSyncUrl\",\"mintCookie\",\"idTokenResult\",\"idTokenAge\",\"authEmulatorHost\",\"getAuth\",\"AuthContext\",\"mockUserToken\",\"connectFirestoreEmulator\",\"getFirestore\",\"bucketUrl\",\"storageInstance\",\"connectStorageEmulator$1\",\"connectStorageEmulator\",\"getStorage\",\"analyticsProvider\",\"initializeAnalytics\",\"getAnalytics\",\"useAuth\",\"AuthProvider\",\"setLoading\",\"signup\",\"signUpResponse\",\"createUserWithEmailAndPassword\",\"login\",\"signInWithEmailAndPassword\",\"loginWithGoogle\",\"resolverInternal\",\"signInWithPopup\",\"logout\",\"resetPassword\",\"requestType\",\"sendPasswordResetEmail\",\"composeClasses\",\"slots\",\"getUtilityClass\",\"classes\",\"slotName\",\"slot\",\"buffer\",\"reactPropsRegex\",\"testOmitPropsOnStringTag\",\"testOmitPropsOnComponent\",\"getDefaultShouldForwardProp\",\"composeShouldForwardProps\",\"isReal\",\"shouldForwardProp\",\"optionsShouldForwardProp\",\"__emotion_forwardProp\",\"newStyled\",\"createStyled\",\"targetClassName\",\"__emotion_real\",\"baseTag\",\"__emotion_base\",\"label\",\"defaultShouldForwardProp\",\"shouldUseAs\",\"templateStringsArr\",\"Styled\",\"FinalTag\",\"classInterpolations\",\"finalShouldForwardProp\",\"withComponent\",\"nextTag\",\"nextOptions\",\"_extends\",\"styled\",\"emStyled\",\"wrapper\",\"internal_serializeStyles\",\"emSerializeStyles\",\"preprocessStyles\",\"isProcessed\",\"systemDefaultTheme\",\"defaultOverridesResolver\",\"processStyle\",\"resolvedStyle\",\"flatMap\",\"subStyle\",\"rootStyle\",\"processStyleVariants\",\"mergedState\",\"variantLoop\",\"_mergedState\",\"_mergedState2\",\"ownerState\",\"_props$ownerState\",\"rootShouldForwardProp\",\"slotShouldForwardProp\",\"styleAttachTheme\",\"isObjectEmpty\",\"attachTheme\",\"inputOptions\",\"processor\",\"mutateStyles\",\"componentSlot\",\"skipVariantsResolver\",\"inputSkipVariantsResolver\",\"skipSx\",\"inputSkipSx\",\"overridesResolver\",\"lowercaseFirstLetter\",\"shouldForwardPropOption\",\"defaultStyledResolver\",\"styledEngineStyled\",\"generateStyledLabel\",\"transformStyle\",\"muiStyledResolver\",\"expressionsHead\",\"expressionsInput\",\"expressionsBody\",\"expressionsTail\",\"_theme$components\",\"resolvedStyleOverrides\",\"_theme$components2\",\"themeVariants\",\"inputStrings\",\"placeholdersHead\",\"fill\",\"placeholdersTail\",\"outputStrings\",\"expressions\",\"muiName\",\"withConfig\",\"styleFn\",\"lastTheme\",\"useSystemDefaultProps\",\"defaultGenerator\",\"createClassNameGenerator\",\"generate\",\"configure\",\"generator\",\"globalStateClasses\",\"expanded\",\"focused\",\"focusVisible\",\"readOnly\",\"generateUtilityClass\",\"globalStateClass\",\"ClassNameGenerator\",\"generateUtilityClasses\",\"globalStatePrefix\",\"getSvgIconUtilityClass\",\"SvgIconRoot\",\"_theme$transitions\",\"_theme$transitions$cr\",\"_theme$vars\",\"_theme$typography\",\"_theme$typography$pxT\",\"_theme$typography2\",\"_theme$typography2$px\",\"_theme$typography3\",\"_theme$typography3$px\",\"_theme$vars2\",\"_palette2\",\"_theme$vars4\",\"_palette3\",\"_theme$vars5\",\"userSelect\",\"hasSvgAsChild\",\"_palette\",\"_theme$vars3\",\"SvgIcon\",\"inProps\",\"htmlColor\",\"inheritViewBox\",\"titleAccess\",\"viewBox\",\"instanceFontSize\",\"more\",\"useUtilityClasses\",\"clsx\",\"focusable\",\"role\",\"createSvgIcon\",\"useThemeProps\",\"defaultCreateStyledComponent\",\"systemStyled\",\"fixed\",\"disableGutters\",\"useThemePropsDefault\",\"useThemePropsSystem\",\"Container\",\"createStyledComponent\",\"ContainerRoot\",\"breakpointValueKey\",\"classesProp\",\"createContainer\",\"extendSxProp\",\"inSx\",\"systemProps\",\"_props$theme$unstable\",\"splitProps\",\"finalSx\",\"Box\",\"defaultClassName\",\"generateClassName\",\"BoxRoot\",\"_extendSxProp\",\"createBox\",\"boxClasses\",\"MuiGlobalStyles\",\"SystemGlobalStyles\",\"globalCss\",\"createSimplePaletteValueFilter\",\"additionalPropertiesToCheck\",\"hasCorrectMainProperty\",\"checkSimplePaletteColorValues\",\"getTypographyUtilityClass\",\"v6Colors\",\"textPrimary\",\"textSecondary\",\"textDisabled\",\"TypographyRoot\",\"align\",\"noWrap\",\"gutterBottom\",\"paragraph\",\"_theme$palette\",\"_ref8\",\"defaultVariantMapping\",\"Typography\",\"_useDefaultProps\",\"themeProps\",\"isSxColor\",\"variantMapping\",\"setRef\",\"useForkRef\",\"isHostComponent\",\"componentProps\",\"slotState\",\"excludeKeys\",\"parameters\",\"getSlotProps\",\"additionalProps\",\"externalSlotProps\",\"externalForwardedProps\",\"joinedClasses\",\"mergedStyle\",\"internalRef\",\"eventHandlers\",\"extractEventHandlers\",\"componentsPropsWithoutEventHandlers\",\"omitEventHandlers\",\"otherPropsWithoutEventHandlers\",\"internalSlotProps\",\"_excluded3\",\"useSlot\",\"initialElementType\",\"internalForwardedProps\",\"useSlotPropsParams\",\"rootComponent\",\"resolvedComponentsProps\",\"resolveComponentProps\",\"_mergeSlotProps\",\"mergeSlotProps\",\"slotComponent\",\"LeafComponent\",\"appendOwnerState\",\"useThemeSystem\",\"getPaperUtilityClass\",\"PaperRoot\",\"square\",\"rounded\",\"backgroundImage\",\"Paper\",\"_theme$vars$overlays\",\"getAlertUtilityClass\",\"isFocusVisible\",\"useEnhancedEffect\",\"UNINITIALIZED\",\"useLazyRef\",\"initArg\",\"LazyRipple\",\"ripple\",\"shouldMount\",\"setShouldMount\",\"didMount\",\"mounted\",\"mount\",\"resolveFn\",\"rejectFn\",\"createControlledPromise\",\"_this$ref$current\",\"_this$ref$current2\",\"pulsate\",\"_this$ref$current3\",\"_taggedTemplateLiteral\",\"_setPrototypeOf\",\"__proto__\",\"_inheritsLoose\",\"getChildMapping\",\"mapFn\",\"mapper\",\"getProp\",\"getNextChildMapping\",\"prevChildMapping\",\"onExited\",\"nextChildMapping\",\"getValueForKey\",\"nextKeysPending\",\"pendingKeys\",\"prevKey\",\"childMapping\",\"nextKey\",\"pendingNextKey\",\"mergeChildMappings\",\"hasPrev\",\"prevChild\",\"isLeaving\",\"in\",\"exit\",\"enter\",\"TransitionGroup\",\"_React$Component\",\"handleExited\",\"ReferenceError\",\"_assertThisInitialized\",\"isMounting\",\"firstRender\",\"appear\",\"currentChildMapping\",\"_this$props\",\"childFactory\",\"TransitionGroupContext\",\"Timeout\",\"currentId\",\"useTimeout\",\"disposeEffect\",\"rippleX\",\"rippleY\",\"rippleSize\",\"inProp\",\"leaving\",\"setLeaving\",\"rippleClassName\",\"rippleVisible\",\"ripplePulsate\",\"rippleStyles\",\"childClassName\",\"childLeaving\",\"childPulsate\",\"timeoutId\",\"_templateObject\",\"_templateObject2\",\"_templateObject3\",\"_templateObject4\",\"enterKeyframe\",\"exitKeyframe\",\"pulsateKeyframe\",\"TouchRippleRoot\",\"pointerEvents\",\"TouchRippleRipple\",\"Ripple\",\"touchRippleClasses\",\"TouchRipple\",\"center\",\"centerProp\",\"ripples\",\"setRipples\",\"rippleCallback\",\"ignoringMouseDown\",\"startTimer\",\"startTimerCommit\",\"startCommit\",\"oldRipples\",\"fakeElement\",\"rect\",\"getBoundingClientRect\",\"sqrt\",\"sizeX\",\"clientWidth\",\"sizeY\",\"clientHeight\",\"getButtonBaseUtilityClass\",\"ButtonBaseRoot\",\"WebkitTapHighlightColor\",\"verticalAlign\",\"MozAppearance\",\"WebkitAppearance\",\"textDecoration\",\"borderStyle\",\"buttonBaseClasses\",\"colorAdjust\",\"ButtonBase\",\"centerRipple\",\"disableRipple\",\"disableTouchRipple\",\"focusRipple\",\"focusVisibleClassName\",\"LinkComponent\",\"onContextMenu\",\"onDragLeave\",\"onFocusVisible\",\"onKeyDown\",\"onKeyUp\",\"onMouseDown\",\"onMouseUp\",\"onTouchEnd\",\"onTouchMove\",\"tabIndex\",\"TouchRippleProps\",\"touchRippleRef\",\"buttonRef\",\"handleRippleRef\",\"setFocusVisible\",\"enableTouchRipple\",\"handleMouseDown\",\"useRippleHandler\",\"handleContextMenu\",\"handleDragLeave\",\"handleMouseUp\",\"handleMouseLeave\",\"handleTouchStart\",\"handleTouchEnd\",\"handleTouchMove\",\"handleBlur\",\"handleFocus\",\"useEventCallback\",\"isNonNativeButton\",\"handleKeyDown\",\"handleKeyUp\",\"ComponentProp\",\"buttonProps\",\"handleRef\",\"composedClasses\",\"rippleAction\",\"eventCallback\",\"skipRippleAction\",\"getIconButtonUtilityClass\",\"IconButtonRoot\",\"edge\",\"activeChannel\",\"mainChannel\",\"iconButtonClasses\",\"IconButton\",\"disableFocusRipple\",\"AlertRoot\",\"severity\",\"getColor\",\"getBackgroundColor\",\"colorSeverity\",\"alertClasses\",\"AlertIcon\",\"AlertMessage\",\"AlertAction\",\"defaultIconMapping\",\"SuccessOutlinedIcon\",\"ReportProblemOutlinedIcon\",\"ErrorOutlineIcon\",\"InfoOutlinedIcon\",\"closeText\",\"componentsProps\",\"iconMapping\",\"onClose\",\"closeButton\",\"CloseButton\",\"closeIcon\",\"CloseIcon\",\"CloseButtonSlot\",\"closeButtonProps\",\"CloseIconSlot\",\"closeIconProps\",\"globalId\",\"maybeReactUseId\",\"idOverride\",\"reactId\",\"defaultId\",\"setDefaultId\",\"useGlobalId\",\"ownerWindow\",\"debounce\",\"wait\",\"debounced\",\"later\",\"TextareaAutosize\",\"onChange\",\"maxRows\",\"minRows\",\"isControlled\",\"inputRef\",\"heightRef\",\"shadowRef\",\"calculateTextareaStyles\",\"computedStyle\",\"outerHeightStyle\",\"overflowing\",\"inputShallow\",\"placeholder\",\"borderBottomWidth\",\"borderTopWidth\",\"innerHeight\",\"scrollHeight\",\"singleRowHeight\",\"outerHeight\",\"syncHeight\",\"textareaStyles\",\"handleResize\",\"rAF\",\"debounceHandleResize\",\"containerWindow\",\"resizeObserver\",\"ResizeObserver\",\"cancelAnimationFrame\",\"rows\",\"formControlState\",\"states\",\"muiFormControl\",\"useFormControl\",\"FormControlContext\",\"hasValue\",\"isFilled\",\"SSR\",\"getInputBaseUtilityClass\",\"_InputGlobalStyles\",\"rootOverridesResolver\",\"formControl\",\"startAdornment\",\"adornedStart\",\"endAdornment\",\"adornedEnd\",\"sizeSmall\",\"multiline\",\"fullWidth\",\"hiddenLabel\",\"inputOverridesResolver\",\"inputSizeSmall\",\"inputMultiline\",\"inputTypeSearch\",\"inputAdornedStart\",\"inputAdornedEnd\",\"inputHiddenLabel\",\"InputBaseRoot\",\"inputBaseClasses\",\"InputBaseInput\",\"placeholderHidden\",\"placeholderVisible\",\"WebkitTextFillColor\",\"disableInjectingGlobalStyles\",\"animationDuration\",\"resize\",\"InputGlobalStyles\",\"InputBase\",\"_slotProps$input\",\"ariaDescribedby\",\"autoComplete\",\"inputComponent\",\"inputProps\",\"inputPropsProp\",\"inputRefProp\",\"renderSuffix\",\"valueProp\",\"handleInputRefWarning\",\"handleInputRef\",\"setFocused\",\"fcs\",\"onFilled\",\"onEmpty\",\"checkDirty\",\"InputComponent\",\"setAdornedStart\",\"Root\",\"rootProps\",\"Input\",\"onAnimationStart\",\"getInputUtilityClass\",\"InputRoot\",\"inputBaseRootOverridesResolver\",\"disableUnderline\",\"underline\",\"bottomLineColor\",\"onBackgroundChannel\",\"inputClasses\",\"borderBottomStyle\",\"InputInput\",\"inputBaseInputOverridesResolver\",\"_slots$root\",\"_slots$input\",\"componentsPropsProp\",\"inputComponentsProps\",\"RootSlot\",\"InputSlot\",\"getFilledInputUtilityClass\",\"FilledInputRoot\",\"hoverBackground\",\"bg\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"hoverBg\",\"filledInputClasses\",\"disabledBg\",\"_palette$color\",\"FilledInputInput\",\"WebkitBoxShadow\",\"caretColor\",\"_ref17\",\"filledInputComponentsProps\",\"_span\",\"NotchedOutlineRoot\",\"borderWidth\",\"NotchedOutlineLegend\",\"float\",\"withLabel\",\"notched\",\"getOutlinedInputUtilityClass\",\"OutlinedInputRoot\",\"outlinedInputClasses\",\"notchedOutline\",\"OutlinedInputInput\",\"OutlinedInput\",\"_React$Fragment\",\"filled\",\"getFormLabelUtilityClasses\",\"FormLabelRoot\",\"colorSecondary\",\"formLabelClasses\",\"AsteriskComponent\",\"asterisk\",\"FormLabel\",\"getInputLabelUtilityClasses\",\"InputLabelRoot\",\"shrink\",\"disableAnimation\",\"animated\",\"transformOrigin\",\"InputLabel\",\"shrinkProp\",\"muiNames\",\"_element$type$muiName\",\"_element$type\",\"getFormControlUtilityClasses\",\"FormControlRoot\",\"FormControl\",\"visuallyFocused\",\"initialAdornedStart\",\"isMuiElement\",\"setFilled\",\"initialFilled\",\"focusedState\",\"registerEffect\",\"childContext\",\"getFormHelperTextUtilityClasses\",\"FormHelperTextRoot\",\"contained\",\"formHelperTextClasses\",\"FormHelperText\",\"getReactElementRef\",\"_element$props\",\"_parameters$additiona\",\"skipResolvingSlotProps\",\"getListUtilityClass\",\"ListRoot\",\"disablePadding\",\"dense\",\"subheader\",\"listStyle\",\"List\",\"ListContext\",\"getScrollbarSize\",\"win\",\"documentWidth\",\"innerWidth\",\"nextItem\",\"disableListWrap\",\"previousItem\",\"previousElementSibling\",\"textCriteriaMatches\",\"nextFocus\",\"textCriteria\",\"repeating\",\"moveFocus\",\"currentFocus\",\"disabledItemsFocusable\",\"traversalFunction\",\"wrappedOnce\",\"nextFocusDisabled\",\"MenuList\",\"actions\",\"autoFocusItem\",\"listRef\",\"textCriteriaRef\",\"previousKeyMatched\",\"lastTime\",\"adjustStyleForScrollbar\",\"containerElement\",\"noExplicitWidth\",\"scrollbarSize\",\"activeItemIndex\",\"muiSkipListHighlight\",\"items\",\"newChildProps\",\"criteria\",\"lowerKey\",\"currTime\",\"keepFocusOnCurrent\",\"UNMOUNTED\",\"EXITED\",\"ENTERING\",\"ENTERED\",\"EXITING\",\"Transition\",\"initialStatus\",\"appearStatus\",\"unmountOnExit\",\"mountOnEnter\",\"updateStatus\",\"nextStatus\",\"cancelNextCallback\",\"getTimeouts\",\"mounting\",\"nodeRef\",\"forceReflow\",\"performEnter\",\"performExit\",\"_this2\",\"appearing\",\"maybeNode\",\"maybeAppearing\",\"timeouts\",\"enterTimeout\",\"safeSetState\",\"onEntered\",\"onEnter\",\"onEntering\",\"onTransitionEnd\",\"_this3\",\"onExit\",\"onExiting\",\"setNextCallback\",\"_this4\",\"doesNotHaveTimeoutOrListener\",\"addEndListener\",\"maybeNextCallback\",\"childProps\",\"reflow\",\"getTransitionProps\",\"_style$transitionDura\",\"_style$transitionTimi\",\"transitionDuration\",\"transitionTimingFunction\",\"transitionDelay\",\"getScale\",\"entering\",\"entered\",\"isWebKit154\",\"Grow\",\"TransitionComponent\",\"autoTimeout\",\"normalizedTransitionCallback\",\"maybeIsAppearing\",\"handleEntering\",\"handleEnter\",\"isAppearing\",\"handleEntered\",\"handleExiting\",\"handleExit\",\"restChildProps\",\"muiSupportAuto\",\"candidatesSelector\",\"defaultGetTabbable\",\"regularTabNodes\",\"orderedTabNodes\",\"nodeTabIndex\",\"tabindexAttr\",\"getTabIndex\",\"getRadio\",\"roving\",\"isNonTabbableRadio\",\"isNodeMatchingSelectorFocusable\",\"documentOrder\",\"defaultIsEnabled\",\"disableAutoFocus\",\"disableEnforceFocus\",\"disableRestoreFocus\",\"getTabbable\",\"isEnabled\",\"ignoreNextEnforceFocus\",\"sentinelStart\",\"sentinelEnd\",\"nodeToRestore\",\"reactFocusEventTarget\",\"activated\",\"rootRef\",\"lastKeydown\",\"loopFocus\",\"contain\",\"rootElement\",\"hasFocus\",\"tabbable\",\"_lastKeydown$current\",\"_lastKeydown$current2\",\"isShiftTab\",\"focusNext\",\"focusPrevious\",\"handleFocusSentinel\",\"childrenPropsHandler\",\"disablePortal\",\"mountNode\",\"setMountNode\",\"getContainer\",\"Fade\",\"defaultTimeout\",\"transitionProps\",\"webkitTransition\",\"getBackdropUtilityClass\",\"BackdropRoot\",\"invisible\",\"Backdrop\",\"TransitionComponentProp\",\"TransitionSlot\",\"createChainedFunction\",\"funcs\",\"ariaHidden\",\"hide\",\"getPaddingRight\",\"ariaHiddenSiblings\",\"mountElement\",\"currentElement\",\"elementsToExclude\",\"isNotExcludedElement\",\"isNotForbiddenElement\",\"isForbiddenTagName\",\"isInputHidden\",\"isAriaHiddenForbiddenOnElement\",\"findIndexOf\",\"handleContainer\",\"restoreStyle\",\"disableScrollLock\",\"isOverflowing\",\"scrollContainer\",\"DocumentFragment\",\"parentElement\",\"overflowY\",\"overflowX\",\"restore\",\"removeProperty\",\"modals\",\"containers\",\"modalIndex\",\"modalRef\",\"hiddenSiblings\",\"getHiddenSiblings\",\"containerIndex\",\"ariaHiddenState\",\"nextTop\",\"isTopModal\",\"disableEscapeKeyDown\",\"closeAfterTransition\",\"onTransitionEnter\",\"onTransitionExited\",\"mountNodeRef\",\"exited\",\"setExited\",\"hasTransition\",\"getHasTransition\",\"ariaHiddenProp\",\"getModal\",\"handleMounted\",\"handleOpen\",\"resolvedContainer\",\"handlePortalRef\",\"handleClose\",\"createHandleKeyDown\",\"otherHandlers\",\"_otherHandlers$onKeyD\",\"createHandleBackdropClick\",\"_otherHandlers$onClic\",\"getRootProps\",\"propsEventHandlers\",\"externalEventHandlers\",\"getBackdropProps\",\"_children$props$onEnt\",\"_children$props$onExi\",\"portalRef\",\"getModalUtilityClass\",\"ModalRoot\",\"hidden\",\"ModalBackdrop\",\"backdrop\",\"Modal\",\"BackdropComponent\",\"BackdropProps\",\"hideBackdrop\",\"keepMounted\",\"onBackdropClick\",\"propsWithDefaults\",\"useModal\",\"BackdropSlot\",\"backdropProps\",\"backdropRef\",\"FocusTrap\",\"getPopoverUtilityClass\",\"getOffsetTop\",\"vertical\",\"getOffsetLeft\",\"horizontal\",\"getTransformOriginValue\",\"resolveAnchorEl\",\"anchorEl\",\"PopoverRoot\",\"PopoverPaper\",\"PaperBase\",\"Popover\",\"_slotProps$paper\",\"anchorOrigin\",\"anchorPosition\",\"anchorReference\",\"containerProp\",\"marginThreshold\",\"PaperProps\",\"PaperPropsProp\",\"transitionDurationProp\",\"TransitionProps\",\"externalPaperSlotProps\",\"paperRef\",\"getAnchorOffset\",\"resolvedAnchorEl\",\"anchorRect\",\"getTransformOrigin\",\"elemRect\",\"getPositioningStyle\",\"offsetWidth\",\"offsetHeight\",\"elemTransformOrigin\",\"heightThreshold\",\"widthThreshold\",\"isPositioned\",\"setIsPositioned\",\"setPositioningStyles\",\"positioning\",\"updatePosition\",\"PaperSlot\",\"paperProps\",\"rootSlotPropsProp\",\"handlePaperRef\",\"getMenuUtilityClass\",\"RTL_ORIGIN\",\"LTR_ORIGIN\",\"MenuRoot\",\"MenuPaper\",\"WebkitOverflowScrolling\",\"MenuMenuList\",\"_slots$paper\",\"disableAutoFocusItem\",\"MenuListProps\",\"PopoverClasses\",\"isRtl\",\"menuListActionsRef\",\"paperExternalSlotProps\",\"rootSlotProps\",\"useSlotProps\",\"paperSlotProps\",\"getNativeSelectUtilityClasses\",\"StyledSelectSelect\",\"nativeSelectClasses\",\"NativeSelectSelect\",\"select\",\"StyledSelectIcon\",\"NativeSelectIcon\",\"iconOpen\",\"NativeSelectInput\",\"IconComponent\",\"controlled\",\"defaultProp\",\"valueState\",\"getSelectUtilityClasses\",\"SelectSelect\",\"selectClasses\",\"SelectIcon\",\"SelectNativeInput\",\"nativeInput\",\"areEqualValues\",\"SelectInput\",\"_MenuProps$slotProps\",\"ariaLabel\",\"autoWidth\",\"defaultOpen\",\"displayEmpty\",\"labelId\",\"MenuProps\",\"onOpen\",\"openProp\",\"renderValue\",\"SelectDisplayProps\",\"tabIndexProp\",\"setValueState\",\"useControlled\",\"openState\",\"setOpenState\",\"displayRef\",\"displayNode\",\"setDisplayNode\",\"isOpenControlled\",\"menuMinWidthState\",\"setMenuMinWidthState\",\"handleDisplayRef\",\"anchorElement\",\"getElementById\",\"isCollapsed\",\"childrenArray\",\"handleItemClick\",\"itemIndex\",\"clonedEvent\",\"displaySingle\",\"displayMultiple\",\"computeDisplay\",\"foundMatch\",\"menuMinWidth\",\"buttonId\",\"listboxId\",\"childItem\",\"styledRootConfig\",\"StyledInput\",\"StyledOutlinedInput\",\"StyledFilledInput\",\"Select\",\"ArrowDropDownIcon\",\"native\",\"variantProp\",\"restOfClasses\",\"outlined\",\"inputComponentRef\",\"getTextFieldUtilityClass\",\"variantComponent\",\"TextFieldRoot\",\"TextField\",\"FormHelperTextProps\",\"FormHelperTextPropsProp\",\"helperText\",\"InputLabelProps\",\"InputLabelPropsProp\",\"InputProps\",\"InputPropsProp\",\"SelectProps\",\"SelectPropsProp\",\"helperTextId\",\"inputLabelId\",\"inputLabel\",\"htmlInput\",\"formHelperText\",\"inputAdditionalProps\",\"inputLabelSlotProps\",\"InputLabelSlot\",\"inputLabelProps\",\"HtmlInputSlot\",\"htmlInputProps\",\"FormHelperTextSlot\",\"formHelperTextProps\",\"SelectSlot\",\"selectProps\",\"InputElement\",\"htmlFor\",\"getInputAdornmentUtilityClass\",\"InputAdornmentRoot\",\"disablePointerEvents\",\"inputAdornmentClasses\",\"positionStart\",\"InputAdornment\",\"disableTypography\",\"getButtonUtilityClass\",\"commonIconStyles\",\"ButtonRoot\",\"colorInherit\",\"disableElevation\",\"inheritContainedBackgroundColor\",\"inheritContainedHoverBackgroundColor\",\"buttonClasses\",\"inheritContainedBg\",\"inheritContainedHoverBg\",\"primaryChannel\",\"ButtonStartIcon\",\"startIcon\",\"ButtonEndIcon\",\"endIcon\",\"contextProps\",\"ButtonGroupContext\",\"buttonGroupButtonContextPositionClassName\",\"ButtonGroupButtonContext\",\"endIconProp\",\"startIconProp\",\"positionClassName\",\"getDividerUtilityClass\",\"DividerRoot\",\"absolute\",\"orientation\",\"flexItem\",\"withChildren\",\"withChildrenVertical\",\"textAlignRight\",\"textAlignLeft\",\"dividerChannel\",\"borderRightWidth\",\"borderTopStyle\",\"borderLeftStyle\",\"DividerWrapper\",\"wrapperVertical\",\"Divider\",\"Login\",\"setEmail\",\"setPassword\",\"setError\",\"showPassword\",\"setShowPassword\",\"VisibilityOff\",\"Visibility\",\"GoogleIcon\",\"ProtectedRoute\",\"ResetPassword\",\"setMessage\",\"Signup\",\"confirmPassword\",\"setConfirmPassword\",\"setDisplayName\",\"getToolbarUtilityClass\",\"ToolbarRoot\",\"gutters\",\"Toolbar\",\"getListItemUtilityClass\",\"getListItemSecondaryActionClassesUtilityClass\",\"ListItemSecondaryActionRoot\",\"ListItemSecondaryAction\",\"ListItemRoot\",\"alignItemsFlexStart\",\"hasSecondaryAction\",\"secondaryAction\",\"listItemButtonClasses\",\"backgroundClip\",\"ListItemContainer\",\"ListItem\",\"childrenProp\",\"componentProp\",\"ContainerComponent\",\"ContainerProps\",\"ContainerClassName\",\"listItemRef\",\"getListItemIconUtilityClass\",\"ListItemIconRoot\",\"ListItemIcon\",\"getListItemTextUtilityClass\",\"ListItemTextRoot\",\"listItemTextClasses\",\"inset\",\"typographyClasses\",\"ListItemText\",\"primaryProp\",\"primaryTypographyProps\",\"secondaryProp\",\"secondaryTypographyProps\",\"PrimarySlot\",\"primarySlotProps\",\"SecondarySlot\",\"secondarySlotProps\",\"isDynamicSupport\",\"enableColorScheme\",\"WebkitFontSmoothing\",\"MozOsxFontSmoothing\",\"WebkitTextSizeAdjust\",\"colorSchemeStyles\",\"_scheme$palette\",\"_scheme$palette2\",\"defaultStyles\",\"themeOverrides\",\"MuiCssBaseline\",\"SELECTOR\",\"baseStyles\",\"_scheme$palette3\",\"_scheme$palette4\",\"staticStyles\",\"getAppBarUtilityClass\",\"joinVars\",\"var1\",\"var2\",\"AppBarRoot\",\"defaultBg\",\"enableColorOnDark\",\"darkBg\",\"darkColor\",\"setTranslateValue\",\"containerPropProp\",\"containerRect\",\"fakeTransform\",\"getPropertyValue\",\"offsetX\",\"offsetY\",\"transformValues\",\"getTranslateValue\",\"webkitTransform\",\"Slide\",\"defaultEasing\",\"easingProp\",\"childrenRef\",\"getDrawerUtilityClass\",\"docked\",\"DrawerRoot\",\"DrawerDockedRoot\",\"DrawerPaper\",\"anchor\",\"oppositeDirection\",\"Drawer\",\"defaultTransitionDuration\",\"anchorProp\",\"ModalProps\",\"BackdropPropsProp\",\"SlideProps\",\"anchorInvariant\",\"isHorizontal\",\"getAnchor\",\"slidingDrawer\",\"drawerWidth\",\"Dashboard\",\"mobileOpen\",\"setMobileOpen\",\"handleDrawerToggle\",\"handleLogout\",\"DashboardIcon\",\"PersonIcon\",\"GameIcon\",\"TrophyIcon\",\"LogoutIcon\",\"CssBaseline\",\"MenuIcon\",\"App\"],\"sourceRoot\":\"\"}",
        "Long lines found on lines: [1]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\config\\alembic.ini",
      "size": 2201,
      "created": "2024-12-17T10:39:19.126736",
      "modified": "2024-12-17T10:39:26.026342",
      "hash": "6b5749092a46efe0273aa51b89c831dd04480294d385b73df964f309c73df38a",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\config\\pytest.ini",
      "size": 1227,
      "created": "2024-12-17T09:57:17.669180",
      "modified": "2024-12-17T09:57:36.019933",
      "hash": "46ff886dc170af2fbdc872f8c92389bc4e4dc426b4395ed513033b30df173635",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\env\\.env",
      "size": 565,
      "created": "2024-12-17T12:21:26.522418",
      "modified": "2024-12-18T15:19:01.090470",
      "hash": "ca70e2f3d68e9b06cd3238340a69a2b4d49777c0afddd090b4a5f26773776c17",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\config\\env\\.env.example",
      "size": 1544,
      "created": "2024-12-17T00:16:15.671148",
      "modified": "2024-12-23T07:35:31.510597",
      "hash": "d117d8da8482e15a225041f2ff1d8dc21f136312f868fffdffd747d3704b094b",
      "extension": ".example",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\grafana\\backup_dashboard.json",
      "size": 7705,
      "created": "2024-12-29T04:56:52.008921",
      "modified": "2024-12-29T04:58:06.443811",
      "hash": "3e0b4c619fe430b82d2ac477cc66e34e221616ae932603b5835443b18c9bc073",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\default.conf",
      "size": 5850,
      "created": "2025-01-05T12:42:54.901924",
      "modified": "2025-01-05T14:53:13.112253",
      "hash": "7f28a42ace853b7945c1f084cbbc01a84d4bde3d592bbf88e4d88fd6e6b2570e",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [30, 38, 51]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\development.conf",
      "size": 1557,
      "created": "2025-01-14T13:24:24.062544",
      "modified": "2025-01-14T13:29:59.771119",
      "hash": "b2d260d0bb47ad10c498ac3ac254f564a9cdac5204af926b2ac9d374feaceb7a",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [16]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\docker-compose.test.yml",
      "size": 1028,
      "created": "2024-12-29T05:13:00.928677",
      "modified": "2024-12-29T11:43:34.177571",
      "hash": "279335a04c98541d17488a16cf30e9bebe2e5b4a4f9abe579f41077838f0dd81",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\production.conf",
      "size": 9021,
      "created": "2024-12-23T13:57:29.077857",
      "modified": "2025-01-14T13:23:50.465608",
      "hash": "ed538fad409424b72c6d93befb4aabb4ea5b00a2fd81957be9dbc2f138120dd0",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [19, 45]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test_docker.ps1",
      "size": 12283,
      "created": "2024-12-29T05:13:16.084199",
      "modified": "2024-12-29T16:18:57.271451",
      "hash": "3e10193873cfe2e06f93e3e8ab3cbfde4b78bd219e06f4d9da3ac0fa2474c047",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [136, 353, 354, 396, 409]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test_nginx.sh",
      "size": 6036,
      "created": "2024-12-29T05:01:12.947183",
      "modified": "2024-12-29T05:07:34.088998",
      "hash": "286ea7598b8c8a92384103fa9adccc9aa1f164306f3eced87414071065f528f1",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [43, 93, 183]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test_nginx_local.ps1",
      "size": 5769,
      "created": "2024-12-29T05:10:53.653205",
      "modified": "2024-12-29T05:35:31.854453",
      "hash": "bf89f8496ce4f99f494faf5169cd3aa35cd3b0675fdda41e594926b83b7b5934",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [48, 74, 75]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test_nginx_performance.ps1",
      "size": 7054,
      "created": "2025-01-05T12:37:01.716341",
      "modified": "2025-01-05T12:37:11.923430",
      "hash": "d272d4b0f3afe34028d49796f0cc0f0f776e33a6c5b7c4676fe82a711e87828f",
      "extension": ".ps1",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [107, 147, 189, 211]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\prometheus\\alertmanager.yml",
      "size": 923,
      "created": "2024-12-29T04:47:06.302879",
      "modified": "2024-12-29T04:49:27.941575",
      "hash": "640af91db0d6b071cea83d52253e85596fa1e6ec161d2d7c6731d7c15895f055",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\prometheus\\alert_rules.yml",
      "size": 1463,
      "created": "2024-12-29T04:56:23.700138",
      "modified": "2024-12-29T04:56:30.466205",
      "hash": "128602b2cb48134e5bc5584cb31c7e5b01f89af27de5944e379b6861716c7a2e",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\prometheus\\prometheus.yml",
      "size": 793,
      "created": "2024-12-29T04:46:19.436042",
      "modified": "2024-12-29T04:49:27.938569",
      "hash": "5f8afcbddb2d517919ac97424008725dcab4441c3cca14b77c55fc7f6ead9a14",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\ssl\\nginx.crt",
      "size": 1134,
      "created": "2025-01-05T12:42:25.702955",
      "modified": "2025-01-05T13:25:25.429208",
      "hash": "61ff1aa976373c68751a7d2eef982798142a66cb1bdddd7821c493d8c78094b9",
      "extension": ".crt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\ssl\\nginx.key",
      "size": 1732,
      "created": "2025-01-05T12:42:25.692950",
      "modified": "2025-01-05T13:25:25.425211",
      "hash": "88f12e1a01a832948534656caa84697a2f3d92d9523469ec5cebe164adb54c1c",
      "extension": ".key",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\grafana\\dashboards\\dojo_pool.json",
      "size": 4151,
      "created": "2024-12-29T04:46:54.590667",
      "modified": "2024-12-29T04:49:27.941575",
      "hash": "42cda23d4ae009e15357880a8db12d4fc7dc0ee1a4e63cd9a783e3ec0475482c",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [94, 154]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\production\\nginx.conf",
      "size": 5695,
      "created": "2024-12-27T03:57:27.882996",
      "modified": "2025-01-05T08:59:24.980067",
      "hash": "1d9104a9ec91cac01eb93b0b947a2153e9e3e9d6cd2a3a25dbc04534f54668eb",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [30, 38, 47]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\nginx.conf",
      "size": 6521,
      "created": "2025-01-05T05:18:36.718178",
      "modified": "2025-01-14T03:13:15.234641",
      "hash": "3e14983c1769e66c78f7e256ad7afef0a8d2525068f1b67b0eff58eee99e4df2",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [32, 51, 53, 149, 169]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\nginx.conf.tmp",
      "size": 0,
      "created": "2025-01-05T05:18:08.299453",
      "modified": "2025-01-05T05:18:08.299453",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".tmp",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\error\\404.html",
      "size": 195,
      "created": "2024-12-29T05:40:25.492380",
      "modified": "2024-12-29T16:15:05.845020",
      "hash": "3b1ff31ef06cd171edecf9636ef8dc23baa2a0c341ab1a8756a705bf09930f59",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\error\\50x.html",
      "size": 189,
      "created": "2024-12-29T05:40:25.494376",
      "modified": "2024-12-29T16:15:05.846021",
      "hash": "ffd8dd61f65f8c0e7d4d659bedd102faf3757a5f6a57fd1e6ae69c070dedffe3",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\nginx\\backend.conf",
      "size": 749,
      "created": "2024-12-29T05:40:05.837231",
      "modified": "2024-12-29T16:13:42.010322",
      "hash": "039d5f28550ab46a09584bde56fdcfb6c547ea7b5efc6d235eb0af0bd572be78",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\nginx\\Dockerfile.backend",
      "size": 112,
      "created": "2024-12-29T09:37:01.858030",
      "modified": "2024-12-29T11:43:34.177571",
      "hash": "2004931614e528c8bdf4ff99446f57118392fd32f4044fad75cf29a6cbace87a",
      "extension": ".backend",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\static\\index.html",
      "size": 234,
      "created": "2024-12-29T11:49:04.701086",
      "modified": "2024-12-29T11:49:18.623530",
      "hash": "36eb41f53583e569955c1cf377b17dccb699ae581df84a0daf2056e47bd7858b",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\ssl\\certs\\dhparam.pem",
      "size": 436,
      "created": "2024-12-29T05:40:07.707800",
      "modified": "2024-12-29T16:15:05.837020",
      "hash": "966b65d6729f65312c931963bed44becd6b3d09563d5679aa90642ad7d243a6d",
      "extension": ".pem",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\ssl\\certs\\dojopool.crt",
      "size": 1170,
      "created": "2024-12-29T05:40:07.697803",
      "modified": "2024-12-29T16:13:42.231011",
      "hash": "becee627fc033c663a13c0a6d9cfe0fe22a01281c176b5d1cef676469bce92c8",
      "extension": ".crt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\ssl\\private\\dojopool.key",
      "size": 1732,
      "created": "2024-12-29T05:40:07.687800",
      "modified": "2024-12-29T16:13:42.226010",
      "hash": "8d00d00eb327725fe60c3ff5769fe152f69d6882e91d02674314eca8f675df89",
      "extension": ".key",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\static\\css\\main.css",
      "size": 44,
      "created": "2024-12-29T05:40:25.484372",
      "modified": "2024-12-29T13:46:05.550470",
      "hash": "efe434ceb494cca411db4f9453b0411a645190b5778cb9e6de939e73a86c6633",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\static\\css\\style.css",
      "size": 37,
      "created": "2024-12-29T11:48:44.440873",
      "modified": "2024-12-29T16:15:05.846021",
      "hash": "4286404def4f8442ed3da3a0069fd89f2cc569d482159e1ce13dbc4672b0a948",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\nginx\\test\\static\\js\\main.js",
      "size": 31,
      "created": "2024-12-29T05:40:25.487370",
      "modified": "2024-12-29T16:15:05.848025",
      "hash": "a621f4058adf9c672585e1311f2e4785bf0eeb57b3fe733c3944a03f411f602c",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\prometheus\\rules\\alerts.yml",
      "size": 2924,
      "created": "2024-12-29T04:46:34.606249",
      "modified": "2024-12-29T04:49:27.940736",
      "hash": "b0f4ada457f7e6370a835f34d57645b54c2187a2b2446163886a4b4a58593e86",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [6, 76]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\prometheus\\templates\\email.critical.html",
      "size": 2626,
      "created": "2024-12-29T04:48:49.236370",
      "modified": "2024-12-29T04:49:27.943569",
      "hash": "adb6387e5c99f43711809b93d8575c7d499710598bbcf847daf2d2e05988dc36",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\deployment\\prometheus\\templates\\email.default.html",
      "size": 1853,
      "created": "2024-12-29T04:48:32.862481",
      "modified": "2024-12-29T04:49:27.943569",
      "hash": "5bad263d588ce43abe86306a7c641212f1f25667c62a0bc54799f158aa39ccc5",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\.vitepress\\config.js",
      "size": 2803,
      "created": "2024-12-21T10:49:36.425606",
      "modified": "2024-12-21T10:51:53.865564",
      "hash": "d3ee19d4538953ccce1e3746b6e09f25fd5e340a0ab2610ba36c8d3825f17c6e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\accessibility\\README.md",
      "size": 804,
      "created": "2025-01-14T04:26:07.546623",
      "modified": "2025-01-14T04:39:38.390550",
      "hash": "50ee606cd148cc7d8bdd8eb917faf302cd8cfb931e273a9153f2f2ba8d1f8648",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [19]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\backups\\landing_page_v5.0_final.html",
      "size": 257,
      "created": "2025-01-06T02:35:03.385914",
      "modified": "2025-01-06T02:37:54.195785",
      "hash": "55eb82c27614a8052a9173d0dbff56252620cd93ca316319e080eb15ec88327b",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\cleanup\\analysis_report.md",
      "size": 4084509,
      "created": "2025-01-14T16:32:36.251992",
      "modified": "2025-01-14T16:32:36.267992",
      "hash": "27e5a7aafc79ee6544b0cac80f7ebe9205552994015c1fedb1fe47c211fe24ed",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Large file size (>1MB)",
        "Potential security issue: api_key",
        "Potential security issue: password",
        "Potential security issue: secret",
        "TODO found: found",
        "TODO found: found: LevQ==\",",
        "TODO found: found: would need to check which services use this volume",
        "TODO found: found: would need to check which services use this volume",
        "TODO found: found: v6: remove, see https://github.com/mui/material-ui/pull/38123\\n    if (themeKey === 'typography' && val === 'inherit') {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const themeMapping = getPath(theme, themeKey) || {};\\n    if (style) {\\n      return style(props);\\n    }\\n    const styleFromPropValue = propValueFinal => {\\n      let value = getValue(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return handleBreakpoints(props, val, styleFromPropValue);\\n  }\\n  function styleFunctionSx(props) {\\n    const {\\n      sx,\\n      theme = {}\\n    } = props || {};\\n    if (!sx) {\\n      return null; // Emotion & styled-components will neglect null\\n    }\\n    const config = theme.unstable_sxConfig ?? defaultSxConfig;\\n\\n    /*\\n     * Receive `sxInput` as object or callback\\n     * and then recursively check keys & values to create media query object styles.\\n     * (the result will be used in `styled`)\\n     */\\n    function traverse(sxInput) {\\n      let sxObject = sxInput;\\n      if (typeof sxInput === 'function') {\\n        sxObject = sxInput(theme);\\n      } else if (typeof sxInput !== 'object') {\\n        // value\\n        return sxInput;\\n      }\\n      if (!sxObject) {\\n        return null;\\n      }\\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\\n      let css = emptyBreakpoints;\\n      Object.keys(sxObject).forEach(styleKey => {\\n        const value = callIfFn(sxObject[styleKey], theme);\\n        if (value !== null && value !== undefined) {\\n          if (typeof value === 'object') {\\n            if (config[styleKey]) {\\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\\n            } else {\\n              const breakpointsValues = handleBreakpoints({\\n                theme\\n              }, value, x => ({\\n                [styleKey]: x\\n              }));\\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\\n                css[styleKey] = styleFunctionSx({\\n                  sx: value,\\n                  theme\\n                });\\n              } else {\\n                css = merge(css, breakpointsValues);\\n              }\\n            }\\n          } else {\\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\\n          }\\n        }\\n      });\\n      return sortContainerQueries(theme, removeUnusedBreakpoints(breakpointsKeys, css));\\n    }\\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\\n  }\\n  return styleFunctionSx;\\n}\\nconst styleFunctionSx = unstable_createStyleFunctionSx();\\nstyleFunctionSx.filterProps = ['sx'];\\nexport default styleFunctionSx;\",\"// Sorted ASC by size. That's important.\\n// It can't be configured as it's used statically for propTypes.\\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\\nconst sortBreakpointsValues = values => {\\n  const breakpointsAsArray = Object.keys(values).map(key => ({\\n    key,\\n    val: values[key]\\n  })) || [];\\n  // Sort in ascending order\\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\\n  return breakpointsAsArray.reduce((acc, obj) => {\\n    return {\\n      ...acc,\\n      [obj.key]: obj.val\\n    };\\n  }, {});\\n};\\n\\n// Keep in mind that @media is inclusive by the CSS specification.\\nexport default function createBreakpoints(breakpoints) {\\n  const {\\n    // The breakpoint **start** at this value.\\n    // For instance with the first breakpoint xs: [xs, sm).\\n    values = {\\n      xs: 0,\\n      // phone\\n      sm: 600,\\n      // tablet\\n      md: 900,\\n      // small laptop\\n      lg: 1200,\\n      // desktop\\n      xl: 1536 // large screen\\n    },\\n    unit = 'px',\\n    step = 5,\\n    ...other\\n  } = breakpoints;\\n  const sortedValues = sortBreakpointsValues(values);\\n  const keys = Object.keys(sortedValues);\\n  function up(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (min-width:${value}${unit})`;\\n  }\\n  function down(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (max-width:${value - step / 100}${unit})`;\\n  }\\n  function between(start, end) {\\n    const endIndex = keys.indexOf(end);\\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\\n  }\\n  function only(key) {\\n    if (keys.indexOf(key) + 1 < keys.length) {\\n      return between(key, keys[keys.indexOf(key) + 1]);\\n    }\\n    return up(key);\\n  }\\n  function not(key) {\\n    // handle first and last key separately, for better readability\\n    const keyIndex = keys.indexOf(key);\\n    if (keyIndex === 0) {\\n      return up(keys[1]);\\n    }\\n    if (keyIndex === keys.length - 1) {\\n      return down(keys[keyIndex]);\\n    }\\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\\n  }\\n  return {\\n    keys,\\n    values: sortedValues,\\n    up,\\n    down,\\n    between,\\n    only,\\n    not,\\n    unit,\\n    ...other\\n  };\\n}\",\"const shape = {\\n  borderRadius: 4\\n};\\nexport default shape;\",\"/**\\n * A universal utility to style components with multiple color modes. Always use it from the theme object.\\n * It works with:\\n *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)\\n *  - [CSS theme variables](https://mui.com/material-ui/customization/css-theme-variables/overview/)\\n *  - Zero-runtime engine\\n *\\n * Tips: Use an array over object spread and place `theme.applyStyles()` last.\\n *\\n * With the styled function:\\n * \u2705 [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]\\n * \ud83d\udeab { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}\\n *\\n * With the sx prop:\\n * \u2705 [{ background: '#e5e5e5' }, theme => theme.applyStyles('dark', { background: '#1c1c1c' })]\\n * \ud83d\udeab { background: '#e5e5e5', ...theme => theme.applyStyles('dark', { background: '#1c1c1c' })}\\n *\\n * @example\\n * 1. using with `styled`:\\n * ```jsx\\n *   const Component = styled('div')(({ theme }) => [\\n *     { background: '#e5e5e5' },\\n *     theme.applyStyles('dark', {\\n *       background: '#1c1c1c',\\n *       color: '#fff',\\n *     }),\\n *   ]);\\n * ```\\n *\\n * @example\\n * 2. using with `sx` prop:\\n * ```jsx\\n *   <Box sx={[\\n *     { background: '#e5e5e5' },\\n *     theme => theme.applyStyles('dark', {\\n *        background: '#1c1c1c',\\n *        color: '#fff',\\n *      }),\\n *     ]}\\n *   />\\n * ```\\n *\\n * @example\\n * 3. theming a component:\\n * ```jsx\\n *   extendTheme({\\n *     components: {\\n *       MuiButton: {\\n *         styleOverrides: {\\n *           root: ({ theme }) => [\\n *             { background: '#e5e5e5' },\\n *             theme.applyStyles('dark', {\\n *               background: '#1c1c1c',\\n *               color: '#fff',\\n *             }),\\n *           ],\\n *         },\\n *       }\\n *     }\\n *   })\\n *```\\n */\\nexport default function applyStyles(key, styles) {\\n  // @ts-expect-error this is 'any' type\\n  const theme = this;\\n  if (theme.vars) {\\n    if (!theme.colorSchemes?.[key] || typeof theme.getColorSchemeSelector !== 'function') {\\n      return {};\\n    }\\n    // If CssVarsProvider is used as a provider, returns '*:where({selector}) &'\\n    let selector = theme.getColorSchemeSelector(key);\\n    if (selector === '&') {\\n      return styles;\\n    }\\n    if (selector.includes('data-') || selector.includes('.')) {\\n      // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)\\n      selector = `*:where(${selector.replace(/\\\\s*&$/, '')}) &`;\\n    }\\n    return {\\n      [selector]: styles\\n    };\\n  }\\n  if (theme.palette.mode === key) {\\n    return styles;\\n  }\\n  return {};\\n}\",\"import deepmerge from '@mui/utils/deepmerge';\\nimport createBreakpoints from \\\"../createBreakpoints/createBreakpoints.js\\\";\\nimport cssContainerQueries from \\\"../cssContainerQueries/index.js\\\";\\nimport shape from \\\"./shape.js\\\";\\nimport createSpacing from \\\"./createSpacing.js\\\";\\nimport styleFunctionSx from \\\"../styleFunctionSx/styleFunctionSx.js\\\";\\nimport defaultSxConfig from \\\"../styleFunctionSx/defaultSxConfig.js\\\";\\nimport applyStyles from \\\"./applyStyles.js\\\";\\nfunction createTheme(options = {}, ...args) {\\n  const {\\n    breakpoints: breakpointsInput = {},\\n    palette: paletteInput = {},\\n    spacing: spacingInput,\\n    shape: shapeInput = {},\\n    ...other\\n  } = options;\\n  const breakpoints = createBreakpoints(breakpointsInput);\\n  const spacing = createSpacing(spacingInput);\\n  let muiTheme = deepmerge({\\n    breakpoints,\\n    direction: 'ltr',\\n    components: {},\\n    // Inject component definitions.\\n    palette: {\\n      mode: 'light',\\n      ...paletteInput\\n    },\\n    spacing,\\n    shape: {\\n      ...shape,\\n      ...shapeInput\\n    }\\n  }, other);\\n  muiTheme = cssContainerQueries(muiTheme);\\n  muiTheme.applyStyles = applyStyles;\\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\\n  muiTheme.unstable_sxConfig = {\\n    ...defaultSxConfig,\\n    ...other?.unstable_sxConfig\\n  };\\n  muiTheme.unstable_sx = function sx(props) {\\n    return styleFunctionSx({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  return muiTheme;\\n}\\nexport default createTheme;\",\"export default function createMixins(breakpoints, mixins) {\\n  return {\\n    toolbar: {\\n      minHeight: 56,\\n      [breakpoints.up('xs')]: {\\n        '@media (orientation: landscape)': {\\n          minHeight: 48\\n        }\\n      },\\n      [breakpoints.up('sm')]: {\\n        minHeight: 64\\n      }\\n    },\\n    ...mixins\\n  };\\n}\",\"import deepmerge from '@mui/utils/deepmerge';\\nfunction round(value) {\\n  return Math.round(value * 1e5) / 1e5;\\n}\\nconst caseAllCaps = {\\n  textTransform: 'uppercase'\\n};\\nconst defaultFontFamily = '\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif';\\n\\n/**\\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\\n */\\nexport default function createTypography(palette, typography) {\\n  const {\\n    fontFamily = defaultFontFamily,\\n    // The default font size of the Material Specification.\\n    fontSize = 14,\\n    // px\\n    fontWeightLight = 300,\\n    fontWeightRegular = 400,\\n    fontWeightMedium = 500,\\n    fontWeightBold = 700,\\n    // Tell MUI what's the font-size on the html element.\\n    // 16px is the default font-size used by browsers.\\n    htmlFontSize = 16,\\n    // Apply the CSS properties to all the variants.\\n    allVariants,\\n    pxToRem: pxToRem2,\\n    ...other\\n  } = typeof typography === 'function' ? typography(palette) : typography;\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (typeof fontSize !== 'number') {\\n      console.error('MUI: `fontSize` is required to be a number.');\\n    }\\n    if (typeof htmlFontSize !== 'number') {\\n      console.error('MUI: `htmlFontSize` is required to be a number.');\\n    }\\n  }\\n  const coef = fontSize / 14;\\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => ({\\n    fontFamily,\\n    fontWeight,\\n    fontSize: pxToRem(size),\\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\\n    lineHeight,\\n    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing\\n    // across font-families can cause issues with the kerning.\\n    ...(fontFamily === defaultFontFamily ? {\\n      letterSpacing: `${round(letterSpacing / size)}em`\\n    } : {}),\\n    ...casing,\\n    ...allVariants\\n  });\\n  const variants = {\\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),\\n    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.\\n    inherit: {\\n      fontFamily: 'inherit',\\n      fontWeight: 'inherit',\\n      fontSize: 'inherit',\\n      lineHeight: 'inherit',\\n      letterSpacing: 'inherit'\\n    }\\n  };\\n  return deepmerge({\\n    htmlFontSize,\\n    pxToRem,\\n    fontFamily,\\n    fontSize,\\n    fontWeightLight,\\n    fontWeightRegular,\\n    fontWeightMedium,\\n    fontWeightBold,\\n    ...variants\\n  }, other, {\\n    clone: false // No need to clone deep\\n  });\\n}\",\"const shadowKeyUmbraOpacity = 0.2;\\nconst shadowKeyPenumbraOpacity = 0.14;\\nconst shadowAmbientShadowOpacity = 0.12;\\nfunction createShadow(...px) {\\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');\\n}\\n\\n// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\\nconst shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\\nexport default shadows;\",\"// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\\n// to learn the context in which each easing should be used.\\nexport const easing = {\\n  // This is the most common easing curve.\\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\\n  // Objects enter the screen at full velocity from off-screen and\\n  // slowly decelerate to a resting point.\\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\\n  // The sharp curve is used by objects that may return to the screen at any time.\\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\\n};\\n\\n// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\\n// to learn when use what timing\\nexport const duration = {\\n  shortest: 150,\\n  shorter: 200,\\n  short: 250,\\n  // most basic recommended timing\\n  standard: 300,\\n  // this is to be used in complex animations\\n  complex: 375,\\n  // recommended when something is entering screen\\n  enteringScreen: 225,\\n  // recommended when something is leaving screen\\n  leavingScreen: 195\\n};\\nfunction formatMs(milliseconds) {\\n  return `${Math.round(milliseconds)}ms`;\\n}\\nfunction getAutoHeightDuration(height) {\\n  if (!height) {\\n    return 0;\\n  }\\n  const constant = height / 36;\\n\\n  // https://www.desmos.com/calculator/vbrp3ggqet\\n  return Math.min(Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10), 3000);\\n}\\nexport default function createTransitions(inputTransitions) {\\n  const mergedEasing = {\\n    ...easing,\\n    ...inputTransitions.easing\\n  };\\n  const mergedDuration = {\\n    ...duration,\\n    ...inputTransitions.duration\\n  };\\n  const create = (props = ['all'], options = {}) => {\\n    const {\\n      duration: durationOption = mergedDuration.standard,\\n      easing: easingOption = mergedEasing.easeInOut,\\n      delay = 0,\\n      ...other\\n    } = options;\\n    if (process.env.NODE_ENV !== 'production') {\\n      const isString = value => typeof value === 'string';\\n      const isNumber = value => !Number.isNaN(parseFloat(value));\\n      if (!isString(props) && !Array.isArray(props)) {\\n        console.error('MUI: Argument \\\"props\\\" must be a string or Array.');\\n      }\\n      if (!isNumber(durationOption) && !isString(durationOption)) {\\n        console.error(`MUI: Argument \\\"duration\\\" must be a number or a string but found ${durationOption}.`);\\n      }\\n      if (!isString(easingOption)) {\\n        console.error('MUI: Argument \\\"easing\\\" must be a string.');\\n      }\\n      if (!isNumber(delay) && !isString(delay)) {\\n        console.error('MUI: Argument \\\"delay\\\" must be a number or a string.');\\n      }\\n      if (typeof options !== 'object') {\\n        console.error(['MUI: Secong argument of transition.create must be an object.', \\\"Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`\\\"].join('\\\\n'));\\n      }\\n      if (Object.keys(other).length !== 0) {\\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\\n      }\\n    }\\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\\n  };\\n  return {\\n    getAutoHeightDuration,\\n    create,\\n    ...inputTransitions,\\n    easing: mergedEasing,\\n    duration: mergedDuration\\n  };\\n}\",\"// We need to centralize the zIndex definitions as they work\\n// like global values in the browser.\\nconst zIndex = {\\n  mobileStepper: 1000,\\n  fab: 1050,\\n  speedDial: 1050,\\n  appBar: 1100,\\n  drawer: 1200,\\n  modal: 1300,\\n  snackbar: 1400,\\n  tooltip: 1500\\n};\\nexport default zIndex;\",\"/* eslint-disable import/prefer-default-export */\\nimport { isPlainObject } from '@mui/utils/deepmerge';\\nfunction isSerializable(val) {\\n  return isPlainObject(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\\n}\\n\\n/**\\n * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.\\n *\\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\\n * For example, in a Next.js project:\\n *\\n * ```js\\n * // next.config.js\\n * const { extendTheme } = require('@mui/material/styles');\\n *\\n * const theme = extendTheme();\\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\\n * theme.toRuntimeSource = stringifyTheme;\\n *\\n * module.exports = withPigment({\\n *  theme,\\n * });\\n * ```\\n */\\nexport function stringifyTheme(baseTheme = {}) {\\n  const serializableTheme = {\\n    ...baseTheme\\n  };\\n  function serializeTheme(object) {\\n    const array = Object.entries(object);\\n    // eslint-disable-next-line no-plusplus\\n    for (let index = 0; index < array.length; index++) {\\n      const [key, value] = array[index];\\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\\n        delete object[key];\\n      } else if (isPlainObject(value)) {\\n        object[key] = {\\n          ...value\\n        };\\n        serializeTheme(object[key]);\\n      }\\n    }\\n  }\\n  serializeTheme(serializableTheme);\\n  return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\\n\\nconst theme = ${JSON.stringify(serializableTheme, null, 2)};\\n\\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\\ntheme.transitions = createTransitions(theme.transitions || {});\\n\\nexport default theme;`;\\n}\",\"import _formatMuiErrorMessage from \\\"@mui/utils/formatMuiErrorMessage\\\";\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport styleFunctionSx, { unstable_defaultSxConfig as defaultSxConfig } from '@mui/system/styleFunctionSx';\\nimport systemCreateTheme from '@mui/system/createTheme';\\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\\nimport createMixins from \\\"./createMixins.js\\\";\\nimport createPalette from \\\"./createPalette.js\\\";\\nimport createTypography from \\\"./createTypography.js\\\";\\nimport shadows from \\\"./shadows.js\\\";\\nimport createTransitions from \\\"./createTransitions.js\\\";\\nimport zIndex from \\\"./zIndex.js\\\";\\nimport { stringifyTheme } from \\\"./stringifyTheme.js\\\";\\nfunction createThemeNoVars(options = {}, ...args) {\\n  const {\\n    breakpoints: breakpointsInput,\\n    mixins: mixinsInput = {},\\n    spacing: spacingInput,\\n    palette: paletteInput = {},\\n    transitions: transitionsInput = {},\\n    typography: typographyInput = {},\\n    shape: shapeInput,\\n    ...other\\n  } = options;\\n  if (options.vars) {\\n    throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? 'MUI: `vars` is a private field used for CSS variables support.\\\\n' + 'Please use another name.' : _formatMuiErrorMessage(20));\\n  }\\n  const palette = createPalette(paletteInput);\\n  const systemTheme = systemCreateTheme(options);\\n  let muiTheme = deepmerge(systemTheme, {\\n    mixins: createMixins(systemTheme.breakpoints, mixinsInput),\\n    palette,\\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\\n    shadows: shadows.slice(),\\n    typography: createTypography(palette, typographyInput),\\n    transitions: createTransitions(transitionsInput),\\n    zIndex: {\\n      ...zIndex\\n    }\\n  });\\n  muiTheme = deepmerge(muiTheme, other);\\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\\n  if (process.env.NODE_ENV !== 'production') {\\n    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.\\n    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];\\n    const traverse = (node, component) => {\\n      let key;\\n\\n      // eslint-disable-next-line guard-for-in\\n      for (key in node) {\\n        const child = node[key];\\n        if (stateClasses.includes(key) && Object.keys(child).length > 0) {\\n          if (process.env.NODE_ENV !== 'production') {\\n            const stateClass = generateUtilityClass('', key);\\n            console.error([`MUI: The \\\\`${component}\\\\` component increases ` + `the CSS specificity of the \\\\`${key}\\\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({\\n              root: {\\n                [`&.${stateClass}`]: child\\n              }\\n            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\\\\n'));\\n          }\\n          // Remove the style to prevent global conflicts.\\n          node[key] = {};\\n        }\\n      }\\n    };\\n    Object.keys(muiTheme.components).forEach(component => {\\n      const styleOverrides = muiTheme.components[component].styleOverrides;\\n      if (styleOverrides && component.startsWith('Mui')) {\\n        traverse(styleOverrides, component);\\n      }\\n    });\\n  }\\n  muiTheme.unstable_sxConfig = {\\n    ...defaultSxConfig,\\n    ...other?.unstable_sxConfig\\n  };\\n  muiTheme.unstable_sx = function sx(props) {\\n    return styleFunctionSx({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  muiTheme.toRuntimeSource = stringifyTheme; // for Pigment CSS integration\\n\\n  return muiTheme;\\n}\\nlet warnedOnce = false;\\nexport function createMuiTheme(...args) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (!warnedOnce) {\\n      warnedOnce = true;\\n      console.error(['MUI: the createMuiTheme function was renamed to createTheme.', '', \\\"You should use `import { createTheme } from '@mui/material/styles'`\\\"].join('\\\\n'));\\n    }\\n  }\\n  return createThemeNoVars(...args);\\n}\\nexport default createThemeNoVars;\",\"// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\\nexport default function getOverlayAlpha(elevation) {\\n  let alphaValue;\\n  if (elevation < 1) {\\n    alphaValue = 5.11916 * elevation ** 2;\\n  } else {\\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\\n  }\\n  return Math.round(alphaValue * 10) / 1000;\\n}\",\"import createPalette from \\\"./createPalette.js\\\";\\nimport getOverlayAlpha from \\\"./getOverlayAlpha.js\\\";\\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\\n  if (index === 0) {\\n    return 'none';\\n  }\\n  const overlay = getOverlayAlpha(index);\\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\\n});\\nexport function getOpacity(mode) {\\n  return {\\n    inputPlaceholder: mode === 'dark' ? 0.5 : 0.42,\\n    inputUnderline: mode === 'dark' ? 0.7 : 0.42,\\n    switchTrackDisabled: mode === 'dark' ? 0.2 : 0.12,\\n    switchTrack: mode === 'dark' ? 0.3 : 0.38\\n  };\\n}\\nexport function getOverlays(mode) {\\n  return mode === 'dark' ? defaultDarkOverlays : [];\\n}\\nexport default function createColorScheme(options) {\\n  const {\\n    palette: paletteInput = {\\n      mode: 'light'\\n    },\\n    // need to cast to avoid module augmentation test\\n    opacity,\\n    overlays,\\n    ...rest\\n  } = options;\\n  const palette = createPalette(paletteInput);\\n  return {\\n    palette,\\n    opacity: {\\n      ...getOpacity(palette.mode),\\n      ...opacity\\n    },\\n    overlays: overlays || getOverlays(palette.mode),\\n    ...rest\\n  };\\n}\",\"export default function shouldSkipGeneratingVar(keys) {\\n  return !!keys[0].match(/(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/) || !!keys[0].match(/sxConfig$/) ||\\n  // ends with sxConfig\\n  keys[0] === 'palette' && !!keys[1]?.match(/(mode|contrastThreshold|tonalOffset)/);\\n}\",\"/**\\n * @internal These variables should not appear in the :root stylesheet when the `defaultColorScheme=\\\"dark\\\"`\\n */\\nconst excludeVariablesFromRoot = cssVarPrefix => [...[...Array(25)].map((_, index) => `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}overlays-${index}`), `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkBg`, `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkColor`];\\nexport default excludeVariablesFromRoot;\",\"import excludeVariablesFromRoot from \\\"./excludeVariablesFromRoot.js\\\";\\nexport default theme => (colorScheme, css) => {\\n  const root = theme.rootSelector || ':root';\\n  const selector = theme.colorSchemeSelector;\\n  let rule = selector;\\n  if (selector === 'class') {\\n    rule = '.%s';\\n  }\\n  if (selector === 'data') {\\n    rule = '[data-%s]';\\n  }\\n  if (selector?.startsWith('data-') && !selector.includes('%s')) {\\n    // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\\\"%s\\\"]'\\n    rule = `[${selector}=\\\"%s\\\"]`;\\n  }\\n  if (theme.defaultColorScheme === colorScheme) {\\n    if (colorScheme === 'dark') {\\n      const excludedVariables = {};\\n      excludeVariablesFromRoot(theme.cssVarPrefix).forEach(cssVar => {\\n        excludedVariables[cssVar] = css[cssVar];\\n        delete css[cssVar];\\n      });\\n      if (rule === 'media') {\\n        return {\\n          [root]: css,\\n          [`@media (prefers-color-scheme: dark)`]: {\\n            [root]: excludedVariables\\n          }\\n        };\\n      }\\n      if (rule) {\\n        return {\\n          [rule.replace('%s', colorScheme)]: excludedVariables,\\n          [`${root}, ${rule.replace('%s', colorScheme)}`]: css\\n        };\\n      }\\n      return {\\n        [root]: {\\n          ...css,\\n          ...excludedVariables\\n        }\\n      };\\n    }\\n    if (rule && rule !== 'media') {\\n      return `${root}, ${rule.replace('%s', String(colorScheme))}`;\\n    }\\n  } else if (colorScheme) {\\n    if (rule === 'media') {\\n      return {\\n        [`@media (prefers-color-scheme: ${String(colorScheme)})`]: {\\n          [root]: css\\n        }\\n      };\\n    }\\n    if (rule) {\\n      return rule.replace('%s', String(colorScheme));\\n    }\\n  }\\n  return root;\\n};\",\"import _formatMuiErrorMessage from \\\"@mui/utils/formatMuiErrorMessage\\\";\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport { unstable_createGetCssVar as systemCreateGetCssVar, createSpacing } from '@mui/system';\\nimport { createUnarySpacing } from '@mui/system/spacing';\\nimport { prepareCssVars, prepareTypographyVars, createGetColorSchemeSelector } from '@mui/system/cssVars';\\nimport styleFunctionSx, { unstable_defaultSxConfig as defaultSxConfig } from '@mui/system/styleFunctionSx';\\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, hslToRgb } from '@mui/system/colorManipulator';\\nimport createThemeNoVars from \\\"./createThemeNoVars.js\\\";\\nimport createColorScheme, { getOpacity, getOverlays } from \\\"./createColorScheme.js\\\";\\nimport defaultShouldSkipGeneratingVar from \\\"./shouldSkipGeneratingVar.js\\\";\\nimport defaultGetSelector from \\\"./createGetSelector.js\\\";\\nimport { stringifyTheme } from \\\"./stringifyTheme.js\\\";\\nfunction assignNode(obj, keys) {\\n  keys.forEach(k => {\\n    if (!obj[k]) {\\n      obj[k] = {};\\n    }\\n  });\\n}\\nfunction setColor(obj, key, defaultValue) {\\n  if (!obj[key] && defaultValue) {\\n    obj[key] = defaultValue;\\n  }\\n}\\nfunction toRgb(color) {\\n  if (typeof color !== 'string' || !color.startsWith('hsl')) {\\n    return color;\\n  }\\n  return hslToRgb(color);\\n}\\nfunction setColorChannel(obj, key) {\\n  if (!(`${key}Channel` in obj)) {\\n    // custom channel ${TOKEN_15};\\nvar createEmotionProps = function createEmotionProps(type, props) {\\n\\n  var newProps = {};\\n\\n  for (var _key in props) {\\n    if (hasOwn.call(props, _key)) {\\n      newProps[_key] = props[_key];\\n    }\\n  }\\n\\n  newProps[typePropName] = type; // Runtime labeling is an opt-in feature because:\\n\\n  return newProps;\\n};\\n\\nvar Insertion = function Insertion(_ref) {\\n  var cache = _ref.cache,\\n      serialized = _ref.serialized,\\n      isStringTag = _ref.isStringTag;\\n  registerStyles(cache, serialized, isStringTag);\\n  useInsertionEffectAlwaysWithSyncFallback(function () {\\n    return insertStyles(cache, serialized, isStringTag);\\n  });\\n\\n  return null;\\n};\\n\\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\\n  // not passing the registered cache to serializeStyles because it would\\n  // make certain babel optimisations not possible\\n\\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\\n    cssProp = cache.registered[cssProp];\\n  }\\n\\n  var WrappedComponent = props[typePropName];\\n  var registeredStyles = [cssProp];\\n  var className = '';\\n\\n  if (typeof props.className === 'string') {\\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\\n  } else if (props.className != null) {\\n    className = props.className + \\\" \\\";\\n  }\\n\\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\\n\\n  className += cache.key + \\\"-\\\" + serialized.name;\\n  var newProps = {};\\n\\n  for (var _key2 in props) {\\n    if (hasOwn.call(props, _key2) && _key2 !== 'css' && _key2 !== typePropName && (!isDevelopment )) {\\n      newProps[_key2] = props[_key2];\\n    }\\n  }\\n\\n  newProps.className = className;\\n\\n  if (ref) {\\n    newProps.ref = ref;\\n  }\\n\\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\\n    cache: cache,\\n    serialized: serialized,\\n    isStringTag: typeof WrappedComponent === 'string'\\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\\n});\\n\\nvar Emotion$1 = Emotion;\\n\\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwn as h, isDevelopment as i, useTheme as u, withEmotionCache as w };\\n\",\"'use client';\\n\\nimport * as React from 'react';\\nimport { ThemeContext } from '@mui/styled-engine';\\nfunction isObjectEmpty(obj) {\\n  return Object.keys(obj).length === 0;\\n}\\nfunction useTheme(defaultTheme = null) {\\n  const contextTheme = React.useContext(ThemeContext);\\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\\n}\\nexport default useTheme;\",\"import * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst RtlContext = /*#__PURE__*/React.createContext();\\nfunction RtlProvider({\\n  value,\\n  ...props\\n}) {\\n  return /*#__PURE__*/_jsx(RtlContext.Provider, {\\n    value: value ?? true,\\n    ...props\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? RtlProvider.propTypes = {\\n  children: PropTypes.node,\\n  value: PropTypes.bool\\n} : void 0;\\nexport const useRtl = () => {\\n  const value = React.useContext(RtlContext);\\n  return value ?? false;\\n};\\nexport default RtlProvider;\",\"/**\\n * Add keys, values of `defaultProps` that does not exist in `props`\\n * @param defaultProps\\n * @param props\\n * @returns resolved props\\n */\\nexport default function resolveProps(defaultProps, props) {\\n  const output = {\\n    ...props\\n  };\\n  for (const key in defaultProps) {\\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\\n      const propName = key;\\n      if (propName === 'components' || propName === 'slots') {\\n        output[propName] = {\\n          ...defaultProps[propName],\\n          ...output[propName]\\n        };\\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\\n        const defaultSlotProps = defaultProps[propName];\\n        const slotProps = props[propName];\\n        if (!slotProps) {\\n          output[propName] = defaultSlotProps || {};\\n        } else if (!defaultSlotProps) {\\n          output[propName] = slotProps;\\n        } else {\\n          output[propName] = {\\n            ...slotProps\\n          };\\n          for (const slotKey in defaultSlotProps) {\\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\\n              const slotPropName = slotKey;\\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\\n            }\\n          }\\n        }\\n      } else if (output[propName] === undefined) {\\n        output[propName] = defaultProps[propName];\\n      }\\n    }\\n  }\\n  return output;\\n}\",\"'use client';\\n\\nimport * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport resolveProps from '@mui/utils/resolveProps';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\\nfunction DefaultPropsProvider({\\n  value,\\n  children\\n}) {\\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\\n    value: value,\\n    children: children\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\\n  // \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Warning \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n  // \u2502 These PropTypes are generated from the TypeScript type definitions. \u2502\\n  // \u2502 To update them, edit the TypeScript types and run `pnpm proptypes`. \u2502\\n  // \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n  /**\\n   * @ignore\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * @ignore\\n   */\\n  value: PropTypes.object\\n} : void 0;\\nfunction getThemeProps(params) {\\n  const {\\n    theme,\\n    name,\\n    props\\n  } = params;\\n  if (!theme || !theme.components || !theme.components[name]) {\\n    return props;\\n  }\\n  const config = theme.components[name];\\n  if (config.defaultProps) {\\n    // compatible with v5 signature\\n    return resolveProps(config.defaultProps, props);\\n  }\\n  if (!config.styleOverrides && !config.variants) {\\n    // v6 signature, no property 'defaultProps'\\n    return resolveProps(config, props);\\n  }\\n  return props;\\n}\\nexport function useDefaultProps({\\n  props,\\n  name\\n}) {\\n  const ctx = React.useContext(PropsContext);\\n  return getThemeProps({\\n    props,\\n    name,\\n    theme: {\\n      components: ctx\\n    }\\n  });\\n}\\nexport default DefaultPropsProvider;\",\"'use client';\\n\\nimport * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\\nimport exactProp from '@mui/utils/exactProp';\\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\\nimport useThemeWithoutDefault from \\\"../useThemeWithoutDefault/index.js\\\";\\nimport RtlProvider from \\\"../RtlProvider/index.js\\\";\\nimport DefaultPropsProvider from \\\"../DefaultPropsProvider/index.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst EMPTY_THEME = {};\\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\\n  return React.useMemo(() => {\\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\\n    if (typeof localTheme === 'function') {\\n      const mergedTheme = localTheme(resolvedTheme);\\n      const result = themeId ? {\\n        ...upperTheme,\\n        [themeId]: mergedTheme\\n      } : mergedTheme;\\n      // must return a function for the private theme to NOT merge with the upper theme.\\n      // see the test case \\\"use provided theme from a callback\\\" in ThemeProvider.test.js\\n      if (isPrivate) {\\n        return () => result;\\n      }\\n      return result;\\n    }\\n    return themeId ? {\\n      ...upperTheme,\\n      [themeId]: localTheme\\n    } : {\\n      ...upperTheme,\\n      ...localTheme\\n    };\\n  }, [themeId, upperTheme, localTheme, isPrivate]);\\n}\\n\\n/**\\n * This component makes the `theme` available down the React tree.\\n * It should preferably be used at **the root of your component tree**.\\n *\\n * <ThemeProvider theme={theme}> // existing use case\\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\\n */\\nfunction ThemeProvider(props) {\\n  const {\\n    children,\\n    theme: localTheme,\\n    themeId\\n  } = props;\\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\\\n'));\\n    }\\n  }\\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\\n  const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';\\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\\n    theme: privateTheme,\\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\\n      value: engineTheme,\\n      children: /*#__PURE__*/_jsx(RtlProvider, {\\n        value: rtlValue,\\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\\n          value: themeId ? engineTheme[themeId].components : engineTheme.components,\\n          children: children\\n        })\\n      })\\n    })\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\\n  // \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Warning \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n  // \u2502 These PropTypes are generated from the TypeScript type definitions. \u2502\\n  // \u2502    To update them, edit the d.ts file and run `pnpm proptypes`.     \u2502\\n  // \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n  /**\\n   * Your component tree.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * A theme object. You can provide a function to extend the outer theme.\\n   */\\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\\n  /**\\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\\n   */\\n  themeId: PropTypes.string\\n} : void 0;\\nif (process.env.NODE_ENV !== 'production') {\\n  process.env.NODE_ENV !== \\\"production\\\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\\n}\\nexport default ThemeProvider;\",\"export default '$$material';\",\"'use client';\\n\\nimport * as React from 'react';\\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\\nimport THEME_ID from \\\"./identifier.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport default function ThemeProviderNoVars({\\n  theme: themeInput,\\n  ...props\\n}) {\\n  const scopedTheme = THEME_ID in themeInput ? themeInput[THEME_ID] : undefined;\\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\\n    ...props,\\n    themeId: scopedTheme ? THEME_ID : undefined,\\n    theme: scopedTheme || themeInput\\n  });\\n}\",\"import { h as hasOwn, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isDevelopment } from './emotion-element-f0de968e.browser.esm.js';\\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-f0de968e.browser.esm.js';\\nimport * as React from 'react';\\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\\nimport { serializeStyles } from '@emotion/serialize';\\nimport '@emotion/cache';\\nimport '@babel/runtime/helpers/extends';\\nimport '@emotion/weak-memoize';\\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\\nimport 'hoist-non-react-statics';\\n\\nvar jsx = function jsx(type, props) {\\n  // eslint-disable-next-line prefer-rest-params\\n  var args = arguments;\\n\\n  if (props == null || !hasOwn.call(props, 'css')) {\\n    return React.createElement.apply(undefined, args);\\n  }\\n\\n  var argsLength = args.length;\\n  var createElementArgArray = new Array(argsLength);\\n  createElementArgArray[0] = Emotion;\\n  createElementArgArray[1] = createEmotionProps(type, props);\\n\\n  for (var i = 2; i < argsLength; i++) {\\n    createElementArgArray[i] = args[i];\\n  }\\n\\n  return React.createElement.apply(null, createElementArgArray);\\n};\\n\\n(function (_jsx) {\\n  var JSX;\\n\\n  (function (_JSX) {})(JSX || (JSX = _jsx.JSX || (_jsx.JSX = {})));\\n})(jsx || (jsx = {}));\\n\\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\\n// initial client-side render from SSR, use place of hydrating tag\\n\\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\\n\\n  var styles = props.styles;\\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\\n  // but it is based on a constant that will never change at runtime\\n  // it's effectively like having two implementations and switching them out\\n  // so it's not actually breaking anything\\n\\n\\n  var sheetRef = React.useRef();\\n  useInsertionEffectWithLayoutFallback(function () {\\n    var key = cache.key + \\\"-global\\\"; // use case of https://github.com/emotion-js/emotion/issues/2675\\n\\n    var sheet = new cache.sheet.constructor({\\n      key: key,\\n      nonce: cache.sheet.nonce,\\n      container: cache.sheet.container,\\n      speedy: cache.sheet.isSpeedy\\n    });\\n    var rehydrating = false;\\n    var node = document.querySelector(\\\"style[data-emotion=\\\\\\\"\\\" + key + \\\" \\\" + serialized.name + \\\"\\\\\\\"]\\\");\\n\\n    if (cache.sheet.tags.length) {\\n      sheet.before = cache.sheet.tags[0];\\n    }\\n\\n    if (node !== null) {\\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\\n\\n      node.setAttribute('data-emotion', key);\\n      sheet.hydrate([node]);\\n    }\\n\\n    sheetRef.current = [sheet, rehydrating];\\n    return function () {\\n      sheet.flush();\\n    };\\n  }, [cache]);\\n  useInsertionEffectWithLayoutFallback(function () {\\n    var sheetRefCurrent = sheetRef.current;\\n    var sheet = sheetRefCurrent[0],\\n        rehydrating = sheetRefCurrent[1];\\n\\n    if (rehydrating) {\\n      sheetRefCurrent[1] = false;\\n      return;\\n    }\\n\\n    if (serialized.next !== undefined) {\\n      // insert keyframes\\n      insertStyles(cache, serialized.next, true);\\n    }\\n\\n    if (sheet.tags.length) {\\n      // if this doesn't exist then it will be null so the style element will be appended\\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\\n      sheet.before = element;\\n      sheet.flush();\\n    }\\n\\n    cache.insert(\\\"\\\", serialized, sheet, false);\\n  }, [cache, serialized.name]);\\n  return null;\\n});\\n\\nfunction css() {\\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n    args[_key] = arguments[_key];\\n  }\\n\\n  return serializeStyles(args);\\n}\\n\\nfunction keyframes() {\\n  var insertable = css.apply(void 0, arguments);\\n  var name = \\\"animation-\\\" + insertable.name;\\n  return {\\n    name: name,\\n    styles: \\\"@keyframes \\\" + name + \\\"{\\\" + insertable.styles + \\\"}\\\",\\n    anim: 1,\\n    toString: function toString() {\\n      return \\\"_EMO_\\\" + this.name + \\\"_\\\" + this.styles + \\\"_EMO_\\\";\\n    }\\n  };\\n}\\n\\nvar classnames = function classnames(args) {\\n  var len = args.length;\\n  var i = 0;\\n  var cls = '';\\n\\n  for (; i < len; i++) {\\n    var arg = args[i];\\n    if (arg == null) continue;\\n    var toAdd = void 0;\\n\\n    switch (typeof arg) {\\n      case 'boolean':\\n        break;\\n\\n      case 'object':\\n        {\\n          if (Array.isArray(arg)) {\\n            toAdd = classnames(arg);\\n          } else {\\n\\n            toAdd = '';\\n\\n            for (var k in arg) {\\n              if (arg[k] && k) {\\n                toAdd && (toAdd += ' ');\\n                toAdd += k;\\n              }\\n            }\\n          }\\n\\n          break;\\n        }\\n\\n      default:\\n        {\\n          toAdd = arg;\\n        }\\n    }\\n\\n    if (toAdd) {\\n      cls && (cls += ' ');\\n      cls += toAdd;\\n    }\\n  }\\n\\n  return cls;\\n};\\n\\nfunction merge(registered, css, className) {\\n  var registeredStyles = [];\\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\\n\\n  if (registeredStyles.length < 2) {\\n    return className;\\n  }\\n\\n  return rawClassName + css(registeredStyles);\\n}\\n\\nvar Insertion = function Insertion(_ref) {\\n  var cache = _ref.cache,\\n      serializedArr = _ref.serializedArr;\\n  useInsertionEffectAlwaysWithSyncFallback(function () {\\n\\n    for (var i = 0; i < serializedArr.length; i++) {\\n      insertStyles(cache, serializedArr[i], false);\\n    }\\n  });\\n\\n  return null;\\n};\\n\\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\\n  var hasRendered = false;\\n  var serializedArr = [];\\n\\n  var css = function css() {\\n    if (hasRendered && isDevelopment) {\\n      throw new Error('css can only be used during render');\\n    }\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    var serialized = serializeStyles(args, cache.registered);\\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\\n\\n    registerStyles(cache, serialized, false);\\n    return cache.key + \\\"-\\\" + serialized.name;\\n  };\\n\\n  var cx = function cx() {\\n    if (hasRendered && isDevelopment) {\\n      throw new Error('cx can only be used during render');\\n    }\\n\\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n      args[_key2] = arguments[_key2];\\n    }\\n\\n    return merge(cache.registered, css, classnames(args));\\n  };\\n\\n  var content = {\\n    css: css,\\n    cx: cx,\\n    theme: React.useContext(ThemeContext)\\n  };\\n  var ele = props.children(content);\\n  hasRendered = true;\\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\\n    cache: cache,\\n    serializedArr: serializedArr\\n  }), ele);\\n});\\n\\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\\n\",\"'use client';\\n\\nimport * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Global } from '@emotion/react';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nfunction isEmpty(obj) {\\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\\n}\\nexport default function GlobalStyles(props) {\\n  const {\\n    styles,\\n    defaultTheme = {}\\n  } = props;\\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\\n  return /*#__PURE__*/_jsx(Global, {\\n    styles: globalStyles\\n  });\\n}\\nprocess.env.NODE_ENV !== \\\"production\\\" ? GlobalStyles.propTypes = {\\n  defaultTheme: PropTypes.object,\\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\\n} : void 0;\",\"/**\\n * Split this component for RSC import\\n */\\nimport * as React from 'react';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\\nexport default function InitColorSchemeScript(options) {\\n  const {\\n    defaultMode = 'system',\\n    defaultLightColorScheme = 'light',\\n    defaultDarkColorScheme = 'dark',\\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\\n    colorSchemeNode = 'document.documentElement',\\n    nonce\\n  } = options || {};\\n  let setter = '';\\n  let attribute = initialAttribute;\\n  if (initialAttribute === 'class') {\\n    attribute = '.%s';\\n  }\\n  if (initialAttribute === 'data') {\\n    attribute = '[data-%s]';\\n  }\\n  if (attribute.startsWith('.')) {\\n    const selector = attribute.substring(1);\\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\\n  }\\n  const matches = attribute.match(/\\\\[([^\\\\]]+)\\\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\\n  if (matches) {\\n    const [attr, value] = matches[1].split('=');\\n    if (!value) {\\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\\n    }\\n    setter += `\\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\\\"\\\"'});`;\\n  } else {\\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\\n  }\\n  return /*#__PURE__*/_jsx(\\\"script\\\", {\\n    suppressHydrationWarning: true,\\n    nonce: typeof window === 'undefined' ? nonce : ''\\n    // eslint-disable-next-line react/no-danger\\n    ,\\n    dangerouslySetInnerHTML: {\\n      __html: `(function() {\\ntry {\\n  let colorScheme = '';\\n  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\\n  if (mode === 'system') {\\n    // handle system mode\\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\\n    if (mql.matches) {\\n      colorScheme = dark\\n    } else {\\n      colorScheme = light\\n    }\\n  }\\n  if (mode === 'light') {\\n    colorScheme = light;\\n  }\\n  if (mode === 'dark') {\\n    colorScheme = dark;\\n  }\\n  if (colorScheme) {\\n    ${setter}\\n  }\\n} catch(e){}})();`\\n    }\\n  }, \\\"mui-color-scheme-init\\\");\\n}\",\"'use client';\\n\\nimport * as React from 'react';\\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from \\\"../InitColorSchemeScript/InitColorSchemeScript.js\\\";\\nexport function getSystemMode(mode) {\\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\\n    if (mql.matches) {\\n      return 'dark';\\n    }\\n    return 'light';\\n  }\\n  return undefined;\\n}\\nfunction processState(state, callback) {\\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\\n    return callback('light');\\n  }\\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\\n    return callback('dark');\\n  }\\n  return undefined;\\n}\\nexport function getColorScheme(state) {\\n  return processState(state, mode => {\\n    if (mode === 'light') {\\n      return state.lightColorScheme;\\n    }\\n    if (mode === 'dark') {\\n      return state.darkColorScheme;\\n    }\\n    return undefined;\\n  });\\n}\\nfunction initializeValue(key, defaultValue) {\\n  if (typeof window === 'undefined') {\\n    return undefined;\\n  }\\n  let value;\\n  try {\\n    value = localStorage.getItem(key) || undefined;\\n    if (!value) {\\n      // the first time that user enters the site.\\n      localStorage.setItem(key, defaultValue);\\n    }\\n  } catch {\\n    // Unsupported\\n  }\\n  return value || defaultValue;\\n}\\nexport default function useCurrentColorScheme(options) {\\n  const {\\n    defaultMode = 'light',\\n    defaultLightColorScheme,\\n    defaultDarkColorScheme,\\n    supportedColorSchemes = [],\\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    storageWindow = typeof window === 'undefined' ? undefined : window,\\n    noSsr = false\\n  } = options;\\n  const joinedColorSchemes = supportedColorSchemes.join(',');\\n  const isMultiSchemes = supportedColorSchemes.length > 1;\\n  const [state, setState] = React.useState(() => {\\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\\n    return {\\n      mode: initialMode,\\n      systemMode: getSystemMode(initialMode),\\n      lightColorScheme,\\n      darkColorScheme\\n    };\\n  });\\n  const [isClient, setIsClient] = React.useState(noSsr || !isMultiSchemes);\\n  React.useEffect(() => {\\n    setIsClient(true); // to rerender the component after hydration\\n  }, []);\\n  const colorScheme = getColorScheme(state);\\n  const setMode = React.useCallback(mode => {\\n    setState(currentState => {\\n      if (mode === currentState.mode) {\\n        // do nothing if mode does not change\\n        return currentState;\\n      }\\n      const newMode = mode ?? defaultMode;\\n      try {\\n        localStorage.setItem(modeStorageKey, newMode);\\n      } catch {\\n        // Unsupported\\n      }\\n      return {\\n        ...currentState,\\n        mode: newMode,\\n        systemMode: getSystemMode(newMode)\\n      };\\n    });\\n  }, [modeStorageKey, defaultMode]);\\n  const setColorScheme = React.useCallback(value => {\\n    if (!value) {\\n      setState(currentState => {\\n        try {\\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\\n        } catch {\\n          // Unsupported\\n        }\\n        return {\\n          ...currentState,\\n          lightColorScheme: defaultLightColorScheme,\\n          darkColorScheme: defaultDarkColorScheme\\n        };\\n      });\\n    } else if (typeof value === 'string') {\\n      if (value && !joinedColorSchemes.includes(value)) {\\n        console.error(`\\\\`${value}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n      } else {\\n        setState(currentState => {\\n          const newState = {\\n            ...currentState\\n          };\\n          processState(currentState, mode => {\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\\n            } catch {\\n              // Unsupported\\n            }\\n            if (mode === 'light') {\\n              newState.lightColorScheme = value;\\n            }\\n            if (mode === 'dark') {\\n              newState.darkColorScheme = value;\\n            }\\n          });\\n          return newState;\\n        });\\n      }\\n    } else {\\n      setState(currentState => {\\n        const newState = {\\n          ...currentState\\n        };\\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\\n        if (newLightColorScheme) {\\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\\n            console.error(`\\\\`${newLightColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n          } else {\\n            newState.lightColorScheme = newLightColorScheme;\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\\n            } catch (error) {\\n              // Unsupported\\n            }\\n          }\\n        }\\n        if (newDarkColorScheme) {\\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\\n            console.error(`\\\\`${newDarkColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n          } else {\\n            newState.darkColorScheme = newDarkColorScheme;\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\\n            } catch (error) {\\n              // Unsupported\\n            }\\n          }\\n        }\\n        return newState;\\n      });\\n    }\\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\\n  const handleMediaQuery = React.useCallback(event => {\\n    if (state.mode === 'system') {\\n      setState(currentState => {\\n        const systemMode = event?.matches ? 'dark' : 'light';\\n\\n        // Early exit, nothing changed.\\n        if (currentState.systemMode === systemMode) {\\n          return currentState;\\n        }\\n        return {\\n          ...currentState,\\n          systemMode\\n        };\\n      });\\n    }\\n  }, [state.mode]);\\n\\n  // Ref hack to avoid adding handleMediaQuery as a dep\\n  const mediaListener = React.useRef(handleMediaQuery);\\n  mediaListener.current = handleMediaQuery;\\n  React.useEffect(() => {\\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\\n      return undefined;\\n    }\\n    const handler = (...args) => mediaListener.current(...args);\\n\\n    // Always listen to System preference\\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\\n\\n    // Intentionally use deprecated listener methods to support iOS & old browsers\\n    media.addListener(handler);\\n    handler(media);\\n    return () => {\\n      media.removeListener(handler);\\n    };\\n  }, [isMultiSchemes]);\\n\\n  // Handle when localStorage has changed\\n  React.useEffect(() => {\\n    if (storageWindow && isMultiSchemes) {\\n      const handleStorage = event => {\\n        const value = event.newValue;\\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\\n          // If the key is deleted, value will be null then reset color scheme to the default one.\\n          if (event.key.endsWith('light')) {\\n            setColorScheme({\\n              light: value\\n            });\\n          }\\n          if (event.key.endsWith('dark')) {\\n            setColorScheme({\\n              dark: value\\n            });\\n          }\\n        }\\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\\n          setMode(value || defaultMode);\\n        }\\n      };\\n      // For syncing color-scheme changes between iframes\\n      storageWindow.addEventListener('storage', handleStorage);\\n      return () => {\\n        storageWindow.removeEventListener('storage', handleStorage);\\n      };\\n    }\\n    return undefined;\\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes]);\\n  return {\\n    ...state,\\n    mode: isClient ? state.mode : undefined,\\n    systemMode: isClient ? state.systemMode : undefined,\\n    colorScheme: isClient ? colorScheme : undefined,\\n    setMode,\\n    setColorScheme\\n  };\\n}\",\"import * as React from 'react';\\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport const defaultConfig = {\\n  attribute: 'data-mui-color-scheme',\\n  colorSchemeStorageKey: 'mui-color-scheme',\\n  defaultLightColorScheme: 'light',\\n  defaultDarkColorScheme: 'dark',\\n  modeStorageKey: 'mui-mode'\\n};\\nexport default (function InitColorSchemeScript(props) {\\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\\n    ...defaultConfig,\\n    ...props\\n  });\\n});\",\"'use client';\\n\\nimport * as React from 'react';\\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\\nimport createTheme from \\\"./createTheme.js\\\";\\nimport createTypography from \\\"./createTypography.js\\\";\\nimport THEME_ID from \\\"./identifier.js\\\";\\nimport { defaultConfig } from \\\"../InitColorSchemeScript/InitColorSchemeScript.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst {\\n  CssVarsProvider: InternalCssVarsProvider,\\n  useColorScheme,\\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\\n} = createCssVarsProvider({\\n  themeId: THEME_ID,\\n  // @ts-ignore ignore module augmentation tests\\n  theme: () => createTheme({\\n    cssVariables: true\\n  }),\\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\\n  modeStorageKey: defaultConfig.modeStorageKey,\\n  defaultColorScheme: {\\n    light: defaultConfig.defaultLightColorScheme,\\n    dark: defaultConfig.defaultDarkColorScheme\\n  },\\n  resolveTheme: theme => {\\n    const newTheme = {\\n      ...theme,\\n      typography: createTypography(theme.palette, theme.typography)\\n    };\\n    newTheme.unstable_sx = function sx(props) {\\n      return styleFunctionSx({\\n        sx: props,\\n        theme: this\\n      });\\n    };\\n    return newTheme;\\n  }\\n});\\nlet warnedOnce = false;\\n\\n// TODO: remove in v7\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\nfunction Experimental_CssVarsProvider(props) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (!warnedOnce) {\\n      console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \\\"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\\\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\\\n'));\\n      warnedOnce = true;\\n    }\\n  }\\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\\n    ...props\\n  });\\n}\\nlet warnedInitScriptOnce = false;\\n\\n// TODO: remove in v7\\nconst getInitColorSchemeScript = params => {\\n  if (!warnedInitScriptOnce) {\\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \\\"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\\\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\\\n'));\\n    warnedInitScriptOnce = true;\\n  }\\n  return deprecatedGetInitColorSchemeScript(params);\\n};\\n\\n/**\\n * TODO: remove this export in v7\\n * @deprecated\\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\\n *\\n * You should use `ThemeProvider` and `createTheme()` instead:\\n *\\n * ```diff\\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\\n *\\n * - const theme = extendTheme();\\n * + const theme = createTheme({\\n * +   cssVariables: true,\\n * +   colorSchemes: { light: true, dark: true },\\n * + });\\n *\\n * - <CssVarsProvider theme={theme}>\\n * + <ThemeProvider theme={theme}>\\n * ```\\n *\\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\\n */\\nexport const CssVarsProvider = InternalCssVarsProvider;\\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };\",\"import * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { GlobalStyles } from '@mui/styled-engine';\\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\\nimport ThemeProvider from \\\"../ThemeProvider/index.js\\\";\\nimport InitColorSchemeScript, { DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from \\\"../InitColorSchemeScript/InitColorSchemeScript.js\\\";\\nimport useCurrentColorScheme from \\\"./useCurrentColorScheme.js\\\";\\nimport { jsx as _jsx, jsxs as _jsxs } from \\\"react/jsx-runtime\\\";\\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\\nexport default function createCssVarsProvider(options) {\\n  const {\\n    themeId,\\n    /**\\n     * This `theme` object needs to follow a certain structure to\\n     * be used correctly by the finel `CssVarsProvider`. It should have a\\n     * `colorSchemes` key with the light and dark (and any other) palette.\\n     * It should also ideally have a vars object created using `prepareCssVars`.\\n     */\\n    theme: defaultTheme = {},\\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\\n    defaultColorScheme,\\n    resolveTheme\\n  } = options;\\n  const defaultContext = {\\n    allColorSchemes: [],\\n    colorScheme: undefined,\\n    darkColorScheme: undefined,\\n    lightColorScheme: undefined,\\n    mode: undefined,\\n    setColorScheme: () => {},\\n    setMode: () => {},\\n    systemMode: undefined\\n  };\\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\\n  if (process.env.NODE_ENV !== 'production') {\\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\\n  }\\n  const useColorScheme = () => React.useContext(ColorSchemeContext) || defaultContext;\\n  const defaultColorSchemes = {};\\n  const defaultComponents = {};\\n  function CssVarsProvider(props) {\\n    const {\\n      children,\\n      theme: themeProp,\\n      modeStorageKey = defaultModeStorageKey,\\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\\n      disableTransitionOnChange = designSystemTransitionOnChange,\\n      storageWindow = typeof window === 'undefined' ? undefined : window,\\n      documentNode = typeof document === 'undefined' ? undefined : document,\\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\\n      disableNestedContext = false,\\n      disableStyleSheetGeneration = false,\\n      defaultMode: initialMode = 'system',\\n      noSsr\\n    } = props;\\n    const hasMounted = React.useRef(false);\\n    const upperTheme = muiUseTheme();\\n    const ctx = React.useContext(ColorSchemeContext);\\n    const nested = !!ctx && !disableNestedContext;\\n    const initialTheme = React.useMemo(() => {\\n      if (themeProp) {\\n        return themeProp;\\n      }\\n      return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;\\n    }, [themeProp]);\\n    const scopedTheme = initialTheme[themeId];\\n    const restThemeProp = scopedTheme || initialTheme;\\n    const {\\n      colorSchemes = defaultColorSchemes,\\n      components = defaultComponents,\\n      cssVarPrefix\\n    } = restThemeProp;\\n    const joinedColorSchemes = Object.keys(colorSchemes).filter(k => !!colorSchemes[k]).join(',');\\n    const allColorSchemes = React.useMemo(() => joinedColorSchemes.split(','), [joinedColorSchemes]);\\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\\n    const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;\\n\\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\\n    const {\\n      mode: stateMode,\\n      setMode,\\n      systemMode,\\n      lightColorScheme,\\n      darkColorScheme,\\n      colorScheme: stateColorScheme,\\n      setColorScheme\\n    } = useCurrentColorScheme({\\n      supportedColorSchemes: allColorSchemes,\\n      defaultLightColorScheme,\\n      defaultDarkColorScheme,\\n      modeStorageKey,\\n      colorSchemeStorageKey,\\n      defaultMode,\\n      storageWindow,\\n      noSsr\\n    });\\n    let mode = stateMode;\\n    let colorScheme = stateColorScheme;\\n    if (nested) {\\n      mode = ctx.mode;\\n      colorScheme = ctx.colorScheme;\\n    }\\n    const memoTheme = React.useMemo(() => {\\n      // `colorScheme` is undefined on the server and hydration phase\\n      const calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;\\n\\n      // 2. get the `vars` object that refers to the CSS custom properties\\n      const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;\\n\\n      // 3. Start composing the theme object\\n      const theme = {\\n        ...restThemeProp,\\n        components,\\n        colorSchemes,\\n        cssVarPrefix,\\n        vars: themeVars\\n      };\\n      if (typeof theme.generateSpacing === 'function') {\\n        theme.spacing = theme.generateSpacing();\\n      }\\n\\n      // 4. Resolve the color scheme and merge it to the theme\\n      if (calculatedColorScheme) {\\n        const scheme = colorSchemes[calculatedColorScheme];\\n        if (scheme && typeof scheme === 'object') {\\n          // 4.1 Merge the selected color scheme to the theme\\n          Object.keys(scheme).forEach(schemeKey => {\\n            if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\\n              // shallow merge the 1st level structure of the theme.\\n              theme[schemeKey] = {\\n                ...theme[schemeKey],\\n                ...scheme[schemeKey]\\n              };\\n            } else {\\n              theme[schemeKey] = scheme[schemeKey];\\n            }\\n          });\\n        }\\n      }\\n      return resolveTheme ? resolveTheme(theme) : theme;\\n    }, [restThemeProp, colorScheme, components, colorSchemes, cssVarPrefix]);\\n\\n    // 5. Declaring effects\\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\\n    const colorSchemeSelector = restThemeProp.colorSchemeSelector;\\n    React.useEffect(() => {\\n      if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {\\n        const selector = colorSchemeSelector;\\n        let rule = colorSchemeSelector;\\n        if (selector === 'class') {\\n          rule = `.%s`;\\n        }\\n        if (selector === 'data') {\\n          rule = `[data-%s]`;\\n        }\\n        if (selector?.startsWith('data-') && !selector.includes('%s')) {\\n          // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\\\"%s\\\"]'\\n          rule = `[${selector}=\\\"%s\\\"]`;\\n        }\\n        if (rule.startsWith('.')) {\\n          colorSchemeNode.classList.remove(...allColorSchemes.map(scheme => rule.substring(1).replace('%s', scheme)));\\n          colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));\\n        } else {\\n          const matches = rule.replace('%s', colorScheme).match(/\\\\[([^\\\\]]+)\\\\]/);\\n          if (matches) {\\n            const [attr, value] = matches[1].split('=');\\n            if (!value) {\\n              // for attributes like `data-theme-dark`, `data-theme-light`\\n              // remove all the existing data attributes before setting the new one\\n              allColorSchemes.forEach(scheme => {\\n                colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));\\n              });\\n            }\\n            colorSchemeNode.setAttribute(attr, value ? value.replace(/\\\"|'/g, '') : '');\\n          } else {\\n            colorSchemeNode.setAttribute(rule, colorScheme);\\n          }\\n        }\\n      }\\n    }, [colorScheme, colorSchemeSelector, colorSchemeNode, allColorSchemes]);\\n\\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\\n    React.useEffect(() => {\\n      let timer;\\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\\n        const css = documentNode.createElement('style');\\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\\n        documentNode.head.appendChild(css);\\n\\n        // Force browser repaint\\n        (() => window.getComputedStyle(documentNode.body))();\\n        timer = setTimeout(() => {\\n          documentNode.head.removeChild(css);\\n        }, 1);\\n      }\\n      return () => {\\n        clearTimeout(timer);\\n      };\\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\\n    React.useEffect(() => {\\n      hasMounted.current = true;\\n      return () => {\\n        hasMounted.current = false;\\n      };\\n    }, []);\\n    const contextValue = React.useMemo(() => ({\\n      allColorSchemes,\\n      colorScheme,\\n      darkColorScheme,\\n      lightColorScheme,\\n      mode,\\n      setColorScheme,\\n      setMode: process.env.NODE_ENV === 'production' ? setMode : newMode => {\\n        if (memoTheme.colorSchemeSelector === 'media') {\\n          console.error(['MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).', 'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.', 'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'].join('\\\\n'));\\n        }\\n        setMode(newMode);\\n      },\\n      systemMode\\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode, memoTheme.colorSchemeSelector]);\\n    let shouldGenerateStyleSheet = true;\\n    if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) {\\n      shouldGenerateStyleSheet = false;\\n    }\\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\\n      children: [/*#__PURE__*/_jsx(ThemeProvider, {\\n        themeId: scopedTheme ? themeId : undefined,\\n        theme: memoTheme,\\n        children: children\\n      }), shouldGenerateStyleSheet && /*#__PURE__*/_jsx(GlobalStyles, {\\n        styles: memoTheme.generateStyleSheets?.() || []\\n      })]\\n    });\\n    if (nested) {\\n      return element;\\n    }\\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\\n      value: contextValue,\\n      children: element\\n    });\\n  }\\n  process.env.NODE_ENV !== \\\"production\\\" ? CssVarsProvider.propTypes = {\\n    /**\\n     * The component tree.\\n     */\\n    children: PropTypes.node,\\n    /**\\n     * The node used to attach the color-scheme attribute\\n     */\\n    colorSchemeNode: PropTypes.any,\\n    /**\\n     * localStorage key used to store `colorScheme`\\n     */\\n    colorSchemeStorageKey: PropTypes.string,\\n    /**\\n     * The default mode when the storage is empty,\\n     * require the theme to have `colorSchemes` with light and dark.\\n     */\\n    defaultMode: PropTypes.string,\\n    /**\\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\\n     */\\n    disableNestedContext: PropTypes.bool,\\n    /**\\n     * If `true`, the style sheet won't be generated.\\n     *\\n     * This is useful for controlling nested CssVarsProvider behavior.\\n     */\\n    disableStyleSheetGeneration: PropTypes.bool,\\n    /**\\n     * Disable CSS transitions when switching between modes or color schemes.\\n     */\\n    disableTransitionOnChange: PropTypes.bool,\\n    /**\\n     * The document to attach the attribute to.\\n     */\\n    documentNode: PropTypes.any,\\n    /**\\n     * The key in the local storage used to store current color scheme.\\n     */\\n    modeStorageKey: PropTypes.string,\\n    /**\\n     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.\\n     * You should use this option in conjuction with `InitColorSchemeScript` component.\\n     */\\n    noSsr: PropTypes.bool,\\n    /**\\n     * The window that attaches the 'storage' event listener.\\n     * @default window\\n     */\\n    storageWindow: PropTypes.any,\\n    /**\\n     * The calculated theme object that will be passed through context.\\n     */\\n    theme: PropTypes.object\\n  } : void 0;\\n  const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\\n  const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\\n  const getInitColorSchemeScript = params => InitColorSchemeScript({\\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\\n    defaultLightColorScheme,\\n    defaultDarkColorScheme,\\n    modeStorageKey: defaultModeStorageKey,\\n    ...params\\n  });\\n  return {\\n    CssVarsProvider,\\n    useColorScheme,\\n    getInitColorSchemeScript\\n  };\\n}\",\"'use client';\\n\\nimport * as React from 'react';\\nimport ThemeProviderNoVars from \\\"./ThemeProviderNoVars.js\\\";\\nimport { CssVarsProvider } from \\\"./ThemeProviderWithVars.js\\\";\\nimport THEME_ID from \\\"./identifier.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nexport default function ThemeProvider({\\n  theme,\\n  ...props\\n}) {\\n  if (typeof theme === 'function') {\\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\\n      theme: theme,\\n      ...props\\n    });\\n  }\\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\\n  if (!('colorSchemes' in muiTheme)) {\\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\\n      theme: theme,\\n      ...props\\n    });\\n  }\\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\\n    theme: theme,\\n    ...props\\n  });\\n}\",\"/**\\n * react-router v7.1.1\\n *\\n * Copyright (c) Remix Software Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE.md file in the root directory of this source tree.\\n *\\n * @license MIT\\n */\\n\\n// lib/router/history.ts\\nvar Action = /* @__PURE__ */ ((Action2) => {\\n  Action2[\\\"Pop\\\"] = \\\"POP\\\";\\n  Action2[\\\"Push\\\"] = \\\"PUSH\\\";\\n  Action2[\\\"Replace\\\"] = \\\"REPLACE\\\";\\n  return Action2;\\n})(Action || {});\\nvar PopStateEventType = \\\"popstate\\\";\\nfunction createMemoryHistory(options = {}) {\\n  let { initialEntries = [\\\"/\\\"], initialIndex, v5Compat = false } = options;\\n  let entries;\\n  entries = initialEntries.map(\\n    (entry, index2) => createMemoryLocation(\\n      entry,\\n      typeof entry === \\\"string\\\" ? null : entry.state,\\n      index2 === 0 ? \\\"default\\\" : void 0\\n    )\\n  );\\n  let index = clampIndex(\\n    initialIndex == null ? entries.length - 1 : initialIndex\\n  );\\n  let action = \\\"POP\\\" /* Pop */;\\n  let listener = null;\\n  function clampIndex(n) {\\n    return Math.min(Math.max(n, 0), entries.length - 1);\\n  }\\n  function getCurrentLocation() {\\n    return entries[index];\\n  }\\n  function createMemoryLocation(to, state = null, key) {\\n    let location = createLocation(\\n      entries ? getCurrentLocation().pathname : \\\"/\\\",\\n      to,\\n      state,\\n      key\\n    );\\n    warning(\\n      location.pathname.charAt(0) === \\\"/\\\",\\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\\n        to\\n      )}`\\n    );\\n    return location;\\n  }\\n  function createHref2(to) {\\n    return typeof to === \\\"string\\\" ? to : createPath(to);\\n  }\\n  let history = {\\n    get index() {\\n      return index;\\n    },\\n    get action() {\\n      return action;\\n    },\\n    get location() {\\n      return getCurrentLocation();\\n    },\\n    createHref: createHref2,\\n    createURL(to) {\\n      return new URL(createHref2(to), \\\"http://localhost\\\");\\n    },\\n    encodeLocation(to) {\\n      let path = typeof to === \\\"string\\\" ? parsePath(to) : to;\\n      return {\\n        pathname: path.pathname || \\\"\\\",\\n        search: path.search || \\\"\\\",\\n        hash: path.hash || \\\"\\\"\\n      };\\n    },\\n    push(to, state) {\\n      action = \\\"PUSH\\\" /* Push */;\\n      let nextLocation = createMemoryLocation(to, state);\\n      index += 1;\\n      entries.splice(index, entries.length, nextLocation);\\n      if (v5Compat && listener) {\\n        listener({ action, location: nextLocation, delta: 1 });\\n      }\\n    },\\n    replace(to, state) {\\n      action = \\\"REPLACE\\\" /* Replace */;\\n      let nextLocation = createMemoryLocation(to, state);\\n      entries[index] = nextLocation;\\n      if (v5Compat && listener) {\\n        listener({ action, location: nextLocation, delta: 0 });\\n      }\\n    },\\n    go(delta) {\\n      action = \\\"POP\\\" /* Pop */;\\n      let nextIndex = clampIndex(index + delta);\\n      let nextLocation = entries[nextIndex];\\n      index = nextIndex;\\n      if (listener) {\\n        listener({ action, location: nextLocation, delta });\\n      }\\n    },\\n    listen(fn) {\\n      listener = fn;\\n      return () => {\\n        listener = null;\\n      };\\n    }\\n  };\\n  return history;\\n}\\nfunction createBrowserHistory(options = {}) {\\n  function createBrowserLocation(window2, globalHistory) {\\n    let { pathname, search, hash } = window2.location;\\n    return createLocation(\\n      \\\"\\\",\\n      { pathname, search, hash },\\n      // state defaults to `null` because `window.history.state` does\\n      globalHistory.state && globalHistory.state.usr || null,\\n      globalHistory.state && globalHistory.state.key || \\\"default\\\"\\n    );\\n  }\\n  function createBrowserHref(window2, to) {\\n    return typeof to === \\\"string\\\" ? to : createPath(to);\\n  }\\n  return getUrlBasedHistory(\\n    createBrowserLocation,\\n    createBrowserHref,\\n    null,\\n    options\\n  );\\n}\\nfunction createHashHistory(options = {}) {\\n  function createHashLocation(window2, globalHistory) {\\n    let {\\n      pathname = \\\"/\\\",\\n      search = \\\"\\\",\\n      hash = \\\"\\\"\\n    } = parsePath(window2.location.hash.substring(1));\\n    if (!pathname.startsWith(\\\"/\\\") && !pathname.startsWith(\\\".\\\")) {\\n      pathname = \\\"/\\\" + pathname;\\n    }\\n    return createLocation(\\n      \\\"\\\",\\n      { pathname, search, hash },\\n      // state defaults to `null` because `window.history.state` does\\n      globalHistory.state && globalHistory.state.usr || null,\\n      globalHistory.state && globalHistory.state.key || \\\"default\\\"\\n    );\\n  }\\n  function createHashHref(window2, to) {\\n    let base = window2.document.querySelector(\\\"base\\\");\\n    let href = \\\"\\\";\\n    if (base && base.getAttribute(\\\"href\\\")) {\\n      let url = window2.location.href;\\n      let hashIndex = url.indexOf(\\\"#\\\");\\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\\n    }\\n    return href + \\\"#\\\" + (typeof to === \\\"string\\\" ? to : createPath(to));\\n  }\\n  function validateHashLocation(location, to) {\\n    warning(\\n      location.pathname.charAt(0) === \\\"/\\\",\\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\\n        to\\n      )})`\\n    );\\n  }\\n  return getUrlBasedHistory(\\n    createHashLocation,\\n    createHashHref,\\n    validateHashLocation,\\n    options\\n  );\\n}\\nfunction invariant(value, message) {\\n  if (value === false || value === null || typeof value === \\\"undefined\\\") {\\n    throw new Error(message);\\n  }\\n}\\nfunction warning(cond, message) {\\n  if (!cond) {\\n    if (typeof console !== \\\"undefined\\\") console.warn(message);\\n    try {\\n      throw new Error(message);\\n    } catch (e) {\\n    }\\n  }\\n}\\nfunction createKey() {\\n  return Math.random().toString(36).substring(2, 10);\\n}\\nfunction getHistoryState(location, index) {\\n  return {\\n    usr: location.state,\\n    key: location.key,\\n    idx: index\\n  };\\n}\\nfunction createLocation(current, to, state = null, key) {\\n  let location = {\\n    pathname: typeof current === \\\"string\\\" ? current : current.pathname,\\n    search: \\\"\\\",\\n    hash: \\\"\\\",\\n    ...typeof to === \\\"string\\\" ? parsePath(to) : to,\\n    state,\\n    // TODO: This could be cleaned up.  push/replace should probably just take\\n    // full Locations now and avoid the need to run through this flow at all\\n    // But that's a pretty big refactor to the current test suite so going to\\n    // keep as is for the time being and just let any incoming keys take precedence\\n    key: to && to.key || key || createKey()\\n  };\\n  return location;\\n}\\nfunction createPath({\\n  pathname = \\\"/\\\",\\n  search = \\\"\\\",\\n  hash = \\\"\\\"\\n}) {\\n  if (search && search !== \\\"?\\\")\\n    pathname += search.charAt(0) === \\\"?\\\" ? search : \\\"?\\\" + search;\\n  if (hash && hash !== \\\"#\\\")\\n    pathname += hash.charAt(0) === \\\"#\\\" ? hash : \\\"#\\\" + hash;\\n  return pathname;\\n}\\nfunction parsePath(path) {\\n  let parsedPath = {};\\n  if (path) {\\n    let hashIndex = path.indexOf(\\\"#\\\");\\n    if (hashIndex >= 0) {\\n      parsedPath.hash = path.substring(hashIndex);\\n      path = path.substring(0, hashIndex);\\n    }\\n    let searchIndex = path.indexOf(\\\"?\\\");\\n    if (searchIndex >= 0) {\\n      parsedPath.search = path.substring(searchIndex);\\n      path = path.substring(0, searchIndex);\\n    }\\n    if (path) {\\n      parsedPath.pathname = path;\\n    }\\n  }\\n  return parsedPath;\\n}\\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\\n  let globalHistory = window2.history;\\n  let action = \\\"POP\\\" /* Pop */;\\n  let listener = null;\\n  let index = getIndex();\\n  if (index == null) {\\n    index = 0;\\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \\\"\\\");\\n  }\\n  function getIndex() {\\n    let state = globalHistory.state || { idx: null };\\n    return state.idx;\\n  }\\n  function handlePop() {\\n    action = \\\"POP\\\" /* Pop */;\\n    let nextIndex = getIndex();\\n    let delta = nextIndex == null ? null : nextIndex - index;\\n    index = nextIndex;\\n    if (listener) {\\n      listener({ action, location: history.location, delta });\\n    }\\n  }\\n  function push(to, state) {\\n    action = \\\"PUSH\\\" /* Push */;\\n    let location = createLocation(history.location, to, state);\\n    if (validateLocation) validateLocation(location, to);\\n    index = getIndex() + 1;\\n    let historyState = getHistoryState(location, index);\\n    let url = history.createHref(location);\\n    try {\\n      globalHistory.pushState(historyState, \\\"\\\", url);\\n    } catch (error) {\\n      if (error instanceof DOMException && error.name === \\\"DataCloneError\\\") {\\n        throw error;\\n      }\\n      window2.location.assign(url);\\n    }\\n    if (v5Compat && listener) {\\n      listener({ action, location: history.location, delta: 1 });\\n    }\\n  }\\n  function replace2(to, state) {\\n    action = \\\"REPLACE\\\" /* Replace */;\\n    let location = createLocation(history.location, to, state);\\n    if (validateLocation) validateLocation(location, to);\\n    index = getIndex();\\n    let historyState = getHistoryState(location, index);\\n    let url = history.createHref(location);\\n    globalHistory.replaceState(historyState, \\\"\\\", url);\\n    if (v5Compat && listener) {\\n      listener({ action, location: history.location, delta: 0 });\\n    }\\n  }\\n  function createURL(to) {\\n    let base = window2.location.origin !== \\\"null\\\" ? window2.location.origin : window2.location.href;\\n    let href = typeof to === \\\"string\\\" ? to : createPath(to);\\n    href = href.replace(/ $/, \\\"%20\\\");\\n    invariant(\\n      base,\\n      `No window.location.(origin|href) available to create URL for href: ${href}`\\n    );\\n    return new URL(href, base);\\n  }\\n  let history = {\\n    get action() {\\n      return action;\\n    },\\n    get location() {\\n      return getLocation(window2, globalHistory);\\n    },\\n    listen(fn) {\\n      if (listener) {\\n        throw new Error(\\\"A history only accepts one active listener\\\");\\n      }\\n      window2.addEventListener(PopStateEventType, handlePop);\\n      listener = fn;\\n      return () => {\\n        window2.removeEventListener(PopStateEventType, handlePop);\\n        listener = null;\\n      };\\n    },\\n    createHref(to) {\\n      return createHref2(window2, to);\\n    },\\n    createURL,\\n    encodeLocation(to) {\\n      let url = createURL(to);\\n      return {\\n        pathname: url.pathname,\\n        search: url.search,\\n        hash: url.hash\\n      };\\n    },\\n    push,\\n    replace: replace2,\\n    go(n) {\\n      return globalHistory.go(n);\\n    }\\n  };\\n  return history;\\n}\\n\\n// lib/router/utils.ts\\nvar immutableRouteKeys = /* @__PURE__ */ new Set([\\n  \\\"lazy\\\",\\n  \\\"caseSensitive\\\",\\n  \\\"path\\\",\\n  \\\"id\\\",\\n  \\\"index\\\",\\n  \\\"children\\\"\\n]);\\nfunction isIndexRoute(route) {\\n  return route.index === true;\\n}\\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\\n  return routes.map((route, index) => {\\n    let treePath = [...parentPath, String(index)];\\n    let id = typeof route.id === \\\"string\\\" ? route.id : treePath.join(\\\"-\\\");\\n    invariant(\\n      route.index !== true || !route.children,\\n      `Cannot specify children on an index route`\\n    );\\n    invariant(\\n      !manifest[id],\\n      `Found a route id collision on id \\\"${id}\\\".  Route id's must be globally unique within Data Router usages`\\n    );\\n    if (isIndexRoute(route)) {\\n      let indexRoute = {\\n        ...route,\\n        ...mapRouteProperties2(route),\\n        id\\n      };\\n      manifest[id] = indexRoute;\\n      return indexRoute;\\n    } else {\\n      let pathOrLayoutRoute = {\\n        ...route,\\n        ...mapRouteProperties2(route),\\n        id,\\n        children: void 0\\n      };\\n      manifest[id] = pathOrLayoutRoute;\\n      if (route.children) {\\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\\n          route.children,\\n          mapRouteProperties2,\\n          treePath,\\n          manifest\\n        );\\n      }\\n      return pathOrLayoutRoute;\\n    }\\n  });\\n}\\nfunction matchRoutes(routes, locationArg, basename = \\\"/\\\") {\\n  return matchRoutesImpl(routes, locationArg, basename, false);\\n}\\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\\n  let location = typeof locationArg === \\\"string\\\" ? parsePath(locationArg) : locationArg;\\n  let pathname = stripBasename(location.pathname || \\\"/\\\", basename);\\n  if (pathname == null) {\\n    return null;\\n  }\\n  let branches = flattenRoutes(routes);\\n  rankRouteBranches(branches);\\n  let matches = null;\\n  for (let i = 0; matches == null && i < branches.length; ++i) {\\n    let decoded = decodePath(pathname);\\n    matches = matchRouteBranch(\\n      branches[i],\\n      decoded,\\n      allowPartial\\n    );\\n  }\\n  return matches;\\n}\\nfunction convertRouteMatchToUiMatch(match, loaderData) {\\n  let { route, pathname, params } = match;\\n  return {\\n    id: route.id,\\n    pathname,\\n    params,\\n    data: loaderData[route.id],\\n    handle: route.handle\\n  };\\n}\\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \\\"\\\") {\\n  let flattenRoute = (route, index, relativePath) => {\\n    let meta = {\\n      relativePath: relativePath === void 0 ? route.path || \\\"\\\" : relativePath,\\n      caseSensitive: route.caseSensitive === true,\\n      childrenIndex: index,\\n      route\\n    };\\n    if (meta.relativePath.startsWith(\\\"/\\\")) {\\n      invariant(\\n        meta.relativePath.startsWith(parentPath),\\n        `Absolute route path \\\"${meta.relativePath}\\\" nested under path \\\"${parentPath}\\\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\\n      );\\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\\n    }\\n    let path = joinPaths([parentPath, meta.relativePath]);\\n    let routesMeta = parentsMeta.concat(meta);\\n    if (route.children && route.children.length > 0) {\\n      invariant(\\n        // Our types know better, but runtime JS may not!\\n        // @ts-expect-error\\n        route.index !== true,\\n        `Index routes must not have child routes. Please remove all child routes from route path \\\"${path}\\\".`\\n      );\\n      flattenRoutes(route.children, branches, routesMeta, path);\\n    }\\n    if (route.path == null && !route.index) {\\n      return;\\n    }\\n    branches.push({\\n      path,\\n      score: computeScore(path, route.index),\\n      routesMeta\\n    });\\n  };\\n  routes.forEach((route, index) => {\\n    if (route.path === \\\"\\\" || !route.path?.includes(\\\"?\\\")) {\\n      flattenRoute(route, index);\\n    } else {\\n      for (let exploded of explodeOptionalSegments(route.path)) {\\n        flattenRoute(route, index, exploded);\\n      }\\n    }\\n  });\\n  return branches;\\n}\\nfunction explodeOptionalSegments(path) {\\n  let segments = path.split(\\\"/\\\");\\n  if (segments.length === 0) return [];\\n  let [first, ...rest] = segments;\\n  let isOptional = first.endsWith(\\\"?\\\");\\n  let required = first.replace(/\\\\?$/, \\\"\\\");\\n  if (rest.length === 0) {\\n    return isOptional ? [required, \\\"\\\"] : [required];\\n  }\\n  let restExploded = explodeOptionalSegments(rest.join(\\\"/\\\"));\\n  let result = [];\\n  result.push(\\n    ...restExploded.map(\\n      (subpath) => subpath === \\\"\\\" ? required : [required, subpath].join(\\\"/\\\")\\n    )\\n  );\\n  if (isOptional) {\\n    result.push(...restExploded);\\n  }\\n  return result.map(\\n    (exploded) => path.startsWith(\\\"/\\\") && exploded === \\\"\\\" ? \\\"/\\\" : exploded\\n  );\\n}\\nfunction rankRouteBranches(branches) {\\n  branches.sort(\\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\\n      a.routesMeta.map((meta) => meta.childrenIndex),\\n      b.routesMeta.map((meta) => meta.childrenIndex)\\n    )\\n  );\\n}\\nvar paramRe = /^:[\\\\w-]+$/;\\nvar dynamicSegmentValue = 3;\\nvar indexRouteValue = 2;\\nvar emptySegmentValue = 1;\\nvar staticSegmentValue = 10;\\nvar splatPenalty = -2;\\nvar isSplat = (s) => s === \\\"*\\\";\\nfunction computeScore(path, index) {\\n  let segments = path.split(\\\"/\\\");\\n  let initialScore = segments.length;\\n  if (segments.some(isSplat)) {\\n    initialScore += splatPenalty;\\n  }\\n  if (index) {\\n    initialScore += indexRouteValue;\\n  }\\n  return segments.filter((s) => !isSplat(s)).reduce(\\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \\\"\\\" ? emptySegmentValue : staticSegmentValue),\\n    initialScore\\n  );\\n}\\nfunction compareIndexes(a, b) {\\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\\n  return siblings ? (\\n    // If two routes are siblings, we should try to match the earlier sibling\\n    // first. This allows people to have fine-grained control over the matching\\n    // behavior by simply putting routes with identical paths in the order they\\n    // want them tried.\\n    a[a.length - 1] - b[b.length - 1]\\n  ) : (\\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\\n    // so they sort equally.\\n    0\\n  );\\n}\\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\\n  let { routesMeta } = branch;\\n  let matchedParams = {};\\n  let matchedPathname = \\\"/\\\";\\n  let matches = [];\\n  for (let i = 0; i < routesMeta.length; ++i) {\\n    let meta = routesMeta[i];\\n    let end = i === routesMeta.length - 1;\\n    let remainingPathname = matchedPathname === \\\"/\\\" ? pathname : pathname.slice(matchedPathname.length) || \\\"/\\\";\\n    let match = matchPath(\\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\\n      remainingPathname\\n    );\\n    let route = meta.route;\\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\\n      match = matchPath(\\n        {\\n          path: meta.relativePath,\\n          caseSensitive: meta.caseSensitive,\\n          end: false\\n        },\\n        remainingPathname\\n      );\\n    }\\n    if (!match) {\\n      return null;\\n    }\\n    Object.assign(matchedParams, match.params);\\n    matches.push({\\n      // TODO: Can this as be avoided?\\n      params: matchedParams,\\n      pathname: joinPaths([matchedPathname, match.pathname]),\\n      pathnameBase: normalizePathname(\\n        joinPaths([matchedPathname, match.pathnameBase])\\n      ),\\n      route\\n    });\\n    if (match.pathnameBase !== \\\"/\\\") {\\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\\n    }\\n  }\\n  return matches;\\n}\\nfunction generatePath(originalPath, params = {}) {\\n  let path = originalPath;\\n  if (path.endsWith(\\\"*\\\") && path !== \\\"*\\\" && !path.endsWith(\\\"/*\\\")) {\\n    warning(\\n      false,\\n      `Route path \\\"${path}\\\" will be treated as if it were \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\" because the \\\\`*\\\\` character must always follow a \\\\`/\\\\` in the pattern. To get rid of this warning, please change the route path to \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\".`\\n    );\\n    path = path.replace(/\\\\*$/, \\\"/*\\\");\\n  }\\n  const prefix = path.startsWith(\\\"/\\\") ? \\\"/\\\" : \\\"\\\";\\n  const stringify = (p) => p == null ? \\\"\\\" : typeof p === \\\"string\\\" ? p : String(p);\\n  const segments = path.split(/\\\\/+/).map((segment, index, array) => {\\n    const isLastSegment = index === array.length - 1;\\n    if (isLastSegment && segment === \\\"*\\\") {\\n      const star = \\\"*\\\";\\n      return stringify(params[star]);\\n    }\\n    const keyMatch = segment.match(/^:([\\\\w-]+)(\\\\??)$/);\\n    if (keyMatch) {\\n      const [, key, optional] = keyMatch;\\n      let param = params[key];\\n      invariant(optional === \\\"?\\\" || param != null, `Missing \\\":${key}\\\" param`);\\n      return stringify(param);\\n    }\\n    return segment.replace(/\\\\?$/g, \\\"\\\");\\n  }).filter((segment) => !!segment);\\n  return prefix + segments.join(\\\"/\\\");\\n}\\nfunction matchPath(pattern, pathname) {\\n  if (typeof pattern === \\\"string\\\") {\\n    pattern = { path: pattern, caseSensitive: false, end: true };\\n  }\\n  let [matcher, compiledParams] = compilePath(\\n    pattern.path,\\n    pattern.caseSensitive,\\n    pattern.end\\n  );\\n  let match = pathname.match(matcher);\\n  if (!match) return null;\\n  let matchedPathname = match[0];\\n  let pathnameBase = matchedPathname.replace(/(.)\\\\/+$/, \\\"$1\\\");\\n  let captureGroups = match.slice(1);\\n  let params = compiledParams.reduce(\\n    (memo2, { paramName, isOptional }, index) => {\\n      if (paramName === \\\"*\\\") {\\n        let splatValue = captureGroups[index] || \\\"\\\";\\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\\\/+$/, \\\"$1\\\");\\n      }\\n      const value = captureGroups[index];\\n      if (isOptional && !value) {\\n        memo2[paramName] = void 0;\\n      } else {\\n        memo2[paramName] = (value || \\\"\\\").replace(/%2F/g, \\\"/\\\");\\n      }\\n      return memo2;\\n    },\\n    {}\\n  );\\n  return {\\n    params,\\n    pathname: matchedPathname,\\n    pathnameBase,\\n    pattern\\n  };\\n}\\nfunction compilePath(path, caseSensitive = false, end = true) {\\n  warning(\\n    path === \\\"*\\\" || !path.endsWith(\\\"*\\\") || path.endsWith(\\\"/*\\\"),\\n    `Route path \\\"${path}\\\" will be treated as if it were \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\" because the \\\\`*\\\\` character must always follow a \\\\`/\\\\` in the pattern. To get rid of this warning, please change the route path to \\\"${path.replace(/\\\\*$/, \\\"/*\\\")}\\\".`\\n  );\\n  let params = [];\\n  let regexpSource = \\\"^\\\" + path.replace(/\\\\/*\\\\*?$/, \\\"\\\").replace(/^\\\\/*/, \\\"/\\\").replace(/[\\\\\\\\.*+^${}|()[\\\\]]/g, \\\"\\\\\\\\$&\\\").replace(\\n    /\\\\/:([\\\\w-]+)(\\\\?)?/g,\\n    (_, paramName, isOptional) => {\\n      params.push({ paramName, isOptional: isOptional != null });\\n      return isOptional ? \\\"/?([^\\\\\\\\/]+)?\\\" : \\\"/([^\\\\\\\\/]+)\\\";\\n    }\\n  );\\n  if (path.endsWith(\\\"*\\\")) {\\n    params.push({ paramName: \\\"*\\\" });\\n    regexpSource += path === \\\"*\\\" || path === \\\"/*\\\" ? \\\"(.*)$\\\" : \\\"(?:\\\\\\\\/(.+)|\\\\\\\\/*)$\\\";\\n  } else if (end) {\\n    regexpSource += \\\"\\\\\\\\/*$\\\";\\n  } else if (path !== \\\"\\\" && path !== \\\"/\\\") {\\n    regexpSource += \\\"(?:(?=\\\\\\\\/|$))\\\";\\n  } else {\\n  }\\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \\\"i\\\");\\n  return [matcher, params];\\n}\\nfunction decodePath(value) {\\n  try {\\n    return value.split(\\\"/\\\").map((v) => decodeURIComponent(v).replace(/\\\\//g, \\\"%2F\\\")).join(\\\"/\\\");\\n  } catch (error) {\\n    warning(\\n      false,\\n      `The URL path \\\"${value}\\\" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\\n    );\\n    return value;\\n  }\\n}\\nfunction stripBasename(pathname, basename) {\\n  if (basename === \\\"/\\\") return pathname;\\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\\n    return null;\\n  }\\n  let startIndex = basename.endsWith(\\\"/\\\") ? basename.length - 1 : basename.length;\\n  let nextChar = pathname.charAt(startIndex);\\n  if (nextChar && nextChar !== \\\"/\\\") {\\n    return null;\\n  }\\n  return pathname.slice(startIndex) || \\\"/\\\";\\n}\\nfunction resolvePath(to, fromPathname = \\\"/\\\") {\\n  let {\\n    pathname: toPathname,\\n    search = \\\"\\\",\\n    hash = \\\"\\\"\\n  } = typeof to === \\\"string\\\" ? parsePath(to) : to;\\n  let pathname = toPathname ? toPathname.startsWith(\\\"/\\\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\\n  return {\\n    pathname,\\n    search: normalizeSearch(search),\\n    hash: normalizeHash(hash)\\n  };\\n}\\nfunction resolvePathname(relativePath, fromPathname) {\\n  let segments = fromPathname.replace(/\\\\/+$/, \\\"\\\").split(\\\"/\\\");\\n  let relativeSegments = relativePath.split(\\\"/\\\");\\n  relativeSegments.forEach((segment) => {\\n    if (segment === \\\"..\\\") {\\n      if (segments.length > 1) segments.pop();\\n    } else if (segment !== \\\".\\\") {\\n      segments.push(segment);\\n    }\\n  });\\n  return segments.length > 1 ? segments.join(\\\"/\\\") : \\\"/\\\";\\n}\\nfunction getInvalidPathError(char, field, dest, path) {\\n  return `Cannot include a '${char}' character in a manually specified \\\\`to.${field}\\\\` field [${JSON.stringify(\\n    path\\n  )}].  Please separate it out to the \\\\`to.${dest}\\\\` field. Alternatively you may provide the full path as a string in <Link to=\\\"...\\\"> and the router will parse it for you.`;\\n}\\nfunction getPathContributingMatches(matches) {\\n  return matches.filter(\\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\\n  );\\n}\\nfunction getResolveToMatches(matches) {\\n  let pathMatches = getPathContributingMatches(matches);\\n  return pathMatches.map(\\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\\n  );\\n}\\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\\n  let to;\\n  if (typeof toArg === \\\"string\\\") {\\n    to = parsePath(toArg);\\n  } else {\\n    to = { ...toArg };\\n    invariant(\\n      !to.pathname || !to.pathname.includes(\\\"?\\\"),\\n      getInvalidPathError(\\\"?\\\", \\\"pathname\\\", \\\"search\\\", to)\\n    );\\n    invariant(\\n      !to.pathname || !to.pathname.includes(\\\"#\\\"),\\n      getInvalidPathError(\\\"#\\\", \\\"pathname\\\", \\\"hash\\\", to)\\n    );\\n    invariant(\\n      !to.search || !to.search.includes(\\\"#\\\"),\\n      getInvalidPathError(\\\"#\\\", \\\"search\\\", \\\"hash\\\", to)\\n    );\\n  }\\n  let isEmptyPath = toArg === \\\"\\\" || to.pathname === \\\"\\\";\\n  let toPathname = isEmptyPath ? \\\"/\\\" : to.pathname;\\n  let from;\\n  if (toPathname == null) {\\n    from = locationPathname;\\n  } else {\\n    let routePathnameIndex = routePathnames.length - 1;\\n    if (!isPathRelative && toPathname.startsWith(\\\"..\\\")) {\\n      let toSegments = toPathname.split(\\\"/\\\");\\n      while (toSegments[0] === \\\"..\\\") {\\n        toSegments.shift();\\n        routePathnameIndex -= 1;\\n      }\\n      to.pathname = toSegments.join(\\\"/\\\");\\n    }\\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \\\"/\\\";\\n  }\\n  let path = resolvePath(to, from);\\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \\\"/\\\" && toPathname.endsWith(\\\"/\\\");\\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \\\".\\\") && locationPathname.endsWith(\\\"/\\\");\\n  if (!path.pathname.endsWith(\\\"/\\\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\\n    path.pathname += \\\"/\\\";\\n  }\\n  return path;\\n}\\nvar joinPaths = (paths) => paths.join(\\\"/\\\").replace(/\\\\/\\\\/+/g, \\\"/\\\");\\nvar normalizePathname = (pathname) => pathname.replace(/\\\\/+$/, \\\"\\\").replace(/^\\\\/*/, \\\"/\\\");\\nvar normalizeSearch = (search) => !search || search === \\\"?\\\" ? \\\"\\\" : search.startsWith(\\\"?\\\") ? search : \\\"?\\\" + search;\\nvar normalizeHash = (hash) => !hash || hash === \\\"#\\\" ? \\\"\\\" : hash.startsWith(\\\"#\\\") ? hash : \\\"#\\\" + hash;\\nvar DataWithResponseInit = class {\\n  constructor(data2, init) {\\n    this.type = \\\"DataWithResponseInit\\\";\\n    this.data = data2;\\n    this.init = init || null;\\n  }\\n};\\nfunction data(data2, init) {\\n  return new DataWithResponseInit(\\n    data2,\\n    typeof init === \\\"number\\\" ? { status: init } : init\\n  );\\n}\\nvar redirect = (url, init = 302) => {\\n  let responseInit = init;\\n  if (typeof responseInit === \\\"number\\\") {\\n    responseInit = { status: responseInit };\\n  } else if (typeof responseInit.status === \\\"undefined\\\") {\\n    responseInit.status = 302;\\n  }\\n  let headers = new Headers(responseInit.headers);\\n  headers.set(\\\"Location\\\", url);\\n  return new Response(null, {\\n    ...responseInit,\\n    headers\\n  });\\n};\\nvar redirectDocument = (url, init) => {\\n  let response = redirect(url, init);\\n  response.headers.set(\\\"X-Remix-Reload-Document\\\", \\\"true\\\");\\n  return response;\\n};\\nvar replace = (url, init) => {\\n  let response = redirect(url, init);\\n  response.headers.set(\\\"X-Remix-Replace\\\", \\\"true\\\");\\n  return response;\\n};\\nvar ErrorResponseImpl = class {\\n  constructor(status, statusText, data2, internal = false) {\\n    this.status = status;\\n    this.statusText = statusText || \\\"\\\";\\n    this.internal = internal;\\n    if (data2 instanceof Error) {\\n      this.data = data2.toString();\\n      this.error = data2;\\n    } else {\\n      this.data = data2;\\n    }\\n  }\\n};\\nfunction isRouteErrorResponse(error) {\\n  return error != null && typeof error.status === \\\"number\\\" && typeof error.statusText === \\\"string\\\" && typeof error.internal === \\\"boolean\\\" && \\\"data\\\" in error;\\n}\\n\\n// lib/router/router.ts\\nvar validMutationMethodsArr = [\\n  \\\"POST\\\",\\n  \\\"PUT\\\",\\n  \\\"PATCH\\\",\\n  \\\"DELETE\\\"\\n];\\nvar validMutationMethods = new Set(\\n  validMutationMethodsArr\\n);\\nvar validRequestMethodsArr = [\\n  \\\"GET\\\",\\n  ...validMutationMethodsArr\\n];\\nvar validRequestMethods = new Set(validRequestMethodsArr);\\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\\nvar IDLE_NAVIGATION = {\\n  state: \\\"idle\\\",\\n  location: void 0,\\n  formMethod: void 0,\\n  formAction: void 0,\\n  formEncType: void 0,\\n  formData: void 0,\\n  json: void 0,\\n  text: void 0\\n};\\nvar IDLE_FETCHER = {\\n  state: \\\"idle\\\",\\n  data: void 0,\\n  formMethod: void 0,\\n  formAction: void 0,\\n  formEncType: void 0,\\n  formData: void 0,\\n  json: void 0,\\n  text: void 0\\n};\\nvar IDLE_BLOCKER = {\\n  state: \\\"unblocked\\\",\\n  proceed: void 0,\\n  reset: void 0,\\n  location: void 0\\n};\\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\nvar defaultMapRouteProperties = (route) => ({\\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\\n});\\nvar TRANSITIONS_STORAGE_KEY = \\\"remix-router-transitions\\\";\\nvar ResetLoaderDataSymbol = Symbol(\\\"ResetLoaderData\\\");\\nfunction createRouter(init) {\\n  const routerWindow = init.window ? init.window : typeof window !== \\\"undefined\\\" ? window : void 0;\\n  const isBrowser2 = typeof routerWindow !== \\\"undefined\\\" && typeof routerWindow.document !== \\\"undefined\\\" && typeof routerWindow.document.createElement !== \\\"undefined\\\";\\n  invariant(\\n    init.routes.length > 0,\\n    \\\"You must provide a non-empty routes array to createRouter\\\"\\n  );\\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\\n  let manifest = {};\\n  let dataRoutes = convertRoutesToDataRoutes(\\n    init.routes,\\n    mapRouteProperties2,\\n    void 0,\\n    manifest\\n  );\\n  let inFlightDataRoutes;\\n  let basename = init.basename || \\\"/\\\";\\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\\n  let future = {\\n    ...init.future\\n  };\\n  let unlistenHistory = null;\\n  let subscribers = /* @__PURE__ */ new Set();\\n  let savedScrollPositions2 = null;\\n  let getScrollRestorationKey2 = null;\\n  let getScrollPosition = null;\\n  let initialScrollRestored = init.hydrationData != null;\\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\\n  let initialErrors = null;\\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\\n    let error = getInternalRouterError(404, {\\n      pathname: init.history.location.pathname\\n    });\\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\\n    initialMatches = matches;\\n    initialErrors = { [route.id]: error };\\n  }\\n  if (initialMatches && !init.hydrationData) {\\n    let fogOfWar = checkFogOfWar(\\n      initialMatches,\\n      dataRoutes,\\n      init.history.location.pathname\\n    );\\n    if (fogOfWar.active) {\\n      initialMatches = null;\\n    }\\n  }\\n  let initialized;\\n  if (!initialMatches) {\\n    initialized = false;\\n    initialMatches = [];\\n    let fogOfWar = checkFogOfWar(\\n      null,\\n      dataRoutes,\\n      init.history.location.pathname\\n    );\\n    if (fogOfWar.active && fogOfWar.matches) {\\n      initialMatches = fogOfWar.matches;\\n    }\\n  } else if (initialMatches.some((m) => m.route.lazy)) {\\n    initialized = false;\\n  } else if (!initialMatches.some((m) => m.route.loader)) {\\n    initialized = true;\\n  } else {\\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\\n    if (errors) {\\n      let idx = initialMatches.findIndex(\\n        (m) => errors[m.route.id] !== void 0\\n      );\\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\\n    } else {\\n      initialized = initialMatches.every(\\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\\n      );\\n    }\\n  }\\n  let router;\\n  let state = {\\n    historyAction: init.history.action,\\n    location: init.history.location,\\n    matches: initialMatches,\\n    initialized,\\n    navigation: IDLE_NAVIGATION,\\n    // Don't restore on initial updateState() if we were SSR'd\\n    restoreScrollPosition: init.hydrationData != null ? false : null,\\n    preventScrollReset: false,\\n    revalidation: \\\"idle\\\",\\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\\n    fetchers: /* @__PURE__ */ new Map(),\\n    blockers: /* @__PURE__ */ new Map()\\n  };\\n  let pendingAction = \\\"POP\\\" /* Pop */;\\n  let pendingPreventScrollReset = false;\\n  let pendingNavigationController;\\n  let pendingViewTransitionEnabled = false;\\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\\n  let removePageHideEventListener = null;\\n  let isUninterruptedRevalidation = false;\\n  let isRevalidationRequired = false;\\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\\n  let fetchControllers = /* @__PURE__ */ new Map();\\n  let incrementingLoadId = 0;\\n  let pendingNavigationLoadId = -1;\\n  let fetchReloadIds = /* @__PURE__ */ new Map();\\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\\n  let activeFetchers = /* @__PURE__ */ new Map();\\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\\n  let blockerFunctions = /* @__PURE__ */ new Map();\\n  let unblockBlockerHistoryUpdate = void 0;\\n  let pendingRevalidationDfd = null;\\n  function initialize() {\\n    unlistenHistory = init.history.listen(\\n      ({ action: historyAction, location, delta }) => {\\n        if (unblockBlockerHistoryUpdate) {\\n          unblockBlockerHistoryUpdate();\\n          unblockBlockerHistoryUpdate = void 0;\\n          return;\\n        }\\n        warning(\\n          blockerFunctions.size === 0 || delta != null,\\n          \\\"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\\\"\\n        );\\n        let blockerKey = shouldBlockNavigation({\\n          currentLocation: state.location,\\n          nextLocation: location,\\n          historyAction\\n        });\\n        if (blockerKey && delta != null) {\\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\\n            unblockBlockerHistoryUpdate = resolve;\\n          });\\n          init.history.go(delta * -1);\\n          updateBlocker(blockerKey, {\\n            state: \\\"blocked\\\",\\n            location,\\n            proceed() {\\n              updateBlocker(blockerKey, {\\n                state: \\\"proceeding\\\",\\n                proceed: void 0,\\n                reset: void 0,\\n                location\\n              });\\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\\n            },\\n            reset() {\\n              let blockers = new Map(state.blockers);\\n              blockers.set(blockerKey, IDLE_BLOCKER);\\n              updateState({ blockers });\\n            }\\n          });\\n          return;\\n        }\\n        return startNavigation(historyAction, location);\\n      }\\n    );\\n    if (isBrowser2) {\\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\\n      routerWindow.addEventListener(\\\"pagehide\\\", _saveAppliedTransitions);\\n      removePageHideEventListener = () => routerWindow.removeEventListener(\\\"pagehide\\\", _saveAppliedTransitions);\\n    }\\n    if (!state.initialized) {\\n      startNavigation(\\\"POP\\\" /* Pop */, state.location, {\\n        initialHydration: true\\n      });\\n    }\\n    return router;\\n  }\\n  function dispose() {\\n    if (unlistenHistory) {\\n      unlistenHistory();\\n    }\\n    if (removePageHideEventListener) {\\n      removePageHideEventListener();\\n    }\\n    subscribers.clear();\\n    pendingNavigationController && pendingNavigationController.abort();\\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\\n    state.blockers.forEach((_, key) => deleteBlocker(key));\\n  }\\n  function subscribe(fn) {\\n    subscribers.add(fn);\\n    return () => subscribers.delete(fn);\\n  }\\n  function updateState(newState, opts = {}) {\\n    state = {\\n      ...state,\\n      ...newState\\n    };\\n    let unmountedFetchers = [];\\n    let mountedFetchers = [];\\n    state.fetchers.forEach((fetcher, key) => {\\n      if (fetcher.state === \\\"idle\\\") {\\n        if (fetchersQueuedForDeletion.has(key)) {\\n          unmountedFetchers.push(key);\\n        } else {\\n          mountedFetchers.push(key);\\n        }\\n      }\\n    });\\n    [...subscribers].forEach(\\n      (subscriber) => subscriber(state, {\\n        deletedFetchers: unmountedFetchers,\\n        viewTransitionOpts: opts.viewTransitionOpts,\\n        flushSync: opts.flushSync === true\\n      })\\n    );\\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\\n  }\\n  function completeNavigation(location, newState, { flushSync } = {}) {\\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \\\"loading\\\" && location.state?._isRedirect !== true;\\n    let actionData;\\n    if (newState.actionData) {\\n      if (Object.keys(newState.actionData).length > 0) {\\n        actionData = newState.actionData;\\n      } else {\\n        actionData = null;\\n      }\\n    } else if (isActionReload) {\\n      actionData = state.actionData;\\n    } else {\\n      actionData = null;\\n    }\\n    let loaderData = newState.loaderData ? mergeLoaderData(\\n      state.loaderData,\\n      newState.loaderData,\\n      newState.matches || [],\\n      newState.errors\\n    ) : state.loaderData;\\n    let blockers = state.blockers;\\n    if (blockers.size > 0) {\\n      blockers = new Map(blockers);\\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\\n    }\\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\\n    if (inFlightDataRoutes) {\\n      dataRoutes = inFlightDataRoutes;\\n      inFlightDataRoutes = void 0;\\n    }\\n    if (isUninterruptedRevalidation) {\\n    } else if (pendingAction === \\\"POP\\\" /* Pop */) {\\n    } else if (pendingAction === \\\"PUSH\\\" /* Push */) {\\n      init.history.push(location, location.state);\\n    } else if (pendingAction === \\\"REPLACE\\\" /* Replace */) {\\n      init.history.replace(location, location.state);\\n    }\\n    let viewTransitionOpts;\\n    if (pendingAction === \\\"POP\\\" /* Pop */) {\\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\\n      if (priorPaths && priorPaths.has(location.pathname)) {\\n        viewTransitionOpts = {\\n          currentLocation: state.location,\\n          nextLocation: location\\n        };\\n      } else if (appliedViewTransitions.has(location.pathname)) {\\n        viewTransitionOpts = {\\n          currentLocation: location,\\n          nextLocation: state.location\\n        };\\n      }\\n    } else if (pendingViewTransitionEnabled) {\\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\\n      if (toPaths) {\\n        toPaths.add(location.pathname);\\n      } else {\\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\\n        appliedViewTransitions.set(state.location.pathname, toPaths);\\n      }\\n      viewTransitionOpts = {\\n        currentLocation: state.location,\\n        nextLocation: location\\n      };\\n    }\\n    updateState(\\n      {\\n        ...newState,\\n        // matches, errors, fetchers go through as-is\\n        actionData,\\n        loaderData,\\n        historyAction: pendingAction,\\n        location,\\n        initialized: true,\\n        navigation: IDLE_NAVIGATION,\\n        revalidation: \\\"idle\\\",\\n        restoreScrollPosition: getSavedScrollPosition(\\n          location,\\n          newState.matches || state.matches\\n        ),\\n        preventScrollReset,\\n        blockers\\n      },\\n      {\\n        viewTransitionOpts,\\n        flushSync: flushSync === true\\n      }\\n    );\\n    pendingAction = \\\"POP\\\" /* Pop */;\\n    pendingPreventScrollReset = false;\\n    pendingViewTransitionEnabled = false;\\n    isUninterruptedRevalidation = false;\\n    isRevalidationRequired = false;\\n    pendingRevalidationDfd?.resolve();\\n    pendingRevalidationDfd = null;\\n  }\\n  async function navigate(to, opts) {\\n    if (typeof to === \\\"number\\\") {\\n      init.history.go(to);\\n      return;\\n    }\\n    let normalizedPath = normalizeTo(\\n      state.location,\\n      state.matches,\\n      basename,\\n      to,\\n      opts?.fromRouteId,\\n      opts?.relative\\n    );\\n    let { path, submission, error } = normalizeNavigateOptions(\\n      false,\\n      normalizedPath,\\n      opts\\n    );\\n    let currentLocation = state.location;\\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\\n    nextLocation = {\\n      ...nextLocation,\\n      ...init.history.encodeLocation(nextLocation)\\n    };\\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\\n    let historyAction = \\\"PUSH\\\" /* Push */;\\n    if (userReplace === true) {\\n      historyAction = \\\"REPLACE\\\" /* Replace */;\\n    } else if (userReplace === false) {\\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\\n      historyAction = \\\"REPLACE\\\" /* Replace */;\\n    }\\n    let preventScrollReset = opts && \\\"preventScrollReset\\\" in opts ? opts.preventScrollReset === true : void 0;\\n    let flushSync = (opts && opts.flushSync) === true;\\n    let blockerKey = shouldBlockNavigation({\\n      currentLocation,\\n      nextLocation,\\n      historyAction\\n    });\\n    if (blockerKey) {\\n      updateBlocker(blockerKey, {\\n        state: \\\"blocked\\\",\\n        location: nextLocation,\\n        proceed() {\\n          updateBlocker(blockerKey, {\\n            state: \\\"proceeding\\\",\\n            proceed: void 0,\\n            reset: void 0,\\n            location: nextLocation\\n          });\\n          navigate(to, opts);\\n        },\\n        reset() {\\n          let blockers = new Map(state.blockers);\\n          blockers.set(blockerKey, IDLE_BLOCKER);\\n          updateState({ blockers });\\n        }\\n      });\\n      return;\\n    }\\n    await startNavigation(historyAction, nextLocation, {\\n      submission,\\n      // Send through the formData serialization error if we have one so we can\\n      // render at the right error boundary after we match routes\\n      pendingError: error,\\n      preventScrollReset,\\n      replace: opts && opts.replace,\\n      enableViewTransition: opts && opts.viewTransition,\\n      flushSync\\n    });\\n  }\\n  function revalidate() {\\n    if (!pendingRevalidationDfd) {\\n      pendingRevalidationDfd = createDeferred();\\n    }\\n    interruptActiveLoads();\\n    updateState({ revalidation: \\\"loading\\\" });\\n    let promise = pendingRevalidationDfd.promise;\\n    if (state.navigation.state === \\\"submitting\\\") {\\n      return promise;\\n    }\\n    if (state.navigation.state === \\\"idle\\\") {\\n      startNavigation(state.historyAction, state.location, {\\n        startUninterruptedRevalidation: true\\n      });\\n      return promise;\\n    }\\n    startNavigation(\\n      pendingAction || state.historyAction,\\n      state.navigation.location,\\n      {\\n        overrideNavigation: state.navigation,\\n        // Proxy through any rending view transition\\n        enableViewTransition: pendingViewTransitionEnabled === true\\n      }\\n    );\\n    return promise;\\n  }\\n  async function startNavigation(historyAction, location, opts) {\\n    pendingNavigationController && pendingNavigationController.abort();\\n    pendingNavigationController = null;\\n    pendingAction = historyAction;\\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\\n    saveScrollPosition(state.location, state.matches);\\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let loadingNavigation = opts && opts.overrideNavigation;\\n    let matches = matchRoutes(routesToUse, location, basename);\\n    let flushSync = (opts && opts.flushSync) === true;\\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\\n    if (fogOfWar.active && fogOfWar.matches) {\\n      matches = fogOfWar.matches;\\n    }\\n    if (!matches) {\\n      let { error, notFoundMatches, route } = handleNavigational404(\\n        location.pathname\\n      );\\n      completeNavigation(\\n        location,\\n        {\\n          matches: notFoundMatches,\\n          loaderData: {},\\n          errors: {\\n            [route.id]: error\\n          }\\n        },\\n        { flushSync }\\n      );\\n      return;\\n    }\\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\\n      completeNavigation(location, { matches }, { flushSync });\\n      return;\\n    }\\n    pendingNavigationController = new AbortController();\\n    let request = createClientSideRequest(\\n      init.history,\\n      location,\\n      pendingNavigationController.signal,\\n      opts && opts.submission\\n    );\\n    let pendingActionResult;\\n    if (opts && opts.pendingError) {\\n      pendingActionResult = [\\n        findNearestBoundary(matches).route.id,\\n        { type: \\\"error\\\" /* error */, error: opts.pendingError }\\n      ];\\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\\n      let actionResult = await handleAction(\\n        request,\\n        location,\\n        opts.submission,\\n        matches,\\n        fogOfWar.active,\\n        { replace: opts.replace, flushSync }\\n      );\\n      if (actionResult.shortCircuited) {\\n        return;\\n      }\\n      if (actionResult.pendingActionResult) {\\n        let [routeId, result] = actionResult.pendingActionResult;\\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\\n          pendingNavigationController = null;\\n          completeNavigation(location, {\\n            matches: actionResult.matches,\\n            loaderData: {},\\n            errors: {\\n              [routeId]: result.error\\n            }\\n          });\\n          return;\\n        }\\n      }\\n      matches = actionResult.matches || matches;\\n      pendingActionResult = actionResult.pendingActionResult;\\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\\n      flushSync = false;\\n      fogOfWar.active = false;\\n      request = createClientSideRequest(\\n        init.history,\\n        request.url,\\n        request.signal\\n      );\\n    }\\n    let {\\n      shortCircuited,\\n      matches: updatedMatches,\\n      loaderData,\\n      errors\\n    } = await handleLoaders(\\n      request,\\n      location,\\n      matches,\\n      fogOfWar.active,\\n      loadingNavigation,\\n      opts && opts.submission,\\n      opts && opts.fetcherSubmission,\\n      opts && opts.replace,\\n      opts && opts.initialHydration === true,\\n      flushSync,\\n      pendingActionResult\\n    );\\n    if (shortCircuited) {\\n      return;\\n    }\\n    pendingNavigationController = null;\\n    completeNavigation(location, {\\n      matches: updatedMatches || matches,\\n      ...getActionDataForCommit(pendingActionResult),\\n      loaderData,\\n      errors\\n    });\\n  }\\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts = {}) {\\n    interruptActiveLoads();\\n    let navigation = getSubmittingNavigation(location, submission);\\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\\n    if (isFogOfWar) {\\n      let discoverResult = await discoverRoutes(\\n        matches,\\n        location.pathname,\\n        request.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return { shortCircuited: true };\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\\n        return {\\n          matches: discoverResult.partialMatches,\\n          pendingActionResult: [\\n            boundaryId,\\n            {\\n              type: \\\"error\\\" /* error */,\\n              error: discoverResult.error\\n            }\\n          ]\\n        };\\n      } else if (!discoverResult.matches) {\\n        let { notFoundMatches, error, route } = handleNavigational404(\\n          location.pathname\\n        );\\n        return {\\n          matches: notFoundMatches,\\n          pendingActionResult: [\\n            route.id,\\n            {\\n              type: \\\"error\\\" /* error */,\\n              error\\n            }\\n          ]\\n        };\\n      } else {\\n        matches = discoverResult.matches;\\n      }\\n    }\\n    let result;\\n    let actionMatch = getTargetMatch(matches, location);\\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\\n      result = {\\n        type: \\\"error\\\" /* error */,\\n        error: getInternalRouterError(405, {\\n          method: request.method,\\n          pathname: location.pathname,\\n          routeId: actionMatch.route.id\\n        })\\n      };\\n    } else {\\n      let results = await callDataStrategy(\\n        \\\"action\\\",\\n        state,\\n        request,\\n        [actionMatch],\\n        matches,\\n        null\\n      );\\n      result = results[actionMatch.route.id];\\n      if (request.signal.aborted) {\\n        return { shortCircuited: true };\\n      }\\n    }\\n    if (isRedirectResult(result)) {\\n      let replace2;\\n      if (opts && opts.replace != null) {\\n        replace2 = opts.replace;\\n      } else {\\n        let location2 = normalizeRedirectLocation(\\n          result.response.headers.get(\\\"Location\\\"),\\n          new URL(request.url),\\n          basename\\n        );\\n        replace2 = location2 === state.location.pathname + state.location.search;\\n      }\\n      await startRedirectNavigation(request, result, true, {\\n        submission,\\n        replace: replace2\\n      });\\n      return { shortCircuited: true };\\n    }\\n    if (isErrorResult(result)) {\\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\\n      if ((opts && opts.replace) !== true) {\\n        pendingAction = \\\"PUSH\\\" /* Push */;\\n      }\\n      return {\\n        matches,\\n        pendingActionResult: [boundaryMatch.route.id, result]\\n      };\\n    }\\n    return {\\n      matches,\\n      pendingActionResult: [actionMatch.route.id, result]\\n    };\\n  }\\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\\n    if (isFogOfWar) {\\n      if (shouldUpdateNavigationState) {\\n        let actionData = getUpdatedActionData(pendingActionResult);\\n        updateState(\\n          {\\n            navigation: loadingNavigation,\\n            ...actionData !== void 0 ? { actionData } : {}\\n          },\\n          {\\n            flushSync\\n          }\\n        );\\n      }\\n      let discoverResult = await discoverRoutes(\\n        matches,\\n        location.pathname,\\n        request.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return { shortCircuited: true };\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\\n        return {\\n          matches: discoverResult.partialMatches,\\n          loaderData: {},\\n          errors: {\\n            [boundaryId]: discoverResult.error\\n          }\\n        };\\n      } else if (!discoverResult.matches) {\\n        let { error, notFoundMatches, route } = handleNavigational404(\\n          location.pathname\\n        );\\n        return {\\n          matches: notFoundMatches,\\n          loaderData: {},\\n          errors: {\\n            [route.id]: error\\n          }\\n        };\\n      } else {\\n        matches = discoverResult.matches;\\n      }\\n    }\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\\n      init.history,\\n      state,\\n      matches,\\n      activeSubmission,\\n      location,\\n      initialHydration === true,\\n      isRevalidationRequired,\\n      cancelledFetcherLoads,\\n      fetchersQueuedForDeletion,\\n      fetchLoadMatches,\\n      fetchRedirectIds,\\n      routesToUse,\\n      basename,\\n      pendingActionResult\\n    );\\n    pendingNavigationLoadId = ++incrementingLoadId;\\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\\n      let updatedFetchers2 = markFetchRedirectsDone();\\n      completeNavigation(\\n        location,\\n        {\\n          matches,\\n          loaderData: {},\\n          // Commit pending error if we're short circuiting\\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\\n          ...getActionDataForCommit(pendingActionResult),\\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\\n        },\\n        { flushSync }\\n      );\\n      return { shortCircuited: true };\\n    }\\n    if (shouldUpdateNavigationState) {\\n      let updates = {};\\n      if (!isFogOfWar) {\\n        updates.navigation = loadingNavigation;\\n        let actionData = getUpdatedActionData(pendingActionResult);\\n        if (actionData !== void 0) {\\n          updates.actionData = actionData;\\n        }\\n      }\\n      if (revalidatingFetchers.length > 0) {\\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\\n      }\\n      updateState(updates, { flushSync });\\n    }\\n    revalidatingFetchers.forEach((rf) => {\\n      abortFetcher(rf.key);\\n      if (rf.controller) {\\n        fetchControllers.set(rf.key, rf.controller);\\n      }\\n    });\\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\\n    if (pendingNavigationController) {\\n      pendingNavigationController.signal.addEventListener(\\n        \\\"abort\\\",\\n        abortPendingFetchRevalidations\\n      );\\n    }\\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\\n      state,\\n      matches,\\n      matchesToLoad,\\n      revalidatingFetchers,\\n      request\\n    );\\n    if (request.signal.aborted) {\\n      return { shortCircuited: true };\\n    }\\n    if (pendingNavigationController) {\\n      pendingNavigationController.signal.removeEventListener(\\n        \\\"abort\\\",\\n        abortPendingFetchRevalidations\\n      );\\n    }\\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\\n    let redirect2 = findRedirect(loaderResults);\\n    if (redirect2) {\\n      await startRedirectNavigation(request, redirect2.result, true, {\\n        replace: replace2\\n      });\\n      return { shortCircuited: true };\\n    }\\n    redirect2 = findRedirect(fetcherResults);\\n    if (redirect2) {\\n      fetchRedirectIds.add(redirect2.key);\\n      await startRedirectNavigation(request, redirect2.result, true, {\\n        replace: replace2\\n      });\\n      return { shortCircuited: true };\\n    }\\n    let { loaderData, errors } = processLoaderData(\\n      state,\\n      matches,\\n      loaderResults,\\n      pendingActionResult,\\n      revalidatingFetchers,\\n      fetcherResults\\n    );\\n    if (initialHydration && state.errors) {\\n      errors = { ...state.errors, ...errors };\\n    }\\n    let updatedFetchers = markFetchRedirectsDone();\\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\\n    return {\\n      matches,\\n      loaderData,\\n      errors,\\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\\n    };\\n  }\\n  function getUpdatedActionData(pendingActionResult) {\\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\\n      return {\\n        [pendingActionResult[0]]: pendingActionResult[1].data\\n      };\\n    } else if (state.actionData) {\\n      if (Object.keys(state.actionData).length === 0) {\\n        return null;\\n      } else {\\n        return state.actionData;\\n      }\\n    }\\n  }\\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\\n    revalidatingFetchers.forEach((rf) => {\\n      let fetcher = state.fetchers.get(rf.key);\\n      let revalidatingFetcher = getLoadingFetcher(\\n        void 0,\\n        fetcher ? fetcher.data : void 0\\n      );\\n      state.fetchers.set(rf.key, revalidatingFetcher);\\n    });\\n    return new Map(state.fetchers);\\n  }\\n  async function fetch2(key, routeId, href, opts) {\\n    abortFetcher(key);\\n    let flushSync = (opts && opts.flushSync) === true;\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let normalizedPath = normalizeTo(\\n      state.location,\\n      state.matches,\\n      basename,\\n      href,\\n      routeId,\\n      opts?.relative\\n    );\\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\\n    if (fogOfWar.active && fogOfWar.matches) {\\n      matches = fogOfWar.matches;\\n    }\\n    if (!matches) {\\n      setFetcherError(\\n        key,\\n        routeId,\\n        getInternalRouterError(404, { pathname: normalizedPath }),\\n        { flushSync }\\n      );\\n      return;\\n    }\\n    let { path, submission, error } = normalizeNavigateOptions(\\n      true,\\n      normalizedPath,\\n      opts\\n    );\\n    if (error) {\\n      setFetcherError(key, routeId, error, { flushSync });\\n      return;\\n    }\\n    let match = getTargetMatch(matches, path);\\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\\n    if (submission && isMutationMethod(submission.formMethod)) {\\n      await handleFetcherAction(\\n        key,\\n        routeId,\\n        path,\\n        match,\\n        matches,\\n        fogOfWar.active,\\n        flushSync,\\n        preventScrollReset,\\n        submission\\n      );\\n      return;\\n    }\\n    fetchLoadMatches.set(key, { routeId, path });\\n    await handleFetcherLoader(\\n      key,\\n      routeId,\\n      path,\\n      match,\\n      matches,\\n      fogOfWar.active,\\n      flushSync,\\n      preventScrollReset,\\n      submission\\n    );\\n  }\\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\\n    interruptActiveLoads();\\n    fetchLoadMatches.delete(key);\\n    function detectAndHandle405Error(m) {\\n      if (!m.route.action && !m.route.lazy) {\\n        let error = getInternalRouterError(405, {\\n          method: submission.formMethod,\\n          pathname: path,\\n          routeId\\n        });\\n        setFetcherError(key, routeId, error, { flushSync });\\n        return true;\\n      }\\n      return false;\\n    }\\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\\n      return;\\n    }\\n    let existingFetcher = state.fetchers.get(key);\\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\\n      flushSync\\n    });\\n    let abortController = new AbortController();\\n    let fetchRequest = createClientSideRequest(\\n      init.history,\\n      path,\\n      abortController.signal,\\n      submission\\n    );\\n    if (isFogOfWar) {\\n      let discoverResult = await discoverRoutes(\\n        requestMatches,\\n        path,\\n        fetchRequest.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return;\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\\n        return;\\n      } else if (!discoverResult.matches) {\\n        setFetcherError(\\n          key,\\n          routeId,\\n          getInternalRouterError(404, { pathname: path }),\\n          { flushSync }\\n        );\\n        return;\\n      } else {\\n        requestMatches = discoverResult.matches;\\n        match = getTargetMatch(requestMatches, path);\\n        if (detectAndHandle405Error(match)) {\\n          return;\\n        }\\n      }\\n    }\\n    fetchControllers.set(key, abortController);\\n    let originatingLoadId = incrementingLoadId;\\n    let actionResults = await callDataStrategy(\\n      \\\"action\\\",\\n      state,\\n      fetchRequest,\\n      [match],\\n      requestMatches,\\n      key\\n    );\\n    let actionResult = actionResults[match.route.id];\\n    if (fetchRequest.signal.aborted) {\\n      if (fetchControllers.get(key) === abortController) {\\n        fetchControllers.delete(key);\\n      }\\n      return;\\n    }\\n    if (fetchersQueuedForDeletion.has(key)) {\\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\\n        updateFetcherState(key, getDoneFetcher(void 0));\\n        return;\\n      }\\n    } else {\\n      if (isRedirectResult(actionResult)) {\\n        fetchControllers.delete(key);\\n        if (pendingNavigationLoadId > originatingLoadId) {\\n          updateFetcherState(key, getDoneFetcher(void 0));\\n          return;\\n        } else {\\n          fetchRedirectIds.add(key);\\n          updateFetcherState(key, getLoadingFetcher(submission));\\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\\n            fetcherSubmission: submission,\\n            preventScrollReset\\n          });\\n        }\\n      }\\n      if (isErrorResult(actionResult)) {\\n        setFetcherError(key, routeId, actionResult.error);\\n        return;\\n      }\\n    }\\n    let nextLocation = state.navigation.location || state.location;\\n    let revalidationRequest = createClientSideRequest(\\n      init.history,\\n      nextLocation,\\n      abortController.signal\\n    );\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let matches = state.navigation.state !== \\\"idle\\\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\\n    invariant(matches, \\\"Didn't find any matches after fetcher action\\\");\\n    let loadId = ++incrementingLoadId;\\n    fetchReloadIds.set(key, loadId);\\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\\n    state.fetchers.set(key, loadFetcher);\\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\\n      init.history,\\n      state,\\n      matches,\\n      submission,\\n      nextLocation,\\n      false,\\n      isRevalidationRequired,\\n      cancelledFetcherLoads,\\n      fetchersQueuedForDeletion,\\n      fetchLoadMatches,\\n      fetchRedirectIds,\\n      routesToUse,\\n      basename,\\n      [match.route.id, actionResult]\\n    );\\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\\n      let staleKey = rf.key;\\n      let existingFetcher2 = state.fetchers.get(staleKey);\\n      let revalidatingFetcher = getLoadingFetcher(\\n        void 0,\\n        existingFetcher2 ? existingFetcher2.data : void 0\\n      );\\n      state.fetchers.set(staleKey, revalidatingFetcher);\\n      abortFetcher(staleKey);\\n      if (rf.controller) {\\n        fetchControllers.set(staleKey, rf.controller);\\n      }\\n    });\\n    updateState({ fetchers: new Map(state.fetchers) });\\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\\n    abortController.signal.addEventListener(\\n      \\\"abort\\\",\\n      abortPendingFetchRevalidations\\n    );\\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\\n      state,\\n      matches,\\n      matchesToLoad,\\n      revalidatingFetchers,\\n      revalidationRequest\\n    );\\n    if (abortController.signal.aborted) {\\n      return;\\n    }\\n    abortController.signal.removeEventListener(\\n      \\\"abort\\\",\\n      abortPendingFetchRevalidations\\n    );\\n    fetchReloadIds.delete(key);\\n    fetchControllers.delete(key);\\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\\n    let redirect2 = findRedirect(loaderResults);\\n    if (redirect2) {\\n      return startRedirectNavigation(\\n        revalidationRequest,\\n        redirect2.result,\\n        false,\\n        { preventScrollReset }\\n      );\\n    }\\n    redirect2 = findRedirect(fetcherResults);\\n    if (redirect2) {\\n      fetchRedirectIds.add(redirect2.key);\\n      return startRedirectNavigation(\\n        revalidationRequest,\\n        redirect2.result,\\n        false,\\n        { preventScrollReset }\\n      );\\n    }\\n    let { loaderData, errors } = processLoaderData(\\n      state,\\n      matches,\\n      loaderResults,\\n      void 0,\\n      revalidatingFetchers,\\n      fetcherResults\\n    );\\n    if (state.fetchers.has(key)) {\\n      let doneFetcher = getDoneFetcher(actionResult.data);\\n      state.fetchers.set(key, doneFetcher);\\n    }\\n    abortStaleFetchLoads(loadId);\\n    if (state.navigation.state === \\\"loading\\\" && loadId > pendingNavigationLoadId) {\\n      invariant(pendingAction, \\\"Expected pending action\\\");\\n      pendingNavigationController && pendingNavigationController.abort();\\n      completeNavigation(state.navigation.location, {\\n        matches,\\n        loaderData,\\n        errors,\\n        fetchers: new Map(state.fetchers)\\n      });\\n    } else {\\n      updateState({\\n        errors,\\n        loaderData: mergeLoaderData(\\n          state.loaderData,\\n          loaderData,\\n          matches,\\n          errors\\n        ),\\n        fetchers: new Map(state.fetchers)\\n      });\\n      isRevalidationRequired = false;\\n    }\\n  }\\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\\n    let existingFetcher = state.fetchers.get(key);\\n    updateFetcherState(\\n      key,\\n      getLoadingFetcher(\\n        submission,\\n        existingFetcher ? existingFetcher.data : void 0\\n      ),\\n      { flushSync }\\n    );\\n    let abortController = new AbortController();\\n    let fetchRequest = createClientSideRequest(\\n      init.history,\\n      path,\\n      abortController.signal\\n    );\\n    if (isFogOfWar) {\\n      let discoverResult = await discoverRoutes(\\n        matches,\\n        path,\\n        fetchRequest.signal\\n      );\\n      if (discoverResult.type === \\\"aborted\\\") {\\n        return;\\n      } else if (discoverResult.type === \\\"error\\\") {\\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\\n        return;\\n      } else if (!discoverResult.matches) {\\n        setFetcherError(\\n          key,\\n          routeId,\\n          getInternalRouterError(404, { pathname: path }),\\n          { flushSync }\\n        );\\n        return;\\n      } else {\\n        matches = discoverResult.matches;\\n        match = getTargetMatch(matches, path);\\n      }\\n    }\\n    fetchControllers.set(key, abortController);\\n    let originatingLoadId = incrementingLoadId;\\n    let results = await callDataStrategy(\\n      \\\"loader\\\",\\n      state,\\n      fetchRequest,\\n      [match],\\n      matches,\\n      key\\n    );\\n    let result = results[match.route.id];\\n    if (fetchControllers.get(key) === abortController) {\\n      fetchControllers.delete(key);\\n    }\\n    if (fetchRequest.signal.aborted) {\\n      return;\\n    }\\n    if (fetchersQueuedForDeletion.has(key)) {\\n      updateFetcherState(key, getDoneFetcher(void 0));\\n      return;\\n    }\\n    if (isRedirectResult(result)) {\\n      if (pendingNavigationLoadId > originatingLoadId) {\\n        updateFetcherState(key, getDoneFetcher(void 0));\\n        return;\\n      } else {\\n        fetchRedirectIds.add(key);\\n        await startRedirectNavigation(fetchRequest, result, false, {\\n          preventScrollReset\\n        });\\n        return;\\n      }\\n    }\\n    if (isErrorResult(result)) {\\n      setFetcherError(key, routeId, result.error);\\n      return;\\n    }\\n    updateFetcherState(key, getDoneFetcher(result.data));\\n  }\\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\\n    submission,\\n    fetcherSubmission,\\n    preventScrollReset,\\n    replace: replace2\\n  } = {}) {\\n    if (redirect2.response.headers.has(\\\"X-Remix-Revalidate\\\")) {\\n      isRevalidationRequired = true;\\n    }\\n    let location = redirect2.response.headers.get(\\\"Location\\\");\\n    invariant(location, \\\"Expected a Location header on the redirect Response\\\");\\n    location = normalizeRedirectLocation(\\n      location,\\n      new URL(request.url),\\n      basename\\n    );\\n    let redirectLocation = createLocation(state.location, location, {\\n      _isRedirect: true\\n    });\\n    if (isBrowser2) {\\n      let isDocumentReload = false;\\n      if (redirect2.response.headers.has(\\\"X-Remix-Reload-Document\\\")) {\\n        isDocumentReload = true;\\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\\n        const url = init.history.createURL(location);\\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\\n        stripBasename(url.pathname, basename) == null;\\n      }\\n      if (isDocumentReload) {\\n        if (replace2) {\\n          routerWindow.location.replace(location);\\n        } else {\\n          routerWindow.location.assign(location);\\n        }\\n        return;\\n      }\\n    }\\n    pendingNavigationController = null;\\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\\\"X-Remix-Replace\\\") ? \\\"REPLACE\\\" /* Replace */ : \\\"PUSH\\\" /* Push */;\\n    let { formMethod, formAction, formEncType } = state.navigation;\\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\\n      submission = getSubmissionFromNavigation(state.navigation);\\n    }\\n    let activeSubmission = submission || fetcherSubmission;\\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\\n      await startNavigation(redirectNavigationType, redirectLocation, {\\n        submission: {\\n          ...activeSubmission,\\n          formAction: location\\n        },\\n        // Preserve these flags across redirects\\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\\n      });\\n    } else {\\n      let overrideNavigation = getLoadingNavigation(\\n        redirectLocation,\\n        submission\\n      );\\n      await startNavigation(redirectNavigationType, redirectLocation, {\\n        overrideNavigation,\\n        // Send fetcher submissions through for shouldRevalidate\\n        fetcherSubmission,\\n        // Preserve these flags across redirects\\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\\n      });\\n    }\\n  }\\n  async function callDataStrategy(type, state2, request, matchesToLoad, matches, fetcherKey) {\\n    let results;\\n    let dataResults = {};\\n    try {\\n      results = await callDataStrategyImpl(\\n        dataStrategyImpl,\\n        type,\\n        state2,\\n        request,\\n        matchesToLoad,\\n        matches,\\n        fetcherKey,\\n        manifest,\\n        mapRouteProperties2\\n      );\\n    } catch (e) {\\n      matchesToLoad.forEach((m) => {\\n        dataResults[m.route.id] = {\\n          type: \\\"error\\\" /* error */,\\n          error: e\\n        };\\n      });\\n      return dataResults;\\n    }\\n    for (let [routeId, result] of Object.entries(results)) {\\n      if (isRedirectDataStrategyResult(result)) {\\n        let response = result.result;\\n        dataResults[routeId] = {\\n          type: \\\"redirect\\\" /* redirect */,\\n          response: normalizeRelativeRoutingRedirectResponse(\\n            response,\\n            request,\\n            routeId,\\n            matches,\\n            basename\\n          )\\n        };\\n      } else {\\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\\n          result\\n        );\\n      }\\n    }\\n    return dataResults;\\n  }\\n  async function callLoadersAndMaybeResolveData(state2, matches, matchesToLoad, fetchersToLoad, request) {\\n    let loaderResultsPromise = callDataStrategy(\\n      \\\"loader\\\",\\n      state2,\\n      request,\\n      matchesToLoad,\\n      matches,\\n      null\\n    );\\n    let fetcherResultsPromise = Promise.all(\\n      fetchersToLoad.map(async (f) => {\\n        if (f.matches && f.match && f.controller) {\\n          let results = await callDataStrategy(\\n            \\\"loader\\\",\\n            state2,\\n            createClientSideRequest(init.history, f.path, f.controller.signal),\\n            [f.match],\\n            f.matches,\\n            f.key\\n          );\\n          let result = results[f.match.route.id];\\n          return { [f.key]: result };\\n        } else {\\n          return Promise.resolve({\\n            [f.key]: {\\n              type: \\\"error\\\" /* error */,\\n              error: getInternalRouterError(404, {\\n                pathname: f.path\\n              })\\n            }\\n          });\\n        }\\n      })\\n    );\\n    let loaderResults = await loaderResultsPromise;\\n    let fetcherResults = (await fetcherResultsPromise).reduce(\\n      (acc, r) => Object.assign(acc, r),\\n      {}\\n    );\\n    return {\\n      loaderResults,\\n      fetcherResults\\n    };\\n  }\\n  function interruptActiveLoads() {\\n    isRevalidationRequired = true;\\n    fetchLoadMatches.forEach((_, key) => {\\n      if (fetchControllers.has(key)) {\\n        cancelledFetcherLoads.add(key);\\n      }\\n      abortFetcher(key);\\n    });\\n  }\\n  function updateFetcherState(key, fetcher, opts = {}) {\\n    state.fetchers.set(key, fetcher);\\n    updateState(\\n      { fetchers: new Map(state.fetchers) },\\n      { flushSync: (opts && opts.flushSync) === true }\\n    );\\n  }\\n  function setFetcherError(key, routeId, error, opts = {}) {\\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\\n    deleteFetcher(key);\\n    updateState(\\n      {\\n        errors: {\\n          [boundaryMatch.route.id]: error\\n        },\\n        fetchers: new Map(state.fetchers)\\n      },\\n      { flushSync: (opts && opts.flushSync) === true }\\n    );\\n  }\\n  function getFetcher(key) {\\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\\n    if (fetchersQueuedForDeletion.has(key)) {\\n      fetchersQueuedForDeletion.delete(key);\\n    }\\n    return state.fetchers.get(key) || IDLE_FETCHER;\\n  }\\n  function deleteFetcher(key) {\\n    let fetcher = state.fetchers.get(key);\\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \\\"loading\\\" && fetchReloadIds.has(key))) {\\n      abortFetcher(key);\\n    }\\n    fetchLoadMatches.delete(key);\\n    fetchReloadIds.delete(key);\\n    fetchRedirectIds.delete(key);\\n    fetchersQueuedForDeletion.delete(key);\\n    cancelledFetcherLoads.delete(key);\\n    state.fetchers.delete(key);\\n  }\\n  function queueFetcherForDeletion(key) {\\n    let count = (activeFetchers.get(key) || 0) - 1;\\n    if (count <= 0) {\\n      activeFetchers.delete(key);\\n      fetchersQueuedForDeletion.add(key);\\n    } else {\\n      activeFetchers.set(key, count);\\n    }\\n    updateState({ fetchers: new Map(state.fetchers) });\\n  }\\n  function abortFetcher(key) {\\n    let controller = fetchControllers.get(key);\\n    if (controller) {\\n      controller.abort();\\n      fetchControllers.delete(key);\\n    }\\n  }\\n  function markFetchersDone(keys) {\\n    for (let key of keys) {\\n      let fetcher = getFetcher(key);\\n      let doneFetcher = getDoneFetcher(fetcher.data);\\n      state.fetchers.set(key, doneFetcher);\\n    }\\n  }\\n  function markFetchRedirectsDone() {\\n    let doneKeys = [];\\n    let updatedFetchers = false;\\n    for (let key of fetchRedirectIds) {\\n      let fetcher = state.fetchers.get(key);\\n      invariant(fetcher, `Expected fetcher: ${key}`);\\n      if (fetcher.state === \\\"loading\\\") {\\n        fetchRedirectIds.delete(key);\\n        doneKeys.push(key);\\n        updatedFetchers = true;\\n      }\\n    }\\n    markFetchersDone(doneKeys);\\n    return updatedFetchers;\\n  }\\n  function abortStaleFetchLoads(landedId) {\\n    let yeetedKeys = [];\\n    for (let [key, id] of fetchReloadIds) {\\n      if (id < landedId) {\\n        let fetcher = state.fetchers.get(key);\\n        invariant(fetcher, `Expected fetcher: ${key}`);\\n        if (fetcher.state === \\\"loading\\\") {\\n          abortFetcher(key);\\n          fetchReloadIds.delete(key);\\n          yeetedKeys.push(key);\\n        }\\n      }\\n    }\\n    markFetchersDone(yeetedKeys);\\n    return yeetedKeys.length > 0;\\n  }\\n  function getBlocker(key, fn) {\\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\\n    if (blockerFunctions.get(key) !== fn) {\\n      blockerFunctions.set(key, fn);\\n    }\\n    return blocker;\\n  }\\n  function deleteBlocker(key) {\\n    state.blockers.delete(key);\\n    blockerFunctions.delete(key);\\n  }\\n  function updateBlocker(key, newBlocker) {\\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\\n    invariant(\\n      blocker.state === \\\"unblocked\\\" && newBlocker.state === \\\"blocked\\\" || blocker.state === \\\"blocked\\\" && newBlocker.state === \\\"blocked\\\" || blocker.state === \\\"blocked\\\" && newBlocker.state === \\\"proceeding\\\" || blocker.state === \\\"blocked\\\" && newBlocker.state === \\\"unblocked\\\" || blocker.state === \\\"proceeding\\\" && newBlocker.state === \\\"unblocked\\\",\\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\\n    );\\n    let blockers = new Map(state.blockers);\\n    blockers.set(key, newBlocker);\\n    updateState({ blockers });\\n  }\\n  function shouldBlockNavigation({\\n    currentLocation,\\n    nextLocation,\\n    historyAction\\n  }) {\\n    if (blockerFunctions.size === 0) {\\n      return;\\n    }\\n    if (blockerFunctions.size > 1) {\\n      warning(false, \\\"A router only supports one blocker at a time\\\");\\n    }\\n    let entries = Array.from(blockerFunctions.entries());\\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\\n    let blocker = state.blockers.get(blockerKey);\\n    if (blocker && blocker.state === \\\"proceeding\\\") {\\n      return;\\n    }\\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\\n      return blockerKey;\\n    }\\n  }\\n  function handleNavigational404(pathname) {\\n    let error = getInternalRouterError(404, { pathname });\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    let { matches, route } = getShortCircuitMatches(routesToUse);\\n    return { notFoundMatches: matches, route, error };\\n  }\\n  function enableScrollRestoration(positions, getPosition, getKey) {\\n    savedScrollPositions2 = positions;\\n    getScrollPosition = getPosition;\\n    getScrollRestorationKey2 = getKey || null;\\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\\n      initialScrollRestored = true;\\n      let y = getSavedScrollPosition(state.location, state.matches);\\n      if (y != null) {\\n        updateState({ restoreScrollPosition: y });\\n      }\\n    }\\n    return () => {\\n      savedScrollPositions2 = null;\\n      getScrollPosition = null;\\n      getScrollRestorationKey2 = null;\\n    };\\n  }\\n  function getScrollKey(location, matches) {\\n    if (getScrollRestorationKey2) {\\n      let key = getScrollRestorationKey2(\\n        location,\\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\\n      );\\n      return key || location.key;\\n    }\\n    return location.key;\\n  }\\n  function saveScrollPosition(location, matches) {\\n    if (savedScrollPositions2 && getScrollPosition) {\\n      let key = getScrollKey(location, matches);\\n      savedScrollPositions2[key] = getScrollPosition();\\n    }\\n  }\\n  function getSavedScrollPosition(location, matches) {\\n    if (savedScrollPositions2) {\\n      let key = getScrollKey(location, matches);\\n      let y = savedScrollPositions2[key];\\n      if (typeof y === \\\"number\\\") {\\n        return y;\\n      }\\n    }\\n    return null;\\n  }\\n  function checkFogOfWar(matches, routesToUse, pathname) {\\n    if (patchRoutesOnNavigationImpl) {\\n      if (!matches) {\\n        let fogMatches = matchRoutesImpl(\\n          routesToUse,\\n          pathname,\\n          basename,\\n          true\\n        );\\n        return { active: true, matches: fogMatches || [] };\\n      } else {\\n        if (Object.keys(matches[0].params).length > 0) {\\n          let partialMatches = matchRoutesImpl(\\n            routesToUse,\\n            pathname,\\n            basename,\\n            true\\n          );\\n          return { active: true, matches: partialMatches };\\n        }\\n      }\\n    }\\n    return { active: false, matches: null };\\n  }\\n  async function discoverRoutes(matches, pathname, signal) {\\n    if (!patchRoutesOnNavigationImpl) {\\n      return { type: \\\"success\\\", matches };\\n    }\\n    let partialMatches = matches;\\n    while (true) {\\n      let isNonHMR = inFlightDataRoutes == null;\\n      let routesToUse = inFlightDataRoutes || dataRoutes;\\n      let localManifest = manifest;\\n      try {\\n        await patchRoutesOnNavigationImpl({\\n          path: pathname,\\n          matches: partialMatches,\\n          patch: (routeId, children) => {\\n            if (signal.aborted) return;\\n            patchRoutesImpl(\\n              routeId,\\n              children,\\n              routesToUse,\\n              localManifest,\\n              mapRouteProperties2\\n            );\\n          }\\n        });\\n      } catch (e) {\\n        return { type: \\\"error\\\", error: e, partialMatches };\\n      } finally {\\n        if (isNonHMR && !signal.aborted) {\\n          dataRoutes = [...dataRoutes];\\n        }\\n      }\\n      if (signal.aborted) {\\n        return { type: \\\"aborted\\\" };\\n      }\\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\\n      if (newMatches) {\\n        return { type: \\\"success\\\", matches: newMatches };\\n      }\\n      let newPartialMatches = matchRoutesImpl(\\n        routesToUse,\\n        pathname,\\n        basename,\\n        true\\n      );\\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\\n        (m, i) => m.route.id === newPartialMatches[i].route.id\\n      )) {\\n        return { type: \\\"success\\\", matches: null };\\n      }\\n      partialMatches = newPartialMatches;\\n    }\\n  }\\n  function _internalSetRoutes(newRoutes) {\\n    manifest = {};\\n    inFlightDataRoutes = convertRoutesToDataRoutes(\\n      newRoutes,\\n      mapRouteProperties2,\\n      void 0,\\n      manifest\\n    );\\n  }\\n  function patchRoutes(routeId, children) {\\n    let isNonHMR = inFlightDataRoutes == null;\\n    let routesToUse = inFlightDataRoutes || dataRoutes;\\n    patchRoutesImpl(\\n      routeId,\\n      children,\\n      routesToUse,\\n      manifest,\\n      mapRouteProperties2\\n    );\\n    if (isNonHMR) {\\n      dataRoutes = [...dataRoutes];\\n      updateState({});\\n    }\\n  }\\n  router = {\\n    get basename() {\\n      return basename;\\n    },\\n    get future() {\\n      return future;\\n    },\\n    get state() {\\n      return state;\\n    },\\n    get routes() {\\n      return dataRoutes;\\n    },\\n    get window() {\\n      return routerWindow;\\n    },\\n    initialize,\\n    subscribe,\\n    enableScrollRestoration,\\n    navigate,\\n    fetch: fetch2,\\n    revalidate,\\n    // Passthrough to history-aware createHref used by useHref so we get proper\\n    // hash-aware URLs in DOM paths\\n    createHref: (to) => init.history.createHref(to),\\n    encodeLocation: (to) => init.history.encodeLocation(to),\\n    getFetcher,\\n    deleteFetcher: queueFetcherForDeletion,\\n    dispose,\\n    getBlocker,\\n    deleteBlocker,\\n    patchRoutes,\\n    _internalFetchControllers: fetchControllers,\\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\\n    // updating the tree while validating the update algorithm.\\n    _internalSetRoutes\\n  };\\n  return router;\\n}\\nfunction createStaticHandler(routes, opts) {\\n  invariant(\\n    routes.length > 0,\\n    \\\"You must provide a non-empty routes array to createStaticHandler\\\"\\n  );\\n  let manifest = {};\\n  let basename = (opts ? opts.basename : null) || \\\"/\\\";\\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\\n  let dataRoutes = convertRoutesToDataRoutes(\\n    routes,\\n    mapRouteProperties2,\\n    void 0,\\n    manifest\\n  );\\n  async function query(request, {\\n    requestContext,\\n    skipLoaderErrorBubbling,\\n    dataStrategy\\n  } = {}) {\\n    let url = new URL(request.url);\\n    let method = request.method;\\n    let location = createLocation(\\\"\\\", createPath(url), null, \\\"default\\\");\\n    let matches = matchRoutes(dataRoutes, location, basename);\\n    if (!isValidMethod(method) && method !== \\\"HEAD\\\") {\\n      let error = getInternalRouterError(405, { method });\\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\\n      return {\\n        basename,\\n        location,\\n        matches: methodNotAllowedMatches,\\n        loaderData: {},\\n        actionData: null,\\n        errors: {\\n          [route.id]: error\\n        },\\n        statusCode: error.status,\\n        loaderHeaders: {},\\n        actionHeaders: {}\\n      };\\n    } else if (!matches) {\\n      let error = getInternalRouterError(404, { pathname: location.pathname });\\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\\n      return {\\n        basename,\\n        location,\\n        matches: notFoundMatches,\\n        loaderData: {},\\n        actionData: null,\\n        errors: {\\n          [route.id]: error\\n        },\\n        statusCode: error.status,\\n        loaderHeaders: {},\\n        actionHeaders: {}\\n      };\\n    }\\n    let result = await queryImpl(\\n      request,\\n      location,\\n      matches,\\n      requestContext,\\n      dataStrategy || null,\\n      skipLoaderErrorBubbling === true,\\n      null\\n    );\\n    if (isResponse(result)) {\\n      return result;\\n    }\\n    return { location, basename, ...result };\\n  }\\n  async function queryRoute(request, {\\n    routeId,\\n    requestContext,\\n    dataStrategy\\n  } = {}) {\\n    let url = new URL(request.url);\\n    let method = request.method;\\n    let location = createLocation(\\\"\\\", createPath(url), null, \\\"default\\\");\\n    let matches = matchRoutes(dataRoutes, location, basename);\\n    if (!isValidMethod(method) && method !== \\\"HEAD\\\" && method !== \\\"OPTIONS\\\") {\\n      throw getInternalRouterError(405, { method });\\n    } else if (!matches) {\\n      throw getInternalRouterError(404, { pathname: location.pathname });\\n    }\\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\\n    if (routeId && !match) {\\n      throw getInternalRouterError(403, {\\n        pathname: location.pathname,\\n        routeId\\n      });\\n    } else if (!match) {\\n      throw getInternalRouterError(404, { pathname: location.pathname });\\n    }\\n    let result = await queryImpl(\\n      request,\\n      location,\\n      matches,\\n      requestContext,\\n      dataStrategy || null,\\n      false,\\n      match\\n    );\\n    if (isResponse(result)) {\\n      return result;\\n    }\\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\\n    if (error !== void 0) {\\n      throw error;\\n    }\\n    if (result.actionData) {\\n      return Object.values(result.actionData)[0];\\n    }\\n    if (result.loaderData) {\\n      return Object.values(result.loaderData)[0];\\n    }\\n    return void 0;\\n  }\\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\\n    invariant(\\n      request.signal,\\n      \\\"query()/queryRoute() requests must contain an AbortController signal\\\"\\n    );\\n    try {\\n      if (isMutationMethod(request.method)) {\\n        let result2 = await submit(\\n          request,\\n          matches,\\n          routeMatch || getTargetMatch(matches, location),\\n          requestContext,\\n          dataStrategy,\\n          skipLoaderErrorBubbling,\\n          routeMatch != null\\n        );\\n        return result2;\\n      }\\n      let result = await loadRouteData(\\n        request,\\n        matches,\\n        requestContext,\\n        dataStrategy,\\n        skipLoaderErrorBubbling,\\n        routeMatch\\n      );\\n      return isResponse(result) ? result : {\\n        ...result,\\n        actionData: null,\\n        actionHeaders: {}\\n      };\\n    } catch (e) {\\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\\n        if (e.type === \\\"error\\\" /* error */) {\\n          throw e.result;\\n        }\\n        return e.result;\\n      }\\n      if (isRedirectResponse(e)) {\\n        return e;\\n      }\\n      throw e;\\n    }\\n  }\\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\\n    let result;\\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\\n      let error = getInternalRouterError(405, {\\n        method: request.method,\\n        pathname: new URL(request.url).pathname,\\n        routeId: actionMatch.route.id\\n      });\\n      if (isRouteRequest) {\\n        throw error;\\n      }\\n      result = {\\n        type: \\\"error\\\" /* error */,\\n        error\\n      };\\n    } else {\\n      let results = await callDataStrategy(\\n        \\\"action\\\",\\n        request,\\n        [actionMatch],\\n        matches,\\n        isRouteRequest,\\n        requestContext,\\n        dataStrategy\\n      );\\n      result = results[actionMatch.route.id];\\n      if (request.signal.aborted) {\\n        throwStaticHandlerAbortedError(request, isRouteRequest);\\n      }\\n    }\\n    if (isRedirectResult(result)) {\\n      throw new Response(null, {\\n        status: result.response.status,\\n        headers: {\\n          Location: result.response.headers.get(\\\"Location\\\")\\n        }\\n      });\\n    }\\n    if (isRouteRequest) {\\n      if (isErrorResult(result)) {\\n        throw result.error;\\n      }\\n      return {\\n        matches: [actionMatch],\\n        loaderData: {},\\n        actionData: { [actionMatch.route.id]: result.data },\\n        errors: null,\\n        // Note: statusCode + headers are unused here since queryRoute will\\n        // return the raw Response or value\\n        statusCode: 200,\\n        loaderHeaders: {},\\n        actionHeaders: {}\\n      };\\n    }\\n    let loaderRequest = new Request(request.url, {\\n      headers: request.headers,\\n      redirect: request.redirect,\\n      signal: request.signal\\n    });\\n    if (isErrorResult(result)) {\\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\\n      let context2 = await loadRouteData(\\n        loaderRequest,\\n        matches,\\n        requestContext,\\n        dataStrategy,\\n        skipLoaderErrorBubbling,\\n        null,\\n        [boundaryMatch.route.id, result]\\n      );\\n      return {\\n        ...context2,\\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\\n        actionData: null,\\n        actionHeaders: {\\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\\n        }\\n      };\\n    }\\n    let context = await loadRouteData(\\n      loaderRequest,\\n      matches,\\n      requestContext,\\n      dataStrategy,\\n      skipLoaderErrorBubbling,\\n      null\\n    );\\n    return {\\n      ...context,\\n      actionData: {\\n        [actionMatch.route.id]: result.data\\n      },\\n      // action status codes take precedence over loader status codes\\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\\n    };\\n  }\\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\\n    let isRouteRequest = routeMatch != null;\\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\\n      throw getInternalRouterError(400, {\\n        method: request.method,\\n        pathname: new URL(request.url).pathname,\\n        routeId: routeMatch?.route.id\\n      });\\n    }\\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\\n    let matchesToLoad = requestMatches.filter(\\n      (m) => m.route.loader || m.route.lazy\\n    );\\n    if (matchesToLoad.length === 0) {\\n      return {\\n        matches,\\n        // Add a null for all matched routes for proper revalidation on the client\\n        loaderData: matches.reduce(\\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\\n          {}\\n        ),\\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\\n          [pendingActionResult[0]]: pendingActionResult[1].error\\n        } : null,\\n        statusCode: 200,\\n        loaderHeaders: {}\\n      };\\n    }\\n    let results = await callDataStrategy(\\n      \\\"loader\\\",\\n      request,\\n      matchesToLoad,\\n      matches,\\n      isRouteRequest,\\n      requestContext,\\n      dataStrategy\\n    );\\n    if (request.signal.aborted) {\\n      throwStaticHandlerAbortedError(request, isRouteRequest);\\n    }\\n    let context = processRouteLoaderData(\\n      matches,\\n      results,\\n      pendingActionResult,\\n      true,\\n      skipLoaderErrorBubbling\\n    );\\n    let executedLoaders = new Set(\\n      matchesToLoad.map((match) => match.route.id)\\n    );\\n    matches.forEach((match) => {\\n      if (!executedLoaders.has(match.route.id)) {\\n        context.loaderData[match.route.id] = null;\\n      }\\n    });\\n    return {\\n      ...context,\\n      matches\\n    };\\n  }\\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\\n    let results = await callDataStrategyImpl(\\n      dataStrategy || defaultDataStrategy,\\n      type,\\n      null,\\n      request,\\n      matchesToLoad,\\n      matches,\\n      null,\\n      manifest,\\n      mapRouteProperties2,\\n      requestContext\\n    );\\n    let dataResults = {};\\n    await Promise.all(\\n      matches.map(async (match) => {\\n        if (!(match.route.id in results)) {\\n          return;\\n        }\\n        let result = results[match.route.id];\\n        if (isRedirectDataStrategyResult(result)) {\\n          let response = result.result;\\n          throw normalizeRelativeRoutingRedirectResponse(\\n            response,\\n            request,\\n            match.route.id,\\n            matches,\\n            basename\\n          );\\n        }\\n        if (isResponse(result.result) && isRouteRequest) {\\n          throw result;\\n        }\\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\\n      })\\n    );\\n    return dataResults;\\n  }\\n  return {\\n    dataRoutes,\\n    query,\\n    queryRoute\\n  };\\n}\\nfunction getStaticContextFromError(routes, context, error) {\\n  let newContext = {\\n    ...context,\\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\\n    errors: {\\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\\n    }\\n  };\\n  return newContext;\\n}\\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\\n  if (request.signal.reason !== void 0) {\\n    throw request.signal.reason;\\n  }\\n  let method = isRouteRequest ? \\\"queryRoute\\\" : \\\"query\\\";\\n  throw new Error(\\n    `${method}() call aborted without an \\\\`AbortSignal.reason\\\\`: ${request.method} ${request.url}`\\n  );\\n}\\nfunction isSubmissionNavigation(opts) {\\n  return opts != null && (\\\"formData\\\" in opts && opts.formData != null || \\\"body\\\" in opts && opts.body !== void 0);\\n}\\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\\n  let contextualMatches;\\n  let activeRouteMatch;\\n  if (fromRouteId) {\\n    contextualMatches = [];\\n    for (let match of matches) {\\n      contextualMatches.push(match);\\n      if (match.route.id === fromRouteId) {\\n        activeRouteMatch = match;\\n        break;\\n      }\\n    }\\n  } else {\\n    contextualMatches = matches;\\n    activeRouteMatch = matches[matches.length - 1];\\n  }\\n  let path = resolveTo(\\n    to ? to : \\\".\\\",\\n    getResolveToMatches(contextualMatches),\\n    stripBasename(location.pathname, basename) || location.pathname,\\n    relative === \\\"path\\\"\\n  );\\n  if (to == null) {\\n    path.search = location.search;\\n    path.hash = location.hash;\\n  }\\n  if ((to == null || to === \\\"\\\" || to === \\\".\\\") && activeRouteMatch) {\\n    let nakedIndex = hasNakedIndexQuery(path.search);\\n    if (activeRouteMatch.route.index && !nakedIndex) {\\n      path.search = path.search ? path.search.replace(/^\\\\?/, \\\"?index&\\\") : \\\"?index\\\";\\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\\n      let params = new URLSearchParams(path.search);\\n      let indexValues = params.getAll(\\\"index\\\");\\n      params.delete(\\\"index\\\");\\n      indexValues.filter((v) => v).forEach((v) => params.append(\\\"index\\\", v));\\n      let qs = params.toString();\\n      path.search = qs ? `?${qs}` : \\\"\\\";\\n    }\\n  }\\n  if (basename !== \\\"/\\\") {\\n    path.pathname = path.pathname === \\\"/\\\" ? basename : joinPaths([basename, path.pathname]);\\n  }\\n  return createPath(path);\\n}\\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\\n  if (!opts || !isSubmissionNavigation(opts)) {\\n    return { path };\\n  }\\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\\n    return {\\n      path,\\n      error: getInternalRouterError(405, { method: opts.formMethod })\\n    };\\n  }\\n  let getInvalidBodyError = () => ({\\n    path,\\n    error: getInternalRouterError(400, { type: \\\"invalid-body\\\" })\\n  });\\n  let rawFormMethod = opts.formMethod || \\\"get\\\";\\n  let formMethod = rawFormMethod.toUpperCase();\\n  let formAction = stripHashFromPath(path);\\n  if (opts.body !== void 0) {\\n    if (opts.formEncType === \\\"text/plain\\\") {\\n      if (!isMutationMethod(formMethod)) {\\n        return getInvalidBodyError();\\n      }\\n      let text = typeof opts.body === \\\"string\\\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\\n        Array.from(opts.body.entries()).reduce(\\n          (acc, [name, value]) => `${acc}${name}=${value}\\n`,\\n          \\\"\\\"\\n        )\\n      ) : String(opts.body);\\n      return {\\n        path,\\n        submission: {\\n          formMethod,\\n          formAction,\\n          formEncType: opts.formEncType,\\n          formData: void 0,\\n          json: void 0,\\n          text\\n        }\\n      };\\n    } else if (opts.formEncType === \\\"application/json\\\") {\\n      if (!isMutationMethod(formMethod)) {\\n        return getInvalidBodyError();\\n      }\\n      try {\\n        let json = typeof opts.body === \\\"string\\\" ? JSON.parse(opts.body) : opts.body;\\n        return {\\n          path,\\n          submission: {\\n            formMethod,\\n            formAction,\\n            formEncType: opts.formEncType,\\n            formData: void 0,\\n            json,\\n            text: void 0\\n          }\\n        };\\n      } catch (e) {\\n        return getInvalidBodyError();\\n      }\\n    }\\n  }\\n  invariant(\\n    typeof FormData === \\\"function\\\",\\n    \\\"FormData is not available in this environment\\\"\\n  );\\n  let searchParams;\\n  let formData;\\n  if (opts.formData) {\\n    searchParams = convertFormDataToSearchParams(opts.formData);\\n    formData = opts.formData;\\n  } else if (opts.body instanceof FormData) {\\n    searchParams = convertFormDataToSearchParams(opts.body);\\n    formData = opts.body;\\n  } else if (opts.body instanceof URLSearchParams) {\\n    searchParams = opts.body;\\n    formData = convertSearchParamsToFormData(searchParams);\\n  } else if (opts.body == null) {\\n    searchParams = new URLSearchParams();\\n    formData = new FormData();\\n  } else {\\n    try {\\n      searchParams = new URLSearchParams(opts.body);\\n      formData = convertSearchParamsToFormData(searchParams);\\n    } catch (e) {\\n      return getInvalidBodyError();\\n    }\\n  }\\n  let submission = {\\n    formMethod,\\n    formAction,\\n    formEncType: opts && opts.formEncType || \\\"application/x-www-form-urlencoded\\\",\\n    formData,\\n    json: void 0,\\n    text: void 0\\n  };\\n  if (isMutationMethod(submission.formMethod)) {\\n    return { path, submission };\\n  }\\n  let parsedPath = parsePath(path);\\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\\n    searchParams.append(\\\"index\\\", \\\"\\\");\\n  }\\n  parsedPath.search = `?${searchParams}`;\\n  return { path: createPath(parsedPath), submission };\\n}\\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\\n  if (index >= 0) {\\n    return matches.slice(0, includeBoundary ? index + 1 : index);\\n  }\\n  return matches;\\n}\\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\\n  let currentUrl = history.createURL(state.location);\\n  let nextUrl = history.createURL(location);\\n  let boundaryMatches = matches;\\n  if (initialHydration && state.errors) {\\n    boundaryMatches = getLoaderMatchesUntilBoundary(\\n      matches,\\n      Object.keys(state.errors)[0],\\n      true\\n    );\\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\\n    boundaryMatches = getLoaderMatchesUntilBoundary(\\n      matches,\\n      pendingActionResult[0]\\n    );\\n  }\\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\\n  let navigationMatches = boundaryMatches.filter((match, index) => {\\n    let { route } = match;\\n    if (route.lazy) {\\n      return true;\\n    }\\n    if (route.loader == null) {\\n      return false;\\n    }\\n    if (initialHydration) {\\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\\n    }\\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\\n      return true;\\n    }\\n    let currentRouteMatch = state.matches[index];\\n    let nextRouteMatch = match;\\n    return shouldRevalidateLoader(match, {\\n      currentUrl,\\n      currentParams: currentRouteMatch.params,\\n      nextUrl,\\n      nextParams: nextRouteMatch.params,\\n      ...submission,\\n      actionResult,\\n      actionStatus,\\n      defaultShouldRevalidate: shouldSkipRevalidation ? false : (\\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\\n        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\\n      )\\n    });\\n  });\\n  let revalidatingFetchers = [];\\n  fetchLoadMatches.forEach((f, key) => {\\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\\n      return;\\n    }\\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\\n    if (!fetcherMatches) {\\n      revalidatingFetchers.push({\\n        key,\\n        routeId: f.routeId,\\n        path: f.path,\\n        matches: null,\\n        match: null,\\n        controller: null\\n      });\\n      return;\\n    }\\n    let fetcher = state.fetchers.get(key);\\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\\n    let shouldRevalidate = false;\\n    if (fetchRedirectIds.has(key)) {\\n      shouldRevalidate = false;\\n    } else if (cancelledFetcherLoads.has(key)) {\\n      cancelledFetcherLoads.delete(key);\\n      shouldRevalidate = true;\\n    } else if (fetcher && fetcher.state !== \\\"idle\\\" && fetcher.data === void 0) {\\n      shouldRevalidate = isRevalidationRequired;\\n    } else {\\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\\n        currentUrl,\\n        currentParams: state.matches[state.matches.length - 1].params,\\n        nextUrl,\\n        nextParams: matches[matches.length - 1].params,\\n        ...submission,\\n        actionResult,\\n        actionStatus,\\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\\n      });\\n    }\\n    if (shouldRevalidate) {\\n      revalidatingFetchers.push({\\n        key,\\n        routeId: f.routeId,\\n        path: f.path,\\n        matches: fetcherMatches,\\n        match: fetcherMatch,\\n        controller: new AbortController()\\n      });\\n    }\\n  });\\n  return [navigationMatches, revalidatingFetchers];\\n}\\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\\n  if (route.lazy) {\\n    return true;\\n  }\\n  if (!route.loader) {\\n    return false;\\n  }\\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\\n  let hasError = errors != null && errors[route.id] !== void 0;\\n  if (!hasData && hasError) {\\n    return false;\\n  }\\n  if (typeof route.loader === \\\"function\\\" && route.loader.hydrate === true) {\\n    return true;\\n  }\\n  return !hasData && !hasError;\\n}\\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\\n  let isNew = (\\n    // [a] -> [a, b]\\n    !currentMatch || // [a, b] -> [a, c]\\n    match.route.id !== currentMatch.route.id\\n  );\\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\\n  return isNew || isMissingData;\\n}\\nfunction isNewRouteInstance(currentMatch, match) {\\n  let currentPath = currentMatch.route.path;\\n  return (\\n    // param change for this match, /users/123 -> /users/456\\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\\n    currentPath != null && currentPath.endsWith(\\\"*\\\") && currentMatch.params[\\\"*\\\"] !== match.params[\\\"*\\\"]\\n  );\\n}\\nfunction shouldRevalidateLoader(loaderMatch, arg) {\\n  if (loaderMatch.route.shouldRevalidate) {\\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\\n    if (typeof routeChoice === \\\"boolean\\\") {\\n      return routeChoice;\\n    }\\n  }\\n  return arg.defaultShouldRevalidate;\\n}\\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\\n  let childrenToPatch;\\n  if (routeId) {\\n    let route = manifest[routeId];\\n    invariant(\\n      route,\\n      `No route found to patch children into: routeId = ${routeId}`\\n    );\\n    if (!route.children) {\\n      route.children = [];\\n    }\\n    childrenToPatch = route.children;\\n  } else {\\n    childrenToPatch = routesToUse;\\n  }\\n  let uniqueChildren = children.filter(\\n    (newRoute) => !childrenToPatch.some(\\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\\n    )\\n  );\\n  let newRoutes = convertRoutesToDataRoutes(\\n    uniqueChildren,\\n    mapRouteProperties2,\\n    [routeId || \\\"_\\\", \\\"patch\\\", String(childrenToPatch?.length || \\\"0\\\")],\\n    manifest\\n  );\\n  childrenToPatch.push(...newRoutes);\\n}\\nfunction isSameRoute(newRoute, existingRoute) {\\n  if (\\\"id\\\" in newRoute && \\\"id\\\" in existingRoute && newRoute.id === existingRoute.id) {\\n    return true;\\n  }\\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\\n    return false;\\n  }\\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\\n    return true;\\n  }\\n  return newRoute.children.every(\\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\\n  );\\n}\\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\\n  if (!route.lazy) {\\n    return;\\n  }\\n  let lazyRoute = await route.lazy();\\n  if (!route.lazy) {\\n    return;\\n  }\\n  let routeToUpdate = manifest[route.id];\\n  invariant(routeToUpdate, \\\"No route found in manifest\\\");\\n  let routeUpdates = {};\\n  for (let lazyRouteProperty in lazyRoute) {\\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\\n    // on the route updates\\n    lazyRouteProperty !== \\\"hasErrorBoundary\\\";\\n    warning(\\n      !isPropertyStaticallyDefined,\\n      `Route \\\"${routeToUpdate.id}\\\" has a static property \\\"${lazyRouteProperty}\\\" defined but its lazy function is also returning a value for this property. The lazy route property \\\"${lazyRouteProperty}\\\" will be ignored.`\\n    );\\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\\n    }\\n  }\\n  Object.assign(routeToUpdate, routeUpdates);\\n  Object.assign(routeToUpdate, {\\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\\n    // since the logic will differ between frameworks.\\n    ...mapRouteProperties2(routeToUpdate),\\n    lazy: void 0\\n  });\\n}\\nasync function defaultDataStrategy({\\n  matches\\n}) {\\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\\n  return results.reduce(\\n    (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\\n    {}\\n  );\\n}\\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, requestContext) {\\n  let loadRouteDefinitionsPromises = matches.map(\\n    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0\\n  );\\n  let dsMatches = matches.map((match, i) => {\\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\\n    let resolve = async (handlerOverride) => {\\n      if (handlerOverride && request.method === \\\"GET\\\" && (match.route.lazy || match.route.loader)) {\\n        shouldLoad = true;\\n      }\\n      return shouldLoad ? callLoaderOrAction(\\n        type,\\n        request,\\n        match,\\n        loadRoutePromise,\\n        handlerOverride,\\n        requestContext\\n      ) : Promise.resolve({ type: \\\"data\\\" /* data */, result: void 0 });\\n    };\\n    return {\\n      ...match,\\n      shouldLoad,\\n      resolve\\n    };\\n  });\\n  let results = await dataStrategyImpl({\\n    matches: dsMatches,\\n    request,\\n    params: matches[0].params,\\n    fetcherKey,\\n    context: requestContext\\n  });\\n  try {\\n    await Promise.all(loadRouteDefinitionsPromises);\\n  } catch (e) {\\n  }\\n  return results;\\n}\\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\\n  let result;\\n  let onReject;\\n  let runHandler = (handler) => {\\n    let reject;\\n    let abortPromise = new Promise((_, r) => reject = r);\\n    onReject = () => reject();\\n    request.signal.addEventListener(\\\"abort\\\", onReject);\\n    let actualHandler = (ctx) => {\\n      if (typeof handler !== \\\"function\\\") {\\n        return Promise.reject(\\n          new Error(\\n            `You cannot call the handler for a route which defines a boolean \\\"${type}\\\" [routeId: ${match.route.id}]`\\n          )\\n        );\\n      }\\n      return handler(\\n        {\\n          request,\\n          params: match.params,\\n          context: staticContext\\n        },\\n        ...ctx !== void 0 ? [ctx] : []\\n      );\\n    };\\n    let handlerPromise = (async () => {\\n      try {\\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\\n        return { type: \\\"data\\\", result: val };\\n      } catch (e) {\\n        return { type: \\\"error\\\", result: e };\\n      }\\n    })();\\n    return Promise.race([handlerPromise, abortPromise]);\\n  };\\n  try {\\n    let handler = match.route[type];\\n    if (loadRoutePromise) {\\n      if (handler) {\\n        let handlerError;\\n        let [value] = await Promise.all([\\n          // If the handler throws, don't let it immediately bubble out,\\n          // since we need to let the lazy() execution finish so we know if this\\n          // route has a boundary that can handle the error\\n          runHandler(handler).catch((e) => {\\n            handlerError = e;\\n          }),\\n          loadRoutePromise\\n        ]);\\n        if (handlerError !== void 0) {\\n          throw handlerError;\\n        }\\n        result = value;\\n      } else {\\n        await loadRoutePromise;\\n        handler = match.route[type];\\n        if (handler) {\\n          result = await runHandler(handler);\\n        } else if (type === \\\"action\\\") {\\n          let url = new URL(request.url);\\n          let pathname = url.pathname + url.search;\\n          throw getInternalRouterError(405, {\\n            method: request.method,\\n            pathname,\\n            routeId: match.route.id\\n          });\\n        } else {\\n          return { type: \\\"data\\\" /* data */, result: void 0 };\\n        }\\n      }\\n    } else if (!handler) {\\n      let url = new URL(request.url);\\n      let pathname = url.pathname + url.search;\\n      throw getInternalRouterError(404, {\\n        pathname\\n      });\\n    } else {\\n      result = await runHandler(handler);\\n    }\\n  } catch (e) {\\n    return { type: \\\"error\\\" /* error */, result: e };\\n  } finally {\\n    if (onReject) {\\n      request.signal.removeEventListener(\\\"abort\\\", onReject);\\n    }\\n  }\\n  return result;\\n}\\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\\n  let { result, type } = dataStrategyResult;\\n  if (isResponse(result)) {\\n    let data2;\\n    try {\\n      let contentType = result.headers.get(\\\"Content-Type\\\");\\n      if (contentType && /\\\\bapplication\\\\/json\\\\b/.test(contentType)) {\\n        if (result.body == null) {\\n          data2 = null;\\n        } else {\\n          data2 = await result.json();\\n        }\\n      } else {\\n        data2 = await result.text();\\n      }\\n    } catch (e) {\\n      return { type: \\\"error\\\" /* error */, error: e };\\n    }\\n    if (type === \\\"error\\\" /* error */) {\\n      return {\\n        type: \\\"error\\\" /* error */,\\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\\n        statusCode: result.status,\\n        headers: result.headers\\n      };\\n    }\\n    return {\\n      type: \\\"data\\\" /* data */,\\n      data: data2,\\n      statusCode: result.status,\\n      headers: result.headers\\n    };\\n  }\\n  if (type === \\\"error\\\" /* error */) {\\n    if (isDataWithResponseInit(result)) {\\n      if (result.data instanceof Error) {\\n        return {\\n          type: \\\"error\\\" /* error */,\\n          error: result.data,\\n          statusCode: result.init?.status\\n        };\\n      }\\n      result = new ErrorResponseImpl(\\n        result.init?.status || 500,\\n        void 0,\\n        result.data\\n      );\\n    }\\n    return {\\n      type: \\\"error\\\" /* error */,\\n      error: result,\\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\\n    };\\n  }\\n  if (isDataWithResponseInit(result)) {\\n    return {\\n      type: \\\"data\\\" /* data */,\\n      data: result.data,\\n      statusCode: result.init?.status,\\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\\n    };\\n  }\\n  return { type: \\\"data\\\" /* data */, data: result };\\n}\\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\\n  let location = response.headers.get(\\\"Location\\\");\\n  invariant(\\n    location,\\n    \\\"Redirects returned/thrown from loaders/actions must have a Location header\\\"\\n  );\\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\\n    let trimmedMatches = matches.slice(\\n      0,\\n      matches.findIndex((m) => m.route.id === routeId) + 1\\n    );\\n    location = normalizeTo(\\n      new URL(request.url),\\n      trimmedMatches,\\n      basename,\\n      location\\n    );\\n    response.headers.set(\\\"Location\\\", location);\\n  }\\n  return response;\\n}\\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\\n  if (ABSOLUTE_URL_REGEX.test(location)) {\\n    let normalizedLocation = location;\\n    let url = normalizedLocation.startsWith(\\\"//\\\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\\n    if (url.origin === currentUrl.origin && isSameBasename) {\\n      return url.pathname + url.search + url.hash;\\n    }\\n  }\\n  return location;\\n}\\nfunction createClientSideRequest(history, location, signal, submission) {\\n  let url = history.createURL(stripHashFromPath(location)).toString();\\n  let init = { signal };\\n  if (submission && isMutationMethod(submission.formMethod)) {\\n    let { formMethod, formEncType } = submission;\\n    init.method = formMethod.toUpperCase();\\n    if (formEncType === \\\"application/json\\\") {\\n      init.headers = new Headers({ \\\"Content-Type\\\": formEncType });\\n      init.body = JSON.stringify(submission.json);\\n    } else if (formEncType === \\\"text/plain\\\") {\\n      init.body = submission.text;\\n    } else if (formEncType === \\\"application/x-www-form-urlencoded\\\" && submission.formData) {\\n      init.body = convertFormDataToSearchParams(submission.formData);\\n    } else {\\n      init.body = submission.formData;\\n    }\\n  }\\n  return new Request(url, init);\\n}\\nfunction convertFormDataToSearchParams(formData) {\\n  let searchParams = new URLSearchParams();\\n  for (let [key, value] of formData.entries()) {\\n    searchParams.append(key, typeof value === \\\"string\\\" ? value : value.name);\\n  }\\n  return searchParams;\\n}\\nfunction convertSearchParamsToFormData(searchParams) {\\n  let formData = new FormData();\\n  for (let [key, value] of searchParams.entries()) {\\n    formData.append(key, value);\\n  }\\n  return formData;\\n}\\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\\n  let loaderData = {};\\n  let errors = null;\\n  let statusCode;\\n  let foundError = false;\\n  let loaderHeaders = {};\\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\\n  matches.forEach((match) => {\\n    if (!(match.route.id in results)) {\\n      return;\\n    }\\n    let id = match.route.id;\\n    let result = results[id];\\n    invariant(\\n      !isRedirectResult(result),\\n      \\\"Cannot handle redirect results in processLoaderData\\\"\\n    );\\n    if (isErrorResult(result)) {\\n      let error = result.error;\\n      if (pendingError !== void 0) {\\n        error = pendingError;\\n        pendingError = void 0;\\n      }\\n      errors = errors || {};\\n      if (skipLoaderErrorBubbling) {\\n        errors[id] = error;\\n      } else {\\n        let boundaryMatch = findNearestBoundary(matches, id);\\n        if (errors[boundaryMatch.route.id] == null) {\\n          errors[boundaryMatch.route.id] = error;\\n        }\\n      }\\n      if (!isStaticHandler) {\\n        loaderData[id] = ResetLoaderDataSymbol;\\n      }\\n      if (!foundError) {\\n        foundError = true;\\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\\n      }\\n      if (result.headers) {\\n        loaderHeaders[id] = result.headers;\\n      }\\n    } else {\\n      loaderData[id] = result.data;\\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\\n        statusCode = result.statusCode;\\n      }\\n      if (result.headers) {\\n        loaderHeaders[id] = result.headers;\\n      }\\n    }\\n  });\\n  if (pendingError !== void 0 && pendingActionResult) {\\n    errors = { [pendingActionResult[0]]: pendingError };\\n    loaderData[pendingActionResult[0]] = void 0;\\n  }\\n  return {\\n    loaderData,\\n    errors,\\n    statusCode: statusCode || 200,\\n    loaderHeaders\\n  };\\n}\\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\\n  let { loaderData, errors } = processRouteLoaderData(\\n    matches,\\n    results,\\n    pendingActionResult\\n  );\\n  revalidatingFetchers.forEach((rf) => {\\n    let { key, match, controller } = rf;\\n    let result = fetcherResults[key];\\n    invariant(result, \\\"Did not find corresponding fetcher result\\\");\\n    if (controller && controller.signal.aborted) {\\n      return;\\n    } else if (isErrorResult(result)) {\\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\\n      if (!(errors && errors[boundaryMatch.route.id])) {\\n        errors = {\\n          ...errors,\\n          [boundaryMatch.route.id]: result.error\\n        };\\n      }\\n      state.fetchers.delete(key);\\n    } else if (isRedirectResult(result)) {\\n      invariant(false, \\\"Unhandled fetcher revalidation redirect\\\");\\n    } else {\\n      let doneFetcher = getDoneFetcher(result.data);\\n      state.fetchers.set(key, doneFetcher);\\n    }\\n  });\\n  return { loaderData, errors };\\n}\\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\\n    merged[k] = v;\\n    return merged;\\n  }, {});\\n  for (let match of matches) {\\n    let id = match.route.id;\\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\\n      mergedLoaderData[id] = loaderData[id];\\n    }\\n    if (errors && errors.hasOwnProperty(id)) {\\n      break;\\n    }\\n  }\\n  return mergedLoaderData;\\n}\\nfunction getActionDataForCommit(pendingActionResult) {\\n  if (!pendingActionResult) {\\n    return {};\\n  }\\n  return isErrorResult(pendingActionResult[1]) ? {\\n    // Clear out prior actionData on errors\\n    actionData: {}\\n  } : {\\n    actionData: {\\n      [pendingActionResult[0]]: pendingActionResult[1].data\\n    }\\n  };\\n}\\nfunction findNearestBoundary(matches, routeId) {\\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\\n}\\nfunction getShortCircuitMatches(routes) {\\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \\\"/\\\") || {\\n    id: `__shim-error-route__`\\n  };\\n  return {\\n    matches: [\\n      {\\n        params: {},\\n        pathname: \\\"\\\",\\n        pathnameBase: \\\"\\\",\\n        route\\n      }\\n    ],\\n    route\\n  };\\n}\\nfunction getInternalRouterError(status, {\\n  pathname,\\n  routeId,\\n  method,\\n  type,\\n  message\\n} = {}) {\\n  let statusText = \\\"Unknown Server Error\\\";\\n  let errorMessage = \\\"Unknown @remix-run/router error\\\";\\n  if (status === 400) {\\n    statusText = \\\"Bad Request\\\";\\n    if (method && pathname && routeId) {\\n      errorMessage = `You made a ${method} request to \\\"${pathname}\\\" but did not provide a \\\\`loader\\\\` for route \\\"${routeId}\\\", so there is no way to handle the request.`;\\n    } else if (type === \\\"invalid-body\\\") {\\n      errorMessage = \\\"Unable to encode submission body\\\";\\n    }\\n  } else if (status === 403) {\\n    statusText = \\\"Forbidden\\\";\\n    errorMessage = `Route \\\"${routeId}\\\" does not match URL \\\"${pathname}\\\"`;\\n  } else if (status === 404) {\\n    statusText = \\\"Not Found\\\";\\n    errorMessage = `No route matches URL \\\"${pathname}\\\"`;\\n  } else if (status === 405) {\\n    statusText = \\\"Method Not Allowed\\\";\\n    if (method && pathname && routeId) {\\n      errorMessage = `You made a ${method.toUpperCase()} request to \\\"${pathname}\\\" but did not provide an \\\\`action\\\\` for route \\\"${routeId}\\\", so there is no way to handle the request.`;\\n    } else if (method) {\\n      errorMessage = `Invalid request method \\\"${method.toUpperCase()}\\\"`;\\n    }\\n  }\\n  return new ErrorResponseImpl(\\n    status || 500,\\n    statusText,\\n    new Error(errorMessage),\\n    true\\n  );\\n}\\nfunction findRedirect(results) {\\n  let entries = Object.entries(results);\\n  for (let i = entries.length - 1; i >= 0; i--) {\\n    let [key, result] = entries[i];\\n    if (isRedirectResult(result)) {\\n      return { key, result };\\n    }\\n  }\\n}\\nfunction stripHashFromPath(path) {\\n  let parsedPath = typeof path === \\\"string\\\" ? parsePath(path) : path;\\n  return createPath({ ...parsedPath, hash: \\\"\\\" });\\n}\\nfunction isHashChangeOnly(a, b) {\\n  if (a.pathname !== b.pathname || a.search !== b.search) {\\n    return false;\\n  }\\n  if (a.hash === \\\"\\\") {\\n    return b.hash !== \\\"\\\";\\n  } else if (a.hash === b.hash) {\\n    return true;\\n  } else if (b.hash !== \\\"\\\") {\\n    return true;\\n  }\\n  return false;\\n}\\nfunction isDataStrategyResult(result) {\\n  return result != null && typeof result === \\\"object\\\" && \\\"type\\\" in result && \\\"result\\\" in result && (result.type === \\\"data\\\" /* data */ || result.type === \\\"error\\\" /* error */);\\n}\\nfunction isRedirectDataStrategyResult(result) {\\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\\n}\\nfunction isErrorResult(result) {\\n  return result.type === \\\"error\\\" /* error */;\\n}\\nfunction isRedirectResult(result) {\\n  return (result && result.type) === \\\"redirect\\\" /* redirect */;\\n}\\nfunction isDataWithResponseInit(value) {\\n  return typeof value === \\\"object\\\" && value != null && \\\"type\\\" in value && \\\"data\\\" in value && \\\"init\\\" in value && value.type === \\\"DataWithResponseInit\\\";\\n}\\nfunction isResponse(value) {\\n  return value != null && typeof value.status === \\\"number\\\" && typeof value.statusText === \\\"string\\\" && typeof value.headers === \\\"object\\\" && typeof value.body !== \\\"undefined\\\";\\n}\\nfunction isRedirectStatusCode(statusCode) {\\n  return redirectStatusCodes.has(statusCode);\\n}\\nfunction isRedirectResponse(result) {\\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\\\"Location\\\");\\n}\\nfunction isValidMethod(method) {\\n  return validRequestMethods.has(method.toUpperCase());\\n}\\nfunction isMutationMethod(method) {\\n  return validMutationMethods.has(method.toUpperCase());\\n}\\nfunction hasNakedIndexQuery(search) {\\n  return new URLSearchParams(search).getAll(\\\"index\\\").some((v) => v === \\\"\\\");\\n}\\nfunction getTargetMatch(matches, location) {\\n  let search = typeof location === \\\"string\\\" ? parsePath(location).search : location.search;\\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \\\"\\\")) {\\n    return matches[matches.length - 1];\\n  }\\n  let pathMatches = getPathContributingMatches(matches);\\n  return pathMatches[pathMatches.length - 1];\\n}\\nfunction getSubmissionFromNavigation(navigation) {\\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\\n  if (!formMethod || !formAction || !formEncType) {\\n    return;\\n  }\\n  if (text != null) {\\n    return {\\n      formMethod,\\n      formAction,\\n      formEncType,\\n      formData: void 0,\\n      json: void 0,\\n      text\\n    };\\n  } else if (formData != null) {\\n    return {\\n      formMethod,\\n      formAction,\\n      formEncType,\\n      formData,\\n      json: void 0,\\n      text: void 0\\n    };\\n  } else if (json !== void 0) {\\n    return {\\n      formMethod,\\n      formAction,\\n      formEncType,\\n      formData: void 0,\\n      json,\\n      text: void 0\\n    };\\n  }\\n}\\nfunction getLoadingNavigation(location, submission) {\\n  if (submission) {\\n    let navigation = {\\n      state: \\\"loading\\\",\\n      location,\\n      formMethod: submission.formMethod,\\n      formAction: submission.formAction,\\n      formEncType: submission.formEncType,\\n      formData: submission.formData,\\n      json: submission.json,\\n      text: submission.text\\n    };\\n    return navigation;\\n  } else {\\n    let navigation = {\\n      state: \\\"loading\\\",\\n      location,\\n      formMethod: void 0,\\n      formAction: void 0,\\n      formEncType: void 0,\\n      formData: void 0,\\n      json: void 0,\\n      text: void 0\\n    };\\n    return navigation;\\n  }\\n}\\nfunction getSubmittingNavigation(location, submission) {\\n  let navigation = {\\n    state: \\\"submitting\\\",\\n    location,\\n    formMethod: submission.formMethod,\\n    formAction: submission.formAction,\\n    formEncType: submission.formEncType,\\n    formData: submission.formData,\\n    json: submission.json,\\n    text: submission.text\\n  };\\n  return navigation;\\n}\\nfunction getLoadingFetcher(submission, data2) {\\n  if (submission) {\\n    let fetcher = {\\n      state: \\\"loading\\\",\\n      formMethod: submission.formMethod,\\n      formAction: submission.formAction,\\n      formEncType: submission.formEncType,\\n      formData: submission.formData,\\n      json: submission.json,\\n      text: submission.text,\\n      data: data2\\n    };\\n    return fetcher;\\n  } else {\\n    let fetcher = {\\n      state: \\\"loading\\\",\\n      formMethod: void 0,\\n      formAction: void 0,\\n      formEncType: void 0,\\n      formData: void 0,\\n      json: void 0,\\n      text: void 0,\\n      data: data2\\n    };\\n    return fetcher;\\n  }\\n}\\nfunction getSubmittingFetcher(submission, existingFetcher) {\\n  let fetcher = {\\n    state: \\\"submitting\\\",\\n    formMethod: submission.formMethod,\\n    formAction: submission.formAction,\\n    formEncType: submission.formEncType,\\n    formData: submission.formData,\\n    json: submission.json,\\n    text: submission.text,\\n    data: existingFetcher ? existingFetcher.data : void 0\\n  };\\n  return fetcher;\\n}\\nfunction getDoneFetcher(data2) {\\n  let fetcher = {\\n    state: \\\"idle\\\",\\n    formMethod: void 0,\\n    formAction: void 0,\\n    formEncType: void 0,\\n    formData: void 0,\\n    json: void 0,\\n    text: void 0,\\n    data: data2\\n  };\\n  return fetcher;\\n}\\nfunction restoreAppliedTransitions(_window, transitions) {\\n  try {\\n    let sessionPositions = _window.sessionStorage.getItem(\\n      TRANSITIONS_STORAGE_KEY\\n    );\\n    if (sessionPositions) {\\n      let json = JSON.parse(sessionPositions);\\n      for (let [k, v] of Object.entries(json || {})) {\\n        if (v && Array.isArray(v)) {\\n          transitions.set(k, new Set(v || []));\\n        }\\n      }\\n    }\\n  } catch (e) {\\n  }\\n}\\nfunction persistAppliedTransitions(_window, transitions) {\\n  if (transitions.size > 0) {\\n    let json = {};\\n    for (let [k, v] of transitions) {\\n      json[k] = [...v];\\n    }\\n    try {\\n      _window.sessionStorage.setItem(\\n        TRANSITIONS_STORAGE_KEY,\\n        JSON.stringify(json)\\n      );\\n    } catch (error) {\\n      warning(\\n        false,\\n        `Failed to save applied view transitions in sessionStorage (${error}).`\\n      );\\n    }\\n  }\\n}\\nfunction createDeferred() {\\n  let resolve;\\n  let reject;\\n  let promise = new Promise((res, rej) => {\\n    resolve = async (val) => {\\n      res(val);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n    reject = async (error) => {\\n      rej(error);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n  });\\n  return {\\n    promise,\\n    //@ts-ignore\\n    resolve,\\n    //@ts-ignore\\n    reject\\n  };\\n}\\n\\n// lib/components.tsx\\nimport * as React3 from \\\"react\\\";\\n\\n// lib/context.ts\\nimport * as React from \\\"react\\\";\\nvar DataRouterContext = React.createContext(null);\\nDataRouterContext.displayName = \\\"DataRouter\\\";\\nvar DataRouterStateContext = React.createContext(null);\\nDataRouterStateContext.displayName = \\\"DataRouterState\\\";\\nvar ViewTransitionContext = React.createContext({\\n  isTransitioning: false\\n});\\nViewTransitionContext.displayName = \\\"ViewTransition\\\";\\nvar FetchersContext = React.createContext(\\n  /* @__PURE__ */ new Map()\\n);\\nFetchersContext.displayName = \\\"Fetchers\\\";\\nvar AwaitContext = React.createContext(null);\\nAwaitContext.displayName = \\\"Await\\\";\\nvar NavigationContext = React.createContext(\\n  null\\n);\\nNavigationContext.displayName = \\\"Navigation\\\";\\nvar LocationContext = React.createContext(\\n  null\\n);\\nLocationContext.displayName = \\\"Location\\\";\\nvar RouteContext = React.createContext({\\n  outlet: null,\\n  matches: [],\\n  isDataRoute: false\\n});\\nRouteContext.displayName = \\\"Route\\\";\\nvar RouteErrorContext = React.createContext(null);\\nRouteErrorContext.displayName = \\\"RouteError\\\";\\n\\n// lib/hooks.tsx\\nimport * as React2 from \\\"react\\\";\\nvar ENABLE_DEV_WARNINGS = true;\\nfunction useHref(to, { relative } = {}) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useHref() may be used only in the context of a <Router> component.`\\n  );\\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\\n  let joinedPathname = pathname;\\n  if (basename !== \\\"/\\\") {\\n    joinedPathname = pathname === \\\"/\\\" ? basename : joinPaths([basename, pathname]);\\n  }\\n  return navigator2.createHref({ pathname: joinedPathname, search, hash });\\n}\\nfunction useInRouterContext() {\\n  return React2.useContext(LocationContext) != null;\\n}\\nfunction useLocation() {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useLocation() may be used only in the context of a <Router> component.`\\n  );\\n  return React2.useContext(LocationContext).location;\\n}\\nfunction useNavigationType() {\\n  return React2.useContext(LocationContext).navigationType;\\n}\\nfunction useMatch(pattern) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useMatch() may be used only in the context of a <Router> component.`\\n  );\\n  let { pathname } = useLocation();\\n  return React2.useMemo(\\n    () => matchPath(pattern, decodePath(pathname)),\\n    [pathname, pattern]\\n  );\\n}\\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\\nfunction useIsomorphicLayoutEffect(cb) {\\n  let isStatic = React2.useContext(NavigationContext).static;\\n  if (!isStatic) {\\n    React2.useLayoutEffect(cb);\\n  }\\n}\\nfunction useNavigate() {\\n  let { isDataRoute } = React2.useContext(RouteContext);\\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\\n}\\nfunction useNavigateUnstable() {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useNavigate() may be used only in the context of a <Router> component.`\\n  );\\n  let dataRouterContext = React2.useContext(DataRouterContext);\\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\\n  let { matches } = React2.useContext(RouteContext);\\n  let { pathname: locationPathname } = useLocation();\\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\\n  let activeRef = React2.useRef(false);\\n  useIsomorphicLayoutEffect(() => {\\n    activeRef.current = true;\\n  });\\n  let navigate = React2.useCallback(\\n    (to, options = {}) => {\\n      warning(activeRef.current, navigateEffectWarning);\\n      if (!activeRef.current) return;\\n      if (typeof to === \\\"number\\\") {\\n        navigator2.go(to);\\n        return;\\n      }\\n      let path = resolveTo(\\n        to,\\n        JSON.parse(routePathnamesJson),\\n        locationPathname,\\n        options.relative === \\\"path\\\"\\n      );\\n      if (dataRouterContext == null && basename !== \\\"/\\\") {\\n        path.pathname = path.pathname === \\\"/\\\" ? basename : joinPaths([basename, path.pathname]);\\n      }\\n      (!!options.replace ? navigator2.replace : navigator2.push)(\\n        path,\\n        options.state,\\n        options\\n      );\\n    },\\n    [\\n      basename,\\n      navigator2,\\n      routePathnamesJson,\\n      locationPathname,\\n      dataRouterContext\\n    ]\\n  );\\n  return navigate;\\n}\\nvar OutletContext = React2.createContext(null);\\nfunction useOutletContext() {\\n  return React2.useContext(OutletContext);\\n}\\nfunction useOutlet(context) {\\n  let outlet = React2.useContext(RouteContext).outlet;\\n  if (outlet) {\\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\\n  }\\n  return outlet;\\n}\\nfunction useParams() {\\n  let { matches } = React2.useContext(RouteContext);\\n  let routeMatch = matches[matches.length - 1];\\n  return routeMatch ? routeMatch.params : {};\\n}\\nfunction useResolvedPath(to, { relative } = {}) {\\n  let { matches } = React2.useContext(RouteContext);\\n  let { pathname: locationPathname } = useLocation();\\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\\n  return React2.useMemo(\\n    () => resolveTo(\\n      to,\\n      JSON.parse(routePathnamesJson),\\n      locationPathname,\\n      relative === \\\"path\\\"\\n    ),\\n    [to, routePathnamesJson, locationPathname, relative]\\n  );\\n}\\nfunction useRoutes(routes, locationArg) {\\n  return useRoutesImpl(routes, locationArg);\\n}\\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of the\\n    // router loaded. We can help them understand how to avoid that.\\n    `useRoutes() may be used only in the context of a <Router> component.`\\n  );\\n  let { navigator: navigator2 } = React2.useContext(NavigationContext);\\n  let { matches: parentMatches } = React2.useContext(RouteContext);\\n  let routeMatch = parentMatches[parentMatches.length - 1];\\n  let parentParams = routeMatch ? routeMatch.params : {};\\n  let parentPathname = routeMatch ? routeMatch.pathname : \\\"/\\\";\\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \\\"/\\\";\\n  let parentRoute = routeMatch && routeMatch.route;\\n  if (ENABLE_DEV_WARNINGS) {\\n    let parentPath = parentRoute && parentRoute.path || \\\"\\\";\\n    warningOnce(\\n      parentPathname,\\n      !parentRoute || parentPath.endsWith(\\\"*\\\") || parentPath.endsWith(\\\"*?\\\"),\\n      `You rendered descendant <Routes> (or called \\\\`useRoutes()\\\\`) at \\\"${parentPathname}\\\" (under <Route path=\\\"${parentPath}\\\">) but the parent route path has no trailing \\\"*\\\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\\n\\nPlease change the parent <Route path=\\\"${parentPath}\\\"> to <Route path=\\\"${parentPath === \\\"/\\\" ? \\\"*\\\" : `${parentPath}/*`}\\\">.`\\n    );\\n  }\\n  let locationFromContext = useLocation();\\n  let location;\\n  if (locationArg) {\\n    let parsedLocationArg = typeof locationArg === \\\"string\\\" ? parsePath(locationArg) : locationArg;\\n    invariant(\\n      parentPathnameBase === \\\"/\\\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\\n      `When overriding the location using \\\\`<Routes location>\\\\` or \\\\`useRoutes(routes, location)\\\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \\\"${parentPathnameBase}\\\" but pathname \\\"${parsedLocationArg.pathname}\\\" was given in the \\\\`location\\\\` prop.`\\n    );\\n    location = parsedLocationArg;\\n  } else {\\n    location = locationFromContext;\\n  }\\n  let pathname = location.pathname || \\\"/\\\";\\n  let remainingPathname = pathname;\\n  if (parentPathnameBase !== \\\"/\\\") {\\n    let parentSegments = parentPathnameBase.replace(/^\\\\//, \\\"\\\").split(\\\"/\\\");\\n    let segments = pathname.replace(/^\\\\//, \\\"\\\").split(\\\"/\\\");\\n    remainingPathname = \\\"/\\\" + segments.slice(parentSegments.length).join(\\\"/\\\");\\n  }\\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\\n  if (ENABLE_DEV_WARNINGS) {\\n    warning(\\n      parentRoute || matches != null,\\n      `No routes matched location \\\"${location.pathname}${location.search}${location.hash}\\\" `\\n    );\\n    warning(\\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\\n      `Matched leaf route at location \\\"${location.pathname}${location.search}${location.hash}\\\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.`\\n    );\\n  }\\n  let renderedMatches = _renderMatches(\\n    matches && matches.map(\\n      (match) => Object.assign({}, match, {\\n        params: Object.assign({}, parentParams, match.params),\\n        pathname: joinPaths([\\n          parentPathnameBase,\\n          // Re-encode pathnames that were decoded inside matchRoutes\\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\\n        ]),\\n        pathnameBase: match.pathnameBase === \\\"/\\\" ? parentPathnameBase : joinPaths([\\n          parentPathnameBase,\\n          // Re-encode pathnames that were decoded inside matchRoutes\\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\\n        ])\\n      })\\n    ),\\n    parentMatches,\\n    dataRouterState,\\n    future\\n  );\\n  if (locationArg && renderedMatches) {\\n    return /* @__PURE__ */ React2.createElement(\\n      LocationContext.Provider,\\n      {\\n        value: {\\n          location: {\\n            pathname: \\\"/\\\",\\n            search: \\\"\\\",\\n            hash: \\\"\\\",\\n            state: null,\\n            key: \\\"default\\\",\\n            ...location\\n          },\\n          navigationType: \\\"POP\\\" /* Pop */\\n        }\\n      },\\n      renderedMatches\\n    );\\n  }\\n  return renderedMatches;\\n}\\nfunction DefaultErrorComponent() {\\n  let error = useRouteError();\\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\\n  let stack = error instanceof Error ? error.stack : null;\\n  let lightgrey = \\\"rgba(200,200,200, 0.5)\\\";\\n  let preStyles = { padding: \\\"0.5rem\\\", backgroundColor: lightgrey };\\n  let codeStyles = { padding: \\\"2px 4px\\\", backgroundColor: lightgrey };\\n  let devInfo = null;\\n  if (ENABLE_DEV_WARNINGS) {\\n    console.error(\\n      \\\"Error handled by React Router default ErrorBoundary:\\\",\\n      error\\n    );\\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\\\"p\\\", null, \\\"\\\\u{1F4BF} Hey developer \\\\u{1F44B}\\\"), /* @__PURE__ */ React2.createElement(\\\"p\\\", null, \\\"You can provide a way better UX than this when your app throws errors by providing your own \\\", /* @__PURE__ */ React2.createElement(\\\"code\\\", { style: codeStyles }, \\\"ErrorBoundary\\\"), \\\" or\\\", \\\" \\\", /* @__PURE__ */ React2.createElement(\\\"code\\\", { style: codeStyles }, \\\"errorElement\\\"), \\\" prop on your route.\\\"));\\n  }\\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\\\"h2\\\", null, \\\"Unexpected Application Error!\\\"), /* @__PURE__ */ React2.createElement(\\\"h3\\\", { style: { fontStyle: \\\"italic\\\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\\\"pre\\\", { style: preStyles }, stack) : null, devInfo);\\n}\\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\\nvar RenderErrorBoundary = class extends React2.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      location: props.location,\\n      revalidation: props.revalidation,\\n      error: props.error\\n    };\\n  }\\n  static getDerivedStateFromError(error) {\\n    return { error };\\n  }\\n  static getDerivedStateFromProps(props, state) {\\n    if (state.location !== props.location || state.revalidation !== \\\"idle\\\" && props.revalidation === \\\"idle\\\") {\\n      return {\\n        error: props.error,\\n        location: props.location,\\n        revalidation: props.revalidation\\n      };\\n    }\\n    return {\\n      error: props.error !== void 0 ? props.error : state.error,\\n      location: state.location,\\n      revalidation: props.revalidation || state.revalidation\\n    };\\n  }\\n  componentDidCatch(error, errorInfo) {\\n    console.error(\\n      \\\"React Router caught the following error during render\\\",\\n      error,\\n      errorInfo\\n    );\\n  }\\n  render() {\\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\\n      RouteErrorContext.Provider,\\n      {\\n        value: this.state.error,\\n        children: this.props.component\\n      }\\n    )) : this.props.children;\\n  }\\n};\\nfunction RenderedRoute({ routeContext, match, children }) {\\n  let dataRouterContext = React2.useContext(DataRouterContext);\\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\\n  }\\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\\n}\\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\\n  if (matches == null) {\\n    if (!dataRouterState) {\\n      return null;\\n    }\\n    if (dataRouterState.errors) {\\n      matches = dataRouterState.matches;\\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\\n      matches = dataRouterState.matches;\\n    } else {\\n      return null;\\n    }\\n  }\\n  let renderedMatches = matches;\\n  let errors = dataRouterState?.errors;\\n  if (errors != null) {\\n    let errorIndex = renderedMatches.findIndex(\\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\\n    );\\n    invariant(\\n      errorIndex >= 0,\\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\\n        errors\\n      ).join(\\\",\\\")}`\\n    );\\n    renderedMatches = renderedMatches.slice(\\n      0,\\n      Math.min(renderedMatches.length, errorIndex + 1)\\n    );\\n  }\\n  let renderFallback = false;\\n  let fallbackIndex = -1;\\n  if (dataRouterState) {\\n    for (let i = 0; i < renderedMatches.length; i++) {\\n      let match = renderedMatches[i];\\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\\n        fallbackIndex = i;\\n      }\\n      if (match.route.id) {\\n        let { loaderData, errors: errors2 } = dataRouterState;\\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\\n        if (match.route.lazy || needsToRunLoader) {\\n          renderFallback = true;\\n          if (fallbackIndex >= 0) {\\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\\n          } else {\\n            renderedMatches = [renderedMatches[0]];\\n          }\\n          break;\\n        }\\n      }\\n    }\\n  }\\n  return renderedMatches.reduceRight((outlet, match, index) => {\\n    let error;\\n    let shouldRenderHydrateFallback = false;\\n    let errorElement = null;\\n    let hydrateFallbackElement = null;\\n    if (dataRouterState) {\\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\\n      errorElement = match.route.errorElement || defaultErrorElement;\\n      if (renderFallback) {\\n        if (fallbackIndex < 0 && index === 0) {\\n          warningOnce(\\n            \\\"route-fallback\\\",\\n            false,\\n            \\\"No `HydrateFallback` element provided to render during initial hydration\\\"\\n          );\\n          shouldRenderHydrateFallback = true;\\n          hydrateFallbackElement = null;\\n        } else if (fallbackIndex === index) {\\n          shouldRenderHydrateFallback = true;\\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\\n        }\\n      }\\n    }\\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\\n    let getChildren = () => {\\n      let children;\\n      if (error) {\\n        children = errorElement;\\n      } else if (shouldRenderHydrateFallback) {\\n        children = hydrateFallbackElement;\\n      } else if (match.route.Component) {\\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\\n      } else if (match.route.element) {\\n        children = match.route.element;\\n      } else {\\n        children = outlet;\\n      }\\n      return /* @__PURE__ */ React2.createElement(\\n        RenderedRoute,\\n        {\\n          match,\\n          routeContext: {\\n            outlet,\\n            matches: matches2,\\n            isDataRoute: dataRouterState != null\\n          },\\n          children\\n        }\\n      );\\n    };\\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\\n      RenderErrorBoundary,\\n      {\\n        location: dataRouterState.location,\\n        revalidation: dataRouterState.revalidation,\\n        component: errorElement,\\n        error,\\n        children: getChildren(),\\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\\n      }\\n    ) : getChildren();\\n  }, null);\\n}\\nfunction getDataRouterConsoleError(hookName) {\\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\\n}\\nfunction useDataRouterContext(hookName) {\\n  let ctx = React2.useContext(DataRouterContext);\\n  invariant(ctx, getDataRouterConsoleError(hookName));\\n  return ctx;\\n}\\nfunction useDataRouterState(hookName) {\\n  let state = React2.useContext(DataRouterStateContext);\\n  invariant(state, getDataRouterConsoleError(hookName));\\n  return state;\\n}\\nfunction useRouteContext(hookName) {\\n  let route = React2.useContext(RouteContext);\\n  invariant(route, getDataRouterConsoleError(hookName));\\n  return route;\\n}\\nfunction useCurrentRouteId(hookName) {\\n  let route = useRouteContext(hookName);\\n  let thisRoute = route.matches[route.matches.length - 1];\\n  invariant(\\n    thisRoute.route.id,\\n    `${hookName} can only be used on routes that contain a unique \\\"id\\\"`\\n  );\\n  return thisRoute.route.id;\\n}\\nfunction useRouteId() {\\n  return useCurrentRouteId(\\\"useRouteId\\\" /* UseRouteId */);\\n}\\nfunction useNavigation() {\\n  let state = useDataRouterState(\\\"useNavigation\\\" /* UseNavigation */);\\n  return state.navigation;\\n}\\nfunction useRevalidator() {\\n  let dataRouterContext = useDataRouterContext(\\\"useRevalidator\\\" /* UseRevalidator */);\\n  let state = useDataRouterState(\\\"useRevalidator\\\" /* UseRevalidator */);\\n  return React2.useMemo(\\n    () => ({\\n      async revalidate() {\\n        await dataRouterContext.router.revalidate();\\n      },\\n      state: state.revalidation\\n    }),\\n    [dataRouterContext.router, state.revalidation]\\n  );\\n}\\nfunction useMatches() {\\n  let { matches, loaderData } = useDataRouterState(\\n    \\\"useMatches\\\" /* UseMatches */\\n  );\\n  return React2.useMemo(\\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\\n    [matches, loaderData]\\n  );\\n}\\nfunction useLoaderData() {\\n  let state = useDataRouterState(\\\"useLoaderData\\\" /* UseLoaderData */);\\n  let routeId = useCurrentRouteId(\\\"useLoaderData\\\" /* UseLoaderData */);\\n  return state.loaderData[routeId];\\n}\\nfunction useRouteLoaderData(routeId) {\\n  let state = useDataRouterState(\\\"useRouteLoaderData\\\" /* UseRouteLoaderData */);\\n  return state.loaderData[routeId];\\n}\\nfunction useActionData() {\\n  let state = useDataRouterState(\\\"useActionData\\\" /* UseActionData */);\\n  let routeId = useCurrentRouteId(\\\"useLoaderData\\\" /* UseLoaderData */);\\n  return state.actionData ? state.actionData[routeId] : void 0;\\n}\\nfunction useRouteError() {\\n  let error = React2.useContext(RouteErrorContext);\\n  let state = useDataRouterState(\\\"useRouteError\\\" /* UseRouteError */);\\n  let routeId = useCurrentRouteId(\\\"useRouteError\\\" /* UseRouteError */);\\n  if (error !== void 0) {\\n    return error;\\n  }\\n  return state.errors?.[routeId];\\n}\\nfunction useAsyncValue() {\\n  let value = React2.useContext(AwaitContext);\\n  return value?._data;\\n}\\nfunction useAsyncError() {\\n  let value = React2.useContext(AwaitContext);\\n  return value?._error;\\n}\\nvar blockerId = 0;\\nfunction useBlocker(shouldBlock) {\\n  let { router, basename } = useDataRouterContext(\\\"useBlocker\\\" /* UseBlocker */);\\n  let state = useDataRouterState(\\\"useBlocker\\\" /* UseBlocker */);\\n  let [blockerKey, setBlockerKey] = React2.useState(\\\"\\\");\\n  let blockerFunction = React2.useCallback(\\n    (arg) => {\\n      if (typeof shouldBlock !== \\\"function\\\") {\\n        return !!shouldBlock;\\n      }\\n      if (basename === \\\"/\\\") {\\n        return shouldBlock(arg);\\n      }\\n      let { currentLocation, nextLocation, historyAction } = arg;\\n      return shouldBlock({\\n        currentLocation: {\\n          ...currentLocation,\\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\\n        },\\n        nextLocation: {\\n          ...nextLocation,\\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\\n        },\\n        historyAction\\n      });\\n    },\\n    [basename, shouldBlock]\\n  );\\n  React2.useEffect(() => {\\n    let key = String(++blockerId);\\n    setBlockerKey(key);\\n    return () => router.deleteBlocker(key);\\n  }, [router]);\\n  React2.useEffect(() => {\\n    if (blockerKey !== \\\"\\\") {\\n      router.getBlocker(blockerKey, blockerFunction);\\n    }\\n  }, [router, blockerKey, blockerFunction]);\\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\\n}\\nfunction useNavigateStable() {\\n  let { router } = useDataRouterContext(\\\"useNavigate\\\" /* UseNavigateStable */);\\n  let id = useCurrentRouteId(\\\"useNavigate\\\" /* UseNavigateStable */);\\n  let activeRef = React2.useRef(false);\\n  useIsomorphicLayoutEffect(() => {\\n    activeRef.current = true;\\n  });\\n  let navigate = React2.useCallback(\\n    async (to, options = {}) => {\\n      warning(activeRef.current, navigateEffectWarning);\\n      if (!activeRef.current) return;\\n      if (typeof to === \\\"number\\\") {\\n        router.navigate(to);\\n      } else {\\n        await router.navigate(to, { fromRouteId: id, ...options });\\n      }\\n    },\\n    [router, id]\\n  );\\n  return navigate;\\n}\\nvar alreadyWarned = {};\\nfunction warningOnce(key, cond, message) {\\n  if (!cond && !alreadyWarned[key]) {\\n    alreadyWarned[key] = true;\\n    warning(false, message);\\n  }\\n}\\n\\n// lib/server-runtime/warnings.ts\\nvar alreadyWarned2 = {};\\nfunction warnOnce(condition, message) {\\n  if (!condition && !alreadyWarned2[message]) {\\n    alreadyWarned2[message] = true;\\n    console.warn(message);\\n  }\\n}\\n\\n// lib/components.tsx\\nvar ENABLE_DEV_WARNINGS2 = true;\\nfunction mapRouteProperties(route) {\\n  let updates = {\\n    // Note: this check also occurs in createRoutesFromChildren so update\\n    // there if you change this -- please and thank you!\\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\\n  };\\n  if (route.Component) {\\n    if (ENABLE_DEV_WARNINGS2) {\\n      if (route.element) {\\n        warning(\\n          false,\\n          \\\"You should not include both `Component` and `element` on your route - `Component` will be used.\\\"\\n        );\\n      }\\n    }\\n    Object.assign(updates, {\\n      element: React3.createElement(route.Component),\\n      Component: void 0\\n    });\\n  }\\n  if (route.HydrateFallback) {\\n    if (ENABLE_DEV_WARNINGS2) {\\n      if (route.hydrateFallbackElement) {\\n        warning(\\n          false,\\n          \\\"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\\\"\\n        );\\n      }\\n    }\\n    Object.assign(updates, {\\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\\n      HydrateFallback: void 0\\n    });\\n  }\\n  if (route.ErrorBoundary) {\\n    if (ENABLE_DEV_WARNINGS2) {\\n      if (route.errorElement) {\\n        warning(\\n          false,\\n          \\\"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\\\"\\n        );\\n      }\\n    }\\n    Object.assign(updates, {\\n      errorElement: React3.createElement(route.ErrorBoundary),\\n      ErrorBoundary: void 0\\n    });\\n  }\\n  return updates;\\n}\\nfunction createMemoryRouter(routes, opts) {\\n  return createRouter({\\n    basename: opts?.basename,\\n    future: opts?.future,\\n    history: createMemoryHistory({\\n      initialEntries: opts?.initialEntries,\\n      initialIndex: opts?.initialIndex\\n    }),\\n    hydrationData: opts?.hydrationData,\\n    routes,\\n    mapRouteProperties,\\n    dataStrategy: opts?.dataStrategy,\\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\\n  }).initialize();\\n}\\nvar Deferred = class {\\n  constructor() {\\n    this.status = \\\"pending\\\";\\n    this.promise = new Promise((resolve, reject) => {\\n      this.resolve = (value) => {\\n        if (this.status === \\\"pending\\\") {\\n          this.status = \\\"resolved\\\";\\n          resolve(value);\\n        }\\n      };\\n      this.reject = (reason) => {\\n        if (this.status === \\\"pending\\\") {\\n          this.status = \\\"rejected\\\";\\n          reject(reason);\\n        }\\n      };\\n    });\\n  }\\n};\\nfunction RouterProvider({\\n  router,\\n  flushSync: reactDomFlushSyncImpl\\n}) {\\n  let [state, setStateImpl] = React3.useState(router.state);\\n  let [pendingState, setPendingState] = React3.useState();\\n  let [vtContext, setVtContext] = React3.useState({\\n    isTransitioning: false\\n  });\\n  let [renderDfd, setRenderDfd] = React3.useState();\\n  let [transition, setTransition] = React3.useState();\\n  let [interruption, setInterruption] = React3.useState();\\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\\n  let setState = React3.useCallback(\\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\\n      newState.fetchers.forEach((fetcher, key) => {\\n        if (fetcher.data !== void 0) {\\n          fetcherData.current.set(key, fetcher.data);\\n        }\\n      });\\n      warnOnce(\\n        flushSync === false || reactDomFlushSyncImpl != null,\\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \\\"react-router/dom\\\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\\n      );\\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \\\"function\\\";\\n      warnOnce(\\n        viewTransitionOpts == null || isViewTransitionAvailable,\\n        \\\"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\\\"\\n      );\\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\\n        if (reactDomFlushSyncImpl && flushSync) {\\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\\n        } else {\\n          React3.startTransition(() => setStateImpl(newState));\\n        }\\n        return;\\n      }\\n      if (reactDomFlushSyncImpl && flushSync) {\\n        reactDomFlushSyncImpl(() => {\\n          if (transition) {\\n            renderDfd && renderDfd.resolve();\\n            transition.skipTransition();\\n          }\\n          setVtContext({\\n            isTransitioning: true,\\n            flushSync: true,\\n            currentLocation: viewTransitionOpts.currentLocation,\\n            nextLocation: viewTransitionOpts.nextLocation\\n          });\\n        });\\n        let t = router.window.document.startViewTransition(() => {\\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\\n        });\\n        t.finished.finally(() => {\\n          reactDomFlushSyncImpl(() => {\\n            setRenderDfd(void 0);\\n            setTransition(void 0);\\n            setPendingState(void 0);\\n            setVtContext({ isTransitioning: false });\\n          });\\n        });\\n        reactDomFlushSyncImpl(() => setTransition(t));\\n        return;\\n      }\\n      if (transition) {\\n        renderDfd && renderDfd.resolve();\\n        transition.skipTransition();\\n        setInterruption({\\n          state: newState,\\n          currentLocation: viewTransitionOpts.currentLocation,\\n          nextLocation: viewTransitionOpts.nextLocation\\n        });\\n      } else {\\n        setPendingState(newState);\\n        setVtContext({\\n          isTransitioning: true,\\n          flushSync: false,\\n          currentLocation: viewTransitionOpts.currentLocation,\\n          nextLocation: viewTransitionOpts.nextLocation\\n        });\\n      }\\n    },\\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\\n  );\\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\\n  React3.useEffect(() => {\\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\\n      setRenderDfd(new Deferred());\\n    }\\n  }, [vtContext]);\\n  React3.useEffect(() => {\\n    if (renderDfd && pendingState && router.window) {\\n      let newState = pendingState;\\n      let renderPromise = renderDfd.promise;\\n      let transition2 = router.window.document.startViewTransition(async () => {\\n        React3.startTransition(() => setStateImpl(newState));\\n        await renderPromise;\\n      });\\n      transition2.finished.finally(() => {\\n        setRenderDfd(void 0);\\n        setTransition(void 0);\\n        setPendingState(void 0);\\n        setVtContext({ isTransitioning: false });\\n      });\\n      setTransition(transition2);\\n    }\\n  }, [pendingState, renderDfd, router.window]);\\n  React3.useEffect(() => {\\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\\n      renderDfd.resolve();\\n    }\\n  }, [renderDfd, transition, state.location, pendingState]);\\n  React3.useEffect(() => {\\n    if (!vtContext.isTransitioning && interruption) {\\n      setPendingState(interruption.state);\\n      setVtContext({\\n        isTransitioning: true,\\n        flushSync: false,\\n        currentLocation: interruption.currentLocation,\\n        nextLocation: interruption.nextLocation\\n      });\\n      setInterruption(void 0);\\n    }\\n  }, [vtContext.isTransitioning, interruption]);\\n  let navigator2 = React3.useMemo(() => {\\n    return {\\n      createHref: router.createHref,\\n      encodeLocation: router.encodeLocation,\\n      go: (n) => router.navigate(n),\\n      push: (to, state2, opts) => router.navigate(to, {\\n        state: state2,\\n        preventScrollReset: opts?.preventScrollReset\\n      }),\\n      replace: (to, state2, opts) => router.navigate(to, {\\n        replace: true,\\n        state: state2,\\n        preventScrollReset: opts?.preventScrollReset\\n      })\\n    };\\n  }, [router]);\\n  let basename = router.basename || \\\"/\\\";\\n  let dataRouterContext = React3.useMemo(\\n    () => ({\\n      router,\\n      navigator: navigator2,\\n      static: false,\\n      basename\\n    }),\\n    [router, navigator2, basename]\\n  );\\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\\n    Router,\\n    {\\n      basename,\\n      location: state.location,\\n      navigationType: state.historyAction,\\n      navigator: navigator2\\n    },\\n    /* @__PURE__ */ React3.createElement(\\n      MemoizedDataRoutes,\\n      {\\n        routes: router.routes,\\n        future: router.future,\\n        state\\n      }\\n    )\\n  ))))), null);\\n}\\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\\nfunction DataRoutes({\\n  routes,\\n  future,\\n  state\\n}) {\\n  return useRoutesImpl(routes, void 0, state, future);\\n}\\nfunction MemoryRouter({\\n  basename,\\n  children,\\n  initialEntries,\\n  initialIndex\\n}) {\\n  let historyRef = React3.useRef();\\n  if (historyRef.current == null) {\\n    historyRef.current = createMemoryHistory({\\n      initialEntries,\\n      initialIndex,\\n      v5Compat: true\\n    });\\n  }\\n  let history = historyRef.current;\\n  let [state, setStateImpl] = React3.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React3.useCallback(\\n    (newState) => {\\n      React3.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React3.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nfunction Navigate({\\n  to,\\n  replace: replace2,\\n  state,\\n  relative\\n}) {\\n  invariant(\\n    useInRouterContext(),\\n    // TODO: This error is probably because they somehow have 2 versions of\\n    // the router loaded. We can help them understand how to avoid that.\\n    `<Navigate> may be used only in the context of a <Router> component.`\\n  );\\n  let { static: isStatic } = React3.useContext(NavigationContext);\\n  warning(\\n    !isStatic,\\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\\n  );\\n  let { matches } = React3.useContext(RouteContext);\\n  let { pathname: locationPathname } = useLocation();\\n  let navigate = useNavigate();\\n  let path = resolveTo(\\n    to,\\n    getResolveToMatches(matches),\\n    locationPathname,\\n    relative === \\\"path\\\"\\n  );\\n  let jsonPath = JSON.stringify(path);\\n  React3.useEffect(() => {\\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\\n  }, [navigate, jsonPath, relative, replace2, state]);\\n  return null;\\n}\\nfunction Outlet(props) {\\n  return useOutlet(props.context);\\n}\\nfunction Route(_props) {\\n  invariant(\\n    false,\\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\\n  );\\n}\\nfunction Router({\\n  basename: basenameProp = \\\"/\\\",\\n  children = null,\\n  location: locationProp,\\n  navigationType = \\\"POP\\\" /* Pop */,\\n  navigator: navigator2,\\n  static: staticProp = false\\n}) {\\n  invariant(\\n    !useInRouterContext(),\\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\\n  );\\n  let basename = basenameProp.replace(/^\\\\/*/, \\\"/\\\");\\n  let navigationContext = React3.useMemo(\\n    () => ({\\n      basename,\\n      navigator: navigator2,\\n      static: staticProp,\\n      future: {}\\n    }),\\n    [basename, navigator2, staticProp]\\n  );\\n  if (typeof locationProp === \\\"string\\\") {\\n    locationProp = parsePath(locationProp);\\n  }\\n  let {\\n    pathname = \\\"/\\\",\\n    search = \\\"\\\",\\n    hash = \\\"\\\",\\n    state = null,\\n    key = \\\"default\\\"\\n  } = locationProp;\\n  let locationContext = React3.useMemo(() => {\\n    let trailingPathname = stripBasename(pathname, basename);\\n    if (trailingPathname == null) {\\n      return null;\\n    }\\n    return {\\n      location: {\\n        pathname: trailingPathname,\\n        search,\\n        hash,\\n        state,\\n        key\\n      },\\n      navigationType\\n    };\\n  }, [basename, pathname, search, hash, state, key, navigationType]);\\n  warning(\\n    locationContext != null,\\n    `<Router basename=\\\"${basename}\\\"> is not able to match the URL \\\"${pathname}${search}${hash}\\\" because it does not start with the basename, so the <Router> won't render anything.`\\n  );\\n  if (locationContext == null) {\\n    return null;\\n  }\\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\\n}\\nfunction Routes({\\n  children,\\n  location\\n}) {\\n  return useRoutes(createRoutesFromChildren(children), location);\\n}\\nfunction Await({\\n  children,\\n  errorElement,\\n  resolve\\n}) {\\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\\n}\\nvar AwaitErrorBoundary = class extends React3.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = { error: null };\\n  }\\n  static getDerivedStateFromError(error) {\\n    return { error };\\n  }\\n  componentDidCatch(error, errorInfo) {\\n    console.error(\\n      \\\"<Await> caught the following error during render\\\",\\n      error,\\n      errorInfo\\n    );\\n  }\\n  render() {\\n    let { children, errorElement, resolve } = this.props;\\n    let promise = null;\\n    let status = 0 /* pending */;\\n    if (!(resolve instanceof Promise)) {\\n      status = 1 /* success */;\\n      promise = Promise.resolve();\\n      Object.defineProperty(promise, \\\"_tracked\\\", { get: () => true });\\n      Object.defineProperty(promise, \\\"_data\\\", { get: () => resolve });\\n    } else if (this.state.error) {\\n      status = 2 /* error */;\\n      let renderError = this.state.error;\\n      promise = Promise.reject().catch(() => {\\n      });\\n      Object.defineProperty(promise, \\\"_tracked\\\", { get: () => true });\\n      Object.defineProperty(promise, \\\"_error\\\", { get: () => renderError });\\n    } else if (resolve._tracked) {\\n      promise = resolve;\\n      status = \\\"_error\\\" in promise ? 2 /* error */ : \\\"_data\\\" in promise ? 1 /* success */ : 0 /* pending */;\\n    } else {\\n      status = 0 /* pending */;\\n      Object.defineProperty(resolve, \\\"_tracked\\\", { get: () => true });\\n      promise = resolve.then(\\n        (data2) => Object.defineProperty(resolve, \\\"_data\\\", { get: () => data2 }),\\n        (error) => Object.defineProperty(resolve, \\\"_error\\\", { get: () => error })\\n      );\\n    }\\n    if (status === 2 /* error */ && !errorElement) {\\n      throw promise._error;\\n    }\\n    if (status === 2 /* error */) {\\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\\n    }\\n    if (status === 1 /* success */) {\\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\\n    }\\n    throw promise;\\n  }\\n};\\nfunction ResolveAwait({\\n  children\\n}) {\\n  let data2 = useAsyncValue();\\n  let toRender = typeof children === \\\"function\\\" ? children(data2) : children;\\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\\n}\\nfunction createRoutesFromChildren(children, parentPath = []) {\\n  let routes = [];\\n  React3.Children.forEach(children, (element, index) => {\\n    if (!React3.isValidElement(element)) {\\n      return;\\n    }\\n    let treePath = [...parentPath, index];\\n    if (element.type === React3.Fragment) {\\n      routes.push.apply(\\n        routes,\\n        createRoutesFromChildren(element.props.children, treePath)\\n      );\\n      return;\\n    }\\n    invariant(\\n      element.type === Route,\\n      `[${typeof element.type === \\\"string\\\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\\n    );\\n    invariant(\\n      !element.props.index || !element.props.children,\\n      \\\"An index route cannot have child routes.\\\"\\n    );\\n    let route = {\\n      id: element.props.id || treePath.join(\\\"-\\\"),\\n      caseSensitive: element.props.caseSensitive,\\n      element: element.props.element,\\n      Component: element.props.Component,\\n      index: element.props.index,\\n      path: element.props.path,\\n      loader: element.props.loader,\\n      action: element.props.action,\\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\\n      HydrateFallback: element.props.HydrateFallback,\\n      errorElement: element.props.errorElement,\\n      ErrorBoundary: element.props.ErrorBoundary,\\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\\n      shouldRevalidate: element.props.shouldRevalidate,\\n      handle: element.props.handle,\\n      lazy: element.props.lazy\\n    };\\n    if (element.props.children) {\\n      route.children = createRoutesFromChildren(\\n        element.props.children,\\n        treePath\\n      );\\n    }\\n    routes.push(route);\\n  });\\n  return routes;\\n}\\nvar createRoutesFromElements = createRoutesFromChildren;\\nfunction renderMatches(matches) {\\n  return _renderMatches(matches);\\n}\\n\\n// lib/dom/lib.tsx\\nimport * as React10 from \\\"react\\\";\\n\\n// lib/dom/dom.ts\\nvar defaultMethod = \\\"get\\\";\\nvar defaultEncType = \\\"application/x-www-form-urlencoded\\\";\\nfunction isHtmlElement(object) {\\n  return object != null && typeof object.tagName === \\\"string\\\";\\n}\\nfunction isButtonElement(object) {\\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"button\\\";\\n}\\nfunction isFormElement(object) {\\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"form\\\";\\n}\\nfunction isInputElement(object) {\\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"input\\\";\\n}\\nfunction isModifiedEvent(event) {\\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\\n}\\nfunction shouldProcessLinkClick(event, target) {\\n  return event.button === 0 && // Ignore everything but left clicks\\n  (!target || target === \\\"_self\\\") && // Let browser handle \\\"target=_blank\\\" etc.\\n  !isModifiedEvent(event);\\n}\\nfunction createSearchParams(init = \\\"\\\") {\\n  return new URLSearchParams(\\n    typeof init === \\\"string\\\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\\n      let value = init[key];\\n      return memo2.concat(\\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\\n      );\\n    }, [])\\n  );\\n}\\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\\n  let searchParams = createSearchParams(locationSearch);\\n  if (defaultSearchParams) {\\n    defaultSearchParams.forEach((_, key) => {\\n      if (!searchParams.has(key)) {\\n        defaultSearchParams.getAll(key).forEach((value) => {\\n          searchParams.append(key, value);\\n        });\\n      }\\n    });\\n  }\\n  return searchParams;\\n}\\nvar _formDataSupportsSubmitter = null;\\nfunction isFormDataSubmitterSupported() {\\n  if (_formDataSupportsSubmitter === null) {\\n    try {\\n      new FormData(\\n        document.createElement(\\\"form\\\"),\\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\\n        0\\n      );\\n      _formDataSupportsSubmitter = false;\\n    } catch (e) {\\n      _formDataSupportsSubmitter = true;\\n    }\\n  }\\n  return _formDataSupportsSubmitter;\\n}\\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\\n  \\\"application/x-www-form-urlencoded\\\",\\n  \\\"multipart/form-data\\\",\\n  \\\"text/plain\\\"\\n]);\\nfunction getFormEncType(encType) {\\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\\n    warning(\\n      false,\\n      `\\\"${encType}\\\" is not a valid \\\\`encType\\\\` for \\\\`<Form>\\\\`/\\\\`<fetcher.Form>\\\\` and will default to \\\"${defaultEncType}\\\"`\\n    );\\n    return null;\\n  }\\n  return encType;\\n}\\nfunction getFormSubmissionInfo(target, basename) {\\n  let method;\\n  let action;\\n  let encType;\\n  let formData;\\n  let body;\\n  if (isFormElement(target)) {\\n    let attr = target.getAttribute(\\\"action\\\");\\n    action = attr ? stripBasename(attr, basename) : null;\\n    method = target.getAttribute(\\\"method\\\") || defaultMethod;\\n    encType = getFormEncType(target.getAttribute(\\\"enctype\\\")) || defaultEncType;\\n    formData = new FormData(target);\\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \\\"submit\\\" || target.type === \\\"image\\\")) {\\n    let form = target.form;\\n    if (form == null) {\\n      throw new Error(\\n        `Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>`\\n      );\\n    }\\n    let attr = target.getAttribute(\\\"formaction\\\") || form.getAttribute(\\\"action\\\");\\n    action = attr ? stripBasename(attr, basename) : null;\\n    method = target.getAttribute(\\\"formmethod\\\") || form.getAttribute(\\\"method\\\") || defaultMethod;\\n    encType = getFormEncType(target.getAttribute(\\\"formenctype\\\")) || getFormEncType(form.getAttribute(\\\"enctype\\\")) || defaultEncType;\\n    formData = new FormData(form, target);\\n    if (!isFormDataSubmitterSupported()) {\\n      let { name, type, value } = target;\\n      if (type === \\\"image\\\") {\\n        let prefix = name ? `${name}.` : \\\"\\\";\\n        formData.append(`${prefix}x`, \\\"0\\\");\\n        formData.append(`${prefix}y`, \\\"0\\\");\\n      } else if (name) {\\n        formData.append(name, value);\\n      }\\n    }\\n  } else if (isHtmlElement(target)) {\\n    throw new Error(\\n      `Cannot submit element that is not <form>, <button>, or <input type=\\\"submit|image\\\">`\\n    );\\n  } else {\\n    method = defaultMethod;\\n    action = null;\\n    encType = defaultEncType;\\n    body = target;\\n  }\\n  if (formData && encType === \\\"text/plain\\\") {\\n    body = formData;\\n    formData = void 0;\\n  }\\n  return { action, method: method.toLowerCase(), encType, formData, body };\\n}\\n\\n// lib/dom/ssr/components.tsx\\nimport * as React9 from \\\"react\\\";\\n\\n// lib/dom/ssr/invariant.ts\\nfunction invariant2(value, message) {\\n  if (value === false || value === null || typeof value === \\\"undefined\\\") {\\n    throw new Error(message);\\n  }\\n}\\n\\n// lib/dom/ssr/routeModules.ts\\nasync function loadRouteModule(route, routeModulesCache) {\\n  if (route.id in routeModulesCache) {\\n    return routeModulesCache[route.id];\\n  }\\n  try {\\n    let routeModule = await import(\\n      /* @vite-ignore */\\n      /* webpackIgnore: true */\\n      route.module\\n    );\\n    routeModulesCache[route.id] = routeModule;\\n    return routeModule;\\n  } catch (error) {\\n    console.error(\\n      `Error loading route module \\\\`${route.module}\\\\`, reloading page...`\\n    );\\n    console.error(error);\\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\\n    import.meta.hot) {\\n      throw error;\\n    }\\n    window.location.reload();\\n    return new Promise(() => {\\n    });\\n  }\\n}\\n\\n// lib/dom/ssr/links.ts\\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\\n  let descriptors = matches.map((match) => {\\n    let module = routeModules[match.route.id];\\n    let route = manifest.routes[match.route.id];\\n    return [\\n      route && route.css ? route.css.map((href) => ({ rel: \\\"stylesheet\\\", href })) : [],\\n      module?.links?.() || []\\n    ];\\n  }).flat(2);\\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\\n  return dedupeLinkDescriptors(descriptors, preloads);\\n}\\nasync function prefetchStyleLinks(route, routeModule) {\\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\\n  let descriptors = [];\\n  if (route.css) {\\n    descriptors.push(...route.css.map((href) => ({ rel: \\\"stylesheet\\\", href })));\\n  }\\n  if (routeModule.links) {\\n    descriptors.push(...routeModule.links());\\n  }\\n  if (descriptors.length === 0) return;\\n  let styleLinks = [];\\n  for (let descriptor of descriptors) {\\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \\\"stylesheet\\\") {\\n      styleLinks.push({\\n        ...descriptor,\\n        rel: \\\"preload\\\",\\n        as: \\\"style\\\"\\n      });\\n    }\\n  }\\n  let matchingLinks = styleLinks.filter(\\n    (link) => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${link.href}\\\"]`)\\n  );\\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\\n}\\nasync function prefetchStyleLink(descriptor) {\\n  return new Promise((resolve) => {\\n    let link = document.createElement(\\\"link\\\");\\n    Object.assign(link, descriptor);\\n    function removeLink() {\\n      if (document.head.contains(link)) {\\n        document.head.removeChild(link);\\n      }\\n    }\\n    link.onload = () => {\\n      removeLink();\\n      resolve();\\n    };\\n    link.onerror = () => {\\n      removeLink();\\n      resolve();\\n    };\\n    document.head.appendChild(link);\\n  });\\n}\\nfunction isPageLinkDescriptor(object) {\\n  return object != null && typeof object.page === \\\"string\\\";\\n}\\nfunction isHtmlLinkDescriptor(object) {\\n  if (object == null) {\\n    return false;\\n  }\\n  if (object.href == null) {\\n    return object.rel === \\\"preload\\\" && typeof object.imageSrcSet === \\\"string\\\" && typeof object.imageSizes === \\\"string\\\";\\n  }\\n  return typeof object.rel === \\\"string\\\" && typeof object.href === \\\"string\\\";\\n}\\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\\n  let links = await Promise.all(\\n    matches.map(async (match) => {\\n      let route = manifest.routes[match.route.id];\\n      if (route) {\\n        let mod = await loadRouteModule(route, routeModules);\\n        return mod.links ? mod.links() : [];\\n      }\\n      return [];\\n    })\\n  );\\n  return dedupeLinkDescriptors(\\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \\\"stylesheet\\\" || link.rel === \\\"preload\\\").map(\\n      (link) => link.rel === \\\"stylesheet\\\" ? { ...link, rel: \\\"prefetch\\\", as: \\\"style\\\" } : { ...link, rel: \\\"prefetch\\\" }\\n    )\\n  );\\n}\\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\\n  let isNew = (match, index) => {\\n    if (!currentMatches[index]) return true;\\n    return match.route.id !== currentMatches[index].route.id;\\n  };\\n  let matchPathChanged = (match, index) => {\\n    return (\\n      // param change, /users/123 -> /users/456\\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\\n      currentMatches[index].route.path?.endsWith(\\\"*\\\") && currentMatches[index].params[\\\"*\\\"] !== match.params[\\\"*\\\"]\\n    );\\n  };\\n  if (mode === \\\"assets\\\") {\\n    return nextMatches.filter(\\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\\n    );\\n  }\\n  if (mode === \\\"data\\\") {\\n    return nextMatches.filter((match, index) => {\\n      let manifestRoute = manifest.routes[match.route.id];\\n      if (!manifestRoute || !manifestRoute.hasLoader) {\\n        return false;\\n      }\\n      if (isNew(match, index) || matchPathChanged(match, index)) {\\n        return true;\\n      }\\n      if (match.route.shouldRevalidate) {\\n        let routeChoice = match.route.shouldRevalidate({\\n          currentUrl: new URL(\\n            location.pathname + location.search + location.hash,\\n            window.origin\\n          ),\\n          currentParams: currentMatches[0]?.params || {},\\n          nextUrl: new URL(page, window.origin),\\n          nextParams: match.params,\\n          defaultShouldRevalidate: true\\n        });\\n        if (typeof routeChoice === \\\"boolean\\\") {\\n          return routeChoice;\\n        }\\n      }\\n      return true;\\n    });\\n  }\\n  return [];\\n}\\nfunction getModuleLinkHrefs(matches, manifestPatch) {\\n  return dedupeHrefs(\\n    matches.map((match) => {\\n      let route = manifestPatch.routes[match.route.id];\\n      if (!route) return [];\\n      let hrefs = [route.module];\\n      if (route.imports) {\\n        hrefs = hrefs.concat(route.imports);\\n      }\\n      return hrefs;\\n    }).flat(1)\\n  );\\n}\\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\\n  return dedupeHrefs(\\n    matches.map((match) => {\\n      let route = manifest.routes[match.route.id];\\n      if (!route) return [];\\n      let hrefs = [route.module];\\n      if (route.imports) {\\n        hrefs = hrefs.concat(route.imports);\\n      }\\n      return hrefs;\\n    }).flat(1)\\n  );\\n}\\nfunction dedupeHrefs(hrefs) {\\n  return [...new Set(hrefs)];\\n}\\nfunction sortKeys(obj) {\\n  let sorted = {};\\n  let keys = Object.keys(obj).sort();\\n  for (let key of keys) {\\n    sorted[key] = obj[key];\\n  }\\n  return sorted;\\n}\\nfunction dedupeLinkDescriptors(descriptors, preloads) {\\n  let set = /* @__PURE__ */ new Set();\\n  let preloadsSet = new Set(preloads);\\n  return descriptors.reduce((deduped, descriptor) => {\\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \\\"script\\\" && descriptor.href && preloadsSet.has(descriptor.href);\\n    if (alreadyModulePreload) {\\n      return deduped;\\n    }\\n    let key = JSON.stringify(sortKeys(descriptor));\\n    if (!set.has(key)) {\\n      set.add(key);\\n      deduped.push({ key, link: descriptor });\\n    }\\n    return deduped;\\n  }, []);\\n}\\nvar _isPreloadSupported;\\nfunction isPreloadSupported() {\\n  if (_isPreloadSupported !== void 0) {\\n    return _isPreloadSupported;\\n  }\\n  let el = document.createElement(\\\"link\\\");\\n  _isPreloadSupported = el.relList.supports(\\\"preload\\\");\\n  el = null;\\n  return _isPreloadSupported;\\n}\\n\\n// lib/dom/ssr/markup.ts\\nvar ESCAPE_LOOKUP = {\\n  \\\"&\\\": \\\"\\\\\\\\u0026\\\",\\n  \\\">\\\": \\\"\\\\\\\\u003e\\\",\\n  \\\"<\\\": \\\"\\\\\\\\u003c\\\",\\n  \\\"\\\\u2028\\\": \\\"\\\\\\\\u2028\\\",\\n  \\\"\\\\u2029\\\": \\\"\\\\\\\\u2029\\\"\\n};\\nvar ESCAPE_REGEX = /[&><\\\\u2028\\\\u2029]/g;\\nfunction escapeHtml(html) {\\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\\n}\\nfunction createHtml(html) {\\n  return { __html: html };\\n}\\n\\n// lib/dom/ssr/single-fetch.tsx\\nimport * as React4 from \\\"react\\\";\\nimport { decode } from \\\"turbo-stream\\\";\\n\\n// lib/dom/ssr/data.ts\\nasync function createRequestInit(request) {\\n  let init = { signal: request.signal };\\n  if (request.method !== \\\"GET\\\") {\\n    init.method = request.method;\\n    let contentType = request.headers.get(\\\"Content-Type\\\");\\n    if (contentType && /\\\\bapplication\\\\/json\\\\b/.test(contentType)) {\\n      init.headers = { \\\"Content-Type\\\": contentType };\\n      init.body = JSON.stringify(await request.json());\\n    } else if (contentType && /\\\\btext\\\\/plain\\\\b/.test(contentType)) {\\n      init.headers = { \\\"Content-Type\\\": contentType };\\n      init.body = await request.text();\\n    } else if (contentType && /\\\\bapplication\\\\/x-www-form-urlencoded\\\\b/.test(contentType)) {\\n      init.body = new URLSearchParams(await request.text());\\n    } else {\\n      init.body = await request.formData();\\n    }\\n  }\\n  return init;\\n}\\n\\n// lib/dom/ssr/single-fetch.tsx\\nvar SingleFetchRedirectSymbol = Symbol(\\\"SingleFetchRedirect\\\");\\nfunction StreamTransfer({\\n  context,\\n  identifier,\\n  reader,\\n  textDecoder,\\n  nonce\\n}) {\\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\\n    return null;\\n  }\\n  if (!context.renderMeta.streamCache) {\\n    context.renderMeta.streamCache = {};\\n  }\\n  let { streamCache } = context.renderMeta;\\n  let promise = streamCache[identifier];\\n  if (!promise) {\\n    promise = streamCache[identifier] = reader.read().then((result) => {\\n      streamCache[identifier].result = {\\n        done: result.done,\\n        value: textDecoder.decode(result.value, { stream: true })\\n      };\\n    }).catch((e) => {\\n      streamCache[identifier].error = e;\\n    });\\n  }\\n  if (promise.error) {\\n    throw promise.error;\\n  }\\n  if (promise.result === void 0) {\\n    throw promise;\\n  }\\n  let { done, value } = promise.result;\\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\\n    \\\"script\\\",\\n    {\\n      nonce,\\n      dangerouslySetInnerHTML: {\\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\\n          JSON.stringify(value)\\n        )});`\\n      }\\n    }\\n  ) : null;\\n  if (done) {\\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\\n      \\\"script\\\",\\n      {\\n        nonce,\\n        dangerouslySetInnerHTML: {\\n          __html: `window.__reactRouterContext.streamController.close();`\\n        }\\n      }\\n    ));\\n  } else {\\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\\n      StreamTransfer,\\n      {\\n        context,\\n        identifier: identifier + 1,\\n        reader,\\n        textDecoder,\\n        nonce\\n      }\\n    )));\\n  }\\n}\\nfunction getSingleFetchDataStrategy(manifest, routeModules, getRouter) {\\n  return async ({ request, matches, fetcherKey }) => {\\n    if (request.method !== \\\"GET\\\") {\\n      return singleFetchActionStrategy(request, matches);\\n    }\\n    if (fetcherKey) {\\n      return singleFetchLoaderFetcherStrategy(request, matches);\\n    }\\n    return singleFetchLoaderNavigationStrategy(\\n      manifest,\\n      routeModules,\\n      getRouter(),\\n      request,\\n      matches\\n    );\\n  };\\n}\\nasync function singleFetchActionStrategy(request, matches) {\\n  let actionMatch = matches.find((m) => m.shouldLoad);\\n  invariant2(actionMatch, \\\"No action match found\\\");\\n  let actionStatus = void 0;\\n  let result = await actionMatch.resolve(async (handler) => {\\n    let result2 = await handler(async () => {\\n      let url = singleFetchUrl(request.url);\\n      let init = await createRequestInit(request);\\n      let { data: data2, status } = await fetchAndDecode(url, init);\\n      actionStatus = status;\\n      return unwrapSingleFetchResult(\\n        data2,\\n        actionMatch.route.id\\n      );\\n    });\\n    return result2;\\n  });\\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\\n    return { [actionMatch.route.id]: result };\\n  }\\n  return {\\n    [actionMatch.route.id]: {\\n      type: result.type,\\n      result: data(result.result, actionStatus)\\n    }\\n  };\\n}\\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, router, request, matches) {\\n  let routesParams = /* @__PURE__ */ new Set();\\n  let foundOptOutRoute = false;\\n  let routeDfds = matches.map(() => createDeferred2());\\n  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));\\n  let singleFetchDfd = createDeferred2();\\n  let url = stripIndexParam(singleFetchUrl(request.url));\\n  let init = await createRequestInit(request);\\n  let results = {};\\n  let resolvePromise = Promise.all(\\n    matches.map(\\n      async (m, i) => m.resolve(async (handler) => {\\n        routeDfds[i].resolve();\\n        let manifestRoute = manifest.routes[m.route.id];\\n        if (!m.shouldLoad) {\\n          if (!router.state.initialized) {\\n            return;\\n          }\\n          if (m.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModules[m.route.id]?.shouldRevalidate) {\\n            foundOptOutRoute = true;\\n            return;\\n          }\\n        }\\n        if (manifestRoute && manifestRoute.hasClientLoader) {\\n          if (manifestRoute.hasLoader) {\\n            foundOptOutRoute = true;\\n          }\\n          try {\\n            let result = await fetchSingleLoader(\\n              handler,\\n              url,\\n              init,\\n              m.route.id\\n            );\\n            results[m.route.id] = { type: \\\"data\\\", result };\\n          } catch (e) {\\n            results[m.route.id] = { type: \\\"error\\\", result: e };\\n          }\\n          return;\\n        }\\n        if (manifestRoute && manifestRoute.hasLoader) {\\n          routesParams.add(m.route.id);\\n        }\\n        try {\\n          let result = await handler(async () => {\\n            let data2 = await singleFetchDfd.promise;\\n            return unwrapSingleFetchResults(data2, m.route.id);\\n          });\\n          results[m.route.id] = {\\n            type: \\\"data\\\",\\n            result\\n          };\\n        } catch (e) {\\n          results[m.route.id] = {\\n            type: \\\"error\\\",\\n            result: e\\n          };\\n        }\\n      })\\n    )\\n  );\\n  await routesLoadedPromise;\\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\\n    singleFetchDfd.resolve({});\\n  } else {\\n    try {\\n      if (foundOptOutRoute && routesParams.size > 0) {\\n        url.searchParams.set(\\n          \\\"_routes\\\",\\n          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\\\",\\\")\\n        );\\n      }\\n      let data2 = await fetchAndDecode(url, init);\\n      singleFetchDfd.resolve(data2.data);\\n    } catch (e) {\\n      singleFetchDfd.reject(e);\\n    }\\n  }\\n  await resolvePromise;\\n  return results;\\n}\\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\\n  let fetcherMatch = matches.find((m) => m.shouldLoad);\\n  invariant2(fetcherMatch, \\\"No fetcher match found\\\");\\n  let result = await fetcherMatch.resolve(async (handler) => {\\n    let url = stripIndexParam(singleFetchUrl(request.url));\\n    let init = await createRequestInit(request);\\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\\n  });\\n  return { [fetcherMatch.route.id]: result };\\n}\\nfunction fetchSingleLoader(handler, url, init, routeId) {\\n  return handler(async () => {\\n    let singleLoaderUrl = new URL(url);\\n    singleLoaderUrl.searchParams.set(\\\"_routes\\\", routeId);\\n    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);\\n    return unwrapSingleFetchResults(data2, routeId);\\n  });\\n}\\nfunction stripIndexParam(url) {\\n  let indexValues = url.searchParams.getAll(\\\"index\\\");\\n  url.searchParams.delete(\\\"index\\\");\\n  let indexValuesToKeep = [];\\n  for (let indexValue of indexValues) {\\n    if (indexValue) {\\n      indexValuesToKeep.push(indexValue);\\n    }\\n  }\\n  for (let toKeep of indexValuesToKeep) {\\n    url.searchParams.append(\\\"index\\\", toKeep);\\n  }\\n  return url;\\n}\\nfunction singleFetchUrl(reqUrl) {\\n  let url = typeof reqUrl === \\\"string\\\" ? new URL(\\n    reqUrl,\\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\\n    // don't assume window is available\\n    typeof window === \\\"undefined\\\" ? \\\"server://singlefetch/\\\" : window.location.origin\\n  ) : reqUrl;\\n  if (url.pathname === \\\"/\\\") {\\n    url.pathname = \\\"_root.data\\\";\\n  } else {\\n    url.pathname = `${url.pathname.replace(/\\\\/$/, \\\"\\\")}.data`;\\n  }\\n  return url;\\n}\\nasync function fetchAndDecode(url, init) {\\n  let res = await fetch(url, init);\\n  if (res.status === 404 && !res.headers.has(\\\"X-Remix-Response\\\")) {\\n    throw new ErrorResponseImpl(404, \\\"Not Found\\\", true);\\n  }\\n  invariant2(res.body, \\\"No response body to decode\\\");\\n  try {\\n    let decoded = await decodeViaTurboStream(res.body, window);\\n    return { status: res.status, data: decoded.value };\\n  } catch (e) {\\n    throw new Error(\\\"Unable to decode turbo-stream response\\\");\\n  }\\n}\\nfunction decodeViaTurboStream(body, global2) {\\n  return decode(body, {\\n    plugins: [\\n      (type, ...rest) => {\\n        if (type === \\\"SanitizedError\\\") {\\n          let [name, message, stack] = rest;\\n          let Constructor = Error;\\n          if (name && name in global2 && typeof global2[name] === \\\"function\\\") {\\n            Constructor = global2[name];\\n          }\\n          let error = new Constructor(message);\\n          error.stack = stack;\\n          return { value: error };\\n        }\\n        if (type === \\\"ErrorResponse\\\") {\\n          let [data2, status, statusText] = rest;\\n          return {\\n            value: new ErrorResponseImpl(status, statusText, data2)\\n          };\\n        }\\n        if (type === \\\"SingleFetchRedirect\\\") {\\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\\n        }\\n        if (type === \\\"SingleFetchClassInstance\\\") {\\n          return { value: rest[0] };\\n        }\\n        if (type === \\\"SingleFetchFallback\\\") {\\n          return { value: void 0 };\\n        }\\n      }\\n    ]\\n  });\\n}\\nfunction unwrapSingleFetchResults(results, routeId) {\\n  let redirect2 = results[SingleFetchRedirectSymbol];\\n  if (redirect2) {\\n    return unwrapSingleFetchResult(redirect2, routeId);\\n  }\\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\\n}\\nfunction unwrapSingleFetchResult(result, routeId) {\\n  if (\\\"error\\\" in result) {\\n    throw result.error;\\n  } else if (\\\"redirect\\\" in result) {\\n    let headers = {};\\n    if (result.revalidate) {\\n      headers[\\\"X-Remix-Revalidate\\\"] = \\\"yes\\\";\\n    }\\n    if (result.reload) {\\n      headers[\\\"X-Remix-Reload-Document\\\"] = \\\"yes\\\";\\n    }\\n    if (result.replace) {\\n      headers[\\\"X-Remix-Replace\\\"] = \\\"yes\\\";\\n    }\\n    throw redirect(result.redirect, { status: result.status, headers });\\n  } else if (\\\"data\\\" in result) {\\n    return result.data;\\n  } else {\\n    throw new Error(`No response found for routeId \\\"${routeId}\\\"`);\\n  }\\n}\\nfunction createDeferred2() {\\n  let resolve;\\n  let reject;\\n  let promise = new Promise((res, rej) => {\\n    resolve = async (val) => {\\n      res(val);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n    reject = async (error) => {\\n      rej(error);\\n      try {\\n        await promise;\\n      } catch (e) {\\n      }\\n    };\\n  });\\n  return {\\n    promise,\\n    //@ts-ignore\\n    resolve,\\n    //@ts-ignore\\n    reject\\n  };\\n}\\n\\n// lib/dom/ssr/fog-of-war.ts\\nimport * as React8 from \\\"react\\\";\\n\\n// lib/dom/ssr/routes.tsx\\nimport * as React7 from \\\"react\\\";\\n\\n// lib/dom/ssr/errorBoundaries.tsx\\nimport * as React5 from \\\"react\\\";\\nvar RemixErrorBoundary = class extends React5.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = { error: props.error || null, location: props.location };\\n  }\\n  static getDerivedStateFromError(error) {\\n    return { error };\\n  }\\n  static getDerivedStateFromProps(props, state) {\\n    if (state.location !== props.location) {\\n      return { error: props.error || null, location: props.location };\\n    }\\n    return { error: props.error || state.error, location: state.location };\\n  }\\n  render() {\\n    if (this.state.error) {\\n      return /* @__PURE__ */ React5.createElement(\\n        RemixRootDefaultErrorBoundary,\\n        {\\n          error: this.state.error,\\n          isOutsideRemixApp: true\\n        }\\n      );\\n    } else {\\n      return this.props.children;\\n    }\\n  }\\n};\\nfunction RemixRootDefaultErrorBoundary({\\n  error,\\n  isOutsideRemixApp\\n}) {\\n  console.error(error);\\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\\n    \\\"script\\\",\\n    {\\n      dangerouslySetInnerHTML: {\\n        __html: `\\n        console.log(\\n          \\\"\\\\u{1F4BF} Hey developer \\\\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\\\"\\n        );\\n      `\\n      }\\n    }\\n  );\\n  if (isRouteErrorResponse(error)) {\\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \\\"Unhandled Thrown Response!\\\" }, /* @__PURE__ */ React5.createElement(\\\"h1\\\", { style: { fontSize: \\\"24px\\\" } }, error.status, \\\" \\\", error.statusText), heyDeveloper);\\n  }\\n  let errorInstance;\\n  if (error instanceof Error) {\\n    errorInstance = error;\\n  } else {\\n    let errorString = error == null ? \\\"Unknown Error\\\" : typeof error === \\\"object\\\" && \\\"toString\\\" in error ? error.toString() : JSON.stringify(error);\\n    errorInstance = new Error(errorString);\\n  }\\n  return /* @__PURE__ */ React5.createElement(\\n    BoundaryShell,\\n    {\\n      title: \\\"Application Error!\\\",\\n      isOutsideRemixApp\\n    },\\n    /* @__PURE__ */ React5.createElement(\\\"h1\\\", { style: { fontSize: \\\"24px\\\" } }, \\\"Application Error\\\"),\\n    /* @__PURE__ */ React5.createElement(\\n      \\\"pre\\\",\\n      {\\n        style: {\\n          padding: \\\"2rem\\\",\\n          background: \\\"hsla(10, 50%, 50%, 0.1)\\\",\\n          color: \\\"red\\\",\\n          overflow: \\\"auto\\\"\\n        }\\n      },\\n      errorInstance.stack\\n    ),\\n    heyDeveloper\\n  );\\n}\\nfunction BoundaryShell({\\n  title,\\n  renderScripts,\\n  isOutsideRemixApp,\\n  children\\n}) {\\n  let { routeModules } = useFrameworkContext();\\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\\n    return children;\\n  }\\n  return /* @__PURE__ */ React5.createElement(\\\"html\\\", { lang: \\\"en\\\" }, /* @__PURE__ */ React5.createElement(\\\"head\\\", null, /* @__PURE__ */ React5.createElement(\\\"meta\\\", { charSet: \\\"utf-8\\\" }), /* @__PURE__ */ React5.createElement(\\n    \\\"meta\\\",\\n    {\\n      name: \\\"viewport\\\",\\n      content: \\\"width=device-width,initial-scale=1,viewport-fit=cover\\\"\\n    }\\n  ), /* @__PURE__ */ React5.createElement(\\\"title\\\", null, title)), /* @__PURE__ */ React5.createElement(\\\"body\\\", null, /* @__PURE__ */ React5.createElement(\\\"main\\\", { style: { fontFamily: \\\"system-ui, sans-serif\\\", padding: \\\"2rem\\\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\\n}\\n\\n// lib/dom/ssr/fallback.tsx\\nimport * as React6 from \\\"react\\\";\\nfunction RemixRootDefaultHydrateFallback() {\\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \\\"Loading...\\\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\\n    \\\"script\\\",\\n    {\\n      dangerouslySetInnerHTML: {\\n        __html: `\\n              console.log(\\n                \\\"\\\\u{1F4BF} Hey developer \\\\u{1F44B}. You can provide a way better UX than this \\\" +\\n                \\\"when your app is loading JS modules and/or running \\\\`clientLoader\\\\` \\\" +\\n                \\\"functions. Check out https://remix.run/route/hydrate-fallback \\\" +\\n                \\\"for more information.\\\"\\n              );\\n            `\\n      }\\n    }\\n  ));\\n}\\n\\n// lib/dom/ssr/routes.tsx\\nfunction groupRoutesByParentId(manifest) {\\n  let routes = {};\\n  Object.values(manifest).forEach((route) => {\\n    if (route) {\\n      let parentId = route.parentId || \\\"\\\";\\n      if (!routes[parentId]) {\\n        routes[parentId] = [];\\n      }\\n      routes[parentId].push(route);\\n    }\\n  });\\n  return routes;\\n}\\nfunction getRouteComponents(route, routeModule, isSpaMode) {\\n  let Component4 = getRouteModuleComponent(routeModule);\\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \\\"root\\\") ? routeModule.HydrateFallback : route.id === \\\"root\\\" ? RemixRootDefaultHydrateFallback : void 0;\\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \\\"root\\\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\\n  if (route.id === \\\"root\\\" && routeModule.Layout) {\\n    return {\\n      ...Component4 ? {\\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\\n      } : { Component: Component4 },\\n      ...ErrorBoundary ? {\\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\\n      } : { ErrorBoundary },\\n      ...HydrateFallback ? {\\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\\n      } : { HydrateFallback }\\n    };\\n  }\\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\\n}\\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\\n  return (routesByParentId[parentId] || []).map((route) => {\\n    let routeModule = routeModules[route.id];\\n    invariant2(\\n      routeModule,\\n      \\\"No `routeModule` available to create server routes\\\"\\n    );\\n    let dataRoute = {\\n      ...getRouteComponents(route, routeModule, isSpaMode),\\n      caseSensitive: route.caseSensitive,\\n      id: route.id,\\n      index: route.index,\\n      path: route.path,\\n      handle: routeModule.handle,\\n      // For SPA Mode, all routes are lazy except root.  However we tell the\\n      // router root is also lazy here too since we don't need a full\\n      // implementation - we just need a `lazy` prop to tell the RR rendering\\n      // where to stop which is always at the root route in SPA mode\\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\\n      // For partial hydration rendering, we need to indicate when the route\\n      // has a loader/clientLoader, but it won't ever be called during the static\\n      // render, so just give it a no-op function so we can render down to the\\n      // proper fallback\\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\\n      // We don't need action/shouldRevalidate on these routes since they're\\n      // for a static render\\n    };\\n    let children = createServerRoutes(\\n      manifest,\\n      routeModules,\\n      future,\\n      isSpaMode,\\n      route.id,\\n      routesByParentId,\\n      spaModeLazyPromise\\n    );\\n    if (children.length > 0) dataRoute.children = children;\\n    return dataRoute;\\n  });\\n}\\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, future, isSpaMode) {\\n  return createClientRoutes(\\n    manifest,\\n    routeModulesCache,\\n    initialState,\\n    isSpaMode,\\n    \\\"\\\",\\n    groupRoutesByParentId(manifest),\\n    needsRevalidation\\n  );\\n}\\nfunction preventInvalidServerHandlerCall(type, route, isSpaMode) {\\n  if (isSpaMode) {\\n    let fn2 = type === \\\"action\\\" ? \\\"serverAction()\\\" : \\\"serverLoader()\\\";\\n    let msg2 = `You cannot call ${fn2} in SPA Mode (routeId: \\\"${route.id}\\\")`;\\n    console.error(msg2);\\n    throw new ErrorResponseImpl(400, \\\"Bad Request\\\", new Error(msg2), true);\\n  }\\n  let fn = type === \\\"action\\\" ? \\\"serverAction()\\\" : \\\"serverLoader()\\\";\\n  let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \\\"${route.id}\\\")`;\\n  if (type === \\\"loader\\\" && !route.hasLoader || type === \\\"action\\\" && !route.hasAction) {\\n    console.error(msg);\\n    throw new ErrorResponseImpl(400, \\\"Bad Request\\\", new Error(msg), true);\\n  }\\n}\\nfunction noActionDefinedError(type, routeId) {\\n  let article = type === \\\"clientAction\\\" ? \\\"a\\\" : \\\"an\\\";\\n  let msg = `Route \\\"${routeId}\\\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\\\`${type}\\\\` function to the route`;\\n  console.error(msg);\\n  throw new ErrorResponseImpl(405, \\\"Method Not Allowed\\\", new Error(msg), true);\\n}\\nfunction createClientRoutes(manifest, routeModulesCache, initialState, isSpaMode, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\\n  return (routesByParentId[parentId] || []).map((route) => {\\n    let routeModule = routeModulesCache[route.id];\\n    function fetchServerHandler(singleFetch) {\\n      invariant2(\\n        typeof singleFetch === \\\"function\\\",\\n        \\\"No single fetch function available for route handler\\\"\\n      );\\n      return singleFetch();\\n    }\\n    function fetchServerLoader(singleFetch) {\\n      if (!route.hasLoader) return Promise.resolve(null);\\n      return fetchServerHandler(singleFetch);\\n    }\\n    function fetchServerAction(singleFetch) {\\n      if (!route.hasAction) {\\n        throw noActionDefinedError(\\\"action\\\", route.id);\\n      }\\n      return fetchServerHandler(singleFetch);\\n    }\\n    async function prefetchStylesAndCallHandler(handler) {\\n      let cachedModule = routeModulesCache[route.id];\\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\\n      try {\\n        return handler();\\n      } finally {\\n        await linkPrefetchPromise;\\n      }\\n    }\\n    let dataRoute = {\\n      id: route.id,\\n      index: route.index,\\n      path: route.path\\n    };\\n    if (routeModule) {\\n      Object.assign(dataRoute, {\\n        ...dataRoute,\\n        ...getRouteComponents(route, routeModule, isSpaMode),\\n        handle: routeModule.handle,\\n        shouldRevalidate: getShouldRevalidateFunction(\\n          routeModule,\\n          route.id,\\n          needsRevalidation\\n        )\\n      });\\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\\n      dataRoute.loader = async ({ request, params }, singleFetch) => {\\n        try {\\n          let result = await prefetchStylesAndCallHandler(async () => {\\n            invariant2(\\n              routeModule,\\n              \\\"No `routeModule` available for critical-route loader\\\"\\n            );\\n            if (!routeModule.clientLoader) {\\n              if (isSpaMode) return null;\\n              return fetchServerLoader(singleFetch);\\n            }\\n            return routeModule.clientLoader({\\n              request,\\n              params,\\n              async serverLoader() {\\n                preventInvalidServerHandlerCall(\\\"loader\\\", route, isSpaMode);\\n                if (isHydrationRequest) {\\n                  if (hasInitialData) {\\n                    return initialData;\\n                  }\\n                  if (hasInitialError) {\\n                    throw initialError;\\n                  }\\n                }\\n                return fetchServerLoader(singleFetch);\\n              }\\n            });\\n          });\\n          return result;\\n        } finally {\\n          isHydrationRequest = false;\\n        }\\n      };\\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\\n        route,\\n        routeModule,\\n        isSpaMode\\n      );\\n      dataRoute.action = ({ request, params }, singleFetch) => {\\n        return prefetchStylesAndCallHandler(async () => {\\n          invariant2(\\n            routeModule,\\n            \\\"No `routeModule` available for critical-route action\\\"\\n          );\\n          if (!routeModule.clientAction) {\\n            if (isSpaMode) {\\n              throw noActionDefinedError(\\\"clientAction\\\", route.id);\\n            }\\n            return fetchServerAction(singleFetch);\\n          }\\n          return routeModule.clientAction({\\n            request,\\n            params,\\n            async serverAction() {\\n              preventInvalidServerHandlerCall(\\\"action\\\", route, isSpaMode);\\n              return fetchServerAction(singleFetch);\\n            }\\n          });\\n        });\\n      };\\n    } else {\\n      if (!route.hasClientLoader) {\\n        dataRoute.loader = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\\n          if (isSpaMode) return Promise.resolve(null);\\n          return fetchServerLoader(singleFetch);\\n        });\\n      }\\n      if (!route.hasClientAction) {\\n        dataRoute.action = ({ request }, singleFetch) => prefetchStylesAndCallHandler(() => {\\n          if (isSpaMode) {\\n            throw noActionDefinedError(\\\"clientAction\\\", route.id);\\n          }\\n          return fetchServerAction(singleFetch);\\n        });\\n      }\\n      dataRoute.lazy = async () => {\\n        let mod = await loadRouteModuleWithBlockingLinks(\\n          route,\\n          routeModulesCache\\n        );\\n        let lazyRoute = { ...mod };\\n        if (mod.clientLoader) {\\n          let clientLoader = mod.clientLoader;\\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\\n            ...args,\\n            async serverLoader() {\\n              preventInvalidServerHandlerCall(\\\"loader\\\", route, isSpaMode);\\n              return fetchServerLoader(singleFetch);\\n            }\\n          });\\n        }\\n        if (mod.clientAction) {\\n          let clientAction = mod.clientAction;\\n          lazyRoute.action = (args, singleFetch) => clientAction({\\n            ...args,\\n            async serverAction() {\\n              preventInvalidServerHandlerCall(\\\"action\\\", route, isSpaMode);\\n              return fetchServerAction(singleFetch);\\n            }\\n          });\\n        }\\n        return {\\n          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},\\n          ...lazyRoute.action ? { action: lazyRoute.action } : {},\\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\\n          shouldRevalidate: getShouldRevalidateFunction(\\n            lazyRoute,\\n            route.id,\\n            needsRevalidation\\n          ),\\n          handle: lazyRoute.handle,\\n          // No need to wrap these in layout since the root route is never\\n          // loaded via route.lazy()\\n          Component: lazyRoute.Component,\\n          ErrorBoundary: lazyRoute.ErrorBoundary\\n        };\\n      };\\n    }\\n    let children = createClientRoutes(\\n      manifest,\\n      routeModulesCache,\\n      initialState,\\n      isSpaMode,\\n      route.id,\\n      routesByParentId,\\n      needsRevalidation\\n    );\\n    if (children.length > 0) dataRoute.children = children;\\n    return dataRoute;\\n  });\\n}\\nfunction getShouldRevalidateFunction(route, routeId, needsRevalidation) {\\n  if (needsRevalidation) {\\n    return wrapShouldRevalidateForHdr(\\n      routeId,\\n      route.shouldRevalidate,\\n      needsRevalidation\\n    );\\n  }\\n  if (route.shouldRevalidate) {\\n    let fn = route.shouldRevalidate;\\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\\n  }\\n  return route.shouldRevalidate;\\n}\\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\\n  let handledRevalidation = false;\\n  return (arg) => {\\n    if (!handledRevalidation) {\\n      handledRevalidation = true;\\n      return needsRevalidation.has(routeId);\\n    }\\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\\n  };\\n}\\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\\n  let routeModule = await loadRouteModule(route, routeModules);\\n  await prefetchStyleLinks(route, routeModule);\\n  return {\\n    Component: getRouteModuleComponent(routeModule),\\n    ErrorBoundary: routeModule.ErrorBoundary,\\n    clientAction: routeModule.clientAction,\\n    clientLoader: routeModule.clientLoader,\\n    handle: routeModule.handle,\\n    links: routeModule.links,\\n    meta: routeModule.meta,\\n    shouldRevalidate: routeModule.shouldRevalidate\\n  };\\n}\\nfunction getRouteModuleComponent(routeModule) {\\n  if (routeModule.default == null) return void 0;\\n  let isEmptyObject = typeof routeModule.default === \\\"object\\\" && Object.keys(routeModule.default).length === 0;\\n  if (!isEmptyObject) {\\n    return routeModule.default;\\n  }\\n}\\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\\n  return isSpaMode && route.id !== \\\"root\\\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\\n}\\n\\n// lib/dom/ssr/fog-of-war.ts\\nvar nextPaths = /* @__PURE__ */ new Set();\\nvar discoveredPathsMaxSize = 1e3;\\nvar discoveredPaths = /* @__PURE__ */ new Set();\\nvar URL_LIMIT = 7680;\\nfunction isFogOfWarEnabled(isSpaMode) {\\n  return !isSpaMode;\\n}\\nfunction getPartialManifest(manifest, router) {\\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\\n  let segments = router.state.location.pathname.split(\\\"/\\\").filter(Boolean);\\n  let paths = [\\\"/\\\"];\\n  segments.pop();\\n  while (segments.length > 0) {\\n    paths.push(`/${segments.join(\\\"/\\\")}`);\\n    segments.pop();\\n  }\\n  paths.forEach((path) => {\\n    let matches = matchRoutes(router.routes, path, router.basename);\\n    if (matches) {\\n      matches.forEach((m) => routeIds.add(m.route.id));\\n    }\\n  });\\n  let initialRoutes = [...routeIds].reduce(\\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\\n    {}\\n  );\\n  return {\\n    ...manifest,\\n    routes: initialRoutes\\n  };\\n}\\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, isSpaMode, basename) {\\n  if (!isFogOfWarEnabled(isSpaMode)) {\\n    return void 0;\\n  }\\n  return async ({ path, patch }) => {\\n    if (discoveredPaths.has(path)) {\\n      return;\\n    }\\n    await fetchAndApplyManifestPatches(\\n      [path],\\n      manifest,\\n      routeModules,\\n      isSpaMode,\\n      basename,\\n      patch\\n    );\\n  };\\n}\\nfunction useFogOFWarDiscovery(router, manifest, routeModules, isSpaMode) {\\n  React8.useEffect(() => {\\n    if (!isFogOfWarEnabled(isSpaMode) || navigator.connection?.saveData === true) {\\n      return;\\n    }\\n    function registerElement(el) {\\n      let path = el.tagName === \\\"FORM\\\" ? el.getAttribute(\\\"action\\\") : el.getAttribute(\\\"href\\\");\\n      if (!path) {\\n        return;\\n      }\\n      let url = new URL(path, window.location.origin);\\n      if (!discoveredPaths.has(url.pathname)) {\\n        nextPaths.add(url.pathname);\\n      }\\n    }\\n    async function fetchPatches() {\\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\\n        if (discoveredPaths.has(path)) {\\n          nextPaths.delete(path);\\n          return false;\\n        }\\n        return true;\\n      });\\n      if (lazyPaths.length === 0) {\\n        return;\\n      }\\n      try {\\n        await fetchAndApplyManifestPatches(\\n          lazyPaths,\\n          manifest,\\n          routeModules,\\n          isSpaMode,\\n          router.basename,\\n          router.patchRoutes\\n        );\\n      } catch (e) {\\n        console.error(\\\"Failed to fetch manifest patches\\\", e);\\n      }\\n    }\\n    document.body.querySelectorAll(\\\"a[data-discover], form[data-discover]\\\").forEach((el) => registerElement(el));\\n    fetchPatches();\\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\\n    function isElement(node) {\\n      return node.nodeType === Node.ELEMENT_NODE;\\n    }\\n    let observer = new MutationObserver((records) => {\\n      let elements = /* @__PURE__ */ new Set();\\n      records.forEach((r) => {\\n        [r.target, ...r.addedNodes].forEach((node) => {\\n          if (!isElement(node)) return;\\n          if (node.tagName === \\\"A\\\" && node.getAttribute(\\\"data-discover\\\")) {\\n            elements.add(node);\\n          } else if (node.tagName === \\\"FORM\\\" && node.getAttribute(\\\"data-discover\\\")) {\\n            elements.add(node);\\n          }\\n          if (node.tagName !== \\\"A\\\") {\\n            node.querySelectorAll(\\\"a[data-discover], form[data-discover]\\\").forEach((el) => elements.add(el));\\n          }\\n        });\\n      });\\n      elements.forEach((el) => registerElement(el));\\n      debouncedFetchPatches();\\n    });\\n    observer.observe(document.documentElement, {\\n      subtree: true,\\n      childList: true,\\n      attributes: true,\\n      attributeFilter: [\\\"data-discover\\\", \\\"href\\\", \\\"action\\\"]\\n    });\\n    return () => observer.disconnect();\\n  }, [isSpaMode, manifest, routeModules, router]);\\n}\\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, isSpaMode, basename, patchRoutes) {\\n  let manifestPath = `${basename != null ? basename : \\\"/\\\"}/__manifest`.replace(\\n    /\\\\/+/g,\\n    \\\"/\\\"\\n  );\\n  let url = new URL(manifestPath, window.location.origin);\\n  paths.sort().forEach((path) => url.searchParams.append(\\\"p\\\", path));\\n  url.searchParams.set(\\\"version\\\", manifest.version);\\n  if (url.toString().length > URL_LIMIT) {\\n    nextPaths.clear();\\n    return;\\n  }\\n  let res = await fetch(url);\\n  if (!res.ok) {\\n    throw new Error(`${res.status} ${res.statusText}`);\\n  } else if (res.status >= 400) {\\n    throw new Error(await res.text());\\n  }\\n  let serverPatches = await res.json();\\n  let knownRoutes = new Set(Object.keys(manifest.routes));\\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\\n    if (route && !knownRoutes.has(route.id)) {\\n      acc[route.id] = route;\\n    }\\n    return acc;\\n  }, {});\\n  Object.assign(manifest.routes, patches);\\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\\n  let parentIds = /* @__PURE__ */ new Set();\\n  Object.values(patches).forEach((patch) => {\\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\\n      parentIds.add(patch.parentId);\\n    }\\n  });\\n  parentIds.forEach(\\n    (parentId) => patchRoutes(\\n      parentId || null,\\n      createClientRoutes(patches, routeModules, null, isSpaMode, parentId)\\n    )\\n  );\\n}\\nfunction addToFifoQueue(path, queue) {\\n  if (queue.size >= discoveredPathsMaxSize) {\\n    let first = queue.values().next().value;\\n    queue.delete(first);\\n  }\\n  queue.add(path);\\n}\\nfunction debounce(callback, wait) {\\n  let timeoutId;\\n  return (...args) => {\\n    window.clearTimeout(timeoutId);\\n    timeoutId = window.setTimeout(() => callback(...args), wait);\\n  };\\n}\\n\\n// lib/dom/ssr/components.tsx\\nfunction useDataRouterContext2() {\\n  let context = React9.useContext(DataRouterContext);\\n  invariant2(\\n    context,\\n    \\\"You must render this element inside a <DataRouterContext.Provider> element\\\"\\n  );\\n  return context;\\n}\\nfunction useDataRouterStateContext() {\\n  let context = React9.useContext(DataRouterStateContext);\\n  invariant2(\\n    context,\\n    \\\"You must render this element inside a <DataRouterStateContext.Provider> element\\\"\\n  );\\n  return context;\\n}\\nvar FrameworkContext = React9.createContext(void 0);\\nFrameworkContext.displayName = \\\"FrameworkContext\\\";\\nfunction useFrameworkContext() {\\n  let context = React9.useContext(FrameworkContext);\\n  invariant2(\\n    context,\\n    \\\"You must render this element inside a <HydratedRouter> element\\\"\\n  );\\n  return context;\\n}\\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\\n  let frameworkContext = React9.useContext(FrameworkContext);\\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\\n  let ref = React9.useRef(null);\\n  React9.useEffect(() => {\\n    if (prefetch === \\\"render\\\") {\\n      setShouldPrefetch(true);\\n    }\\n    if (prefetch === \\\"viewport\\\") {\\n      let callback = (entries) => {\\n        entries.forEach((entry) => {\\n          setShouldPrefetch(entry.isIntersecting);\\n        });\\n      };\\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\\n      if (ref.current) observer.observe(ref.current);\\n      return () => {\\n        observer.disconnect();\\n      };\\n    }\\n  }, [prefetch]);\\n  React9.useEffect(() => {\\n    if (maybePrefetch) {\\n      let id = setTimeout(() => {\\n        setShouldPrefetch(true);\\n      }, 100);\\n      return () => {\\n        clearTimeout(id);\\n      };\\n    }\\n  }, [maybePrefetch]);\\n  let setIntent = () => {\\n    setMaybePrefetch(true);\\n  };\\n  let cancelIntent = () => {\\n    setMaybePrefetch(false);\\n    setShouldPrefetch(false);\\n  };\\n  if (!frameworkContext) {\\n    return [false, ref, {}];\\n  }\\n  if (prefetch !== \\\"intent\\\") {\\n    return [shouldPrefetch, ref, {}];\\n  }\\n  return [\\n    shouldPrefetch,\\n    ref,\\n    {\\n      onFocus: composeEventHandlers(onFocus, setIntent),\\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\\n    }\\n  ];\\n}\\nfunction composeEventHandlers(theirHandler, ourHandler) {\\n  return (event) => {\\n    theirHandler && theirHandler(event);\\n    if (!event.defaultPrevented) {\\n      ourHandler(event);\\n    }\\n  };\\n}\\nfunction getActiveMatches(matches, errors, isSpaMode) {\\n  if (isSpaMode && !isHydrated) {\\n    return [matches[0]];\\n  }\\n  if (errors) {\\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\\n    return matches.slice(0, errorIdx + 1);\\n  }\\n  return matches;\\n}\\nfunction Links() {\\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\\n  let keyedLinks = React9.useMemo(\\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\\n    [matches, routeModules, manifest]\\n  );\\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, criticalCss ? /* @__PURE__ */ React9.createElement(\\\"style\\\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, keyedLinks.map(\\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\\\"link\\\", { key, ...link })\\n  ));\\n}\\nfunction PrefetchPageLinks({\\n  page,\\n  ...dataLinkProps\\n}) {\\n  let { router } = useDataRouterContext2();\\n  let matches = React9.useMemo(\\n    () => matchRoutes(router.routes, page, router.basename),\\n    [router.routes, page, router.basename]\\n  );\\n  if (!matches) {\\n    return null;\\n  }\\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\\n}\\nfunction useKeyedPrefetchLinks(matches) {\\n  let { manifest, routeModules } = useFrameworkContext();\\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\\n  React9.useEffect(() => {\\n    let interrupted = false;\\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\\n      (links) => {\\n        if (!interrupted) {\\n          setKeyedPrefetchLinks(links);\\n        }\\n      }\\n    );\\n    return () => {\\n      interrupted = true;\\n    };\\n  }, [matches, manifest, routeModules]);\\n  return keyedPrefetchLinks;\\n}\\nfunction PrefetchPageLinksImpl({\\n  page,\\n  matches: nextMatches,\\n  ...linkProps\\n}) {\\n  let location = useLocation();\\n  let { manifest, routeModules } = useFrameworkContext();\\n  let { loaderData, matches } = useDataRouterStateContext();\\n  let newMatchesForData = React9.useMemo(\\n    () => getNewMatchesForLinks(\\n      page,\\n      nextMatches,\\n      matches,\\n      manifest,\\n      location,\\n      \\\"data\\\"\\n    ),\\n    [page, nextMatches, matches, manifest, location]\\n  );\\n  let newMatchesForAssets = React9.useMemo(\\n    () => getNewMatchesForLinks(\\n      page,\\n      nextMatches,\\n      matches,\\n      manifest,\\n      location,\\n      \\\"assets\\\"\\n    ),\\n    [page, nextMatches, matches, manifest, location]\\n  );\\n  let dataHrefs = React9.useMemo(() => {\\n    if (page === location.pathname + location.search + location.hash) {\\n      return [];\\n    }\\n    let routesParams = /* @__PURE__ */ new Set();\\n    let foundOptOutRoute = false;\\n    nextMatches.forEach((m) => {\\n      let manifestRoute = manifest.routes[m.route.id];\\n      if (!manifestRoute || !manifestRoute.hasLoader) {\\n        return;\\n      }\\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\\n        foundOptOutRoute = true;\\n      } else if (manifestRoute.hasClientLoader) {\\n        foundOptOutRoute = true;\\n      } else {\\n        routesParams.add(m.route.id);\\n      }\\n    });\\n    if (routesParams.size === 0) {\\n      return [];\\n    }\\n    let url = singleFetchUrl(page);\\n    if (foundOptOutRoute && routesParams.size > 0) {\\n      url.searchParams.set(\\n        \\\"_routes\\\",\\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\\\",\\\")\\n      );\\n    }\\n    return [url.pathname + url.search];\\n  }, [\\n    loaderData,\\n    location,\\n    manifest,\\n    newMatchesForData,\\n    nextMatches,\\n    page,\\n    routeModules\\n  ]);\\n  let moduleHrefs = React9.useMemo(\\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\\n    [newMatchesForAssets, manifest]\\n  );\\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React9.createElement(\\\"link\\\", { key: href, rel: \\\"prefetch\\\", as: \\\"fetch\\\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React9.createElement(\\\"link\\\", { key: href, rel: \\\"modulepreload\\\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\\n    // these don't spread `linkProps` because they are full link descriptors\\n    // already with their own props\\n    /* @__PURE__ */ React9.createElement(\\\"link\\\", { key, ...link })\\n  )));\\n}\\nfunction Meta() {\\n  let { isSpaMode, routeModules } = useFrameworkContext();\\n  let {\\n    errors,\\n    matches: routerMatches,\\n    loaderData\\n  } = useDataRouterStateContext();\\n  let location = useLocation();\\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\\n  let error = null;\\n  if (errors) {\\n    error = errors[_matches[_matches.length - 1].route.id];\\n  }\\n  let meta = [];\\n  let leafMeta = null;\\n  let matches = [];\\n  for (let i = 0; i < _matches.length; i++) {\\n    let _match = _matches[i];\\n    let routeId = _match.route.id;\\n    let data2 = loaderData[routeId];\\n    let params = _match.params;\\n    let routeModule = routeModules[routeId];\\n    let routeMeta = [];\\n    let match = {\\n      id: routeId,\\n      data: data2,\\n      meta: [],\\n      params: _match.params,\\n      pathname: _match.pathname,\\n      handle: _match.route.handle,\\n      error\\n    };\\n    matches[i] = match;\\n    if (routeModule?.meta) {\\n      routeMeta = typeof routeModule.meta === \\\"function\\\" ? routeModule.meta({\\n        data: data2,\\n        params,\\n        location,\\n        matches,\\n        error\\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\\n    } else if (leafMeta) {\\n      routeMeta = [...leafMeta];\\n    }\\n    routeMeta = routeMeta || [];\\n    if (!Array.isArray(routeMeta)) {\\n      throw new Error(\\n        \\\"The route at \\\" + _match.route.path + \\\" returns an invalid value. All route meta functions must return an array of meta objects.\\\\n\\\\nTo reference the meta function API, see https://remix.run/route/meta\\\"\\n      );\\n    }\\n    match.meta = routeMeta;\\n    matches[i] = match;\\n    meta = [...routeMeta];\\n    leafMeta = meta;\\n  }\\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\\n    if (!metaProps) {\\n      return null;\\n    }\\n    if (\\\"tagName\\\" in metaProps) {\\n      let { tagName, ...rest } = metaProps;\\n      if (!isValidMetaTag(tagName)) {\\n        console.warn(\\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\\n        );\\n        return null;\\n      }\\n      let Comp = tagName;\\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\\n    }\\n    if (\\\"title\\\" in metaProps) {\\n      return /* @__PURE__ */ React9.createElement(\\\"title\\\", { key: \\\"title\\\" }, String(metaProps.title));\\n    }\\n    if (\\\"charset\\\" in metaProps) {\\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\\n      delete metaProps.charset;\\n    }\\n    if (\\\"charSet\\\" in metaProps && metaProps.charSet != null) {\\n      return typeof metaProps.charSet === \\\"string\\\" ? /* @__PURE__ */ React9.createElement(\\\"meta\\\", { key: \\\"charSet\\\", charSet: metaProps.charSet }) : null;\\n    }\\n    if (\\\"script:ld+json\\\" in metaProps) {\\n      try {\\n        let json = JSON.stringify(metaProps[\\\"script:ld+json\\\"]);\\n        return /* @__PURE__ */ React9.createElement(\\n          \\\"script\\\",\\n          {\\n            key: `script:ld+json:${json}`,\\n            type: \\\"application/ld+json\\\",\\n            dangerouslySetInnerHTML: { __html: json }\\n          }\\n        );\\n      } catch (err) {\\n        return null;\\n      }\\n    }\\n    return /* @__PURE__ */ React9.createElement(\\\"meta\\\", { key: JSON.stringify(metaProps), ...metaProps });\\n  }));\\n}\\nfunction isValidMetaTag(tagName) {\\n  return typeof tagName === \\\"string\\\" && /^(meta|link)$/.test(tagName);\\n}\\nvar isHydrated = false;\\nfunction Scripts(props) {\\n  let { manifest, serverHandoffString, isSpaMode, renderMeta } = useFrameworkContext();\\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\\n  let { matches: routerMatches } = useDataRouterStateContext();\\n  let enableFogOfWar = isFogOfWarEnabled(isSpaMode);\\n  if (renderMeta) {\\n    renderMeta.didRenderScripts = true;\\n  }\\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\\n  React9.useEffect(() => {\\n    isHydrated = true;\\n  }, []);\\n  let initialScripts = React9.useMemo(() => {\\n    let streamScript = \\\"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\\\";\\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \\\" \\\";\\n    let routeModulesScript = !isStatic ? \\\" \\\" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \\\"\\\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \\\"\\\"};\\n${matches.map(\\n      (match, index) => `import * as route${index} from ${JSON.stringify(\\n        manifest.routes[match.route.id].module\\n      )};`\\n    ).join(\\\"\\\\n\\\")}\\n  ${enableFogOfWar ? (\\n      // Inline a minimal manifest with the SSR matches\\n      `window.__reactRouterManifest = ${JSON.stringify(\\n        getPartialManifest(manifest, router),\\n        null,\\n        2\\n      )};`\\n    ) : \\\"\\\"}\\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\\\",\\\")}};\\n\\nimport(${JSON.stringify(manifest.entry.module)});`;\\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\\n      \\\"script\\\",\\n      {\\n        ...props,\\n        suppressHydrationWarning: true,\\n        dangerouslySetInnerHTML: createHtml(contextScript),\\n        type: void 0\\n      }\\n    ), /* @__PURE__ */ React9.createElement(\\n      \\\"script\\\",\\n      {\\n        ...props,\\n        suppressHydrationWarning: true,\\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\\n        type: \\\"module\\\",\\n        async: true\\n      }\\n    ));\\n  }, []);\\n  let routePreloads = matches.map((match) => {\\n    let route = manifest.routes[match.route.id];\\n    return route ? (route.imports || []).concat([route.module]) : [];\\n  }).flat(1);\\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\\n    \\\"link\\\",\\n    {\\n      rel: \\\"modulepreload\\\",\\n      href: manifest.url,\\n      crossOrigin: props.crossOrigin\\n    }\\n  ) : null, /* @__PURE__ */ React9.createElement(\\n    \\\"link\\\",\\n    {\\n      rel: \\\"modulepreload\\\",\\n      href: manifest.entry.module,\\n      crossOrigin: props.crossOrigin\\n    }\\n  ), dedupe(preloads).map((path) => /* @__PURE__ */ React9.createElement(\\n    \\\"link\\\",\\n    {\\n      key: path,\\n      rel: \\\"modulepreload\\\",\\n      href: path,\\n      crossOrigin: props.crossOrigin\\n    }\\n  )), initialScripts);\\n}\\nfunction dedupe(array) {\\n  return [...new Set(array)];\\n}\\nfunction mergeRefs(...refs) {\\n  return (value) => {\\n    refs.forEach((ref) => {\\n      if (typeof ref === \\\"function\\\") {\\n        ref(value);\\n      } else if (ref != null) {\\n        ref.current = value;\\n      }\\n    });\\n  };\\n}\\n\\n// lib/dom/lib.tsx\\nvar isBrowser = typeof window !== \\\"undefined\\\" && typeof window.document !== \\\"undefined\\\" && typeof window.document.createElement !== \\\"undefined\\\";\\ntry {\\n  if (isBrowser) {\\n    window.__reactRouterVersion = \\\"7.1.1\\\";\\n  }\\n} catch (e) {\\n}\\nfunction createBrowserRouter(routes, opts) {\\n  return createRouter({\\n    basename: opts?.basename,\\n    future: opts?.future,\\n    history: createBrowserHistory({ window: opts?.window }),\\n    hydrationData: opts?.hydrationData || parseHydrationData(),\\n    routes,\\n    mapRouteProperties,\\n    dataStrategy: opts?.dataStrategy,\\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\\n    window: opts?.window\\n  }).initialize();\\n}\\nfunction createHashRouter(routes, opts) {\\n  return createRouter({\\n    basename: opts?.basename,\\n    future: opts?.future,\\n    history: createHashHistory({ window: opts?.window }),\\n    hydrationData: opts?.hydrationData || parseHydrationData(),\\n    routes,\\n    mapRouteProperties,\\n    dataStrategy: opts?.dataStrategy,\\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\\n    window: opts?.window\\n  }).initialize();\\n}\\nfunction parseHydrationData() {\\n  let state = window?.__staticRouterHydrationData;\\n  if (state && state.errors) {\\n    state = {\\n      ...state,\\n      errors: deserializeErrors(state.errors)\\n    };\\n  }\\n  return state;\\n}\\nfunction deserializeErrors(errors) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (val && val.__type === \\\"RouteErrorResponse\\\") {\\n      serialized[key] = new ErrorResponseImpl(\\n        val.status,\\n        val.statusText,\\n        val.data,\\n        val.internal === true\\n      );\\n    } else if (val && val.__type === \\\"Error\\\") {\\n      if (val.__subType) {\\n        let ErrorConstructor = window[val.__subType];\\n        if (typeof ErrorConstructor === \\\"function\\\") {\\n          try {\\n            let error = new ErrorConstructor(val.message);\\n            error.stack = \\\"\\\";\\n            serialized[key] = error;\\n          } catch (e) {\\n          }\\n        }\\n      }\\n      if (serialized[key] == null) {\\n        let error = new Error(val.message);\\n        error.stack = \\\"\\\";\\n        serialized[key] = error;\\n      }\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\nfunction BrowserRouter({\\n  basename,\\n  children,\\n  window: window2\\n}) {\\n  let historyRef = React10.useRef();\\n  if (historyRef.current == null) {\\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\\n  }\\n  let history = historyRef.current;\\n  let [state, setStateImpl] = React10.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React10.useCallback(\\n    (newState) => {\\n      React10.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React10.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nfunction HashRouter({ basename, children, window: window2 }) {\\n  let historyRef = React10.useRef();\\n  if (historyRef.current == null) {\\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\\n  }\\n  let history = historyRef.current;\\n  let [state, setStateImpl] = React10.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React10.useCallback(\\n    (newState) => {\\n      React10.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React10.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nfunction HistoryRouter({\\n  basename,\\n  children,\\n  history\\n}) {\\n  let [state, setStateImpl] = React10.useState({\\n    action: history.action,\\n    location: history.location\\n  });\\n  let setState = React10.useCallback(\\n    (newState) => {\\n      React10.startTransition(() => setStateImpl(newState));\\n    },\\n    [setStateImpl]\\n  );\\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n  return /* @__PURE__ */ React10.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history\\n    }\\n  );\\n}\\nHistoryRouter.displayName = \\\"unstable_HistoryRouter\\\";\\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\nvar Link = React10.forwardRef(\\n  function LinkWithRef({\\n    onClick,\\n    discover = \\\"render\\\",\\n    prefetch = \\\"none\\\",\\n    relative,\\n    reloadDocument,\\n    replace: replace2,\\n    state,\\n    target,\\n    to,\\n    preventScrollReset,\\n    viewTransition,\\n    ...rest\\n  }, forwardedRef) {\\n    let { basename } = React10.useContext(NavigationContext);\\n    let isAbsolute = typeof to === \\\"string\\\" && ABSOLUTE_URL_REGEX2.test(to);\\n    let absoluteHref;\\n    let isExternal = false;\\n    if (typeof to === \\\"string\\\" && isAbsolute) {\\n      absoluteHref = to;\\n      if (isBrowser) {\\n        try {\\n          let currentUrl = new URL(window.location.href);\\n          let targetUrl = to.startsWith(\\\"//\\\") ? new URL(currentUrl.protocol + to) : new URL(to);\\n          let path = stripBasename(targetUrl.pathname, basename);\\n          if (targetUrl.origin === currentUrl.origin && path != null) {\\n            to = path + targetUrl.search + targetUrl.hash;\\n          } else {\\n            isExternal = true;\\n          }\\n        } catch (e) {\\n          warning(\\n            false,\\n            `<Link to=\\\"${to}\\\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\\n          );\\n        }\\n      }\\n    }\\n    let href = useHref(to, { relative });\\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\\n      prefetch,\\n      rest\\n    );\\n    let internalOnClick = useLinkClickHandler(to, {\\n      replace: replace2,\\n      state,\\n      target,\\n      preventScrollReset,\\n      relative,\\n      viewTransition\\n    });\\n    function handleClick(event) {\\n      if (onClick) onClick(event);\\n      if (!event.defaultPrevented) {\\n        internalOnClick(event);\\n      }\\n    }\\n    let link = (\\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\\n      /* @__PURE__ */ React10.createElement(\\n        \\\"a\\\",\\n        {\\n          ...rest,\\n          ...prefetchHandlers,\\n          href: absoluteHref || href,\\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\\n          ref: mergeRefs(forwardedRef, prefetchRef),\\n          target,\\n          \\\"data-discover\\\": !isAbsolute && discover === \\\"render\\\" ? \\\"true\\\" : void 0\\n        }\\n      )\\n    );\\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href })) : link;\\n  }\\n);\\nLink.displayName = \\\"Link\\\";\\nvar NavLink = React10.forwardRef(\\n  function NavLinkWithRef({\\n    \\\"aria-current\\\": ariaCurrentProp = \\\"page\\\",\\n    caseSensitive = false,\\n    className: classNameProp = \\\"\\\",\\n    end = false,\\n    style: styleProp,\\n    to,\\n    viewTransition,\\n    children,\\n    ...rest\\n  }, ref) {\\n    let path = useResolvedPath(to, { relative: rest.relative });\\n    let location = useLocation();\\n    let routerState = React10.useContext(DataRouterStateContext);\\n    let { navigator: navigator2, basename } = React10.useContext(NavigationContext);\\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\\n    // eslint-disable-next-line react-hooks/rules-of-hooks\\n    useViewTransitionState(path) && viewTransition === true;\\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\\n    let locationPathname = location.pathname;\\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\\n    if (!caseSensitive) {\\n      locationPathname = locationPathname.toLowerCase();\\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\\n      toPathname = toPathname.toLowerCase();\\n    }\\n    if (nextLocationPathname && basename) {\\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\\n    }\\n    const endSlashPosition = toPathname !== \\\"/\\\" && toPathname.endsWith(\\\"/\\\") ? toPathname.length - 1 : toPathname.length;\\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \\\"/\\\";\\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \\\"/\\\");\\n    let renderProps = {\\n      isActive,\\n      isPending,\\n      isTransitioning\\n    };\\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\\n    let className;\\n    if (typeof classNameProp === \\\"function\\\") {\\n      className = classNameProp(renderProps);\\n    } else {\\n      className = [\\n        classNameProp,\\n        isActive ? \\\"active\\\" : null,\\n        isPending ? \\\"pending\\\" : null,\\n        isTransitioning ? \\\"transitioning\\\" : null\\n      ].filter(Boolean).join(\\\" \\\");\\n    }\\n    let style = typeof styleProp === \\\"function\\\" ? styleProp(renderProps) : styleProp;\\n    return /* @__PURE__ */ React10.createElement(\\n      Link,\\n      {\\n        ...rest,\\n        \\\"aria-current\\\": ariaCurrent,\\n        className,\\n        ref,\\n        style,\\n        to,\\n        viewTransition\\n      },\\n      typeof children === \\\"function\\\" ? children(renderProps) : children\\n    );\\n  }\\n);\\nNavLink.displayName = \\\"NavLink\\\";\\nvar Form = React10.forwardRef(\\n  ({\\n    discover = \\\"render\\\",\\n    fetcherKey,\\n    navigate,\\n    reloadDocument,\\n    replace: replace2,\\n    state,\\n    method = defaultMethod,\\n    action,\\n    onSubmit,\\n    relative,\\n    preventScrollReset,\\n    viewTransition,\\n    ...props\\n  }, forwardedRef) => {\\n    let submit = useSubmit();\\n    let formAction = useFormAction(action, { relative });\\n    let formMethod = method.toLowerCase() === \\\"get\\\" ? \\\"get\\\" : \\\"post\\\";\\n    let isAbsolute = typeof action === \\\"string\\\" && ABSOLUTE_URL_REGEX2.test(action);\\n    let submitHandler = (event) => {\\n      onSubmit && onSubmit(event);\\n      if (event.defaultPrevented) return;\\n      event.preventDefault();\\n      let submitter = event.nativeEvent.submitter;\\n      let submitMethod = submitter?.getAttribute(\\\"formmethod\\\") || method;\\n      submit(submitter || event.currentTarget, {\\n        fetcherKey,\\n        method: submitMethod,\\n        navigate,\\n        replace: replace2,\\n        state,\\n        relative,\\n        preventScrollReset,\\n        viewTransition\\n      });\\n    };\\n    return /* @__PURE__ */ React10.createElement(\\n      \\\"form\\\",\\n      {\\n        ref: forwardedRef,\\n        method: formMethod,\\n        action: formAction,\\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\\n        ...props,\\n        \\\"data-discover\\\": !isAbsolute && discover === \\\"render\\\" ? \\\"true\\\" : void 0\\n      }\\n    );\\n  }\\n);\\nForm.displayName = \\\"Form\\\";\\nfunction ScrollRestoration({\\n  getKey,\\n  storageKey,\\n  ...props\\n}) {\\n  let remixContext = React10.useContext(FrameworkContext);\\n  let { basename } = React10.useContext(NavigationContext);\\n  let location = useLocation();\\n  let matches = useMatches();\\n  useScrollRestoration({ getKey, storageKey });\\n  let ssrKey = React10.useMemo(\\n    () => {\\n      if (!remixContext || !getKey) return null;\\n      let userKey = getScrollRestorationKey(\\n        location,\\n        matches,\\n        basename,\\n        getKey\\n      );\\n      return userKey !== location.key ? userKey : null;\\n    },\\n    // Nah, we only need this the first time for the SSR render\\n    // eslint-disable-next-line react-hooks/exhaustive-deps\\n    []\\n  );\\n  if (!remixContext || remixContext.isSpaMode) {\\n    return null;\\n  }\\n  let restoreScroll = ((storageKey2, restoreKey) => {\\n    if (!window.history.state || !window.history.state.key) {\\n      let key = Math.random().toString(32).slice(2);\\n      window.history.replaceState({ key }, \\\"\\\");\\n    }\\n    try {\\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \\\"{}\\\");\\n      let storedY = positions[restoreKey || window.history.state.key];\\n      if (typeof storedY === \\\"number\\\") {\\n        window.scrollTo(0, storedY);\\n      }\\n    } catch (error) {\\n      console.error(error);\\n      sessionStorage.removeItem(storageKey2);\\n    }\\n  }).toString();\\n  return /* @__PURE__ */ React10.createElement(\\n    \\\"script\\\",\\n    {\\n      ...props,\\n      suppressHydrationWarning: true,\\n      dangerouslySetInnerHTML: {\\n        __html: `(${restoreScroll})(${JSON.stringify(\\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\\n        )}, ${JSON.stringify(ssrKey)})`\\n      }\\n    }\\n  );\\n}\\nScrollRestoration.displayName = \\\"ScrollRestoration\\\";\\nfunction getDataRouterConsoleError2(hookName) {\\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\\n}\\nfunction useDataRouterContext3(hookName) {\\n  let ctx = React10.useContext(DataRouterContext);\\n  invariant(ctx, getDataRouterConsoleError2(hookName));\\n  return ctx;\\n}\\nfunction useDataRouterState2(hookName) {\\n  let state = React10.useContext(DataRouterStateContext);\\n  invariant(state, getDataRouterConsoleError2(hookName));\\n  return state;\\n}\\nfunction useLinkClickHandler(to, {\\n  target,\\n  replace: replaceProp,\\n  state,\\n  preventScrollReset,\\n  relative,\\n  viewTransition\\n} = {}) {\\n  let navigate = useNavigate();\\n  let location = useLocation();\\n  let path = useResolvedPath(to, { relative });\\n  return React10.useCallback(\\n    (event) => {\\n      if (shouldProcessLinkClick(event, target)) {\\n        event.preventDefault();\\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\\n        navigate(to, {\\n          replace: replace2,\\n          state,\\n          preventScrollReset,\\n          relative,\\n          viewTransition\\n        });\\n      }\\n    },\\n    [\\n      location,\\n      navigate,\\n      path,\\n      replaceProp,\\n      state,\\n      target,\\n      to,\\n      preventScrollReset,\\n      relative,\\n      viewTransition\\n    ]\\n  );\\n}\\nfunction useSearchParams(defaultInit) {\\n  warning(\\n    typeof URLSearchParams !== \\\"undefined\\\",\\n    `You cannot use the \\\\`useSearchParams\\\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\\n  );\\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\\n  let hasSetSearchParamsRef = React10.useRef(false);\\n  let location = useLocation();\\n  let searchParams = React10.useMemo(\\n    () => (\\n      // Only merge in the defaults if we haven't yet called setSearchParams.\\n      // Once we call that we want those to take precedence, otherwise you can't\\n      // remove a param with setSearchParams({}) if it has an initial value\\n      getSearchParamsForLocation(\\n        location.search,\\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\\n      )\\n    ),\\n    [location.search]\\n  );\\n  let navigate = useNavigate();\\n  let setSearchParams = React10.useCallback(\\n    (nextInit, navigateOptions) => {\\n      const newSearchParams = createSearchParams(\\n        typeof nextInit === \\\"function\\\" ? nextInit(searchParams) : nextInit\\n      );\\n      hasSetSearchParamsRef.current = true;\\n      navigate(\\\"?\\\" + newSearchParams, navigateOptions);\\n    },\\n    [navigate, searchParams]\\n  );\\n  return [searchParams, setSearchParams];\\n}\\nvar fetcherId = 0;\\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\\nfunction useSubmit() {\\n  let { router } = useDataRouterContext3(\\\"useSubmit\\\" /* UseSubmit */);\\n  let { basename } = React10.useContext(NavigationContext);\\n  let currentRouteId = useRouteId();\\n  return React10.useCallback(\\n    async (target, options = {}) => {\\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\\n        target,\\n        basename\\n      );\\n      if (options.navigate === false) {\\n        let key = options.fetcherKey || getUniqueFetcherId();\\n        await router.fetch(key, currentRouteId, options.action || action, {\\n          preventScrollReset: options.preventScrollReset,\\n          formData,\\n          body,\\n          formMethod: options.method || method,\\n          formEncType: options.encType || encType,\\n          flushSync: options.flushSync\\n        });\\n      } else {\\n        await router.navigate(options.action || action, {\\n          preventScrollReset: options.preventScrollReset,\\n          formData,\\n          body,\\n          formMethod: options.method || method,\\n          formEncType: options.encType || encType,\\n          replace: options.replace,\\n          state: options.state,\\n          fromRouteId: currentRouteId,\\n          flushSync: options.flushSync,\\n          viewTransition: options.viewTransition\\n        });\\n      }\\n    },\\n    [router, basename, currentRouteId]\\n  );\\n}\\nfunction useFormAction(action, { relative } = {}) {\\n  let { basename } = React10.useContext(NavigationContext);\\n  let routeContext = React10.useContext(RouteContext);\\n  invariant(routeContext, \\\"useFormAction must be used inside a RouteContext\\\");\\n  let [match] = routeContext.matches.slice(-1);\\n  let path = { ...useResolvedPath(action ? action : \\\".\\\", { relative }) };\\n  let location = useLocation();\\n  if (action == null) {\\n    path.search = location.search;\\n    let params = new URLSearchParams(path.search);\\n    let indexValues = params.getAll(\\\"index\\\");\\n    let hasNakedIndexParam = indexValues.some((v) => v === \\\"\\\");\\n    if (hasNakedIndexParam) {\\n      params.delete(\\\"index\\\");\\n      indexValues.filter((v) => v).forEach((v) => params.append(\\\"index\\\", v));\\n      let qs = params.toString();\\n      path.search = qs ? `?${qs}` : \\\"\\\";\\n    }\\n  }\\n  if ((!action || action === \\\".\\\") && match.route.index) {\\n    path.search = path.search ? path.search.replace(/^\\\\?/, \\\"?index&\\\") : \\\"?index\\\";\\n  }\\n  if (basename !== \\\"/\\\") {\\n    path.pathname = path.pathname === \\\"/\\\" ? basename : joinPaths([basename, path.pathname]);\\n  }\\n  return createPath(path);\\n}\\nfunction useFetcher({\\n  key\\n} = {}) {\\n  let { router } = useDataRouterContext3(\\\"useFetcher\\\" /* UseFetcher */);\\n  let state = useDataRouterState2(\\\"useFetcher\\\" /* UseFetcher */);\\n  let fetcherData = React10.useContext(FetchersContext);\\n  let route = React10.useContext(RouteContext);\\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\\n  invariant(route, `useFetcher must be used inside a RouteContext`);\\n  invariant(\\n    routeId != null,\\n    `useFetcher can only be used on routes that contain a unique \\\"id\\\"`\\n  );\\n  let defaultKey = React10.useId();\\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\\n  if (key && key !== fetcherKey) {\\n    setFetcherKey(key);\\n  }\\n  React10.useEffect(() => {\\n    router.getFetcher(fetcherKey);\\n    return () => router.deleteFetcher(fetcherKey);\\n  }, [router, fetcherKey]);\\n  let load = React10.useCallback(\\n    async (href, opts) => {\\n      invariant(routeId, \\\"No routeId available for fetcher.load()\\\");\\n      await router.fetch(fetcherKey, routeId, href, opts);\\n    },\\n    [fetcherKey, routeId, router]\\n  );\\n  let submitImpl = useSubmit();\\n  let submit = React10.useCallback(\\n    async (target, opts) => {\\n      await submitImpl(target, {\\n        ...opts,\\n        navigate: false,\\n        fetcherKey\\n      });\\n    },\\n    [fetcherKey, submitImpl]\\n  );\\n  let FetcherForm = React10.useMemo(() => {\\n    let FetcherForm2 = React10.forwardRef(\\n      (props, ref) => {\\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\\n      }\\n    );\\n    FetcherForm2.displayName = \\\"fetcher.Form\\\";\\n    return FetcherForm2;\\n  }, [fetcherKey]);\\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\\n  let data2 = fetcherData.get(fetcherKey);\\n  let fetcherWithComponents = React10.useMemo(\\n    () => ({\\n      Form: FetcherForm,\\n      submit,\\n      load,\\n      ...fetcher,\\n      data: data2\\n    }),\\n    [FetcherForm, submit, load, fetcher, data2]\\n  );\\n  return fetcherWithComponents;\\n}\\nfunction useFetchers() {\\n  let state = useDataRouterState2(\\\"useFetchers\\\" /* UseFetchers */);\\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\\n    ...fetcher,\\n    key\\n  }));\\n}\\nvar SCROLL_RESTORATION_STORAGE_KEY = \\\"react-router-scroll-positions\\\";\\nvar savedScrollPositions = {};\\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\\n  let key = null;\\n  if (getKey) {\\n    if (basename !== \\\"/\\\") {\\n      key = getKey(\\n        {\\n          ...location,\\n          pathname: stripBasename(location.pathname, basename) || location.pathname\\n        },\\n        matches\\n      );\\n    } else {\\n      key = getKey(location, matches);\\n    }\\n  }\\n  if (key == null) {\\n    key = location.key;\\n  }\\n  return key;\\n}\\nfunction useScrollRestoration({\\n  getKey,\\n  storageKey\\n} = {}) {\\n  let { router } = useDataRouterContext3(\\\"useScrollRestoration\\\" /* UseScrollRestoration */);\\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\\n    \\\"useScrollRestoration\\\" /* UseScrollRestoration */\\n  );\\n  let { basename } = React10.useContext(NavigationContext);\\n  let location = useLocation();\\n  let matches = useMatches();\\n  let navigation = useNavigation();\\n  React10.useEffect(() => {\\n    window.history.scrollRestoration = \\\"manual\\\";\\n    return () => {\\n      window.history.scrollRestoration = \\\"auto\\\";\\n    };\\n  }, []);\\n  usePageHide(\\n    React10.useCallback(() => {\\n      if (navigation.state === \\\"idle\\\") {\\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\\n        savedScrollPositions[key] = window.scrollY;\\n      }\\n      try {\\n        sessionStorage.setItem(\\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\\n          JSON.stringify(savedScrollPositions)\\n        );\\n      } catch (error) {\\n        warning(\\n          false,\\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\\n        );\\n      }\\n      window.history.scrollRestoration = \\\"auto\\\";\\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\\n  );\\n  if (typeof document !== \\\"undefined\\\") {\\n    React10.useLayoutEffect(() => {\\n      try {\\n        let sessionPositions = sessionStorage.getItem(\\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\\n        );\\n        if (sessionPositions) {\\n          savedScrollPositions = JSON.parse(sessionPositions);\\n        }\\n      } catch (e) {\\n      }\\n    }, [storageKey]);\\n    React10.useLayoutEffect(() => {\\n      let disableScrollRestoration = router?.enableScrollRestoration(\\n        savedScrollPositions,\\n        () => window.scrollY,\\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\\n      );\\n      return () => disableScrollRestoration && disableScrollRestoration();\\n    }, [router, basename, getKey]);\\n    React10.useLayoutEffect(() => {\\n      if (restoreScrollPosition === false) {\\n        return;\\n      }\\n      if (typeof restoreScrollPosition === \\\"number\\\") {\\n        window.scrollTo(0, restoreScrollPosition);\\n        return;\\n      }\\n      if (location.hash) {\\n        let el = document.getElementById(\\n          decodeURIComponent(location.hash.slice(1))\\n        );\\n        if (el) {\\n          el.scrollIntoView();\\n          return;\\n        }\\n      }\\n      if (preventScrollReset === true) {\\n        return;\\n      }\\n      window.scrollTo(0, 0);\\n    }, [location, restoreScrollPosition, preventScrollReset]);\\n  }\\n}\\nfunction useBeforeUnload(callback, options) {\\n  let { capture } = options || {};\\n  React10.useEffect(() => {\\n    let opts = capture != null ? { capture } : void 0;\\n    window.addEventListener(\\\"beforeunload\\\", callback, opts);\\n    return () => {\\n      window.removeEventListener(\\\"beforeunload\\\", callback, opts);\\n    };\\n  }, [callback, capture]);\\n}\\nfunction usePageHide(callback, options) {\\n  let { capture } = options || {};\\n  React10.useEffect(() => {\\n    let opts = capture != null ? { capture } : void 0;\\n    window.addEventListener(\\\"pagehide\\\", callback, opts);\\n    return () => {\\n      window.removeEventListener(\\\"pagehide\\\", callback, opts);\\n    };\\n  }, [callback, capture]);\\n}\\nfunction usePrompt({\\n  when,\\n  message\\n}) {\\n  let blocker = useBlocker(when);\\n  React10.useEffect(() => {\\n    if (blocker.state === \\\"blocked\\\") {\\n      let proceed = window.confirm(message);\\n      if (proceed) {\\n        setTimeout(blocker.proceed, 0);\\n      } else {\\n        blocker.reset();\\n      }\\n    }\\n  }, [blocker, message]);\\n  React10.useEffect(() => {\\n    if (blocker.state === \\\"blocked\\\" && !when) {\\n      blocker.reset();\\n    }\\n  }, [blocker, when]);\\n}\\nfunction useViewTransitionState(to, opts = {}) {\\n  let vtContext = React10.useContext(ViewTransitionContext);\\n  invariant(\\n    vtContext != null,\\n    \\\"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\\\"\\n  );\\n  let { basename } = useDataRouterContext3(\\n    \\\"useViewTransitionState\\\" /* useViewTransitionState */\\n  );\\n  let path = useResolvedPath(to, { relative: opts.relative });\\n  if (!vtContext.isTransitioning) {\\n    return false;\\n  }\\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\\n}\\n\\n// lib/dom/server.tsx\\nimport * as React11 from \\\"react\\\";\\nfunction StaticRouter({\\n  basename,\\n  children,\\n  location: locationProp = \\\"/\\\"\\n}) {\\n  if (typeof locationProp === \\\"string\\\") {\\n    locationProp = parsePath(locationProp);\\n  }\\n  let action = \\\"POP\\\" /* Pop */;\\n  let location = {\\n    pathname: locationProp.pathname || \\\"/\\\",\\n    search: locationProp.search || \\\"\\\",\\n    hash: locationProp.hash || \\\"\\\",\\n    state: locationProp.state != null ? locationProp.state : null,\\n    key: locationProp.key || \\\"default\\\"\\n  };\\n  let staticNavigator = getStatelessNavigator();\\n  return /* @__PURE__ */ React11.createElement(\\n    Router,\\n    {\\n      basename,\\n      children,\\n      location,\\n      navigationType: action,\\n      navigator: staticNavigator,\\n      static: true\\n    }\\n  );\\n}\\nfunction StaticRouterProvider({\\n  context,\\n  router,\\n  hydrate = true,\\n  nonce\\n}) {\\n  invariant(\\n    router && context,\\n    \\\"You must provide `router` and `context` to <StaticRouterProvider>\\\"\\n  );\\n  let dataRouterContext = {\\n    router,\\n    navigator: getStatelessNavigator(),\\n    static: true,\\n    staticContext: context,\\n    basename: context.basename || \\\"/\\\"\\n  };\\n  let fetchersContext = /* @__PURE__ */ new Map();\\n  let hydrateScript = \\\"\\\";\\n  if (hydrate !== false) {\\n    let data2 = {\\n      loaderData: context.loaderData,\\n      actionData: context.actionData,\\n      errors: serializeErrors(context.errors)\\n    };\\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\\n  }\\n  let { state } = dataRouterContext.router;\\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\\n    Router,\\n    {\\n      basename: dataRouterContext.basename,\\n      location: state.location,\\n      navigationType: state.historyAction,\\n      navigator: dataRouterContext.navigator,\\n      static: dataRouterContext.static\\n    },\\n    /* @__PURE__ */ React11.createElement(\\n      DataRoutes2,\\n      {\\n        routes: router.routes,\\n        future: router.future,\\n        state\\n      }\\n    )\\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\\n    \\\"script\\\",\\n    {\\n      suppressHydrationWarning: true,\\n      nonce,\\n      dangerouslySetInnerHTML: { __html: hydrateScript }\\n    }\\n  ) : null);\\n}\\nfunction DataRoutes2({\\n  routes,\\n  future,\\n  state\\n}) {\\n  return useRoutesImpl(routes, void 0, state, future);\\n}\\nfunction serializeErrors(errors) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (isRouteErrorResponse(val)) {\\n      serialized[key] = { ...val, __type: \\\"RouteErrorResponse\\\" };\\n    } else if (val instanceof Error) {\\n      serialized[key] = {\\n        message: val.message,\\n        __type: \\\"Error\\\",\\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\\n        // can re-create the same type during hydration.\\n        ...val.name !== \\\"Error\\\" ? {\\n          __subType: val.name\\n        } : {}\\n      };\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\nfunction getStatelessNavigator() {\\n  return {\\n    createHref,\\n    encodeLocation,\\n    push(to) {\\n      throw new Error(\\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\\\`navigate(${JSON.stringify(to)})\\\\` somewhere in your app.`\\n      );\\n    },\\n    replace(to) {\\n      throw new Error(\\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\\\`navigate(${JSON.stringify(to)}, { replace: true })\\\\` somewhere in your app.`\\n      );\\n    },\\n    go(delta) {\\n      throw new Error(\\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\\\`navigate(${delta})\\\\` somewhere in your app.`\\n      );\\n    },\\n    back() {\\n      throw new Error(\\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\\n      );\\n    },\\n    forward() {\\n      throw new Error(\\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\\n      );\\n    }\\n  };\\n}\\nfunction createStaticHandler2(routes, opts) {\\n  return createStaticHandler(routes, {\\n    ...opts,\\n    mapRouteProperties\\n  });\\n}\\nfunction createStaticRouter(routes, context, opts = {}) {\\n  let manifest = {};\\n  let dataRoutes = convertRoutesToDataRoutes(\\n    routes,\\n    mapRouteProperties,\\n    void 0,\\n    manifest\\n  );\\n  let matches = context.matches.map((match) => {\\n    let route = manifest[match.route.id] || match.route;\\n    return {\\n      ...match,\\n      route\\n    };\\n  });\\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\\n  return {\\n    get basename() {\\n      return context.basename;\\n    },\\n    get future() {\\n      return {\\n        ...opts?.future\\n      };\\n    },\\n    get state() {\\n      return {\\n        historyAction: \\\"POP\\\" /* Pop */,\\n        location: context.location,\\n        matches,\\n        loaderData: context.loaderData,\\n        actionData: context.actionData,\\n        errors: context.errors,\\n        initialized: true,\\n        navigation: IDLE_NAVIGATION,\\n        restoreScrollPosition: null,\\n        preventScrollReset: false,\\n        revalidation: \\\"idle\\\",\\n        fetchers: /* @__PURE__ */ new Map(),\\n        blockers: /* @__PURE__ */ new Map()\\n      };\\n    },\\n    get routes() {\\n      return dataRoutes;\\n    },\\n    get window() {\\n      return void 0;\\n    },\\n    initialize() {\\n      throw msg(\\\"initialize\\\");\\n    },\\n    subscribe() {\\n      throw msg(\\\"subscribe\\\");\\n    },\\n    enableScrollRestoration() {\\n      throw msg(\\\"enableScrollRestoration\\\");\\n    },\\n    navigate() {\\n      throw msg(\\\"navigate\\\");\\n    },\\n    fetch() {\\n      throw msg(\\\"fetch\\\");\\n    },\\n    revalidate() {\\n      throw msg(\\\"revalidate\\\");\\n    },\\n    createHref,\\n    encodeLocation,\\n    getFetcher() {\\n      return IDLE_FETCHER;\\n    },\\n    deleteFetcher() {\\n      throw msg(\\\"deleteFetcher\\\");\\n    },\\n    dispose() {\\n      throw msg(\\\"dispose\\\");\\n    },\\n    getBlocker() {\\n      return IDLE_BLOCKER;\\n    },\\n    deleteBlocker() {\\n      throw msg(\\\"deleteBlocker\\\");\\n    },\\n    patchRoutes() {\\n      throw msg(\\\"patchRoutes\\\");\\n    },\\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\\n    _internalSetRoutes() {\\n      throw msg(\\\"_internalSetRoutes\\\");\\n    }\\n  };\\n}\\nfunction createHref(to) {\\n  return typeof to === \\\"string\\\" ? to : createPath(to);\\n}\\nfunction encodeLocation(to) {\\n  let href = typeof to === \\\"string\\\" ? to : createPath(to);\\n  href = href.replace(/ $/, \\\"%20\\\");\\n  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, \\\"http://localhost\\\");\\n  return {\\n    pathname: encoded.pathname,\\n    search: encoded.search,\\n    hash: encoded.hash\\n  };\\n}\\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\nvar ESCAPE_LOOKUP2 = {\\n  \\\"&\\\": \\\"\\\\\\\\u0026\\\",\\n  \\\">\\\": \\\"\\\\\\\\u003e\\\",\\n  \\\"<\\\": \\\"\\\\\\\\u003c\\\",\\n  \\\"\\\\u2028\\\": \\\"\\\\\\\\u2028\\\",\\n  \\\"\\\\u2029\\\": \\\"\\\\\\\\u2029\\\"\\n};\\nvar ESCAPE_REGEX2 = /[&><\\\\u2028\\\\u2029]/g;\\nfunction htmlEscape(str) {\\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\\n}\\n\\n// lib/dom/ssr/server.tsx\\nimport * as React12 from \\\"react\\\";\\nfunction ServerRouter({\\n  context,\\n  url,\\n  nonce\\n}) {\\n  if (typeof url === \\\"string\\\") {\\n    url = new URL(url);\\n  }\\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\\n  let routes = createServerRoutes(\\n    manifest.routes,\\n    routeModules,\\n    context.future,\\n    context.isSpaMode\\n  );\\n  context.staticHandlerContext.loaderData = {\\n    ...context.staticHandlerContext.loaderData\\n  };\\n  for (let match of context.staticHandlerContext.matches) {\\n    let routeId = match.route.id;\\n    let route = routeModules[routeId];\\n    let manifestRoute = context.manifest.routes[routeId];\\n    if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\\n      delete context.staticHandlerContext.loaderData[routeId];\\n    }\\n  }\\n  let router = createStaticRouter(routes, context.staticHandlerContext);\\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\\n    FrameworkContext.Provider,\\n    {\\n      value: {\\n        manifest,\\n        routeModules,\\n        criticalCss,\\n        serverHandoffString,\\n        future: context.future,\\n        isSpaMode: context.isSpaMode,\\n        serializeError: context.serializeError,\\n        renderMeta: context.renderMeta\\n      }\\n    },\\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\\n      StaticRouterProvider,\\n      {\\n        router,\\n        context: context.staticHandlerContext,\\n        hydrate: false\\n      }\\n    ))\\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\\n    StreamTransfer,\\n    {\\n      context,\\n      identifier: 0,\\n      reader: context.serverHandoffStream.getReader(),\\n      textDecoder: new TextDecoder(),\\n      nonce\\n    }\\n  )) : null);\\n}\\n\\n// lib/dom/ssr/routes-test-stub.tsx\\nimport * as React13 from \\\"react\\\";\\nfunction createRoutesStub(routes, context = {}) {\\n  return function RoutesTestStub({\\n    initialEntries,\\n    initialIndex,\\n    hydrationData,\\n    future\\n  }) {\\n    let routerRef = React13.useRef();\\n    let remixContextRef = React13.useRef();\\n    if (routerRef.current == null) {\\n      remixContextRef.current = {\\n        future: {},\\n        manifest: {\\n          routes: {},\\n          entry: { imports: [], module: \\\"\\\" },\\n          url: \\\"\\\",\\n          version: \\\"\\\"\\n        },\\n        routeModules: {},\\n        isSpaMode: false\\n      };\\n      let patched = processRoutes(\\n        // @ts-expect-error loader/action context types don't match :/\\n        convertRoutesToDataRoutes(routes, (r) => r),\\n        context,\\n        remixContextRef.current.manifest,\\n        remixContextRef.current.routeModules\\n      );\\n      routerRef.current = createMemoryRouter(patched, {\\n        initialEntries,\\n        initialIndex,\\n        hydrationData\\n      });\\n    }\\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\\n  };\\n}\\nfunction processRoutes(routes, context, manifest, routeModules, parentId) {\\n  return routes.map((route) => {\\n    if (!route.id) {\\n      throw new Error(\\n        \\\"Expected a route.id in @remix-run/testing processRoutes() function\\\"\\n      );\\n    }\\n    let { loader, action } = route;\\n    let newRoute = {\\n      id: route.id,\\n      path: route.path,\\n      index: route.index,\\n      Component: route.Component,\\n      HydrateFallback: route.HydrateFallback,\\n      ErrorBoundary: route.ErrorBoundary,\\n      action: action ? (args) => action({ ...args, context }) : void 0,\\n      loader: loader ? (args) => loader({ ...args, context }) : void 0,\\n      handle: route.handle,\\n      shouldRevalidate: route.shouldRevalidate\\n    };\\n    let entryRoute = {\\n      id: route.id,\\n      path: route.path,\\n      index: route.index,\\n      parentId,\\n      hasAction: route.action != null,\\n      hasLoader: route.loader != null,\\n      // When testing routes, you should just be stubbing loader/action, not\\n      // trying to re-implement the full loader/clientLoader/SSR/hydration flow.\\n      // That is better tested via E2E tests.\\n      hasClientAction: false,\\n      hasClientLoader: false,\\n      hasErrorBoundary: route.ErrorBoundary != null,\\n      module: \\\"build/stub-path-to-module.js\\\"\\n      // any need for this?\\n    };\\n    manifest.routes[newRoute.id] = entryRoute;\\n    routeModules[route.id] = {\\n      default: route.Component || Outlet,\\n      ErrorBoundary: route.ErrorBoundary || void 0,\\n      handle: route.handle,\\n      links: route.links,\\n      meta: route.meta,\\n      shouldRevalidate: route.shouldRevalidate\\n    };\\n    if (route.children) {\\n      newRoute.children = processRoutes(\\n        route.children,\\n        context,\\n        manifest,\\n        routeModules,\\n        newRoute.id\\n      );\\n    }\\n    return newRoute;\\n  });\\n}\\n\\n// lib/server-runtime/cookies.ts\\nimport { parse, serialize } from \\\"cookie\\\";\\n\\n// lib/server-runtime/crypto.ts\\nvar encoder = new TextEncoder();\\nvar sign = async (value, secret) => {\\n  let data2 = encoder.encode(value);\\n  let key = await createKey2(secret, [\\\"sign\\\"]);\\n  let signature = await crypto.subtle.sign(\\\"HMAC\\\", key, data2);\\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\\n    /=+$/,\\n    \\\"\\\"\\n  );\\n  return value + \\\".\\\" + hash;\\n};\\nvar unsign = async (cookie, secret) => {\\n  let index = cookie.lastIndexOf(\\\".\\\");\\n  let value = cookie.slice(0, index);\\n  let hash = cookie.slice(index + 1);\\n  let data2 = encoder.encode(value);\\n  let key = await createKey2(secret, [\\\"verify\\\"]);\\n  let signature = byteStringToUint8Array(atob(hash));\\n  let valid = await crypto.subtle.verify(\\\"HMAC\\\", key, signature, data2);\\n  return valid ? value : false;\\n};\\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\\n  \\\"raw\\\",\\n  encoder.encode(secret),\\n  { name: \\\"HMAC\\\", hash: \\\"SHA-256\\\" },\\n  false,\\n  usages\\n);\\nfunction byteStringToUint8Array(byteString) {\\n  let array = new Uint8Array(byteString.length);\\n  for (let i = 0; i < byteString.length; i++) {\\n    array[i] = byteString.charCodeAt(i);\\n  }\\n  return array;\\n}\\n\\n// lib/server-runtime/cookies.ts\\nvar createCookie = (name, cookieOptions = {}) => {\\n  let { secrets = [], ...options } = {\\n    path: \\\"/\\\",\\n    sameSite: \\\"lax\\\",\\n    ...cookieOptions\\n  };\\n  warnOnceAboutExpiresCookie(name, options.expires);\\n  return {\\n    get name() {\\n      return name;\\n    },\\n    get isSigned() {\\n      return secrets.length > 0;\\n    },\\n    get expires() {\\n      return typeof options.maxAge !== \\\"undefined\\\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\\n    },\\n    async parse(cookieHeader, parseOptions) {\\n      if (!cookieHeader) return null;\\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\\n      if (name in cookies) {\\n        let value = cookies[name];\\n        if (typeof value === \\\"string\\\" && value !== \\\"\\\") {\\n          let decoded = await decodeCookieValue(value, secrets);\\n          return decoded;\\n        } else {\\n          return \\\"\\\";\\n        }\\n      } else {\\n        return null;\\n      }\\n    },\\n    async serialize(value, serializeOptions) {\\n      return serialize(\\n        name,\\n        value === \\\"\\\" ? \\\"\\\" : await encodeCookieValue(value, secrets),\\n        {\\n          ...options,\\n          ...serializeOptions\\n        }\\n      );\\n    }\\n  };\\n};\\nvar isCookie = (object) => {\\n  return object != null && typeof object.name === \\\"string\\\" && typeof object.isSigned === \\\"boolean\\\" && typeof object.parse === \\\"function\\\" && typeof object.serialize === \\\"function\\\";\\n};\\nasync function encodeCookieValue(value, secrets) {\\n  let encoded = encodeData(value);\\n  if (secrets.length > 0) {\\n    encoded = await sign(encoded, secrets[0]);\\n  }\\n  return encoded;\\n}\\nasync function decodeCookieValue(value, secrets) {\\n  if (secrets.length > 0) {\\n    for (let secret of secrets) {\\n      let unsignedValue = await unsign(value, secret);\\n      if (unsignedValue !== false) {\\n        return decodeData(unsignedValue);\\n      }\\n    }\\n    return null;\\n  }\\n  return decodeData(value);\\n}\\nfunction encodeData(value) {\\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\\n}\\nfunction decodeData(value) {\\n  try {\\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\\n  } catch (error) {\\n    return {};\\n  }\\n}\\nfunction myEscape(value) {\\n  let str = value.toString();\\n  let result = \\\"\\\";\\n  let index = 0;\\n  let chr, code;\\n  while (index < str.length) {\\n    chr = str.charAt(index++);\\n    if (/[\\\\w*+\\\\-./@]/.exec(chr)) {\\n      result += chr;\\n    } else {\\n      code = chr.charCodeAt(0);\\n      if (code < 256) {\\n        result += \\\"%\\\" + hex(code, 2);\\n      } else {\\n        result += \\\"%u\\\" + hex(code, 4).toUpperCase();\\n      }\\n    }\\n  }\\n  return result;\\n}\\nfunction hex(code, length) {\\n  let result = code.toString(16);\\n  while (result.length < length) result = \\\"0\\\" + result;\\n  return result;\\n}\\nfunction myUnescape(value) {\\n  let str = value.toString();\\n  let result = \\\"\\\";\\n  let index = 0;\\n  let chr, part;\\n  while (index < str.length) {\\n    chr = str.charAt(index++);\\n    if (chr === \\\"%\\\") {\\n      if (str.charAt(index) === \\\"u\\\") {\\n        part = str.slice(index + 1, index + 5);\\n        if (/^[\\\\da-f]{4}$/i.exec(part)) {\\n          result += String.fromCharCode(parseInt(part, 16));\\n          index += 5;\\n          continue;\\n        }\\n      } else {\\n        part = str.slice(index, index + 2);\\n        if (/^[\\\\da-f]{2}$/i.exec(part)) {\\n          result += String.fromCharCode(parseInt(part, 16));\\n          index += 2;\\n          continue;\\n        }\\n      }\\n    }\\n    result += chr;\\n  }\\n  return result;\\n}\\nfunction warnOnceAboutExpiresCookie(name, expires) {\\n  warnOnce(\\n    !expires,\\n    `The \\\"${name}\\\" cookie has an \\\"expires\\\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\\\`commitSession(session, { expires })\\\\` if using a session storage object, or \\\\`cookie.serialize(\\\"value\\\", { expires })\\\\` if you're using the cookie directly.`\\n  );\\n}\\n\\n// lib/server-runtime/entry.ts\\nfunction createEntryRouteModules(manifest) {\\n  return Object.keys(manifest).reduce((memo2, routeId) => {\\n    let route = manifest[routeId];\\n    if (route) {\\n      memo2[routeId] = route.module;\\n    }\\n    return memo2;\\n  }, {});\\n}\\n\\n// lib/server-runtime/mode.ts\\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\\n  ServerMode2[\\\"Development\\\"] = \\\"development\\\";\\n  ServerMode2[\\\"Production\\\"] = \\\"production\\\";\\n  ServerMode2[\\\"Test\\\"] = \\\"test\\\";\\n  return ServerMode2;\\n})(ServerMode || {});\\nfunction isServerMode(value) {\\n  return value === \\\"development\\\" /* Development */ || value === \\\"production\\\" /* Production */ || value === \\\"test\\\" /* Test */;\\n}\\n\\n// lib/server-runtime/errors.ts\\nfunction sanitizeError(error, serverMode) {\\n  if (error instanceof Error && serverMode !== \\\"development\\\" /* Development */) {\\n    let sanitized = new Error(\\\"Unexpected Server Error\\\");\\n    sanitized.stack = void 0;\\n    return sanitized;\\n  }\\n  return error;\\n}\\nfunction sanitizeErrors(errors, serverMode) {\\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\\n  }, {});\\n}\\nfunction serializeError(error, serverMode) {\\n  let sanitized = sanitizeError(error, serverMode);\\n  return {\\n    message: sanitized.message,\\n    stack: sanitized.stack\\n  };\\n}\\nfunction serializeErrors2(errors, serverMode) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (isRouteErrorResponse(val)) {\\n      serialized[key] = { ...val, __type: \\\"RouteErrorResponse\\\" };\\n    } else if (val instanceof Error) {\\n      let sanitized = sanitizeError(val, serverMode);\\n      serialized[key] = {\\n        message: sanitized.message,\\n        stack: sanitized.stack,\\n        __type: \\\"Error\\\",\\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\\n        // can re-create the same type during hydration.  This will only apply\\n        // in dev mode since all production errors are sanitized to normal\\n        // Error instances\\n        ...sanitized.name !== \\\"Error\\\" ? {\\n          __subType: sanitized.name\\n        } : {}\\n      };\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\n\\n// lib/server-runtime/routeMatching.ts\\nfunction matchServerRoutes(routes, pathname, basename) {\\n  let matches = matchRoutes(\\n    routes,\\n    pathname,\\n    basename\\n  );\\n  if (!matches) return null;\\n  return matches.map((match) => ({\\n    params: match.params,\\n    pathname: match.pathname,\\n    route: match.route\\n  }));\\n}\\n\\n// lib/server-runtime/data.ts\\nasync function callRouteHandler(handler, args) {\\n  let result = await handler({\\n    request: stripRoutesParam(stripIndexParam2(args.request)),\\n    params: args.params,\\n    context: args.context\\n  });\\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\\n    throw new Response(null, result.init);\\n  }\\n  return result;\\n}\\nfunction stripIndexParam2(request) {\\n  let url = new URL(request.url);\\n  let indexValues = url.searchParams.getAll(\\\"index\\\");\\n  url.searchParams.delete(\\\"index\\\");\\n  let indexValuesToKeep = [];\\n  for (let indexValue of indexValues) {\\n    if (indexValue) {\\n      indexValuesToKeep.push(indexValue);\\n    }\\n  }\\n  for (let toKeep of indexValuesToKeep) {\\n    url.searchParams.append(\\\"index\\\", toKeep);\\n  }\\n  let init = {\\n    method: request.method,\\n    body: request.body,\\n    headers: request.headers,\\n    signal: request.signal\\n  };\\n  if (init.body) {\\n    init.duplex = \\\"half\\\";\\n  }\\n  return new Request(url.href, init);\\n}\\nfunction stripRoutesParam(request) {\\n  let url = new URL(request.url);\\n  url.searchParams.delete(\\\"_routes\\\");\\n  let init = {\\n    method: request.method,\\n    body: request.body,\\n    headers: request.headers,\\n    signal: request.signal\\n  };\\n  if (init.body) {\\n    init.duplex = \\\"half\\\";\\n  }\\n  return new Request(url.href, init);\\n}\\n\\n// lib/server-runtime/invariant.ts\\nfunction invariant3(value, message) {\\n  if (value === false || value === null || typeof value === \\\"undefined\\\") {\\n    console.error(\\n      \\\"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\\\"\\n    );\\n    throw new Error(message);\\n  }\\n}\\n\\n// lib/server-runtime/routes.ts\\nfunction groupRoutesByParentId2(manifest) {\\n  let routes = {};\\n  Object.values(manifest).forEach((route) => {\\n    if (route) {\\n      let parentId = route.parentId || \\\"\\\";\\n      if (!routes[parentId]) {\\n        routes[parentId] = [];\\n      }\\n      routes[parentId].push(route);\\n    }\\n  });\\n  return routes;\\n}\\nfunction createRoutes(manifest, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId2(manifest)) {\\n  return (routesByParentId[parentId] || []).map((route) => ({\\n    ...route,\\n    children: createRoutes(manifest, route.id, routesByParentId)\\n  }));\\n}\\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \\\"\\\", routesByParentId = groupRoutesByParentId2(manifest)) {\\n  return (routesByParentId[parentId] || []).map((route) => {\\n    let commonRoute = {\\n      // Always include root due to default boundaries\\n      hasErrorBoundary: route.id === \\\"root\\\" || route.module.ErrorBoundary != null,\\n      id: route.id,\\n      path: route.path,\\n      // Need to use RR's version in the param typed here to permit the optional\\n      // context even though we know it'll always be provided in remix\\n      loader: route.module.loader ? async (args) => {\\n        if (args.request.headers.has(\\\"X-React-Router-Prerender-Data\\\")) {\\n          const preRenderedData = args.request.headers.get(\\n            \\\"X-React-Router-Prerender-Data\\\"\\n          );\\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\\n          invariant3(encoded, \\\"Missing prerendered data for route\\\");\\n          let uint8array = new TextEncoder().encode(encoded);\\n          let stream = new ReadableStream({\\n            start(controller) {\\n              controller.enqueue(uint8array);\\n              controller.close();\\n            }\\n          });\\n          let decoded = await decodeViaTurboStream(stream, global);\\n          let data2 = decoded.value;\\n          invariant3(\\n            data2 && route.id in data2,\\n            \\\"Unable to decode prerendered data\\\"\\n          );\\n          let result = data2[route.id];\\n          invariant3(\\\"data\\\" in result, \\\"Unable to process prerendered data\\\");\\n          return result.data;\\n        }\\n        let val = await callRouteHandler(route.module.loader, args);\\n        return val;\\n      } : void 0,\\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\\n      handle: route.module.handle\\n    };\\n    return route.index ? {\\n      index: true,\\n      ...commonRoute\\n    } : {\\n      caseSensitive: route.caseSensitive,\\n      children: createStaticHandlerDataRoutes(\\n        manifest,\\n        future,\\n        route.id,\\n        routesByParentId\\n      ),\\n      ...commonRoute\\n    };\\n  });\\n}\\n\\n// lib/server-runtime/markup.ts\\nvar ESCAPE_LOOKUP3 = {\\n  \\\"&\\\": \\\"\\\\\\\\u0026\\\",\\n  \\\">\\\": \\\"\\\\\\\\u003e\\\",\\n  \\\"<\\\": \\\"\\\\\\\\u003c\\\",\\n  \\\"\\\\u2028\\\": \\\"\\\\\\\\u2028\\\",\\n  \\\"\\\\u2029\\\": \\\"\\\\\\\\u2029\\\"\\n};\\nvar ESCAPE_REGEX3 = /[&><\\\\u2028\\\\u2029]/g;\\nfunction escapeHtml2(html) {\\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\\n}\\n\\n// lib/server-runtime/serverHandoff.ts\\nfunction createServerHandoffString(serverHandoff) {\\n  return escapeHtml2(JSON.stringify(serverHandoff));\\n}\\n\\n// lib/server-runtime/dev.ts\\nvar globalDevServerHooksKey = \\\"__reactRouterDevServerHooks\\\";\\nfunction setDevServerHooks(devServerHooks) {\\n  globalThis[globalDevServerHooksKey] = devServerHooks;\\n}\\nfunction getDevServerHooks() {\\n  return globalThis[globalDevServerHooksKey];\\n}\\n\\n// lib/server-runtime/single-fetch.ts\\nimport { encode } from \\\"turbo-stream\\\";\\n\\n// lib/server-runtime/headers.ts\\nimport { splitCookiesString } from \\\"set-cookie-parser\\\";\\nfunction getDocumentHeaders(build, context) {\\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\\n  let errorHeaders;\\n  if (boundaryIdx >= 0) {\\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\\n    context.matches.slice(boundaryIdx).some((match) => {\\n      let id = match.route.id;\\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\\n        errorHeaders = actionHeaders[id];\\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\\n        errorHeaders = loaderHeaders[id];\\n      }\\n      return errorHeaders != null;\\n    });\\n  }\\n  return matches.reduce((parentHeaders, match, idx) => {\\n    let { id } = match.route;\\n    let route = build.routes[id];\\n    invariant3(route, `Route with id \\\"${id}\\\" not found in build`);\\n    let routeModule = route.module;\\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\\n    let actionHeaders = context.actionHeaders[id] || new Headers();\\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\\n    if (routeModule.headers == null) {\\n      let headers2 = new Headers(parentHeaders);\\n      if (includeErrorCookies) {\\n        prependCookies(errorHeaders, headers2);\\n      }\\n      prependCookies(actionHeaders, headers2);\\n      prependCookies(loaderHeaders, headers2);\\n      return headers2;\\n    }\\n    let headers = new Headers(\\n      routeModule.headers ? typeof routeModule.headers === \\\"function\\\" ? routeModule.headers({\\n        loaderHeaders,\\n        parentHeaders,\\n        actionHeaders,\\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\\n      }) : routeModule.headers : void 0\\n    );\\n    if (includeErrorCookies) {\\n      prependCookies(errorHeaders, headers);\\n    }\\n    prependCookies(actionHeaders, headers);\\n    prependCookies(loaderHeaders, headers);\\n    prependCookies(parentHeaders, headers);\\n    return headers;\\n  }, new Headers());\\n}\\nfunction prependCookies(parentHeaders, childHeaders) {\\n  let parentSetCookieString = parentHeaders.get(\\\"Set-Cookie\\\");\\n  if (parentSetCookieString) {\\n    let cookies = splitCookiesString(parentSetCookieString);\\n    cookies.forEach((cookie) => {\\n      childHeaders.append(\\\"Set-Cookie\\\", cookie);\\n    });\\n  }\\n}\\n\\n// lib/server-runtime/single-fetch.ts\\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\\nfunction getSingleFetchDataStrategy2({\\n  isActionDataRequest,\\n  loadRouteIds\\n} = {}) {\\n  return async ({ request, matches }) => {\\n    if (isActionDataRequest && request.method === \\\"GET\\\") {\\n      return {};\\n    }\\n    let matchesToLoad = loadRouteIds ? matches.filter((m) => loadRouteIds.includes(m.route.id)) : matches;\\n    let results = await Promise.all(\\n      matchesToLoad.map((match) => match.resolve())\\n    );\\n    return results.reduce(\\n      (acc, result, i) => Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\\n      {}\\n    );\\n  };\\n}\\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\\n  try {\\n    let handlerRequest = new Request(handlerUrl, {\\n      method: request.method,\\n      body: request.body,\\n      headers: request.headers,\\n      signal: request.signal,\\n      ...request.body ? { duplex: \\\"half\\\" } : void 0\\n    });\\n    let result = await staticHandler.query(handlerRequest, {\\n      requestContext: loadContext,\\n      skipLoaderErrorBubbling: true,\\n      dataStrategy: getSingleFetchDataStrategy2({\\n        isActionDataRequest: true\\n      })\\n    });\\n    if (isResponse(result)) {\\n      return {\\n        result: getSingleFetchRedirect(\\n          result.status,\\n          result.headers,\\n          build.basename\\n        ),\\n        headers: result.headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    let context = result;\\n    let headers = getDocumentHeaders(build, context);\\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\\\"Location\\\")) {\\n      return {\\n        result: getSingleFetchRedirect(\\n          context.statusCode,\\n          headers,\\n          build.basename\\n        ),\\n        headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    if (context.errors) {\\n      Object.values(context.errors).forEach((err) => {\\n        if (!isRouteErrorResponse(err) || err.error) {\\n          handleError(err);\\n        }\\n      });\\n      context.errors = sanitizeErrors(context.errors, serverMode);\\n    }\\n    let singleFetchResult;\\n    if (context.errors) {\\n      singleFetchResult = { error: Object.values(context.errors)[0] };\\n    } else {\\n      singleFetchResult = { data: Object.values(context.actionData || {})[0] };\\n    }\\n    return {\\n      result: singleFetchResult,\\n      headers,\\n      status: context.statusCode\\n    };\\n  } catch (error) {\\n    handleError(error);\\n    return {\\n      result: { error },\\n      headers: new Headers(),\\n      status: 500\\n    };\\n  }\\n}\\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\\n  try {\\n    let handlerRequest = new Request(handlerUrl, {\\n      headers: request.headers,\\n      signal: request.signal\\n    });\\n    let loadRouteIds = new URL(request.url).searchParams.get(\\\"_routes\\\")?.split(\\\",\\\") || void 0;\\n    let result = await staticHandler.query(handlerRequest, {\\n      requestContext: loadContext,\\n      skipLoaderErrorBubbling: true,\\n      dataStrategy: getSingleFetchDataStrategy2({\\n        loadRouteIds\\n      })\\n    });\\n    if (isResponse(result)) {\\n      return {\\n        result: {\\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\\n            result.status,\\n            result.headers,\\n            build.basename\\n          )\\n        },\\n        headers: result.headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    let context = result;\\n    let headers = getDocumentHeaders(build, context);\\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\\\"Location\\\")) {\\n      return {\\n        result: {\\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\\n            context.statusCode,\\n            headers,\\n            build.basename\\n          )\\n        },\\n        headers,\\n        status: SINGLE_FETCH_REDIRECT_STATUS\\n      };\\n    }\\n    if (context.errors) {\\n      Object.values(context.errors).forEach((err) => {\\n        if (!isRouteErrorResponse(err) || err.error) {\\n          handleError(err);\\n        }\\n      });\\n      context.errors = sanitizeErrors(context.errors, serverMode);\\n    }\\n    let results = {};\\n    let loadedMatches = loadRouteIds ? context.matches.filter(\\n      (m) => m.route.loader && loadRouteIds.includes(m.route.id)\\n    ) : context.matches;\\n    loadedMatches.forEach((m) => {\\n      let { id } = m.route;\\n      if (context.errors && context.errors.hasOwnProperty(id)) {\\n        results[id] = { error: context.errors[id] };\\n      } else if (context.loaderData.hasOwnProperty(id)) {\\n        results[id] = { data: context.loaderData[id] };\\n      }\\n    });\\n    return {\\n      result: results,\\n      headers,\\n      status: context.statusCode\\n    };\\n  } catch (error) {\\n    handleError(error);\\n    return {\\n      result: { root: { error } },\\n      headers: new Headers(),\\n      status: 500\\n    };\\n  }\\n}\\nfunction getSingleFetchRedirect(status, headers, basename) {\\n  let redirect2 = headers.get(\\\"Location\\\");\\n  if (basename) {\\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\\n  }\\n  return {\\n    redirect: redirect2,\\n    status,\\n    revalidate: (\\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\\n      // detail of ?_data requests as our way to tell the front end to revalidate when\\n      // we didn't have a response body to include that information in.\\n      // With single fetch, we tell the front end via this revalidate boolean field.\\n      // However, we're respecting it for now because it may be something folks have\\n      // used in their own responses\\n      // TODO(v3): Consider removing or making this official public API\\n      headers.has(\\\"X-Remix-Revalidate\\\") || headers.has(\\\"Set-Cookie\\\")\\n    ),\\n    reload: headers.has(\\\"X-Remix-Reload-Document\\\"),\\n    replace: headers.has(\\\"X-Remix-Replace\\\")\\n  };\\n}\\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\\n  let controller = new AbortController();\\n  let timeoutId = setTimeout(\\n    () => controller.abort(new Error(\\\"Server Timeout\\\")),\\n    typeof streamTimeout === \\\"number\\\" ? streamTimeout : 4950\\n  );\\n  requestSignal.addEventListener(\\\"abort\\\", () => clearTimeout(timeoutId));\\n  return encode(data2, {\\n    signal: controller.signal,\\n    plugins: [\\n      (value) => {\\n        if (value instanceof Error) {\\n          let { name, message, stack } = serverMode === \\\"production\\\" /* Production */ ? sanitizeError(value, serverMode) : value;\\n          return [\\\"SanitizedError\\\", name, message, stack];\\n        }\\n        if (value instanceof ErrorResponseImpl) {\\n          let { data: data3, status, statusText } = value;\\n          return [\\\"ErrorResponse\\\", data3, status, statusText];\\n        }\\n        if (value && typeof value === \\\"object\\\" && SingleFetchRedirectSymbol in value) {\\n          return [\\\"SingleFetchRedirect\\\", value[SingleFetchRedirectSymbol]];\\n        }\\n      }\\n    ],\\n    postPlugins: [\\n      (value) => {\\n        if (!value) return;\\n        if (typeof value !== \\\"object\\\") return;\\n        return [\\n          \\\"SingleFetchClassInstance\\\",\\n          Object.fromEntries(Object.entries(value))\\n        ];\\n      },\\n      () => [\\\"SingleFetchFallback\\\"]\\n    ]\\n  });\\n}\\n\\n// lib/server-runtime/server.ts\\nfunction derive(build, mode) {\\n  let routes = createRoutes(build.routes);\\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\\n  let serverMode = isServerMode(mode) ? mode : \\\"production\\\" /* Production */;\\n  let staticHandler = createStaticHandler(dataRoutes, {\\n    basename: build.basename\\n  });\\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\\n    if (serverMode !== \\\"test\\\" /* Test */ && !request.signal.aborted) {\\n      console.error(\\n        // @ts-expect-error This is \\\"private\\\" from users but intended for internal use\\n        isRouteErrorResponse(error) && error.error ? error.error : error\\n      );\\n    }\\n  });\\n  return {\\n    routes,\\n    dataRoutes,\\n    serverMode,\\n    staticHandler,\\n    errorHandler\\n  };\\n}\\nvar createRequestHandler = (build, mode) => {\\n  let _build;\\n  let routes;\\n  let serverMode;\\n  let staticHandler;\\n  let errorHandler;\\n  return async function requestHandler(request, loadContext = {}) {\\n    _build = typeof build === \\\"function\\\" ? await build() : build;\\n    if (typeof build === \\\"function\\\") {\\n      let derived = derive(_build, mode);\\n      routes = derived.routes;\\n      serverMode = derived.serverMode;\\n      staticHandler = derived.staticHandler;\\n      errorHandler = derived.errorHandler;\\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\\n      let derived = derive(_build, mode);\\n      routes = derived.routes;\\n      serverMode = derived.serverMode;\\n      staticHandler = derived.staticHandler;\\n      errorHandler = derived.errorHandler;\\n    }\\n    let url = new URL(request.url);\\n    let params = {};\\n    let handleError = (error) => {\\n      if (mode === \\\"development\\\" /* Development */) {\\n        getDevServerHooks()?.processRequestError?.(error);\\n      }\\n      errorHandler(error, {\\n        context: loadContext,\\n        params,\\n        request\\n      });\\n    };\\n    let manifestUrl = `${_build.basename ?? \\\"/\\\"}/__manifest`.replace(\\n      /\\\\/+/g,\\n      \\\"/\\\"\\n    );\\n    if (url.pathname === manifestUrl) {\\n      try {\\n        let res = await handleManifestRequest(_build, routes, url);\\n        return res;\\n      } catch (e) {\\n        handleError(e);\\n        return new Response(\\\"Unknown Server Error\\\", { status: 500 });\\n      }\\n    }\\n    let matches = matchServerRoutes(routes, url.pathname, _build.basename);\\n    if (matches && matches.length > 0) {\\n      Object.assign(params, matches[0].params);\\n    }\\n    let response;\\n    if (url.pathname.endsWith(\\\".data\\\")) {\\n      let handlerUrl = new URL(request.url);\\n      handlerUrl.pathname = handlerUrl.pathname.replace(/\\\\.data$/, \\\"\\\").replace(/^\\\\/_root$/, \\\"/\\\");\\n      let singleFetchMatches = matchServerRoutes(\\n        routes,\\n        handlerUrl.pathname,\\n        _build.basename\\n      );\\n      response = await handleSingleFetchRequest(\\n        serverMode,\\n        _build,\\n        staticHandler,\\n        request,\\n        handlerUrl,\\n        loadContext,\\n        handleError\\n      );\\n      if (_build.entry.module.handleDataRequest) {\\n        response = await _build.entry.module.handleDataRequest(response, {\\n          context: loadContext,\\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\\n          request\\n        });\\n        if (isRedirectResponse(response)) {\\n          let result = getSingleFetchRedirect(\\n            response.status,\\n            response.headers,\\n            _build.basename\\n          );\\n          if (request.method === \\\"GET\\\") {\\n            result = {\\n              [SingleFetchRedirectSymbol]: result\\n            };\\n          }\\n          let headers = new Headers(response.headers);\\n          headers.set(\\\"Content-Type\\\", \\\"text/x-script\\\");\\n          return new Response(\\n            encodeViaTurboStream(\\n              result,\\n              request.signal,\\n              _build.entry.module.streamTimeout,\\n              serverMode\\n            ),\\n            {\\n              status: SINGLE_FETCH_REDIRECT_STATUS,\\n              headers\\n            }\\n          );\\n        }\\n      }\\n    } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\\n      response = await handleResourceRequest(\\n        serverMode,\\n        staticHandler,\\n        matches.slice(-1)[0].route.id,\\n        request,\\n        loadContext,\\n        handleError\\n      );\\n    } else {\\n      let criticalCss = mode === \\\"development\\\" /* Development */ ? await getDevServerHooks()?.getCriticalCss?.(_build, url.pathname) : void 0;\\n      response = await handleDocumentRequest(\\n        serverMode,\\n        _build,\\n        staticHandler,\\n        request,\\n        loadContext,\\n        handleError,\\n        criticalCss\\n      );\\n    }\\n    if (request.method === \\\"HEAD\\\") {\\n      return new Response(null, {\\n        headers: response.headers,\\n        status: response.status,\\n        statusText: response.statusText\\n      });\\n    }\\n    return response;\\n  };\\n};\\nasync function handleManifestRequest(build, routes, url) {\\n  let patches = {};\\n  if (url.searchParams.has(\\\"p\\\")) {\\n    for (let path of url.searchParams.getAll(\\\"p\\\")) {\\n      let matches = matchServerRoutes(routes, path, build.basename);\\n      if (matches) {\\n        for (let match of matches) {\\n          let routeId = match.route.id;\\n          let route = build.assets.routes[routeId];\\n          if (route) {\\n            patches[routeId] = route;\\n          }\\n        }\\n      }\\n    }\\n    return Response.json(patches, {\\n      headers: {\\n        \\\"Cache-Control\\\": \\\"public, max-age=31536000, immutable\\\"\\n      }\\n    });\\n  }\\n  return new Response(\\\"Invalid Request\\\", { status: 400 });\\n}\\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\\n  let { result, headers, status } = request.method !== \\\"GET\\\" ? await singleFetchAction(\\n    build,\\n    serverMode,\\n    staticHandler,\\n    request,\\n    handlerUrl,\\n    loadContext,\\n    handleError\\n  ) : await singleFetchLoaders(\\n    build,\\n    serverMode,\\n    staticHandler,\\n    request,\\n    handlerUrl,\\n    loadContext,\\n    handleError\\n  );\\n  let resultHeaders = new Headers(headers);\\n  resultHeaders.set(\\\"X-Remix-Response\\\", \\\"yes\\\");\\n  if (status === 304) {\\n    return new Response(null, { status: 304, headers: resultHeaders });\\n  }\\n  resultHeaders.set(\\\"Content-Type\\\", \\\"text/x-script\\\");\\n  return new Response(\\n    encodeViaTurboStream(\\n      result,\\n      request.signal,\\n      build.entry.module.streamTimeout,\\n      serverMode\\n    ),\\n    {\\n      status: status || 200,\\n      headers: resultHeaders\\n    }\\n  );\\n}\\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\\n  let context;\\n  try {\\n    context = await staticHandler.query(request, {\\n      requestContext: loadContext\\n    });\\n  } catch (error) {\\n    handleError(error);\\n    return new Response(null, { status: 500 });\\n  }\\n  if (isResponse(context)) {\\n    return context;\\n  }\\n  let headers = getDocumentHeaders(build, context);\\n  if (context.statusCode === 304) {\\n    return new Response(null, { status: 304, headers });\\n  }\\n  if (context.errors) {\\n    Object.values(context.errors).forEach((err) => {\\n      if (!isRouteErrorResponse(err) || err.error) {\\n        handleError(err);\\n      }\\n    });\\n    context.errors = sanitizeErrors(context.errors, serverMode);\\n  }\\n  let state = {\\n    loaderData: context.loaderData,\\n    actionData: context.actionData,\\n    errors: serializeErrors2(context.errors, serverMode)\\n  };\\n  let entryContext = {\\n    manifest: build.assets,\\n    routeModules: createEntryRouteModules(build.routes),\\n    staticHandlerContext: context,\\n    criticalCss,\\n    serverHandoffString: createServerHandoffString({\\n      basename: build.basename,\\n      criticalCss,\\n      future: build.future,\\n      isSpaMode: build.isSpaMode\\n    }),\\n    serverHandoffStream: encodeViaTurboStream(\\n      state,\\n      request.signal,\\n      build.entry.module.streamTimeout,\\n      serverMode\\n    ),\\n    renderMeta: {},\\n    future: build.future,\\n    isSpaMode: build.isSpaMode,\\n    serializeError: (err) => serializeError(err, serverMode)\\n  };\\n  let handleDocumentRequestFunction = build.entry.module.default;\\n  try {\\n    return await handleDocumentRequestFunction(\\n      request,\\n      context.statusCode,\\n      headers,\\n      entryContext,\\n      loadContext\\n    );\\n  } catch (error) {\\n    handleError(error);\\n    let errorForSecondRender = error;\\n    if (isResponse(error)) {\\n      try {\\n        let data2 = await unwrapResponse(error);\\n        errorForSecondRender = new ErrorResponseImpl(\\n          error.status,\\n          error.statusText,\\n          data2\\n        );\\n      } catch (e) {\\n      }\\n    }\\n    context = getStaticContextFromError(\\n      staticHandler.dataRoutes,\\n      context,\\n      errorForSecondRender\\n    );\\n    if (context.errors) {\\n      context.errors = sanitizeErrors(context.errors, serverMode);\\n    }\\n    let state2 = {\\n      loaderData: context.loaderData,\\n      actionData: context.actionData,\\n      errors: serializeErrors2(context.errors, serverMode)\\n    };\\n    entryContext = {\\n      ...entryContext,\\n      staticHandlerContext: context,\\n      serverHandoffString: createServerHandoffString({\\n        basename: build.basename,\\n        future: build.future,\\n        isSpaMode: build.isSpaMode\\n      }),\\n      serverHandoffStream: encodeViaTurboStream(\\n        state2,\\n        request.signal,\\n        build.entry.module.streamTimeout,\\n        serverMode\\n      ),\\n      renderMeta: {}\\n    };\\n    try {\\n      return await handleDocumentRequestFunction(\\n        request,\\n        context.statusCode,\\n        headers,\\n        entryContext,\\n        loadContext\\n      );\\n    } catch (error2) {\\n      handleError(error2);\\n      return returnLastResortErrorResponse(error2, serverMode);\\n    }\\n  }\\n}\\nasync function handleResourceRequest(serverMode, staticHandler, routeId, request, loadContext, handleError) {\\n  try {\\n    let response = await staticHandler.queryRoute(request, {\\n      routeId,\\n      requestContext: loadContext\\n    });\\n    invariant3(\\n      isResponse(response),\\n      \\\"Expected a Response to be returned from resource route handler\\\"\\n    );\\n    return response;\\n  } catch (error) {\\n    if (isResponse(error)) {\\n      error.headers.set(\\\"X-Remix-Catch\\\", \\\"yes\\\");\\n      return error;\\n    }\\n    if (isRouteErrorResponse(error)) {\\n      if (error) {\\n        handleError(error);\\n      }\\n      return errorResponseToJson(error, serverMode);\\n    }\\n    handleError(error);\\n    return returnLastResortErrorResponse(error, serverMode);\\n  }\\n}\\nfunction errorResponseToJson(errorResponse, serverMode) {\\n  return Response.json(\\n    serializeError(\\n      // @ts-expect-error This is \\\"private\\\" from users but intended for internal use\\n      errorResponse.error || new Error(\\\"Unexpected Server Error\\\"),\\n      serverMode\\n    ),\\n    {\\n      status: errorResponse.status,\\n      statusText: errorResponse.statusText,\\n      headers: {\\n        \\\"X-Remix-Error\\\": \\\"yes\\\"\\n      }\\n    }\\n  );\\n}\\nfunction returnLastResortErrorResponse(error, serverMode) {\\n  let message = \\\"Unexpected Server Error\\\";\\n  if (serverMode !== \\\"production\\\" /* Production */) {\\n    message += `\\n\\n${String(error)}`;\\n  }\\n  return new Response(message, {\\n    status: 500,\\n    headers: {\\n      \\\"Content-Type\\\": \\\"text/plain\\\"\\n    }\\n  });\\n}\\nfunction unwrapResponse(response) {\\n  let contentType = response.headers.get(\\\"Content-Type\\\");\\n  return contentType && /\\\\bapplication\\\\/json\\\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\\n}\\n\\n// lib/server-runtime/sessions.ts\\nfunction flash(name) {\\n  return `__flash_${name}__`;\\n}\\nvar createSession = (initialData = {}, id = \\\"\\\") => {\\n  let map = new Map(Object.entries(initialData));\\n  return {\\n    get id() {\\n      return id;\\n    },\\n    get data() {\\n      return Object.fromEntries(map);\\n    },\\n    has(name) {\\n      return map.has(name) || map.has(flash(name));\\n    },\\n    get(name) {\\n      if (map.has(name)) return map.get(name);\\n      let flashName = flash(name);\\n      if (map.has(flashName)) {\\n        let value = map.get(flashName);\\n        map.delete(flashName);\\n        return value;\\n      }\\n      return void 0;\\n    },\\n    set(name, value) {\\n      map.set(name, value);\\n    },\\n    flash(name, value) {\\n      map.set(flash(name), value);\\n    },\\n    unset(name) {\\n      map.delete(name);\\n    }\\n  };\\n};\\nvar isSession = (object) => {\\n  return object != null && typeof object.id === \\\"string\\\" && typeof object.data !== \\\"undefined\\\" && typeof object.has === \\\"function\\\" && typeof object.get === \\\"function\\\" && typeof object.set === \\\"function\\\" && typeof object.flash === \\\"function\\\" && typeof object.unset === \\\"function\\\";\\n};\\nfunction createSessionStorage({\\n  cookie: cookieArg,\\n  createData,\\n  readData,\\n  updateData,\\n  deleteData\\n}) {\\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \\\"__session\\\", cookieArg);\\n  warnOnceAboutSigningSessionCookie(cookie);\\n  return {\\n    async getSession(cookieHeader, options) {\\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\\n      let data2 = id && await readData(id);\\n      return createSession(data2 || {}, id || \\\"\\\");\\n    },\\n    async commitSession(session, options) {\\n      let { id, data: data2 } = session;\\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\\n      if (id) {\\n        await updateData(id, data2, expires);\\n      } else {\\n        id = await createData(data2, expires);\\n      }\\n      return cookie.serialize(id, options);\\n    },\\n    async destroySession(session, options) {\\n      await deleteData(session.id);\\n      return cookie.serialize(\\\"\\\", {\\n        ...options,\\n        maxAge: void 0,\\n        expires: /* @__PURE__ */ new Date(0)\\n      });\\n    }\\n  };\\n}\\nfunction warnOnceAboutSigningSessionCookie(cookie) {\\n  warnOnce(\\n    cookie.isSigned,\\n    `The \\\"${cookie.name}\\\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`\\n  );\\n}\\n\\n// lib/server-runtime/sessions/cookieStorage.ts\\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \\\"__session\\\", cookieArg);\\n  warnOnceAboutSigningSessionCookie(cookie);\\n  return {\\n    async getSession(cookieHeader, options) {\\n      return createSession(\\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\\n      );\\n    },\\n    async commitSession(session, options) {\\n      let serializedCookie = await cookie.serialize(session.data, options);\\n      if (serializedCookie.length > 4096) {\\n        throw new Error(\\n          \\\"Cookie length will exceed browser maximum. Length: \\\" + serializedCookie.length\\n        );\\n      }\\n      return serializedCookie;\\n    },\\n    async destroySession(_session, options) {\\n      return cookie.serialize(\\\"\\\", {\\n        ...options,\\n        maxAge: void 0,\\n        expires: /* @__PURE__ */ new Date(0)\\n      });\\n    }\\n  };\\n}\\n\\n// lib/server-runtime/sessions/memoryStorage.ts\\nfunction createMemorySessionStorage({ cookie } = {}) {\\n  let map = /* @__PURE__ */ new Map();\\n  return createSessionStorage({\\n    cookie,\\n    async createData(data2, expires) {\\n      let id = Math.random().toString(36).substring(2, 10);\\n      map.set(id, { data: data2, expires });\\n      return id;\\n    },\\n    async readData(id) {\\n      if (map.has(id)) {\\n        let { data: data2, expires } = map.get(id);\\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\\n          return data2;\\n        }\\n        if (expires) map.delete(id);\\n      }\\n      return null;\\n    },\\n    async updateData(id, data2, expires) {\\n      map.set(id, { data: data2, expires });\\n    },\\n    async deleteData(id) {\\n      map.delete(id);\\n    }\\n  });\\n}\\n\\n// lib/dom/ssr/errors.ts\\nfunction deserializeErrors2(errors) {\\n  if (!errors) return null;\\n  let entries = Object.entries(errors);\\n  let serialized = {};\\n  for (let [key, val] of entries) {\\n    if (val && val.__type === \\\"RouteErrorResponse\\\") {\\n      serialized[key] = new ErrorResponseImpl(\\n        val.status,\\n        val.statusText,\\n        val.data,\\n        val.internal === true\\n      );\\n    } else if (val && val.__type === \\\"Error\\\") {\\n      if (val.__subType) {\\n        let ErrorConstructor = window[val.__subType];\\n        if (typeof ErrorConstructor === \\\"function\\\") {\\n          try {\\n            let error = new ErrorConstructor(val.message);\\n            error.stack = val.stack;\\n            serialized[key] = error;\\n          } catch (e) {\\n          }\\n        }\\n      }\\n      if (serialized[key] == null) {\\n        let error = new Error(val.message);\\n        error.stack = val.stack;\\n        serialized[key] = error;\\n      }\\n    } else {\\n      serialized[key] = val;\\n    }\\n  }\\n  return serialized;\\n}\\n\\nexport {\\n  Action,\\n  createBrowserHistory,\\n  invariant,\\n  createPath,\\n  parsePath,\\n  matchRoutes,\\n  generatePath,\\n  matchPath,\\n  resolvePath,\\n  data,\\n  redirect,\\n  redirectDocument,\\n  replace,\\n  ErrorResponseImpl,\\n  isRouteErrorResponse,\\n  IDLE_NAVIGATION,\\n  IDLE_FETCHER,\\n  IDLE_BLOCKER,\\n  createRouter,\\n  DataRouterContext,\\n  DataRouterStateContext,\\n  ViewTransitionContext,\\n  FetchersContext,\\n  NavigationContext,\\n  LocationContext,\\n  RouteContext,\\n  useHref,\\n  useInRouterContext,\\n  useLocation,\\n  useNavigationType,\\n  useMatch,\\n  useNavigate,\\n  useOutletContext,\\n  useOutlet,\\n  useParams,\\n  useResolvedPath,\\n  useRoutes,\\n  useNavigation,\\n  useRevalidator,\\n  useMatches,\\n  useLoaderData,\\n  useRouteLoaderData,\\n  useActionData,\\n  useRouteError,\\n  useAsyncValue,\\n  useAsyncError,\\n  useBlocker,\\n  mapRouteProperties,\\n  createMemoryRouter,\\n  RouterProvider,\\n  MemoryRouter,\\n  Navigate,\\n  Outlet,\\n  Route,\\n  Router,\\n  Routes,\\n  Await,\\n  createRoutesFromChildren,\\n  createRoutesFromElements,\\n  renderMatches,\\n  createSearchParams,\\n  SingleFetchRedirectSymbol,\\n  getSingleFetchDataStrategy,\\n  decodeViaTurboStream,\\n  RemixErrorBoundary,\\n  createClientRoutesWithHMRRevalidationOptOut,\\n  createClientRoutes,\\n  shouldHydrateRouteLoader,\\n  getPatchRoutesOnNavigationFunction,\\n  useFogOFWarDiscovery,\\n  FrameworkContext,\\n  Links,\\n  PrefetchPageLinks,\\n  Meta,\\n  Scripts,\\n  createBrowserRouter,\\n  createHashRouter,\\n  BrowserRouter,\\n  HashRouter,\\n  HistoryRouter,\\n  Link,\\n  NavLink,\\n  Form,\\n  ScrollRestoration,\\n  useLinkClickHandler,\\n  useSearchParams,\\n  useSubmit,\\n  useFormAction,\\n  useFetcher,\\n  useFetchers,\\n  useScrollRestoration,\\n  useBeforeUnload,\\n  usePrompt,\\n  useViewTransitionState,\\n  StaticRouter,\\n  StaticRouterProvider,\\n  createStaticHandler2 as createStaticHandler,\\n  createStaticRouter,\\n  ServerRouter,\\n  createRoutesStub,\\n  createCookie,\\n  isCookie,\\n  ServerMode,\\n  setDevServerHooks,\\n  createRequestHandler,\\n  createSession,\\n  isSession,\\n  createSessionStorage,\\n  createCookieSessionStorage,\\n  createMemorySessionStorage,\\n  deserializeErrors2 as deserializeErrors\\n};\\n\",\"/**\\n * @license\\n * Copyright 2017 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\\n */\\n\\nexport const CONSTANTS = {\\n  /**\\n   * @define {boolean} Whether this is the client Node.js SDK.\\n   */\\n  NODE_CLIENT: false,\\n  /**\\n   * @define {boolean} Whether this is the Admin Node.js SDK.\\n   */\\n  NODE_ADMIN: false,\\n\\n  /**\\n   * Firebase SDK Version\\n   */\\n  SDK_VERSION: '${JSCORE_VERSION}'\\n};\\n\",\"/**\\n * @license\\n * Copyright 2017 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nconst stringToByteArray = function (str: string): number[] {\\n  // TODO(user): Use native implementations if/when available\\n  const out: number[] = [];\\n  let p = 0;\\n  for (let i = 0; i < str.length; i++) {\\n    let c = str.charCodeAt(i);\\n    if (c < 128) {\\n      out[p++] = c;\\n    } else if (c < 2048) {\\n      out[p++] = (c >> 6) | 192;\\n      out[p++] = (c & 63) | 128;\\n    } else if (\\n      (c & 0xfc00) === 0xd800 &&\\n      i + 1 < str.length &&\\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\\n    ) {\\n      // Surrogate Pair\\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\\n      out[p++] = (c >> 18) | 240;\\n      out[p++] = ((c >> 12) & 63) | 128;\\n      out[p++] = ((c >> 6) & 63) | 128;\\n      out[p++] = (c & 63) | 128;\\n    } else {\\n      out[p++] = (c >> 12) | 224;\\n      out[p++] = ((c >> 6) & 63) | 128;\\n      out[p++] = (c & 63) | 128;\\n    }\\n  }\\n  return out;\\n};\\n\\n/**\\n * Turns an array of numbers into the string given by the concatenation of the\\n * characters to which the numbers correspond.\\n * @param bytes Array of numbers representing characters.\\n * @return Stringification of the array.\\n */\\nconst byteArrayToString = function (bytes: number[]): string {\\n  // TODO(user): Use native implementations if/when available\\n  const out: string[] = [];\\n  let pos = 0,\\n    c = 0;\\n  while (pos < bytes.length) {\\n    const c1 = bytes[pos++];\\n    if (c1 < 128) {\\n      out[c++] = String.fromCharCode(c1);\\n    } else if (c1 > 191 && c1 < 224) {\\n      const c2 = bytes[pos++];\\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\\n    } else if (c1 > 239 && c1 < 365) {\\n      // Surrogate Pair\\n      const c2 = bytes[pos++];\\n      const c3 = bytes[pos++];\\n      const c4 = bytes[pos++];\\n      const u =\\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\\n        0x10000;\\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\\n    } else {\\n      const c2 = bytes[pos++];\\n      const c3 = bytes[pos++];\\n      out[c++] = String.fromCharCode(\\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\\n      );\\n    }\\n  }\\n  return out.join('');\\n};\\n\\ninterface Base64 {\\n  byteToCharMap_: { [key: number]: string } | null;\\n  charToByteMap_: { [key: string]: number } | null;\\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\\n  charToByteMapWebSafe_: { [key: string]: number } | null;\\n  ENCODED_VALS_BASE: string;\\n  readonly ENCODED_VALS: string;\\n  readonly ENCODED_VALS_WEBSAFE: string;\\n  HAS_NATIVE_SUPPORT: boolean;\\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\\n  encodeString(input: string, webSafe?: boolean): string;\\n  decodeString(input: string, webSafe: boolean): string;\\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\\n  init_(): void;\\n}\\n\\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\\n// Static lookup maps, lazily populated by init_()\\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\\nexport const base64: Base64 = {\\n  /**\\n   * Maps bytes to characters.\\n   */\\n  byteToCharMap_: null,\\n\\n  /**\\n   * Maps characters to bytes.\\n   */\\n  charToByteMap_: null,\\n\\n  /**\\n   * Maps bytes to websafe characters.\\n   * @private\\n   */\\n  byteToCharMapWebSafe_: null,\\n\\n  /**\\n   * Maps websafe characters to bytes.\\n   * @private\\n   */\\n  charToByteMapWebSafe_: null,\\n\\n  /**\\n   * Our default alphabet, shared between\\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\\n   */\\n  ENCODED_VALS_BASE:\\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\\n\\n  /**\\n   * Our default alphabet. Value 64 (=) is special; it means \\\"nothing.\\\"\\n   */\\n  get ENCODED_VALS() {\\n    return this.ENCODED_VALS_BASE + '+/=';\\n  },\\n\\n  /**\\n   * Our websafe alphabet.\\n   */\\n  get ENCODED_VALS_WEBSAFE() {\\n    return this.ENCODED_VALS_BASE + '-_.';\\n  },\\n\\n  /**\\n   * Whether this browser supports the atob and btoa functions. This extension\\n   * started at Mozilla but is now implemented by many browsers. We use the\\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\\n   * but still allowing the standard per-browser compilations.\\n   *\\n   */\\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\\n\\n  /**\\n   * Base64-encode an array of bytes.\\n   *\\n   * @param input An array of bytes (numbers with\\n   *     value in [0, 255]) to encode.\\n   * @param webSafe Boolean indicating we should use the\\n   *     alternative alphabet.\\n   * @return The base64 encoded string.\\n   */\\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\\n    if (!Array.isArray(input)) {\\n      throw Error('encodeByteArray takes an array as a parameter');\\n    }\\n\\n    this.init_();\\n\\n    const byteToCharMap = webSafe\\n      ? this.byteToCharMapWebSafe_!\\n      : this.byteToCharMap_!;\\n\\n    const output = [];\\n\\n    for (let i = 0; i < input.length; i += 3) {\\n      const byte1 = input[i];\\n      const haveByte2 = i + 1 < input.length;\\n      const byte2 = haveByte2 ? input[i + 1] : 0;\\n      const haveByte3 = i + 2 < input.length;\\n      const byte3 = haveByte3 ? input[i + 2] : 0;\\n\\n      const outByte1 = byte1 >> 2;\\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\\n      let outByte4 = byte3 & 0x3f;\\n\\n      if (!haveByte3) {\\n        outByte4 = 64;\\n\\n        if (!haveByte2) {\\n          outByte3 = 64;\\n        }\\n      }\\n\\n      output.push(\\n        byteToCharMap[outByte1],\\n        byteToCharMap[outByte2],\\n        byteToCharMap[outByte3],\\n        byteToCharMap[outByte4]\\n      );\\n    }\\n\\n    return output.join('');\\n  },\\n\\n  /**\\n   * Base64-encode a string.\\n   *\\n   * @param input A string to encode.\\n   * @param webSafe If true, we should use the\\n   *     alternative alphabet.\\n   * @return The base64 encoded string.\\n   */\\n  encodeString(input: string, webSafe?: boolean): string {\\n    // Shortcut for Mozilla browsers that implement\\n    // a native base64 encoder in the form of \\\"btoa/atob\\\"\\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\\n      return btoa(input);\\n    }\\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\\n  },\\n\\n  /**\\n   * Base64-decode a string.\\n   *\\n   * @param input to decode.\\n   * @param webSafe True if we should use the\\n   *     alternative alphabet.\\n   * @return string representing the decoded value.\\n   */\\n  decodeString(input: string, webSafe: boolean): string {\\n    // Shortcut for Mozilla browsers that implement\\n    // a native base64 encoder in the form of \\\"btoa/atob\\\"\\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\\n      return atob(input);\\n    }\\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\\n  },\\n\\n  /**\\n   * Base64-decode a string.\\n   *\\n   * In base-64 decoding, groups of four characters are converted into three\\n   * bytes.  If the encoder did not apply padding, the input length may not\\n   * be a multiple of 4.\\n   *\\n   * In this case, the last group will have fewer than 4 characters, and\\n   * padding will be inferred.  If the group has one or two characters, it decodes\\n   * to one byte.  If the group has three characters, it decodes to two bytes.\\n   *\\n   * @param input Input to decode.\\n   * @param webSafe True if we should use the web-safe alphabet.\\n   * @return bytes representing the decoded value.\\n   */\\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\\n    this.init_();\\n\\n    const charToByteMap = webSafe\\n      ? this.charToByteMapWebSafe_!\\n      : this.charToByteMap_!;\\n\\n    const output: number[] = [];\\n\\n    for (let i = 0; i < input.length; ) {\\n      const byte1 = charToByteMap[input.charAt(i++)];\\n\\n      const haveByte2 = i < input.length;\\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\\n      ++i;\\n\\n      const haveByte3 = i < input.length;\\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\\n      ++i;\\n\\n      const haveByte4 = i < input.length;\\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\\n      ++i;\\n\\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\\n        throw new DecodeBase64StringError();\\n      }\\n\\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\\n      output.push(outByte1);\\n\\n      if (byte3 !== 64) {\\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\\n        output.push(outByte2);\\n\\n        if (byte4 !== 64) {\\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\\n          output.push(outByte3);\\n        }\\n      }\\n    }\\n\\n    return output;\\n  },\\n\\n  /**\\n   * Lazy static initialization function. Called before\\n   * accessing any of the static map variables.\\n   * @private\\n   */\\n  init_() {\\n    if (!this.byteToCharMap_) {\\n      this.byteToCharMap_ = {};\\n      this.charToByteMap_ = {};\\n      this.byteToCharMapWebSafe_ = {};\\n      this.charToByteMapWebSafe_ = {};\\n\\n      // We want quick mappings back and forth, so we precompute two maps.\\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\\n\\n        // Be forgiving when decoding and correctly decode both encodings.\\n        if (i >= this.ENCODED_VALS_BASE.length) {\\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\\n        }\\n      }\\n    }\\n  }\\n};\\n\\n/**\\n * An error encountered while decoding base64 string.\\n */\\nexport class DecodeBase64StringError extends Error {\\n  readonly name = 'DecodeBase64StringError';\\n}\\n\\n/**\\n * URL-safe base64 encoding\\n */\\nexport const base64Encode = function (str: string): string {\\n  const utf8Bytes = stringToByteArray(str);\\n  return base64.encodeByteArray(utf8Bytes, true);\\n};\\n\\n/**\\n * URL-safe base64 encoding (without \\\".\\\" padding in the end).\\n * e.g. Used in JSON Web Token (JWT) parts.\\n */\\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\\n  // Use base64url encoding and remove padding in the end (dot characters).\\n  return base64Encode(str).replace(/\\\\./g, '');\\n};\\n\\n/**\\n * URL-safe base64 decoding\\n *\\n * NOTE: DO NOT use the global atob() function - it does NOT support the\\n * base64Url variant encoding.\\n *\\n * @param str To be decoded\\n * @return Decoded result, if possible\\n */\\nexport const base64Decode = function (str: string): string | null {\\n  try {\\n    return base64.decodeString(str, true);\\n  } catch (e) {\\n    console.error('base64Decode failed: ', e);\\n  }\\n  return null;\\n};\\n\",\"/**\\n * @license\\n * Copyright 2022 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nimport { base64Decode } from './crypt';\\nimport { getGlobal } from './global';\\n\\n/**\\n * Keys for experimental properties on the `FirebaseDefaults` object.\\n * @public\\n */\\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\\n\\n/**\\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\\n * either as a property of globalThis, a shell environment variable, or a\\n * cookie.\\n *\\n * This object can be used to automatically configure and initialize\\n * a Firebase app as well as any emulators.\\n *\\n * @public\\n */\\nexport interface FirebaseDefaults {\\n  config?: Record<string, string>;\\n  emulatorHosts?: Record<string, string>;\\n  _authTokenSyncURL?: string;\\n  _authIdTokenMaxAge?: number;\\n  /**\\n   * Override Firebase's runtime environment detection and\\n   * force the SDK to act as if it were in the specified environment.\\n   */\\n  forceEnvironment?: 'browser' | 'node';\\n  [key: string]: unknown;\\n}\\n\\ndeclare global {\\n  // Need `var` for this to work.\\n  // eslint-disable-next-line no-var\\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\\n}\\n\\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\\n  getGlobal().__FIREBASE_DEFAULTS__;\\n\\n/**\\n * Attempt to read defaults from a JSON string provided to\\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\\n * The dots are in parens because certain compilers (Vite?) cannot\\n * handle seeing that variable in comments.\\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\\n */\\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\\n    return;\\n  }\\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\\n  if (defaultsJsonString) {\\n    return JSON.parse(defaultsJsonString);\\n  }\\n};\\n\\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\\n  if (typeof document === 'undefined') {\\n    return;\\n  }\\n  let match;\\n  try {\\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\\n  } catch (e) {\\n    // Some environments such as Angular Universal SSR have a\\n    // `document` object but error on accessing `document.cookie`.\\n    return;\\n  }\\n  const decoded = match && base64Decode(match[1]);\\n  return decoded && JSON.parse(decoded);\\n};\\n\\n/**\\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\\n * (1) if such an object exists as a property of `globalThis`\\n * (2) if such an object was provided on a shell environment variable\\n * (3) if such an object exists in a cookie\\n * @public\\n */\\nexport const getDefaults = (): FirebaseDefaults | undefined => {\\n  try {\\n    return (\\n      getDefaultsFromGlobal() ||\\n      getDefaultsFromEnvVariable() ||\\n      getDefaultsFromCookie()\\n    );\\n  } catch (e) {\\n    /**\\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\\n     * to any environment case we have not accounted for. Log to\\n     * info instead of swallowing so we can find these unknown cases\\n     * and add paths for them if needed.\\n     */\\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\\n    return;\\n  }\\n};\\n\\n/**\\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\\n * for the given product.\\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\\n * @public\\n */\\nexport const getDefaultEmulatorHost = (\\n  productName: string\\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\\n\\n/**\\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\\n * for the given product.\\n * @returns a pair of hostname and port like `[\\\"::1\\\", 4000]` if available\\n * @public\\n */\\nexport const getDefaultEmulatorHostnameAndPort = (\\n  productName: string\\n): [hostname: string, port: number] | undefined => {\\n  const host = getDefaultEmulatorHost(productName);\\n  if (!host) {\\n    return undefined;\\n  }\\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\\n  }\\n  // eslint-disable-next-line no-restricted-globals\\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\\n  if (host[0] === '[') {\\n    // Bracket-quoted `[ipv6addr]:port` => return \\\"ipv6addr\\\" (without brackets).\\n    return [host.substring(1, separatorIndex - 1), port];\\n  } else {\\n    return [host.substring(0, separatorIndex), port];\\n  }\\n};\\n\\n/**\\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\\n * @public\\n */\\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\\n  getDefaults()?.config;\\n\\n/**\\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\\n * prefixed by \\\"_\\\")\\n * @public\\n */\\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\\n  name: T\\n): FirebaseDefaults[`_${T}`] =>\\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\\n\",\"/**\\n * @license\\n * Copyright 2022 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * Polyfill for `globalThis` object.\\n * @returns the `globalThis` object for the given environment.\\n * @public\\n */\\nexport function getGlobal(): typeof globalThis {\\n  if (typeof self !== 'undefined') {\\n    return self;\\n  }\\n  if (typeof window !== 'undefined') {\\n    return window;\\n  }\\n  if (typeof global !== 'undefined') {\\n    return global;\\n  }\\n  throw new Error('Unable to locate global object.');\\n}\\n\",\"/**\\n * @license\\n * Copyright 2017 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nexport class Deferred<R> {\\n  promise: Promise<R>;\\n  reject: (value?: unknown) => void = () => {};\\n  resolve: (value?: unknown) => void = () => {};\\n  constructor() {\\n    this.promise = new Promise((resolve, reject) => {\\n      this.resolve = resolve as (value?: unknown) => void;\\n      this.reject = reject as (value?: unknown) => void;\\n    });\\n  }\\n\\n  /**\\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\\n   */\\n  wrapCallback(\\n    callback?: (error?: unknown, value?: unknown) => void\\n  ): (error: unknown, value?: unknown) => void {\\n    return (error, value?) => {\\n      if (error) {\\n        this.reject(error);\\n      } else {\\n        this.resolve(value);\\n      }\\n      if (typeof callback === 'function') {\\n        // Attaching noop handler just in case developer wasn't expecting\\n        // promises\\n        this.promise.catch(() => {});\\n\\n        // Some of our callbacks don't expect a value and our own tests\\n        // assert that the parameter length is 1\\n        if (callback.length === 1) {\\n          callback(error);\\n        } else {\\n          callback(error, value);\\n        }\\n      }\\n    };\\n  }\\n}\\n\",\"/**\\n * @license\\n * Copyright 2021 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *   http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nimport { base64urlEncodeWithoutPadding } from './crypt';\\n\\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\\n/* eslint-disable camelcase */\\n\\nexport type FirebaseSignInProvider =\\n  | 'custom'\\n  | 'email'\\n  | '${PASSWORD_11};\\r\\nimport { AuthProvider } from './components/auth/AuthContext';\\r\\nimport Login from './components/auth/Login';\\r\\nimport ProtectedRoute from './components/auth/ProtectedRoute';\\r\\nimport ResetPassword from './components/auth/ResetPassword';\\r\\nimport Signup from './components/auth/Signup';\\r\\nimport Dashboard from './components/Dashboard';\\r\\n\\r\\n// Create a custom theme\\r\\nconst theme = createTheme({\\r\\n  palette: {\\r\\n    primary: {\\r\\n      main: '#1976d2', // You can customize this color\\r\\n    },\\r\\n    secondary: {\\r\\n      main: '#dc004e', // You can customize this color\\r\\n    },\\r\\n  },\\r\\n});\\r\\n\\r\\nfunction App() {\\r\\n  return (\\r\\n    <ThemeProvider theme={theme}>\\r\\n      <Router>\\r\\n        <AuthProvider>\\r\\n          <Routes>\\r\\n            {/* Public routes */}\\r\\n            <Route path=\\\"/login\\\" element={<Login />} />\\r\\n            <Route path=\\\"/signup\\\" element={<Signup />} />\\r\\n            <Route path=\\\"/reset-password\\\" element={<ResetPassword />} />\\r\\n\\r\\n            {/* Protected routes */}\\r\\n            <Route\\r\\n              path=\\\"/\\\"\\r\\n              element={\\r\\n                <ProtectedRoute>\\r\\n                  <Dashboard />\\r\\n                </ProtectedRoute>\\r\\n              }\\r\\n            />\\r\\n            <Route\\r\\n              path=\\\"/dashboard\\\"\\r\\n              element={\\r\\n                <ProtectedRoute>\\r\\n                  <Dashboard />\\r\\n                </ProtectedRoute>\\r\\n              }\\r\\n            />\\r\\n          </Routes>\\r\\n        </AuthProvider>\\r\\n      </Router>\\r\\n    </ThemeProvider>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"import React from 'react';\\r\\nimport { createRoot } from 'react-dom/client';\\r\\nimport App from './App';\\r\\nimport './index.css';\\r\\n\\r\\nconst root = createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\"],\"names\":[\"reactIs\",\"require\",\"REACT_STATICS\",\"childContextTypes\",\"contextType\",\"contextTypes\",\"defaultProps\",\"displayName\",\"getDefaultProps\",\"getDerivedStateFromError\",\"getDerivedStateFromProps\",\"mixins\",\"propTypes\",\"type\",\"KNOWN_STATICS\",\"name\",\"length\",\"prototype\",\"caller\",\"callee\",\"arguments\",\"arity\",\"MEMO_STATICS\",\"compare\",\"TYPE_STATICS\",\"getStatics\",\"component\",\"isMemo\",\"ForwardRef\",\"render\",\"Memo\",\"defineProperty\",\"Object\",\"getOwnPropertyNames\",\"getOwnPropertySymbols\",\"getOwnPropertyDescriptor\",\"getPrototypeOf\",\"objectPrototype\",\"module\",\"exports\",\"hoistNonReactStatics\",\"targetComponent\",\"sourceComponent\",\"blacklist\",\"inheritedComponent\",\"keys\",\"concat\",\"targetStatics\",\"sourceStatics\",\"i\",\"key\",\"descriptor\",\"e\",\"Scheduler\",\"React\",\"ReactDOM\",\"formatProdErrorMessage\",\"code\",\"url\",\"encodeURIComponent\",\"isValidContainer\",\"node\",\"nodeType\",\"REACT_LEGACY_ELEMENT_TYPE\",\"Symbol\",\"for\",\"REACT_ELEMENT_TYPE\",\"REACT_PORTAL_TYPE\",\"REACT_FRAGMENT_TYPE\",\"REACT_STRICT_MODE_TYPE\",\"REACT_PROFILER_TYPE\",\"REACT_PROVIDER_TYPE\",\"REACT_CONSUMER_TYPE\",\"REACT_CONTEXT_TYPE\",\"REACT_FORWARD_REF_TYPE\",\"REACT_SUSPENSE_TYPE\",\"REACT_SUSPENSE_LIST_TYPE\",\"REACT_MEMO_TYPE\",\"REACT_LAZY_TYPE\",\"REACT_OFFSCREEN_TYPE\",\"REACT_MEMO_CACHE_SENTINEL\",\"MAYBE_ITERATOR_SYMBOL\",\"iterator\",\"getIteratorFn\",\"maybeIterable\",\"REACT_CLIENT_REFERENCE\",\"getComponentNameFromType\",\"$$typeof\",\"_context\",\"innerType\",\"_payload\",\"_init\",\"x\",\"prefix\",\"suffix\",\"ReactSharedInternals\",\"__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\",\"assign\",\"describeBuiltInComponentFrame\",\"Error\",\"match\",\"stack\",\"trim\",\"indexOf\",\"reentry\",\"describeNativeComponentFrame\",\"fn\",\"construct\",\"previousPrepareStackTrace\",\"prepareStackTrace\",\"RunInRootFrame\",\"DetermineComponentFrameRoot\",\"Fake\",\"set\",\"Reflect\",\"control\",\"call\",\"x$0\",\"x$1\",\"catch\",\"sample\",\"namePropDescriptor\",\"configurable\",\"value\",\"_RunInRootFrame$Deter\",\"sampleStack\",\"controlStack\",\"sampleLines\",\"split\",\"controlLines\",\"includes\",\"frame\",\"replace\",\"describeFiber\",\"fiber\",\"tag\",\"getStackByFiberInDevAndProd\",\"workInProgress\",\"info\",\"return\",\"message\",\"getNearestMountedFiber\",\"nearestMounted\",\"alternate\",\"flags\",\"getSuspenseInstanceFromFiber\",\"suspenseState\",\"memoizedState\",\"dehydrated\",\"assertIsMounted\",\"findCurrentHostFiberImpl\",\"child\",\"sibling\",\"isArrayImpl\",\"Array\",\"isArray\",\"ReactDOMSharedInternals\",\"__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\",\"sharedNotPendingObject\",\"pending\",\"data\",\"method\",\"action\",\"valueStack\",\"index\",\"createCursor\",\"defaultValue\",\"current\",\"pop\",\"cursor\",\"push\",\"contextStackCursor\",\"contextFiberStackCursor\",\"rootInstanceStackCursor\",\"hostTransitionProviderCursor\",\"pushHostContainer\",\"nextRootInstance\",\"documentElement\",\"namespaceURI\",\"getOwnHostContext\",\"parentNode\",\"tagName\",\"getChildHostContextProd\",\"popHostContainer\",\"pushHostContext\",\"context\",\"JSCompiler_inline_result\",\"popHostContext\",\"HostTransitionContext\",\"_currentValue\",\"hasOwnProperty\",\"scheduleCallback$3\",\"unstable_scheduleCallback\",\"cancelCallback$1\",\"unstable_cancelCallback\",\"shouldYield\",\"unstable_shouldYield\",\"requestPaint\",\"unstable_requestPaint\",\"now\",\"unstable_now\",\"getCurrentPriorityLevel\",\"unstable_getCurrentPriorityLevel\",\"ImmediatePriority\",\"unstable_ImmediatePriority\",\"UserBlockingPriority\",\"unstable_UserBlockingPriority\",\"NormalPriority$1\",\"unstable_NormalPriority\",\"LowPriority\",\"unstable_LowPriority\",\"IdlePriority\",\"unstable_IdlePriority\",\"log$1\",\"log\",\"unstable_setDisableYieldValue\",\"rendererID\",\"injectedHook\",\"setIsStrictModeForDevtools\",\"newIsStrictMode\",\"setStrictMode\",\"err\",\"clz32\",\"Math\",\"LN2\",\"nextTransitionLane\",\"nextRetryLane\",\"getHighestPriorityLanes\",\"lanes\",\"pendingSyncLanes\",\"getNextLanes\",\"root\",\"wipLanes\",\"pendingLanes\",\"nextLanes\",\"suspendedLanes\",\"pingedLanes\",\"warmLanes\",\"finishedLanes\",\"nonIdlePendingLanes\",\"checkIfRootIsPrerendering\",\"renderLanes\",\"computeExpirationTime\",\"lane\",\"currentTime\",\"claimNextTransitionLane\",\"claimNextRetryLane\",\"createLaneMap\",\"initial\",\"laneMap\",\"markRootUpdated$1\",\"updateLane\",\"markSpawnedDeferredLane\",\"spawnedLane\",\"entangledLanes\",\"spawnedLaneIndex\",\"entanglements\",\"markRootEntangled\",\"rootEntangledLanes\",\"index$8\",\"lanesToEventPriority\",\"resolveUpdatePriority\",\"updatePriority\",\"p\",\"window\",\"event\",\"getEventPriority\",\"randomKey\",\"random\",\"toString\",\"slice\",\"internalInstanceKey\",\"internalPropsKey\",\"internalContainerInstanceKey\",\"internalEventHandlersKey\",\"internalEventHandlerListenersKey\",\"internalEventHandlesSetKey\",\"internalRootNodeResourcesKey\",\"internalHoistableMarker\",\"detachDeletedInstance\",\"getClosestInstanceFromNode\",\"targetNode\",\"targetInst\",\"getParentSuspenseInstance\",\"getInstanceFromNode\",\"getNodeFromInstance\",\"inst\",\"stateNode\",\"getResourcesFromRoot\",\"resources\",\"hoistableStyles\",\"Map\",\"hoistableScripts\",\"markNodeAsHoistable\",\"allNativeEvents\",\"Set\",\"registrationNameDependencies\",\"registerTwoPhaseEvent\",\"registrationName\",\"dependencies\",\"registerDirectEvent\",\"add\",\"canUseDOM\",\"document\",\"createElement\",\"VALID_ATTRIBUTE_NAME_REGEX\",\"RegExp\",\"illegalAttributeNameCache\",\"validatedAttributeNameCache\",\"setValueForAttribute\",\"attributeName\",\"test\",\"removeAttribute\",\"prefix$10\",\"toLowerCase\",\"setAttribute\",\"setValueForKnownAttribute\",\"setValueForNamespacedAttribute\",\"namespace\",\"setAttributeNS\",\"getToStringValue\",\"isCheckable\",\"elem\",\"nodeName\",\"track\",\"_valueTracker\",\"valueField\",\"constructor\",\"currentValue\",\"get\",\"this\",\"enumerable\",\"getValue\",\"setValue\",\"stopTracking\",\"trackValueOnNode\",\"updateValueIfChanged\",\"tracker\",\"lastValue\",\"checked\",\"getActiveElement\",\"doc\",\"activeElement\",\"body\",\"escapeSelectorAttributeValueInsideDoubleQuotesRegex\",\"escapeSelectorAttributeValueInsideDoubleQuotes\",\"ch\",\"charCodeAt\",\"updateInput\",\"element\",\"lastDefaultValue\",\"defaultChecked\",\"setDefaultValue\",\"initInput\",\"isHydrating\",\"ownerDocument\",\"updateOptions\",\"multiple\",\"propValue\",\"setDefaultSelected\",\"options\",\"selected\",\"defaultSelected\",\"disabled\",\"updateTextarea\",\"initTextarea\",\"children\",\"textContent\",\"setTextContent\",\"text\",\"firstChild\",\"lastChild\",\"nodeValue\",\"unitlessNumbers\",\"setValueForStyle\",\"style\",\"styleName\",\"isCustomProperty\",\"setProperty\",\"cssFloat\",\"has\",\"setValueForStyles\",\"styles\",\"prevStyles\",\"styleName$16\",\"styleName$17\",\"isCustomElement\",\"aliases\",\"isJavaScriptProtocol\",\"sanitizeURL\",\"currentReplayingEvent\",\"getEventTarget\",\"nativeEvent\",\"target\",\"srcElement\",\"correspondingUseElement\",\"restoreTarget\",\"restoreQueue\",\"restoreStateOfTarget\",\"internalInstance\",\"props\",\"a\",\"querySelectorAll\",\"otherNode\",\"form\",\"otherProps\",\"isInsideEventHandler\",\"batchedUpdates$1\",\"b\",\"flushSyncWork$1\",\"getListener\",\"passiveBrowserEventsSupported\",\"addEventListener\",\"removeEventListener\",\"startText\",\"fallbackText\",\"getData\",\"start\",\"end\",\"startValue\",\"startLength\",\"endValue\",\"endLength\",\"minEnd\",\"getEventCharCode\",\"keyCode\",\"charCode\",\"functionThatReturnsTrue\",\"functionThatReturnsFalse\",\"createSyntheticEvent\",\"Interface\",\"SyntheticBaseEvent\",\"reactName\",\"reactEventType\",\"nativeEventTarget\",\"propName\",\"_reactName\",\"_targetInst\",\"currentTarget\",\"isDefaultPrevented\",\"defaultPrevented\",\"returnValue\",\"isPropagationStopped\",\"preventDefault\",\"stopPropagation\",\"cancelBubble\",\"persist\",\"isPersistent\",\"lastMovementX\",\"lastMovementY\",\"lastMouseEvent\",\"EventInterface\",\"eventPhase\",\"bubbles\",\"cancelable\",\"timeStamp\",\"Date\",\"isTrusted\",\"SyntheticEvent\",\"UIEventInterface\",\"view\",\"detail\",\"SyntheticUIEvent\",\"MouseEventInterface\",\"screenX\",\"screenY\",\"clientX\",\"clientY\",\"pageX\",\"pageY\",\"ctrlKey\",\"shiftKey\",\"altKey\",\"metaKey\",\"getModifierState\",\"getEventModifierState\",\"button\",\"buttons\",\"relatedTarget\",\"fromElement\",\"toElement\",\"movementX\",\"movementY\",\"SyntheticMouseEvent\",\"SyntheticDragEvent\",\"dataTransfer\",\"SyntheticFocusEvent\",\"SyntheticAnimationEvent\",\"animationName\",\"elapsedTime\",\"pseudoElement\",\"SyntheticClipboardEvent\",\"clipboardData\",\"SyntheticCompositionEvent\",\"normalizeKey\",\"Esc\",\"Spacebar\",\"Left\",\"Up\",\"Right\",\"Down\",\"Del\",\"Win\",\"Menu\",\"Apps\",\"Scroll\",\"MozPrintableKey\",\"translateToKey\",\"modifierKeyToProp\",\"Alt\",\"Control\",\"Meta\",\"Shift\",\"modifierStateGetter\",\"keyArg\",\"SyntheticKeyboardEvent\",\"String\",\"fromCharCode\",\"location\",\"repeat\",\"locale\",\"which\",\"SyntheticPointerEvent\",\"pointerId\",\"width\",\"height\",\"pressure\",\"tangentialPressure\",\"tiltX\",\"tiltY\",\"twist\",\"pointerType\",\"isPrimary\",\"SyntheticTouchEvent\",\"touches\",\"targetTouches\",\"changedTouches\",\"SyntheticTransitionEvent\",\"propertyName\",\"SyntheticWheelEvent\",\"deltaX\",\"wheelDeltaX\",\"deltaY\",\"wheelDeltaY\",\"wheelDelta\",\"deltaZ\",\"deltaMode\",\"SyntheticToggleEvent\",\"newState\",\"oldState\",\"END_KEYCODES\",\"canUseCompositionEvent\",\"documentMode\",\"canUseTextInputEvent\",\"useFallbackCompositionData\",\"SPACEBAR_CHAR\",\"hasSpaceKeypress\",\"isFallbackCompositionEnd\",\"domEventName\",\"getDataFromCustomEvent\",\"isComposing\",\"supportedInputTypes\",\"color\",\"date\",\"datetime\",\"email\",\"month\",\"number\",\"password\",\"range\",\"search\",\"tel\",\"time\",\"week\",\"isTextInputElement\",\"createAndAccumulateChangeEvent\",\"dispatchQueue\",\"accumulateTwoPhaseListeners\",\"listeners\",\"activeElement$1\",\"activeElementInst$1\",\"runEventInBatch\",\"processDispatchQueue\",\"getInstIfValueChanged\",\"getTargetInstForChangeEvent\",\"isInputEventSupported\",\"JSCompiler_inline_result$jscomp$283\",\"isSupported$jscomp$inline_418\",\"element$jscomp$inline_419\",\"oninput\",\"stopWatchingForValueChange\",\"detachEvent\",\"handlePropertyChange\",\"handleEventsForInputEventPolyfill\",\"attachEvent\",\"getTargetInstForInputEventPolyfill\",\"getTargetInstForClickEvent\",\"getTargetInstForInputOrChangeEvent\",\"objectIs\",\"is\",\"y\",\"shallowEqual\",\"objA\",\"objB\",\"keysA\",\"keysB\",\"currentKey\",\"getLeafNode\",\"getNodeForCharacterOffset\",\"offset\",\"nodeEnd\",\"nextSibling\",\"containsNode\",\"outerNode\",\"innerNode\",\"contains\",\"compareDocumentPosition\",\"getActiveElementDeep\",\"containerInfo\",\"defaultView\",\"HTMLIFrameElement\",\"contentWindow\",\"href\",\"hasSelectionCapabilities\",\"contentEditable\",\"restoreSelection\",\"priorSelectionInformation\",\"curFocusedElem\",\"focusedElem\",\"priorSelectionRange\",\"selectionRange\",\"selectionStart\",\"selectionEnd\",\"min\",\"getSelection\",\"extend\",\"endMarker\",\"rangeCount\",\"anchorNode\",\"anchorOffset\",\"focusNode\",\"focusOffset\",\"createRange\",\"setStart\",\"removeAllRanges\",\"addRange\",\"setEnd\",\"left\",\"scrollLeft\",\"top\",\"scrollTop\",\"focus\",\"skipSelectionChangeEvent\",\"activeElementInst\",\"lastSelection\",\"mouseDown\",\"constructSelectEvent\",\"makePrefixMap\",\"styleProp\",\"eventName\",\"prefixes\",\"vendorPrefixes\",\"animationend\",\"animationiteration\",\"animationstart\",\"transitionrun\",\"transitionstart\",\"transitioncancel\",\"transitionend\",\"prefixedEventNames\",\"getVendorPrefixedEventName\",\"prefixMap\",\"animation\",\"transition\",\"ANIMATION_END\",\"ANIMATION_ITERATION\",\"ANIMATION_START\",\"TRANSITION_RUN\",\"TRANSITION_START\",\"TRANSITION_CANCEL\",\"TRANSITION_END\",\"topLevelEventsToReactNames\",\"simpleEventPluginEvents\",\"registerSimpleEvent\",\"concurrentQueues\",\"concurrentQueuesIndex\",\"concurrentlyUpdatedLanes\",\"finishQueueingConcurrentUpdates\",\"endIndex\",\"queue\",\"update\",\"next\",\"markUpdateLaneFromFiberToRoot\",\"enqueueUpdate$1\",\"enqueueConcurrentHookUpdate\",\"getRootForUpdatedFiber\",\"enqueueConcurrentRenderForLane\",\"sourceFiber\",\"isHidden\",\"parent\",\"childLanes\",\"_visibility\",\"hiddenUpdates\",\"nestedUpdateCount\",\"rootWithNestedUpdates\",\"emptyContextObject\",\"CapturedStacks\",\"WeakMap\",\"createCapturedValueAtFiber\",\"source\",\"existing\",\"forkStack\",\"forkStackIndex\",\"treeForkProvider\",\"treeForkCount\",\"idStack\",\"idStackIndex\",\"treeContextProvider\",\"treeContextId\",\"treeContextOverflow\",\"pushTreeFork\",\"totalChildren\",\"pushTreeId\",\"baseIdWithLeadingBit\",\"baseLength\",\"numberOfOverflowBits\",\"pushMaterializedTreeId\",\"popTreeContext\",\"hydrationParentFiber\",\"nextHydratableInstance\",\"hydrationErrors\",\"rootOrSingletonContext\",\"HydrationMismatchException\",\"throwOnHydrationMismatch\",\"queueHydrationError\",\"prepareToHydrateHostInstance\",\"instance\",\"memoizedProps\",\"listenToNonDelegatedEvent\",\"mediaEventTypes\",\"suppressHydrationWarning\",\"checkForUnmatchedText\",\"popover\",\"onScroll\",\"onScrollEnd\",\"onClick\",\"onclick\",\"noop$1\",\"popToNextHostParent\",\"popHydrationState\",\"JSCompiler_temp\",\"shouldClear\",\"shouldSetTextContent\",\"getNextHydratable\",\"resetHydrationState\",\"error\",\"SuspenseException\",\"SuspenseyCommitException\",\"noopSuspenseyCommitThenable\",\"then\",\"isThenableResolved\",\"thenable\",\"status\",\"noop$3\",\"trackUsedThenable\",\"thenableState\",\"reason\",\"workInProgressRoot\",\"shellSuspendCounter\",\"fulfilledValue\",\"fulfilledThenable\",\"rejectedThenable\",\"suspendedThenable\",\"getSuspendedThenable\",\"thenableState$1\",\"thenableIndexCounter$1\",\"unwrapThenable\",\"coerceRef\",\"ref\",\"throwOnInvalidObjectType\",\"returnFiber\",\"newChild\",\"join\",\"resolveLazy\",\"lazyType\",\"init\",\"createChildReconciler\",\"shouldTrackSideEffects\",\"deleteChild\",\"childToDelete\",\"deletions\",\"deleteRemainingChildren\",\"currentFirstChild\",\"mapRemainingChildren\",\"existingChildren\",\"useFiber\",\"pendingProps\",\"createWorkInProgress\",\"placeChild\",\"newFiber\",\"lastPlacedIndex\",\"newIndex\",\"placeSingleChild\",\"updateTextNode\",\"createFiberFromText\",\"mode\",\"updateElement\",\"elementType\",\"updateFragment\",\"createFiberFromTypeAndProps\",\"updatePortal\",\"portal\",\"implementation\",\"createFiberFromPortal\",\"fragment\",\"createFiberFromFragment\",\"createChild\",\"readContextDuringReconciliation\",\"updateSlot\",\"oldFiber\",\"updateFromMap\",\"newIdx\",\"reconcileChildFibersImpl\",\"newChildren\",\"resultingFirstChild\",\"previousNewFiber\",\"nextOldFiber\",\"delete\",\"forEach\",\"reconcileChildrenArray\",\"step\",\"done\",\"reconcileChildrenIterator\",\"firstChildFiber\",\"createFiberImplClass\",\"reconcileChildFibers\",\"mountChildFibers\",\"currentTreeHiddenStackCursor\",\"prevEntangledRenderLanesCursor\",\"pushHiddenContext\",\"entangledRenderLanes\",\"baseLanes\",\"reuseHiddenContextOnStack\",\"popHiddenContext\",\"suspenseHandlerStackCursor\",\"shellBoundary\",\"pushPrimaryTreeSuspenseHandler\",\"handler\",\"suspenseStackCursor\",\"pushOffscreenSuspenseHandler\",\"reuseSuspenseHandlerOnStack\",\"popSuspenseHandler\",\"findFirstSuspended\",\"row\",\"state\",\"revealOrder\",\"AbortControllerLocal\",\"AbortController\",\"signal\",\"aborted\",\"listener\",\"abort\",\"scheduleCallback$2\",\"NormalPriority\",\"CacheContext\",\"Consumer\",\"Provider\",\"_currentValue2\",\"_threadCount\",\"createCache\",\"controller\",\"refCount\",\"releaseCache\",\"cache\",\"currentEntangledListeners\",\"currentEntangledPendingCount\",\"currentEntangledLane\",\"currentEntangledActionThenable\",\"pingEngtangledActionScope\",\"prevOnStartTransitionFinish\",\"S\",\"entangledListeners\",\"requestTransitionLane\",\"resolve\",\"entangleAsyncAction\",\"resumedCache\",\"peekCacheFromPool\",\"cacheResumedFromPreviousRender\",\"pooledCache\",\"pushTransition\",\"offscreenWorkInProgress\",\"prevCachePool\",\"pool\",\"getSuspendedCache\",\"cacheFromPool\",\"currentlyRenderingFiber$1\",\"currentHook\",\"workInProgressHook\",\"didScheduleRenderPhaseUpdate\",\"didScheduleRenderPhaseUpdateDuringThisPass\",\"shouldDoubleInvokeUserFnsInHooksDEV\",\"localIdCounter\",\"thenableIndexCounter\",\"globalClientIdCounter\",\"throwInvalidHookError\",\"areHookInputsEqual\",\"nextDeps\",\"prevDeps\",\"renderWithHooks\",\"Component\",\"secondArg\",\"nextRenderLanes\",\"updateQueue\",\"H\",\"HooksDispatcherOnMount\",\"HooksDispatcherOnUpdate\",\"renderWithHooksAgain\",\"finishRenderingHooks\",\"ContextOnlyDispatcher\",\"didRenderTooFewHooks\",\"didReceiveUpdate\",\"checkIfContextChanged\",\"numberOfReRenders\",\"lastEffect\",\"events\",\"stores\",\"memoCache\",\"HooksDispatcherOnRerender\",\"TransitionAwareHostComponent\",\"dispatcher\",\"maybeThenable\",\"useState\",\"useThenable\",\"checkDidRenderIdHook\",\"didRenderIdHook\",\"bailoutHooks\",\"resetHooksOnUnwind\",\"mountWorkInProgressHook\",\"hook\",\"baseState\",\"baseQueue\",\"updateWorkInProgressHook\",\"nextCurrentHook\",\"nextWorkInProgressHook\",\"use\",\"usable\",\"readContext\",\"useMemoCache\",\"size\",\"map\",\"array\",\"basicStateReducer\",\"updateReducer\",\"reducer\",\"updateReducerImpl\",\"lastRenderedReducer\",\"pendingQueue\",\"baseFirst\",\"newBaseQueueFirst\",\"newBaseQueueLast\",\"didReadFromEntangledAsyncAction$54\",\"workInProgressRootRenderLanes\",\"revertLane\",\"hasEagerState\",\"eagerState\",\"workInProgressRootSkippedLanes\",\"lastRenderedState\",\"dispatch\",\"rerenderReducer\",\"lastRenderPhaseUpdate\",\"updateSyncExternalStore\",\"subscribe\",\"getSnapshot\",\"getServerSnapshot\",\"isHydrating$jscomp$0\",\"snapshotChanged\",\"updateEffect\",\"subscribeToStore\",\"bind\",\"pushEffect\",\"updateStoreInstance\",\"destroy\",\"pushStoreConsistencyCheck\",\"renderedSnapshot\",\"nextSnapshot\",\"checkIfSnapshotChanged\",\"forceStoreRerender\",\"latestGetSnapshot\",\"nextValue\",\"scheduleUpdateOnFiber\",\"mountStateImpl\",\"initialState\",\"initialStateInitializer\",\"updateOptimisticImpl\",\"passthrough\",\"dispatchActionState\",\"actionQueue\",\"setPendingState\",\"setState\",\"payload\",\"isRenderPhaseUpdate\",\"actionNode\",\"isTransition\",\"T\",\"runActionStateAction\",\"prevState\",\"prevTransition\",\"currentTransition\",\"onStartTransitionFinish\",\"handleActionReturnValue\",\"onActionError\",\"error$60\",\"nextState\",\"onActionSuccess\",\"notifyActionListeners\",\"last\",\"actionStateReducer\",\"mountActionState\",\"initialStateProp\",\"ssrFormState\",\"formState\",\"JSCompiler_inline_result$jscomp$0\",\"inRootOrSingleton\",\"dispatchSetState\",\"dispatchOptimisticSetState\",\"updateActionState\",\"updateActionStateImpl\",\"stateHook\",\"currentStateHook\",\"actionQueueHook\",\"actionStateActionEffect\",\"rerenderActionState\",\"create\",\"deps\",\"updateRef\",\"mountEffectImpl\",\"fiberFlags\",\"hookFlags\",\"updateEffectImpl\",\"mountEffect\",\"updateInsertionEffect\",\"updateLayoutEffect\",\"imperativeHandleEffect\",\"refCleanup\",\"updateImperativeHandle\",\"mountDebugValue\",\"updateCallback\",\"callback\",\"updateMemo\",\"nextCreate\",\"mountDeferredValueImpl\",\"initialValue\",\"requestDeferredLane\",\"updateDeferredValueImpl\",\"prevValue\",\"startTransition\",\"pendingState\",\"finishedState\",\"previousPriority\",\"dispatchSetStateInternal\",\"result\",\"thenableWithOverride\",\"chainThenableValue\",\"requestUpdateLane\",\"noop$2\",\"startHostTransition\",\"formFiber\",\"formData\",\"ensureFormComponentIsStateful\",\"requestFormReset$1\",\"existingStateHook\",\"initialResetState\",\"useHostTransitionStatus\",\"updateId\",\"updateRefresh\",\"refreshCache\",\"provider\",\"root$63\",\"enqueueUpdate\",\"createUpdate\",\"entangleTransitions\",\"dispatchReducerAction\",\"enqueueRenderPhaseUpdate\",\"entangleTransitionUpdate\",\"currentState\",\"throwIfDuringRender\",\"queueLanes\",\"useCallback\",\"useContext\",\"useEffect\",\"useImperativeHandle\",\"useLayoutEffect\",\"useInsertionEffect\",\"useMemo\",\"useReducer\",\"useRef\",\"useDebugValue\",\"useDeferredValue\",\"useTransition\",\"useSyncExternalStore\",\"useId\",\"useCacheRefresh\",\"useFormState\",\"useActionState\",\"useOptimistic\",\"initialArg\",\"identifierPrefix\",\"booleanOrThenable\",\"applyDerivedStateFromProps\",\"ctor\",\"nextProps\",\"classComponentUpdater\",\"isMounted\",\"_reactInternals\",\"enqueueSetState\",\"enqueueReplaceState\",\"enqueueForceUpdate\",\"checkShouldComponentUpdate\",\"oldProps\",\"newProps\",\"nextContext\",\"shouldComponentUpdate\",\"isPureReactComponent\",\"callComponentWillReceiveProps\",\"componentWillReceiveProps\",\"UNSAFE_componentWillReceiveProps\",\"resolveClassComponentProps\",\"baseProps\",\"propName$67\",\"reportGlobalError\",\"reportError\",\"ErrorEvent\",\"dispatchEvent\",\"process\",\"emit\",\"console\",\"defaultOnUncaughtError\",\"defaultOnCaughtError\",\"defaultOnRecoverableError\",\"logUncaughtError\",\"errorInfo\",\"onUncaughtError\",\"componentStack\",\"e$68\",\"setTimeout\",\"logCaughtError\",\"boundary\",\"onCaughtError\",\"errorBoundary\",\"e$69\",\"createRootErrorUpdate\",\"createClassErrorUpdate\",\"initializeClassErrorUpdate\",\"componentDidCatch\",\"legacyErrorBoundariesThatAlreadyFailed\",\"SelectiveHydrationException\",\"reconcileChildren\",\"nextChildren\",\"updateForwardRef\",\"propsWithoutRef\",\"prepareToReadContext\",\"bailoutOnAlreadyFinishedWork\",\"updateMemoComponent\",\"shouldConstruct\",\"updateSimpleMemoComponent\",\"checkScheduledUpdateOrContext\",\"prevProps\",\"updateFunctionComponent\",\"updateOffscreenComponent\",\"nextIsDetached\",\"_pendingVisibility\",\"markRef\",\"deferHiddenOffscreenComponent\",\"cachePool\",\"nextBaseLanes\",\"propagateParentContextChanges\",\"replayFunctionComponent\",\"updateClassComponent\",\"updater\",\"refs\",\"initializeUpdateQueue\",\"getSnapshotBeforeUpdate\",\"UNSAFE_componentWillMount\",\"componentWillMount\",\"processUpdateQueue\",\"suspendIfUpdateReadFromEntangledAsyncAction\",\"componentDidMount\",\"unresolvedOldProps\",\"oldContext\",\"contextType$jscomp$0\",\"hasForceUpdate\",\"cloneUpdateQueue\",\"UNSAFE_componentWillUpdate\",\"componentWillUpdate\",\"componentDidUpdate\",\"mountHostRootWithoutHydrating\",\"SUSPENDED_MARKER\",\"treeContext\",\"retryLane\",\"mountSuspenseOffscreenState\",\"getRemainingWorkInPrimaryTree\",\"primaryTreeDidDefer\",\"workInProgressDeferredLane\",\"updateSuspenseComponent\",\"showFallback\",\"didSuspend\",\"JSCompiler_temp$jscomp$0\",\"nextInstance\",\"c\",\"id\",\"overflow\",\"fallback\",\"mountWorkInProgressOffscreenFiber\",\"mountSuspensePrimaryChildren\",\"retrySuspenseComponentWithoutHydrating\",\"dataset\",\"digest\",\"dgst\",\"renderDidSuspendDelayIfPossible\",\"retryDehydratedSuspenseBoundary\",\"_reactRetry\",\"subtreeFlags\",\"primaryChildren\",\"offscreenProps\",\"createFiberFromOffscreen\",\"scheduleSuspenseWorkOnFiber\",\"propagationRoot\",\"scheduleContextWorkOnParentPath\",\"initSuspenseListRenderState\",\"isBackwards\",\"tail\",\"lastContentRow\",\"tailMode\",\"renderState\",\"rendering\",\"renderingStartTime\",\"updateSuspenseListComponent\",\"beginWork\",\"pushProvider\",\"didSuspendBefore\",\"attemptEarlyBailoutIfNoScheduledUpdate\",\"lazyComponent\",\"propagateContextChanges\",\"isDehydrated\",\"getResource\",\"getOwnerDocumentFromRootContainer\",\"setInitialProperties\",\"resolveSingletonInstance\",\"anyProps\",\"hasAttribute\",\"getAttribute\",\"rel\",\"crossOrigin\",\"title\",\"src\",\"canHydrateInstance\",\"canHydrateTextInstance\",\"pooledCacheLanes\",\"valueCursor\",\"currentlyRenderingFiber\",\"lastContextDependency\",\"providerFiber\",\"popProvider\",\"contexts\",\"forcePropagateEntireTree\",\"list\",\"nextFiber\",\"firstContext\",\"dependency\",\"isInsidePropagationBailout\",\"currentParent\",\"currentDependencies\",\"memoizedValue\",\"readContextForConsumer\",\"consumer\",\"firstBaseUpdate\",\"lastBaseUpdate\",\"shared\",\"hiddenCallbacks\",\"callbacks\",\"executionContext\",\"enqueueCapturedUpdate\",\"capturedUpdate\",\"newFirst\",\"newLast\",\"clone\",\"didReadFromEntangledAsyncAction\",\"workInProgress$jscomp$0\",\"instance$jscomp$0\",\"lastPendingUpdate\",\"firstPendingUpdate\",\"isHiddenUpdate\",\"callCallback\",\"commitCallbacks\",\"commitHookEffectListMount\",\"finishedWork\",\"firstEffect\",\"captureCommitPhaseError\",\"commitHookEffectListUnmount\",\"nearestMountedAncestor$jscomp$0\",\"nearestMountedAncestor\",\"commitClassCallbacks\",\"safelyCallComponentWillUnmount\",\"componentWillUnmount\",\"safelyAttachRef\",\"instanceToUse\",\"safelyDetachRef\",\"error$112\",\"commitHostMount\",\"autoFocus\",\"srcSet\",\"srcset\",\"commitHostUpdate\",\"domElement\",\"lastProps\",\"propKey\",\"lastProp\",\"setProp\",\"propKey$203\",\"propKey$219\",\"propKey$224\",\"propKey$229\",\"setPropOnCustomElement\",\"propKey$234\",\"updateProperties\",\"isHostParent\",\"getHostSibling\",\"insertOrAppendPlacementNodeIntoContainer\",\"before\",\"insertBefore\",\"appendChild\",\"_reactRootContainer\",\"insertOrAppendPlacementNode\",\"offscreenSubtreeIsHidden\",\"offscreenSubtreeWasHidden\",\"needsFormReset\",\"PossiblyWeakSet\",\"WeakSet\",\"nextEffect\",\"shouldFireAfterActiveInstanceBlur\",\"commitLayoutEffectOnFiber\",\"finishedRoot\",\"recursivelyTraverseLayoutEffects\",\"__reactInternalSnapshotBeforeUpdate\",\"error$111\",\"commitSuspenseHydrationCallbacks\",\"prevOffscreenSubtreeIsHidden\",\"prevOffscreenSubtreeWasHidden\",\"recursivelyTraverseReappearLayoutEffects\",\"detachFiberAfterEffects\",\"hostParent\",\"hostParentIsContainer\",\"recursivelyTraverseDeletionEffects\",\"commitDeletionEffectsOnFiber\",\"deletedFiber\",\"onCommitFiberUnmount\",\"count\",\"removeChild\",\"prevHostParent\",\"prevHostParentIsContainer\",\"attributes\",\"removeAttributeNode\",\"prevHostParentIsContainer$119\",\"clearSuspenseBoundary\",\"retryIfBlockedOn\",\"attachSuspenseRetryListeners\",\"wakeables\",\"retryCache\",\"_retryCache\",\"getRetryCache\",\"wakeable\",\"retry\",\"resolveRetryWakeable\",\"recursivelyTraverseMutationEffects\",\"root$jscomp$0\",\"parentFiber\",\"commitMutationEffectsOnFiber\",\"currentHoistableRoot\",\"commitReconciliationEffects\",\"hoistableRoot\",\"currentResource\",\"getElementsByTagName\",\"head\",\"querySelector\",\"maybeNodes\",\"getHydratableHoistableCache\",\"splice\",\"content\",\"property\",\"httpEquiv\",\"charSet\",\"mountHoistable\",\"acquireResource\",\"nextNode\",\"tagCaches\",\"getHoistableRoot\",\"recursivelyResetForms\",\"globalMostRecentFallbackTime\",\"_current\",\"recursivelyTraverseDisappearLayoutEffects\",\"display\",\"retryQueue\",\"parent$jscomp$0\",\"parent$113\",\"parent$115\",\"reset\",\"finishedRoot$jscomp$0\",\"includeWorkInProgressEffects\",\"commitOffscreenPassiveMountEffects\",\"previousCache\",\"commitCachePassiveMountEffect\",\"recursivelyTraversePassiveMountEffects\",\"committedLanes\",\"committedTransitions\",\"commitPassiveMountOnFiber\",\"_finishedWork$memoize2\",\"onPostCommit\",\"passiveEffectDuration\",\"recursivelyTraverseAtomicPassiveEffects\",\"recursivelyTraverseReconnectPassiveEffects\",\"committedLanes$jscomp$0\",\"committedTransitions$jscomp$0\",\"suspenseyCommitFlag\",\"recursivelyAccumulateSuspenseyCommit\",\"accumulateSuspenseyCommitOnFiber\",\"resource\",\"suspendedState\",\"media\",\"matchMedia\",\"matches\",\"loading\",\"getStyleKey\",\"getStylesheetSelectorFromKey\",\"_p\",\"onUnsuspend\",\"stylesheetPropsFromRawProps\",\"preloadPropsMap\",\"adoptPreloadPropsForStylesheet\",\"linkInstance\",\"Promise\",\"reject\",\"onload\",\"onerror\",\"stylesheets\",\"preload\",\"suspendResource\",\"previousHoistableRoot\",\"detachAlternateSiblings\",\"previousFiber\",\"recursivelyTraversePassiveUnmountEffects\",\"commitPassiveUnmountEffectsInsideOfDeletedTree_begin\",\"commitPassiveUnmountOnFiber\",\"recursivelyTraverseDisconnectPassiveEffects\",\"deletedSubtreeRoot\",\"FiberNode\",\"isReactComponent\",\"resetWorkInProgress\",\"owner\",\"fiberTag\",\"hostContext\",\"itemProp\",\"precedence\",\"onLoad\",\"onError\",\"async\",\"isHostHoistableType\",\"elements\",\"primaryChildInstance\",\"_pendingMarkers\",\"_transitions\",\"detach\",\"attach\",\"pendingChildren\",\"markUpdate\",\"preloadResourceAndSuspendIfNeeded\",\"preloadResource\",\"scheduleRetryEffect\",\"workInProgressSuspendedRetryLanes\",\"cutOffTailIfNeeded\",\"hasRenderedATailFallback\",\"lastTailNode\",\"lastTailNode$131\",\"bubbleProperties\",\"completedWork\",\"didBailout\",\"newChildLanes\",\"child$132\",\"completeWork\",\"pendingContext\",\"queueRecoverableErrors\",\"createElementNS\",\"innerHTML\",\"createTextNode\",\"cache$144\",\"listenToAllSupportedEvents\",\"workInProgressRootExitStatus\",\"workInProgressRootRenderTargetTime\",\"unwindWork\",\"unwindInterruptedWork\",\"interruptedWork\",\"DefaultAsyncDispatcher\",\"getCacheForType\",\"resourceType\",\"cacheForType\",\"PossiblyWeakMap\",\"workInProgressSuspendedReason\",\"workInProgressThrownValue\",\"workInProgressRootDidSkipSuspendedSiblings\",\"workInProgressRootIsPrerendering\",\"workInProgressRootDidAttachPingListener\",\"workInProgressRootInterleavedUpdatedLanes\",\"workInProgressRootPingedLanes\",\"workInProgressRootConcurrentErrors\",\"workInProgressRootRecoverableErrors\",\"workInProgressRootDidIncludeRecursiveRenderUpdate\",\"Infinity\",\"workInProgressTransitions\",\"rootDoesHavePassiveEffects\",\"rootWithPendingPassiveEffects\",\"pendingPassiveEffectsLanes\",\"pendingPassiveEffectsRemainingLanes\",\"pendingPassiveTransitions\",\"suspenseHandler\",\"cancelPendingCommit\",\"prepareFreshStack\",\"markRootSuspended\",\"ensureRootIsScheduled\",\"performWorkOnRoot\",\"forceSync\",\"shouldTimeSlice\",\"expiredLanes\",\"exitStatus\",\"prevExecutionContext\",\"prevDispatcher\",\"pushDispatcher\",\"prevAsyncDispatcher\",\"pushAsyncDispatcher\",\"thrownValue\",\"throwAndUnwindWorkLoop\",\"replaySuspendedUnitOfWork\",\"hostFiber\",\"completeUnitOfWork\",\"resetWorkInProgressStack\",\"workLoopConcurrent\",\"thrownValue$166\",\"handleThrow\",\"A\",\"renderRootConcurrent\",\"renderRootSync\",\"renderWasConcurrent\",\"isRenderConsistentWithExternalStores\",\"errorRecoveryDisabledLanes\",\"wasRootDehydrated\",\"timeoutHandle\",\"scheduleTimeout\",\"commitRootWhenReady\",\"errors\",\"apply\",\"recoverableErrors\",\"transitions\",\"didIncludeRenderPhaseUpdate\",\"updatedLanes\",\"suspendedRetryLanes\",\"didSkipSuspendedSiblings\",\"suspendedCommitReason\",\"completedRenderStartTime\",\"completedRenderEndTime\",\"unsuspend\",\"noop\",\"insertSuspendedStylesheets\",\"commit\",\"stylesheetTimer\",\"clearTimeout\",\"waitForCommitToBeReady\",\"commitRoot\",\"check\",\"didAttemptEntireTree\",\"expirationTimes\",\"index$6\",\"flushSyncWorkAcrossRoots_impl\",\"cancelTimeout\",\"allEntangledLanes\",\"index$4\",\"shouldYieldForPrerendering\",\"unitOfWork\",\"workLoopSync\",\"thrownValue$164\",\"performUnitOfWork\",\"suspendedReason\",\"rootRenderLanes\",\"attachPingListener\",\"markerInstances\",\"cause\",\"wrapperError\",\"throwException\",\"unwindUnitOfWork\",\"skipSiblings\",\"previousUpdateLanePriority\",\"renderPriorityLevel\",\"flushPassiveEffects\",\"callbackNode\",\"callbackPriority\",\"remainingLanes\",\"previouslyPendingLanes\",\"index$7\",\"hiddenUpdatesForLane\",\"markRootFinished\",\"priorityLevel\",\"scheduleCallback$1\",\"eventsEnabled\",\"_enabled\",\"selection\",\"e$20\",\"indexWithinAnchor\",\"indexWithinFocus\",\"selectionInformation\",\"resolvedPrevProps\",\"clearContainerSparingly\",\"commitBeforeMutationEffects\",\"releaseRootPooledCache\",\"onCommitFiberRoot\",\"onCommitRoot\",\"onRecoverableError\",\"commitRootImpl\",\"root$170\",\"renderPriority\",\"onPostCommitFiberRoot\",\"captureCommitPhaseErrorOnRoot\",\"rootFiber\",\"pingCache\",\"threadIDs\",\"pingSuspendedRoot\",\"retryTimedOutBoundary\",\"boundaryFiber\",\"firstScheduledRoot\",\"lastScheduledRoot\",\"didScheduleMicrotask\",\"mightHavePendingSyncWork\",\"isFlushingWork\",\"currentEventTransitionLane\",\"cb\",\"processRootScheduleInMicrotask\",\"scheduleMicrotask\",\"syncTransitionLanes\",\"onlyLegacy\",\"didPerformSomeWork\",\"root$172\",\"performSyncWorkOnRoot\",\"currentPopstateTransitionEvent\",\"shouldAttemptEagerTransition\",\"prev\",\"scheduleTaskForRootDuringMicrotask\",\"index$5\",\"expirationTime\",\"performWorkOnRootViaSchedulerTask\",\"didTimeout\",\"originalCallbackNode\",\"workInProgressRootRenderLanes$jscomp$0\",\"coerceFormActionProp\",\"actionProp\",\"createFormDataWithSubmitter\",\"submitter\",\"temp\",\"FormData\",\"i$jscomp$inline_1439\",\"eventName$jscomp$inline_1440\",\"toUpperCase\",\"nonDelegatedEvents\",\"eventSystemFlags\",\"_dispatchQueue$i\",\"previousInstance\",\"i$jscomp$0\",\"_dispatchListeners$i\",\"targetElement\",\"listenerSetKey\",\"addTrappedEventListener\",\"listenToNativeEvent\",\"isCapturePhaseListener\",\"listeningMarker\",\"rootContainerElement\",\"targetContainer\",\"listenerWrapper\",\"dispatchDiscreteEvent\",\"dispatchContinuousEvent\",\"capture\",\"passive\",\"dispatchEventForPluginEventSystem\",\"targetInst$jscomp$0\",\"ancestorInst\",\"nodeTag\",\"container\",\"grandTag\",\"SyntheticEventCtor\",\"inCapturePhase\",\"accumulateTargetOnly\",\"reactEventName\",\"lastHostComponent\",\"_instance\",\"createDispatchListener\",\"parentWindow\",\"getParent\",\"accumulateEnterLeaveListenersForEvent\",\"getTargetInstFunc\",\"handleEventFunc\",\"fallbackData\",\"eventType\",\"getNativeBeforeInputChars\",\"char\",\"getFallbackBeforeInputChars\",\"maybeTargetInst\",\"formAction\",\"extractEvents$1\",\"targetFiber\",\"captureName\",\"_instance2\",\"unshift\",\"common\",\"_instance3\",\"NORMALIZE_NEWLINES_REGEX\",\"NORMALIZE_NULL_AND_REPLACEMENT_REGEX\",\"normalizeMarkupForTextOrAttribute\",\"markup\",\"serverText\",\"clientText\",\"formEncType\",\"formMethod\",\"formTarget\",\"encType\",\"__html\",\"muted\",\"isNaN\",\"endsWith\",\"hasSrc\",\"hasSrcSet\",\"propValue$186\",\"parentNamespace\",\"dangerouslySetInnerHTML\",\"localPromise\",\"queueMicrotask\",\"handleErrorInNextTick\",\"parentInstance\",\"suspenseInstance\",\"depth\",\"targetInstance\",\"previousSibling\",\"rootContainerInstance\",\"preconnectsSet\",\"getRootNode\",\"previousDispatcher\",\"d\",\"f\",\"previousWasRendering\",\"wasRendering\",\"r\",\"formInst\",\"D\",\"preconnectAs\",\"C\",\"L\",\"as\",\"globalDocument\",\"preloadSelector\",\"imageSrcSet\",\"imageSizes\",\"getScriptKey\",\"getScriptSelectorFromKey\",\"m\",\"X\",\"scripts\",\"adoptPreloadPropsForScript\",\"link\",\"insertStylesheet\",\"M\",\"limitedEscapedHref\",\"currentProps\",\"styles$242\",\"resource$243\",\"integrity\",\"hrefLang\",\"referrerPolicy\",\"preloadProps\",\"preloadStylesheet\",\"rawProps\",\"styleProps\",\"instance$248\",\"nodes\",\"prior\",\"stylesheetProps\",\"scriptProps\",\"keyAttribute\",\"caches\",\"nodeKey\",\"precedencesByRoot\",\"insertStylesheetIntoRoot\",\"precedences\",\"FiberRootNode\",\"hydrate\",\"incompleteTransitions\",\"createFiberRoot\",\"initialChildren\",\"hydrationCallbacks\",\"isStrictMode\",\"transitionCallbacks\",\"getContextForSubtree\",\"parentComponent\",\"updateContainerImpl\",\"markRetryLaneImpl\",\"markRetryLaneIfNotHydrated\",\"attemptContinuousHydration\",\"blockedOn\",\"findInstanceBlockingEvent\",\"return_targetInst\",\"clearIfContinuousEvent\",\"queuedFocus\",\"accumulateOrCreateContinuousQueuedReplayableEvent\",\"queuedDrag\",\"queuedMouse\",\"queuedPointers\",\"queuedPointerCaptures\",\"queueIfContinuousEvent\",\"discreteReplayableEvents\",\"findInstanceBlockingTarget\",\"hasScheduledReplayAttempt\",\"queuedExplicitHydrationTargets\",\"existingQueuedEvent\",\"targetContainers\",\"attemptExplicitHydrationTarget\",\"queuedTarget\",\"priority\",\"runWithPriority\",\"attemptReplayContinuousQueuedEvent\",\"queuedEvent\",\"nextBlockedOn\",\"nativeEventClone\",\"shift\",\"attemptReplayContinuousQueuedEventInMap\",\"replayUnblockedEvents\",\"scheduleCallbackIfUnblocked\",\"unblocked\",\"lastScheduledReplayQueue\",\"scheduleReplayQueueIfNeeded\",\"formReplayingQueue\",\"submitterOrAction\",\"unblock\",\"$$reactFormReplay\",\"formProps\",\"ReactDOMRoot\",\"internalRoot\",\"_internalRoot\",\"ReactDOMHydrationRoot\",\"unmount\",\"unstable_scheduleHydration\",\"isomorphicReactPackageVersion$jscomp$inline_1686\",\"version\",\"findDOMNode\",\"componentOrElement\",\"parentA\",\"parentB\",\"didFindChild\",\"child$2\",\"findCurrentFiberUsingSlowPath\",\"internals$jscomp$inline_2165\",\"bundleType\",\"rendererPackageName\",\"currentDispatcherRef\",\"findFiberByHostInstance\",\"reconcilerVersion\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"hook$jscomp$inline_2166\",\"isDisabled\",\"supportsFiber\",\"inject\",\"createRoot\",\"unstable_strictMode\",\"unstable_transitionCallbacks\",\"Internals\",\"getCrossOriginStringAs\",\"input\",\"createPortal\",\"createPortal$1\",\"flushSync\",\"previousTransition\",\"previousUpdatePriority\",\"preconnect\",\"prefetchDNS\",\"preinit\",\"fetchPriority\",\"nonce\",\"preinitModule\",\"preloadModule\",\"requestFormReset\",\"unstable_batchedUpdates\",\"permalink\",\"useFormStatus\",\"checkDCE\",\"g\",\"h\",\"k\",\"l\",\"n\",\"q\",\"t\",\"v\",\"w\",\"z\",\"u\",\"AsyncMode\",\"ConcurrentMode\",\"ContextConsumer\",\"ContextProvider\",\"Element\",\"Fragment\",\"Lazy\",\"Portal\",\"Profiler\",\"StrictMode\",\"Suspense\",\"isAsyncMode\",\"isConcurrentMode\",\"isContextConsumer\",\"isContextProvider\",\"isElement\",\"isForwardRef\",\"isFragment\",\"isLazy\",\"isPortal\",\"isProfiler\",\"isSuspense\",\"isValidElementType\",\"typeOf\",\"cookieNameRegExp\",\"cookieValueRegExp\",\"domainValueRegExp\",\"pathValueRegExp\",\"__toString\",\"NullObject\",\"startIndex\",\"str\",\"max\",\"decode\",\"decodeURIComponent\",\"jsxProd\",\"config\",\"maybeKey\",\"jsx\",\"jsxs\",\"ReactNoopUpdateQueue\",\"emptyObject\",\"ComponentDummy\",\"PureComponent\",\"partialState\",\"forceUpdate\",\"pureComponentPrototype\",\"ReactElement\",\"self\",\"isValidElement\",\"object\",\"userProvidedKeyEscapeRegex\",\"getElementKey\",\"escaperLookup\",\"escape\",\"mapIntoArray\",\"escapedPrefix\",\"nameSoFar\",\"oldElement\",\"newKey\",\"invokeCallback\",\"nextNamePrefix\",\"resolveThenable\",\"mapChildren\",\"func\",\"lazyInitializer\",\"_status\",\"_result\",\"moduleObject\",\"default\",\"Children\",\"forEachFunc\",\"forEachContext\",\"toArray\",\"only\",\"act\",\"cloneElement\",\"childArray\",\"createContext\",\"childrenLength\",\"createRef\",\"forwardRef\",\"lazy\",\"memo\",\"scope\",\"unstable_useCacheRefresh\",\"Context\",\"heap\",\"parentIndex\",\"peek\",\"first\",\"halfLength\",\"leftIndex\",\"rightIndex\",\"right\",\"diff\",\"sortIndex\",\"performance\",\"localPerformance\",\"localDate\",\"initialTime\",\"taskQueue\",\"timerQueue\",\"taskIdCounter\",\"currentTask\",\"currentPriorityLevel\",\"isPerformingWork\",\"isHostCallbackScheduled\",\"isHostTimeoutScheduled\",\"localSetTimeout\",\"localClearTimeout\",\"localSetImmediate\",\"setImmediate\",\"advanceTimers\",\"timer\",\"startTime\",\"handleTimeout\",\"requestHostCallback\",\"firstTimer\",\"requestHostTimeout\",\"schedulePerformWorkUntilDeadline\",\"isMessageLoopRunning\",\"taskTimeoutID\",\"frameInterval\",\"shouldYieldToHost\",\"performWorkUntilDeadline\",\"hasMoreWork\",\"previousPriorityLevel\",\"continuationCallback\",\"MessageChannel\",\"channel\",\"port\",\"port2\",\"port1\",\"onmessage\",\"postMessage\",\"ms\",\"unstable_Profiling\",\"task\",\"unstable_continueExecution\",\"unstable_forceFrameRate\",\"fps\",\"floor\",\"unstable_getFirstCallbackNode\",\"unstable_next\",\"eventHandler\",\"unstable_pauseExecution\",\"unstable_runWithPriority\",\"delay\",\"timeout\",\"unstable_wrapCallback\",\"parentPriorityLevel\",\"__webpack_module_cache__\",\"__webpack_require__\",\"moduleId\",\"cachedModule\",\"undefined\",\"__webpack_modules__\",\"leafPrototypes\",\"getProto\",\"obj\",\"__esModule\",\"ns\",\"def\",\"definition\",\"o\",\"globalThis\",\"Function\",\"prop\",\"toStringTag\",\"_objectWithoutPropertiesLoose\",\"s\",\"propertyIsEnumerable\",\"_typeof\",\"toPropertyKey\",\"toPrimitive\",\"TypeError\",\"Number\",\"_defineProperty\",\"writable\",\"ownKeys\",\"filter\",\"_objectSpread2\",\"getOwnPropertyDescriptors\",\"defineProperties\",\"formatMuiErrorMessage\",\"URL\",\"_len\",\"args\",\"_key\",\"arg\",\"searchParams\",\"append\",\"isPlainObject\",\"item\",\"deepClone\",\"output\",\"deepmerge\",\"_objectSpread\",\"val\",\"MIN_SAFE_INTEGER\",\"MAX_SAFE_INTEGER\",\"clampWrapper\",\"clamp\",\"decomposeColor\",\"charAt\",\"re\",\"colors\",\"parseInt\",\"round\",\"hexToRgb\",\"marker\",\"substring\",\"_formatMuiErrorMessage\",\"colorSpace\",\"values\",\"parseFloat\",\"private_safeColorChannel\",\"warning\",\"decomposedColor\",\"idx\",\"colorChannel\",\"recomposeColor\",\"hslToRgb\",\"rgb\",\"getLuminance\",\"toFixed\",\"alpha\",\"private_safeAlpha\",\"darken\",\"coefficient\",\"private_safeDarken\",\"lighten\",\"private_safeLighten\",\"private_safeEmphasize\",\"emphasize\",\"black\",\"white\",\"A100\",\"A200\",\"A400\",\"A700\",\"getLight\",\"primary\",\"secondary\",\"divider\",\"background\",\"paper\",\"active\",\"hover\",\"hoverOpacity\",\"selectedOpacity\",\"disabledBackground\",\"disabledOpacity\",\"focusOpacity\",\"activatedOpacity\",\"light\",\"getDark\",\"icon\",\"dark\",\"addLightOrDark\",\"intent\",\"direction\",\"shade\",\"tonalOffset\",\"tonalOffsetLight\",\"tonalOffsetDark\",\"main\",\"createPalette\",\"palette\",\"contrastThreshold\",\"other\",\"_objectWithoutProperties\",\"_excluded\",\"blue\",\"getDefaultPrimary\",\"purple\",\"getDefaultSecondary\",\"red\",\"getDefaultError\",\"lightBlue\",\"getDefaultInfo\",\"success\",\"green\",\"getDefaultSuccess\",\"orange\",\"getDefaultWarning\",\"getContrastText\",\"contrastText\",\"foreground\",\"lumA\",\"lumB\",\"getContrastRatio\",\"augmentColor\",\"_ref\",\"mainShade\",\"lightShade\",\"darkShade\",\"JSON\",\"stringify\",\"modeHydrated\",\"grey\",\"createGetCssVar\",\"appendVar\",\"vars\",\"field\",\"_len2\",\"fallbacks\",\"_key2\",\"xs\",\"sm\",\"md\",\"lg\",\"xl\",\"defaultBreakpoints\",\"up\",\"defaultContainerQueries\",\"containerQueries\",\"containerName\",\"handleBreakpoints\",\"styleFromPropValue\",\"theme\",\"themeBreakpoints\",\"breakpoints\",\"reduce\",\"acc\",\"breakpoint\",\"breakpointKeys\",\"startsWith\",\"some\",\"isCqShorthand\",\"containerKey\",\"shorthand\",\"containerQuery\",\"getContainerQuery\",\"cssKey\",\"createEmptyBreakpointObject\",\"_breakpointsInput$key\",\"breakpointsInput\",\"removeUnusedBreakpoints\",\"breakpointOutput\",\"capitalize\",\"string\",\"getPath\",\"path\",\"checkVars\",\"getStyleValue\",\"themeMapping\",\"transform\",\"propValueFinal\",\"userValue\",\"cssProperty\",\"themeKey\",\"filterProps\",\"properties\",\"directions\",\"marginX\",\"marginY\",\"paddingX\",\"paddingY\",\"getCssProperties\",\"memoize\",\"dir\",\"marginKeys\",\"paddingKeys\",\"spacingKeys\",\"createUnaryUnit\",\"_getPath\",\"themeSpacing\",\"abs\",\"transformed\",\"createUnarySpacing\",\"transformer\",\"resolveCssProperty\",\"cssProperties\",\"getStyleFromPropValue\",\"merge\",\"margin\",\"padding\",\"spacing\",\"createSpacing\",\"spacingInput\",\"mui\",\"argsInput\",\"argument\",\"prepareTypographyVars\",\"typography\",\"entries\",\"entry\",\"fontStyle\",\"fontVariant\",\"fontWeight\",\"fontStretch\",\"fontSize\",\"lineHeight\",\"fontFamily\",\"assignNestedKeys\",\"arrayKeys\",\"cssVarsParser\",\"shouldSkipGeneratingVar\",\"css\",\"varsWithDefaults\",\"walkObjectDeep\",\"shouldSkipPaths\",\"cssVar\",\"resolvedValue\",\"getCssValue\",\"recurse\",\"parentKeys\",\"parserConfig\",\"getSelector\",\"defaultGetSelector\",\"disableCssColorScheme\",\"colorSchemeSelector\",\"selector\",\"colorSchemes\",\"components\",\"defaultColorScheme\",\"otherTheme\",\"rootVars\",\"rootCss\",\"rootVarsWithDefaults\",\"themeVars\",\"colorSchemesMap\",\"defaultScheme\",\"otherColorSchemes\",\"_toPropertyKey\",\"scheme\",\"colorScheme\",\"cssObject\",\"rule\",\"_colorSchemes$colorSc\",\"generateThemeVars\",\"_ref2\",\"schemeVars\",\"generateStyleSheets\",\"insertStyleSheet\",\"defaultSchemeVal\",\"_colorSchemes$colorSc2\",\"cssColorSheme\",\"finalCss\",\"_ref3\",\"_colorSchemes$key\",\"handlers\",\"borderTransform\",\"createBorderStyle\",\"border\",\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\",\"borderColor\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"outline\",\"outlineColor\",\"borderRadius\",\"compose\",\"gap\",\"columnGap\",\"rowGap\",\"paletteTransform\",\"sizingTransform\",\"maxWidth\",\"_props$theme\",\"_props$theme2\",\"breakpointsValues\",\"unit\",\"minWidth\",\"maxHeight\",\"minHeight\",\"bgcolor\",\"backgroundColor\",\"pt\",\"pr\",\"pb\",\"pl\",\"px\",\"py\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"paddingInline\",\"paddingInlineStart\",\"paddingInlineEnd\",\"paddingBlock\",\"paddingBlockStart\",\"paddingBlockEnd\",\"mt\",\"mr\",\"mb\",\"ml\",\"mx\",\"my\",\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\",\"marginInline\",\"marginInlineStart\",\"marginInlineEnd\",\"marginBlock\",\"marginBlockStart\",\"marginBlockEnd\",\"displayPrint\",\"textOverflow\",\"visibility\",\"whiteSpace\",\"flexBasis\",\"flexDirection\",\"flexWrap\",\"justifyContent\",\"alignItems\",\"alignContent\",\"order\",\"flex\",\"flexGrow\",\"flexShrink\",\"alignSelf\",\"justifyItems\",\"justifySelf\",\"gridColumn\",\"gridRow\",\"gridAutoFlow\",\"gridAutoColumns\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"gridTemplateAreas\",\"gridArea\",\"position\",\"zIndex\",\"bottom\",\"boxShadow\",\"boxSizing\",\"font\",\"letterSpacing\",\"textTransform\",\"textAlign\",\"styleFunctionSx\",\"getThemeValue\",\"_theme$unstable_sxCon\",\"sx\",\"unstable_sxConfig\",\"defaultSxConfig\",\"traverse\",\"sxInput\",\"sxObject\",\"emptyBreakpoints\",\"breakpointsKeys\",\"styleKey\",\"maybeFn\",\"callIfFn\",\"objects\",\"allKeys\",\"union\",\"every\",\"objectsHaveSameKeys\",\"sorted\",\"sort\",\"_a$match\",\"_b$match\",\"regex\",\"sortContainerQueries\",\"unstable_createStyleFunctionSx\",\"createBreakpoints\",\"sortedValues\",\"breakpointsAsArray\",\"breakpoint1\",\"breakpoint2\",\"sortBreakpointsValues\",\"down\",\"between\",\"not\",\"keyIndex\",\"applyStyles\",\"_theme$colorSchemes\",\"getColorSchemeSelector\",\"paletteInput\",\"shape\",\"shapeInput\",\"muiTheme\",\"themeInput\",\"toContainerQuery\",\"mediaQuery\",\"attachCq\",\"cssContainerQueries\",\"unstable_sx\",\"createMixins\",\"toolbar\",\"caseAllCaps\",\"defaultFontFamily\",\"createTypography\",\"fontWeightLight\",\"fontWeightRegular\",\"fontWeightMedium\",\"fontWeightBold\",\"htmlFontSize\",\"allVariants\",\"pxToRem\",\"pxToRem2\",\"coef\",\"buildVariant\",\"casing\",\"variants\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"overline\",\"inherit\",\"createShadow\",\"easing\",\"easeInOut\",\"easeOut\",\"easeIn\",\"sharp\",\"duration\",\"shortest\",\"shorter\",\"short\",\"standard\",\"complex\",\"enteringScreen\",\"leavingScreen\",\"formatMs\",\"milliseconds\",\"getAutoHeightDuration\",\"constant\",\"createTransitions\",\"inputTransitions\",\"mergedEasing\",\"mergedDuration\",\"durationOption\",\"easingOption\",\"animatedProp\",\"mobileStepper\",\"fab\",\"speedDial\",\"appBar\",\"drawer\",\"modal\",\"snackbar\",\"tooltip\",\"stringifyTheme\",\"serializableTheme\",\"serializeTheme\",\"createThemeNoVars\",\"mixinsInput\",\"transitionsInput\",\"typographyInput\",\"systemTheme\",\"systemCreateTheme\",\"shadows\",\"toRuntimeSource\",\"getOverlayAlpha\",\"elevation\",\"alphaValue\",\"defaultDarkOverlays\",\"_\",\"overlay\",\"getOpacity\",\"inputPlaceholder\",\"inputUnderline\",\"switchTrackDisabled\",\"switchTrack\",\"getOverlays\",\"_keys$\",\"cssVarPrefix\",\"rootSelector\",\"excludedVariables\",\"excludeVariablesFromRoot\",\"setColor\",\"toRgb\",\"setColorChannel\",\"safeColorChannel\",\"silent\",\"attachColorScheme\",\"restTheme\",\"_scheme2\",\"_scheme3\",\"_scheme4\",\"_scheme\",\"opacity\",\"overlays\",\"rest\",\"createColorScheme\",\"_createThemeNoVars\",\"createThemeWithVars\",\"colorSchemesInput\",\"defaultColorSchemeInput\",\"defaultShouldSkipGeneratingVar\",\"_excluded2\",\"firstColorScheme\",\"getCssVar\",\"systemCreateGetCssVar\",\"defaultSchemeInput\",\"builtInLight\",\"builtInDark\",\"setCssVarColor\",\"tokens\",\"colorToken\",\"Alert\",\"safeDarken\",\"safeLighten\",\"AppBar\",\"Avatar\",\"Button\",\"Chip\",\"FilledInput\",\"LinearProgress\",\"Skeleton\",\"Slider\",\"snackbarContentBackground\",\"safeEmphasize\",\"SnackbarContent\",\"SpeedDialAction\",\"StepConnector\",\"StepContent\",\"Switch\",\"TableCell\",\"safeAlpha\",\"Tooltip\",\"prepareCssVars\",\"generateSpacing\",\"createGetColorSchemeSelector\",\"createTheme\",\"cssVariables\",\"initialColorSchemes\",\"initialDefaultColorScheme\",\"paletteOptions\",\"useTheme\",\"ThemeContext\",\"localTheme\",\"outerTheme\",\"mergeOuterLocalTheme\",\"nested\",\"_jsx\",\"StyleSheet\",\"_this\",\"_insertTag\",\"tags\",\"insertionPoint\",\"prepend\",\"isSpeedy\",\"speedy\",\"ctr\",\"_proto\",\"insert\",\"createStyleElement\",\"sheet\",\"styleSheets\",\"ownerNode\",\"sheetForTag\",\"insertRule\",\"cssRules\",\"flush\",\"_tag$parentNode\",\"from\",\"pattern\",\"replacement\",\"indexof\",\"charat\",\"substr\",\"begin\",\"strlen\",\"sizeof\",\"line\",\"column\",\"character\",\"characters\",\"copy\",\"caret\",\"token\",\"alloc\",\"dealloc\",\"delimit\",\"delimiter\",\"whitespace\",\"escaping\",\"commenter\",\"identifier\",\"MS\",\"MOZ\",\"WEBKIT\",\"COMMENT\",\"RULESET\",\"DECLARATION\",\"KEYFRAMES\",\"serialize\",\"compile\",\"parse\",\"rules\",\"rulesets\",\"pseudo\",\"points\",\"declarations\",\"atrule\",\"previous\",\"variable\",\"scanning\",\"ampersand\",\"reference\",\"comment\",\"declaration\",\"ruleset\",\"post\",\"j\",\"identifierWithPointTracking\",\"getRules\",\"parsed\",\"toRules\",\"fixedElements\",\"compat\",\"isImplicitRule\",\"parentRules\",\"removeLabel\",\"hash\",\"defaultStylisPlugins\",\"combine\",\"exec\",\"ssrStyles\",\"_insert\",\"stylisPlugins\",\"inserted\",\"nodesToHydrate\",\"attrib\",\"currentSheet\",\"finalizingPlugins\",\"serializer\",\"collection\",\"middleware\",\"serialized\",\"shouldCache\",\"stylis\",\"registered\",\"getRegisteredStyles\",\"registeredStyles\",\"classNames\",\"rawClassName\",\"className\",\"registerStyles\",\"isStringTag\",\"insertStyles\",\"unitlessKeys\",\"animationIterationCount\",\"aspectRatio\",\"borderImageOutset\",\"borderImageSlice\",\"borderImageWidth\",\"boxFlex\",\"boxFlexGroup\",\"boxOrdinalGroup\",\"columnCount\",\"columns\",\"flexPositive\",\"flexNegative\",\"flexOrder\",\"gridRowEnd\",\"gridRowSpan\",\"gridRowStart\",\"gridColumnEnd\",\"gridColumnSpan\",\"gridColumnStart\",\"msGridRow\",\"msGridRowSpan\",\"msGridColumn\",\"msGridColumnSpan\",\"orphans\",\"scale\",\"tabSize\",\"widows\",\"zoom\",\"WebkitLineClamp\",\"fillOpacity\",\"floodOpacity\",\"stopOpacity\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"hyphenateRegex\",\"animationRegex\",\"isProcessableValue\",\"processStyleName\",\"processStyleValue\",\"p1\",\"p2\",\"unitless\",\"handleInterpolation\",\"mergedProps\",\"interpolation\",\"componentSelector\",\"__emotion_styles\",\"keyframes\",\"anim\",\"serializedStyles\",\"asString\",\"interpolated\",\"_i\",\"createStringFromObject\",\"previousCursor\",\"cached\",\"labelPattern\",\"serializeStyles\",\"stringMode\",\"strings\",\"raw\",\"lastIndex\",\"identifierName\",\"len\",\"hashString\",\"useInsertionEffectAlwaysWithSyncFallback\",\"useInsertionEffectWithLayoutFallback\",\"EmotionCacheContext\",\"HTMLElement\",\"withEmotionCache\",\"hasOwn\",\"typePropName\",\"Insertion\",\"Emotion\",\"cssProp\",\"WrappedComponent\",\"Emotion$1\",\"defaultTheme\",\"contextTheme\",\"RtlContext\",\"useRtl\",\"resolveProps\",\"defaultSlotProps\",\"slotProps\",\"slotKey\",\"slotPropName\",\"PropsContext\",\"useDefaultProps\",\"params\",\"styleOverrides\",\"getThemeProps\",\"EMPTY_THEME\",\"useThemeScoping\",\"themeId\",\"upperTheme\",\"isPrivate\",\"resolvedTheme\",\"mergedTheme\",\"useThemeWithoutDefault\",\"upperPrivateTheme\",\"usePrivateTheme\",\"engineTheme\",\"privateTheme\",\"rtlValue\",\"MuiThemeProvider\",\"StyledEngineThemeContext\",\"RtlProvider\",\"DefaultPropsProvider\",\"ThemeProviderNoVars\",\"scopedTheme\",\"THEME_ID\",\"SystemThemeProvider\",\"argsLength\",\"createElementArgArray\",\"createEmotionProps\",\"JSX\",\"Global\",\"sheetRef\",\"rehydrating\",\"sheetRefCurrent\",\"nextElementSibling\",\"insertable\",\"GlobalStyles\",\"globalStyles\",\"DEFAULT_MODE_STORAGE_KEY\",\"DEFAULT_COLOR_SCHEME_STORAGE_KEY\",\"DEFAULT_ATTRIBUTE\",\"getSystemMode\",\"processState\",\"systemMode\",\"initializeValue\",\"localStorage\",\"getItem\",\"setItem\",\"_unused\",\"useCurrentColorScheme\",\"defaultMode\",\"defaultLightColorScheme\",\"defaultDarkColorScheme\",\"supportedColorSchemes\",\"modeStorageKey\",\"colorSchemeStorageKey\",\"storageWindow\",\"noSsr\",\"joinedColorSchemes\",\"isMultiSchemes\",\"initialMode\",\"lightColorScheme\",\"darkColorScheme\",\"isClient\",\"setIsClient\",\"getColorScheme\",\"setMode\",\"newMode\",\"_unused2\",\"setColorScheme\",\"_unused4\",\"newLightColorScheme\",\"newDarkColorScheme\",\"_unused3\",\"handleMediaQuery\",\"mediaListener\",\"addListener\",\"removeListener\",\"handleStorage\",\"newValue\",\"defaultConfig\",\"attribute\",\"CssVarsProvider\",\"InternalCssVarsProvider\",\"useColorScheme\",\"getInitColorSchemeScript\",\"deprecatedGetInitColorSchemeScript\",\"defaultModeStorageKey\",\"defaultColorSchemeStorageKey\",\"disableTransitionOnChange\",\"designSystemTransitionOnChange\",\"resolveTheme\",\"defaultContext\",\"allColorSchemes\",\"ColorSchemeContext\",\"defaultColorSchemes\",\"defaultComponents\",\"_colorSchemes$restThe\",\"_restThemeProp$palett\",\"_memoTheme$generateSt\",\"themeProp\",\"documentNode\",\"colorSchemeNode\",\"disableNestedContext\",\"disableStyleSheetGeneration\",\"hasMounted\",\"muiUseTheme\",\"ctx\",\"initialTheme\",\"restThemeProp\",\"stateMode\",\"stateColorScheme\",\"memoTheme\",\"_restThemeProp$genera\",\"calculatedColorScheme\",\"schemeKey\",\"classList\",\"remove\",\"attr\",\"getComputedStyle\",\"contextValue\",\"shouldGenerateStyleSheet\",\"_jsxs\",\"ThemeProvider\",\"initialAttribute\",\"setter\",\"InitColorSchemeScript\",\"createCssVarsProvider\",\"newTheme\",\"PopStateEventType\",\"createBrowserHistory\",\"getUrlBasedHistory\",\"window2\",\"globalHistory\",\"pathname\",\"createLocation\",\"usr\",\"to\",\"createPath\",\"invariant\",\"cond\",\"warn\",\"getHistoryState\",\"parsePath\",\"parsedPath\",\"hashIndex\",\"searchIndex\",\"getLocation\",\"createHref2\",\"validateLocation\",\"v5Compat\",\"history\",\"getIndex\",\"handlePop\",\"nextIndex\",\"delta\",\"createURL\",\"base\",\"origin\",\"replaceState\",\"listen\",\"createHref\",\"encodeLocation\",\"historyState\",\"pushState\",\"DOMException\",\"go\",\"matchRoutes\",\"routes\",\"locationArg\",\"matchRoutesImpl\",\"basename\",\"allowPartial\",\"stripBasename\",\"branches\",\"flattenRoutes\",\"score\",\"siblings\",\"compareIndexes\",\"routesMeta\",\"meta\",\"childrenIndex\",\"rankRouteBranches\",\"decoded\",\"decodePath\",\"matchRouteBranch\",\"parentsMeta\",\"parentPath\",\"flattenRoute\",\"route\",\"relativePath\",\"caseSensitive\",\"joinPaths\",\"computeScore\",\"_route$path\",\"exploded\",\"explodeOptionalSegments\",\"segments\",\"isOptional\",\"required\",\"restExploded\",\"subpath\",\"paramRe\",\"dynamicSegmentValue\",\"indexRouteValue\",\"emptySegmentValue\",\"staticSegmentValue\",\"splatPenalty\",\"isSplat\",\"initialScore\",\"segment\",\"branch\",\"matchedParams\",\"matchedPathname\",\"remainingPathname\",\"matchPath\",\"pathnameBase\",\"normalizePathname\",\"matcher\",\"compiledParams\",\"regexpSource\",\"paramName\",\"compilePath\",\"captureGroups\",\"memo2\",\"splatValue\",\"nextChar\",\"getInvalidPathError\",\"dest\",\"getPathContributingMatches\",\"getResolveToMatches\",\"pathMatches\",\"resolveTo\",\"toArg\",\"routePathnames\",\"locationPathname\",\"isPathRelative\",\"isEmptyPath\",\"toPathname\",\"routePathnameIndex\",\"toSegments\",\"fromPathname\",\"resolvePathname\",\"normalizeSearch\",\"normalizeHash\",\"resolvePath\",\"hasExplicitTrailingSlash\",\"hasCurrentTrailingSlash\",\"paths\",\"isRouteErrorResponse\",\"statusText\",\"internal\",\"validMutationMethodsArr\",\"validRequestMethodsArr\",\"DataRouterContext\",\"DataRouterStateContext\",\"ViewTransitionContext\",\"isTransitioning\",\"FetchersContext\",\"AwaitContext\",\"NavigationContext\",\"LocationContext\",\"RouteContext\",\"outlet\",\"isDataRoute\",\"RouteErrorContext\",\"useInRouterContext\",\"React2\",\"useLocation\",\"navigateEffectWarning\",\"useIsomorphicLayoutEffect\",\"static\",\"useNavigate\",\"router\",\"useDataRouterContext\",\"useCurrentRouteId\",\"activeRef\",\"navigate\",\"fromRouteId\",\"useNavigateStable\",\"dataRouterContext\",\"navigator\",\"navigator2\",\"routePathnamesJson\",\"relative\",\"useNavigateUnstable\",\"useResolvedPath\",\"useRoutesImpl\",\"dataRouterState\",\"future\",\"parentMatches\",\"routeMatch\",\"parentParams\",\"parentPathname\",\"parentPathnameBase\",\"parentRoute\",\"warningOnce\",\"locationFromContext\",\"_parsedLocationArg$pa\",\"parsedLocationArg\",\"parentSegments\",\"renderedMatches\",\"_renderMatches\",\"navigationType\",\"DefaultErrorComponent\",\"useRouteError\",\"lightgrey\",\"preStyles\",\"codeStyles\",\"devInfo\",\"defaultErrorElement\",\"RenderErrorBoundary\",\"super\",\"revalidation\",\"routeContext\",\"RenderedRoute\",\"_ref9\",\"staticContext\",\"errorElement\",\"ErrorBoundary\",\"_deepestRenderedBoundaryId\",\"initialized\",\"errorIndex\",\"findIndex\",\"renderFallback\",\"fallbackIndex\",\"HydrateFallback\",\"hydrateFallbackElement\",\"loaderData\",\"errors2\",\"needsToRunLoader\",\"loader\",\"reduceRight\",\"shouldRenderHydrateFallback\",\"matches2\",\"getChildren\",\"getDataRouterConsoleError\",\"hookName\",\"useDataRouterState\",\"useRouteContext\",\"thisRoute\",\"_state$errors\",\"routeId\",\"alreadyWarned\",\"React3\",\"_ref12\",\"Navigate\",\"_ref14\",\"replace2\",\"isStatic\",\"jsonPath\",\"Route\",\"_props\",\"Router\",\"_ref15\",\"basenameProp\",\"locationProp\",\"staticProp\",\"navigationContext\",\"locationContext\",\"trailingPathname\",\"Routes\",\"_ref16\",\"createRoutesFromChildren\",\"treePath\",\"hasErrorBoundary\",\"shouldRevalidate\",\"handle\",\"defaultMethod\",\"defaultEncType\",\"isHtmlElement\",\"_formDataSupportsSubmitter\",\"supportedFormEncTypes\",\"getFormEncType\",\"getFormSubmissionInfo\",\"isButtonElement\",\"isInputElement\",\"isFormDataSubmitterSupported\",\"invariant2\",\"loadRouteModule\",\"routeModulesCache\",\"routeModule\",\"import\",\"__reactRouterContext\",\"isSpaMode\",\"reload\",\"isPageLinkDescriptor\",\"page\",\"isHtmlLinkDescriptor\",\"getNewMatchesForLinks\",\"nextMatches\",\"currentMatches\",\"manifest\",\"isNew\",\"matchPathChanged\",\"_currentMatches$index\",\"manifestRoute\",\"hasLoader\",\"_currentMatches$\",\"routeChoice\",\"currentUrl\",\"currentParams\",\"nextUrl\",\"nextParams\",\"defaultShouldRevalidate\",\"dedupeHrefs\",\"hrefs\",\"dedupeLinkDescriptors\",\"descriptors\",\"preloads\",\"preloadsSet\",\"deduped\",\"sortKeys\",\"createHtml\",\"html\",\"singleFetchUrl\",\"reqUrl\",\"React5\",\"RemixRootDefaultErrorBoundary\",\"_ref21\",\"isOutsideRemixApp\",\"errorInstance\",\"heyDeveloper\",\"BoundaryShell\",\"errorString\",\"_ref22\",\"_routeModules$root\",\"renderScripts\",\"routeModules\",\"useFrameworkContext\",\"Layout\",\"lang\",\"Scripts\",\"isFogOfWarEnabled\",\"useDataRouterContext2\",\"React9\",\"useDataRouterStateContext\",\"FrameworkContext\",\"composeEventHandlers\",\"theirHandler\",\"ourHandler\",\"getActiveMatches\",\"isHydrated\",\"errorIdx\",\"PrefetchPageLinks\",\"_ref29\",\"dataLinkProps\",\"PrefetchPageLinksImpl\",\"useKeyedPrefetchLinks\",\"keyedPrefetchLinks\",\"setKeyedPrefetchLinks\",\"interrupted\",\"all\",\"mod\",\"links\",\"flat\",\"getKeyedPrefetchLinks\",\"_ref30\",\"linkProps\",\"newMatchesForData\",\"newMatchesForAssets\",\"dataHrefs\",\"routesParams\",\"foundOptOutRoute\",\"_routeModules$m$route2\",\"m2\",\"hasClientLoader\",\"moduleHrefs\",\"manifestPatch\",\"imports\",\"getModuleLinkHrefs\",\"_ref31\",\"serverHandoffString\",\"renderMeta\",\"routerMatches\",\"enableFogOfWar\",\"didRenderScripts\",\"initialScripts\",\"_manifest$hmr\",\"contextScript\",\"routeModulesScript\",\"hmr\",\"runtime\",\"routeIds\",\"Boolean\",\"initialRoutes\",\"getPartialManifest\",\"routePreloads\",\"mergeRefs\",\"_len3\",\"_key3\",\"isBrowser\",\"__reactRouterVersion\",\"BrowserRouter\",\"_ref32\",\"historyRef\",\"React10\",\"setStateImpl\",\"ABSOLUTE_URL_REGEX2\",\"Link\",\"_ref35\",\"forwardedRef\",\"absoluteHref\",\"discover\",\"prefetch\",\"reloadDocument\",\"preventScrollReset\",\"viewTransition\",\"_excluded4\",\"isAbsolute\",\"isExternal\",\"targetUrl\",\"protocol\",\"joinedPathname\",\"useHref\",\"shouldPrefetch\",\"prefetchRef\",\"prefetchHandlers\",\"theirElementProps\",\"frameworkContext\",\"maybePrefetch\",\"setMaybePrefetch\",\"setShouldPrefetch\",\"onFocus\",\"onBlur\",\"onMouseEnter\",\"onMouseLeave\",\"onTouchStart\",\"observer\",\"IntersectionObserver\",\"isIntersecting\",\"threshold\",\"observe\",\"disconnect\",\"setIntent\",\"cancelIntent\",\"usePrefetchBehavior\",\"internalOnClick\",\"replaceProp\",\"isModifiedEvent\",\"shouldProcessLinkClick\",\"useLinkClickHandler\",\"NavLink\",\"_ref36\",\"ariaCurrentProp\",\"classNameProp\",\"_excluded5\",\"routerState\",\"opts\",\"vtContext\",\"useDataRouterContext3\",\"currentPath\",\"currentLocation\",\"nextPath\",\"nextLocation\",\"useViewTransitionState\",\"nextLocationPathname\",\"navigation\",\"endSlashPosition\",\"isActive\",\"isPending\",\"renderProps\",\"ariaCurrent\",\"Form\",\"_ref37\",\"fetcherKey\",\"onSubmit\",\"_excluded6\",\"submit\",\"useSubmit\",\"URLSearchParams\",\"indexValues\",\"getAll\",\"hasNakedIndexParam\",\"qs\",\"useFormAction\",\"submitMethod\",\"getDataRouterConsoleError2\",\"fetcherId\",\"getUniqueFetcherId\",\"currentRouteId\",\"fetch\",\"TextEncoder\",\"stringToByteArray$1\",\"out\",\"base64\",\"byteToCharMap_\",\"charToByteMap_\",\"byteToCharMapWebSafe_\",\"charToByteMapWebSafe_\",\"ENCODED_VALS_BASE\",\"ENCODED_VALS\",\"ENCODED_VALS_WEBSAFE\",\"HAS_NATIVE_SUPPORT\",\"atob\",\"encodeByteArray\",\"webSafe\",\"init_\",\"byteToCharMap\",\"byte1\",\"haveByte2\",\"byte2\",\"haveByte3\",\"byte3\",\"outByte1\",\"outByte2\",\"outByte3\",\"outByte4\",\"encodeString\",\"btoa\",\"decodeString\",\"bytes\",\"pos\",\"c1\",\"c2\",\"c3\",\"byteArrayToString\",\"decodeStringToByteArray\",\"charToByteMap\",\"byte4\",\"DecodeBase64StringError\",\"base64urlEncodeWithoutPadding\",\"utf8Bytes\",\"base64Encode\",\"base64Decode\",\"getDefaultsFromGlobal\",\"global\",\"getGlobal\",\"__FIREBASE_DEFAULTS__\",\"getDefaults\",\"getDefaultsFromEnvVariable\",\"defaultsJsonString\",\"getDefaultsFromCookie\",\"cookie\",\"getDefaultEmulatorHost\",\"productName\",\"_a\",\"_b\",\"emulatorHosts\",\"getDefaultEmulatorHostnameAndPort\",\"host\",\"separatorIndex\",\"lastIndexOf\",\"getDefaultAppConfig\",\"getExperimentalSetting\",\"Deferred\",\"promise\",\"wrapCallback\",\"createMockUserToken\",\"projectId\",\"uid\",\"project\",\"iat\",\"sub\",\"user_id\",\"iss\",\"aud\",\"exp\",\"auth_time\",\"firebase\",\"sign_in_provider\",\"identities\",\"alg\",\"getUA\",\"isBrowserExtension\",\"chrome\",\"browser\",\"isSafari\",\"forceEnvironment\",\"isNode\",\"userAgent\",\"isIndexedDBAvailable\",\"indexedDB\",\"validateIndexedDBOpenable\",\"preExist\",\"DB_CHECK_NAME\",\"request\",\"open\",\"onsuccess\",\"close\",\"deleteDatabase\",\"onupgradeneeded\",\"FirebaseError\",\"customData\",\"setPrototypeOf\",\"captureStackTrace\",\"ErrorFactory\",\"service\",\"serviceName\",\"fullCode\",\"template\",\"PATTERN\",\"replaceTemplate\",\"fullMessage\",\"deepEqual\",\"aKeys\",\"bKeys\",\"aProp\",\"bProp\",\"isObject\",\"thing\",\"querystring\",\"querystringParams\",\"arrayVal\",\"querystringDecode\",\"extractQuerystring\",\"queryStart\",\"fragmentStart\",\"ObserverProxy\",\"executor\",\"onNoObservers\",\"observers\",\"unsubscribes\",\"observerCount\",\"finalized\",\"forEachObserver\",\"complete\",\"nextOrObserver\",\"methods\",\"implementsAnyMethods\",\"unsub\",\"unsubscribeOne\",\"finalError\",\"sendOne\",\"calculateBackoffMillis\",\"backoffCount\",\"backoffFactor\",\"currBaseValue\",\"pow\",\"randomWait\",\"getModularInstance\",\"_delegate\",\"instanceFactory\",\"multipleInstances\",\"serviceProps\",\"instantiationMode\",\"onInstanceCreated\",\"setInstantiationMode\",\"setMultipleInstances\",\"setServiceProps\",\"setInstanceCreatedCallback\",\"DEFAULT_ENTRY_NAME\",\"instances\",\"instancesDeferred\",\"instancesOptions\",\"onInitCallbacks\",\"normalizedIdentifier\",\"normalizeInstanceIdentifier\",\"deferred\",\"isInitialized\",\"shouldAutoInitialize\",\"getOrInitializeService\",\"instanceIdentifier\",\"getImmediate\",\"optional\",\"getComponent\",\"setComponent\",\"isComponentEager\",\"instanceDeferred\",\"clearInstance\",\"services\",\"INTERNAL\",\"_delete\",\"isComponentSet\",\"getOptions\",\"initialize\",\"onInit\",\"existingCallbacks\",\"existingInstance\",\"invokeOnInitCallbacks\",\"normalizeIdentifierForFactory\",\"ComponentContainer\",\"providers\",\"addComponent\",\"getProvider\",\"addOrOverwriteComponent\",\"getProviders\",\"LogLevel\",\"levelStringToEnum\",\"DEBUG\",\"VERBOSE\",\"INFO\",\"WARN\",\"ERROR\",\"SILENT\",\"defaultLogLevel\",\"ConsoleMethod\",\"defaultLogHandler\",\"logType\",\"logLevel\",\"toISOString\",\"Logger\",\"_logLevel\",\"_logHandler\",\"_userLogHandler\",\"setLogLevel\",\"logHandler\",\"userLogHandler\",\"debug\",\"_len4\",\"_key4\",\"_len5\",\"_key5\",\"_len6\",\"_key6\",\"idbProxyableTypes\",\"cursorAdvanceMethods\",\"cursorRequestMap\",\"transactionDoneMap\",\"transactionStoreNamesMap\",\"transformCache\",\"reverseTransformCache\",\"idbProxyTraps\",\"receiver\",\"IDBTransaction\",\"objectStoreNames\",\"objectStore\",\"wrap\",\"wrapFunction\",\"IDBDatabase\",\"transaction\",\"IDBCursor\",\"advance\",\"continue\",\"continuePrimaryKey\",\"unwrap\",\"storeNames\",\"tx\",\"transformCachableValue\",\"unlisten\",\"cacheDonePromiseForTransaction\",\"IDBObjectStore\",\"IDBIndex\",\"Proxy\",\"instanceOfAny\",\"IDBRequest\",\"promisifyRequest\",\"openDB\",\"blocked\",\"upgrade\",\"blocking\",\"terminated\",\"openPromise\",\"oldVersion\",\"newVersion\",\"db\",\"readMethods\",\"writeMethods\",\"cachedMethods\",\"getMethod\",\"targetFuncName\",\"useIndex\",\"isWrite\",\"storeName\",\"store\",\"oldTraps\",\"PlatformLoggerServiceImpl\",\"getPlatformInfoString\",\"isVersionServiceProvider\",\"library\",\"logString\",\"logger\",\"PLATFORM_LOG_STRING\",\"name$q\",\"name$p\",\"name$n\",\"name$o\",\"name$l\",\"name$m\",\"name$k\",\"name$j\",\"name$i\",\"name$h\",\"name$g\",\"name$f\",\"name$e\",\"name$d\",\"name$c\",\"name$b\",\"name$a\",\"name$9\",\"name$8\",\"name$7\",\"name$6\",\"name$5\",\"name$4\",\"name$3\",\"name$1\",\"name$2\",\"_apps\",\"_serverApps\",\"_components\",\"_addComponent\",\"app\",\"_registerComponent\",\"componentName\",\"serverApp\",\"_getProvider\",\"heartbeatController\",\"triggerHeartbeat\",\"_isFirebaseServerApp\",\"settings\",\"ERROR_FACTORY\",\"FirebaseAppImpl\",\"_isDeleted\",\"_options\",\"_config\",\"_name\",\"_automaticDataCollectionEnabled\",\"automaticDataCollectionEnabled\",\"_container\",\"checkDestroyed\",\"isDeleted\",\"appName\",\"SDK_VERSION\",\"initializeApp\",\"rawConfig\",\"existingApp\",\"newApp\",\"getApp\",\"registerVersion\",\"libraryKeyOrName\",\"variant\",\"libraryMismatch\",\"versionMismatch\",\"STORE_NAME\",\"dbPromise\",\"getDbPromise\",\"createObjectStore\",\"originalErrorMessage\",\"writeHeartbeatsToIndexedDB\",\"heartbeatObject\",\"put\",\"computeKey\",\"idbGetError\",\"appId\",\"HeartbeatServiceImpl\",\"_heartbeatsCache\",\"_storage\",\"HeartbeatStorageImpl\",\"_heartbeatsCachePromise\",\"read\",\"agent\",\"getUTCDateString\",\"heartbeats\",\"lastSentHeartbeatDate\",\"singleDateHeartbeat\",\"hbTimestamp\",\"valueOf\",\"overwrite\",\"getHeartbeatsHeader\",\"heartbeatsToSend\",\"unsentEntries\",\"heartbeatsCache\",\"maxSize\",\"heartbeatEntry\",\"find\",\"hb\",\"dates\",\"countBytes\",\"extractHeartbeatsForHeader\",\"headerString\",\"_canUseIndexedDBPromise\",\"runIndexedDBEnvironmentCheck\",\"idbHeartbeatObject\",\"readHeartbeatsFromIndexedDB\",\"heartbeatsObject\",\"existingHeartbeatsObject\",\"version$1\",\"PENDING_TIMEOUT_MS\",\"PACKAGE_VERSION\",\"INTERNAL_AUTH_VERSION\",\"TOKEN_EXPIRATION_BUFFER\",\"isServerError\",\"getInstallationsEndpoint\",\"extractAuthTokenInfoFromResponse\",\"response\",\"requestStatus\",\"expiresIn\",\"responseExpiresIn\",\"creationTime\",\"getErrorFromResponse\",\"requestName\",\"errorData\",\"json\",\"serverCode\",\"serverMessage\",\"serverStatus\",\"getHeaders\",\"apiKey\",\"Headers\",\"Accept\",\"getHeadersWithAuth\",\"appConfig\",\"refreshToken\",\"headers\",\"getAuthorizationHeader\",\"retryIfServerError\",\"sleep\",\"VALID_FID_PATTERN\",\"generateFid\",\"fidByteArray\",\"Uint8Array\",\"crypto\",\"msCrypto\",\"getRandomValues\",\"fid\",\"b64String\",\"encode\",\"getKey\",\"fidChangeCallbacks\",\"fidChanged\",\"callFidChangeCallbacks\",\"getBroadcastChannel\",\"closeBroadcastChannel\",\"broadcastFidChange\",\"broadcastChannel\",\"BroadcastChannel\",\"OBJECT_STORE_NAME\",\"oldValue\",\"updateFn\",\"getInstallationEntry\",\"installations\",\"registrationPromise\",\"installationEntry\",\"oldEntry\",\"registrationStatus\",\"clearTimedOutRequest\",\"updateOrCreateInstallationEntry\",\"entryWithPromise\",\"onLine\",\"inProgressEntry\",\"registrationTime\",\"registeredInstallationEntry\",\"_ref4\",\"_ref5\",\"heartbeatServiceProvider\",\"endpoint\",\"heartbeatService\",\"heartbeatsHeader\",\"authVersion\",\"sdkVersion\",\"ok\",\"responseValue\",\"authToken\",\"createInstallationRequest\",\"registerInstallation\",\"waitUntilFidRegistration\",\"triggerRegistrationIfNecessary\",\"updateInstallationRequest\",\"generateAuthTokenRequest\",\"_ref6\",\"_ref7\",\"getGenerateAuthTokenEndpoint\",\"installation\",\"refreshAuthToken\",\"tokenPromise\",\"forceRefresh\",\"isEntryRegistered\",\"oldAuthToken\",\"isAuthTokenExpired\",\"isAuthTokenValid\",\"updateAuthTokenRequest\",\"waitUntilAuthTokenRequest\",\"inProgressAuthToken\",\"requestTime\",\"makeAuthTokenRequestInProgressEntry\",\"updatedInstallationEntry\",\"fetchAuthTokenFromServer\",\"getToken\",\"installationsImpl\",\"completeInstallationRegistration\",\"getMissingValueError\",\"valueName\",\"INSTALLATIONS_NAME\",\"publicFactory\",\"configKeys\",\"keyName\",\"extractAppConfig\",\"internalFactory\",\"getId\",\"ANALYTICS_TYPE\",\"GTAG_URL\",\"createGtagTrustedTypesScriptURL\",\"gtagURL\",\"promiseAllSettled\",\"promises\",\"insertScriptTag\",\"dataLayerName\",\"measurementId\",\"trustedTypesPolicy\",\"policyName\",\"policyOptions\",\"trustedTypes\",\"createPolicy\",\"createTrustedTypesPolicy\",\"createScriptURL\",\"script\",\"gtagScriptURL\",\"wrapGtag\",\"gtagCore\",\"initializationPromisesMap\",\"dynamicConfigPromisesList\",\"measurementIdToAppId\",\"command\",\"gtagParams\",\"initializationPromisesToWaitFor\",\"gaSendToList\",\"dynamicConfigResults\",\"sendToId\",\"foundConfig\",\"initializationPromise\",\"gtagOnEvent\",\"correspondingAppId\",\"gtagOnConfig\",\"consentAction\",\"fieldName\",\"customParams\",\"defaultRetryData\",\"throttleMetadata\",\"intervalMillis\",\"getThrottleMetadata\",\"setThrottleMetadata\",\"metadata\",\"deleteThrottleMetadata\",\"fetchDynamicConfigWithRetry\",\"retryData\",\"timeoutMillis\",\"throttleEndTimeMillis\",\"AnalyticsAbortSignal\",\"attemptFetchDynamicConfigWithRetry\",\"appFields\",\"backoffMillis\",\"setAbortableTimeout\",\"appUrl\",\"errorMessage\",\"jsonResponse\",\"_ignored\",\"httpStatus\",\"responseMessage\",\"fetchDynamicConfig\",\"isRetriableError\",\"defaultEventParametersForInit\",\"defaultConsentSettingsForInit\",\"_setConsentDefaultForInit\",\"consentSettings\",\"_setDefaultEventParametersForInit\",\"_initializeAnalytics\",\"dynamicConfigPromise\",\"fidPromise\",\"validateIndexedDB\",\"envIsValid\",\"dynamicConfig\",\"scriptTags\",\"findGtagScriptOnPage\",\"configProperties\",\"AnalyticsService\",\"gtagCoreFunction\",\"wrappedGtagFunction\",\"gtagName\",\"globalInitDone\",\"warnOnBrowserContextMismatch\",\"mismatchedEnvMessages\",\"cookieEnabled\",\"details\",\"factory\",\"dataLayer\",\"getOrCreateDataLayer\",\"wrappedGtag\",\"gtagFunctionName\",\"_args\",\"wrapOrCreateGtag\",\"logEvent\",\"analyticsInstance\",\"eventParams\",\"gtagFunction\",\"logEvent$1\",\"analyticsOptions\",\"analytics\",\"__rest\",\"SuppressedError\",\"_prodErrorMap\",\"prodErrorMap\",\"_DEFAULT_AUTH_ERROR_FACTORY\",\"logClient\",\"_logError\",\"msg\",\"_fail\",\"authOrCode\",\"createErrorInternal\",\"_createError\",\"_errorWithCustomMessage\",\"auth\",\"errorMap\",\"_serverAppCurrentUserOperationNotSupportedError\",\"_assertInstanceOf\",\"fullParams\",\"_errorFactory\",\"_assert\",\"assertion\",\"_key7\",\"debugFail\",\"failure\",\"debugAssert\",\"_getCurrentUrl\",\"_isHttpOrHttps\",\"_getCurrentScheme\",\"Delay\",\"shortDelay\",\"longDelay\",\"isMobile\",\"_emulatorUrl\",\"emulator\",\"FetchProvider\",\"fetchImpl\",\"headersImpl\",\"responseImpl\",\"Response\",\"SERVER_ERROR_MAP\",\"DEFAULT_API_TIMEOUT_MS\",\"_addTidIfNecessary\",\"tenantId\",\"_performApiRequest\",\"_performFetchWithErrorHandling\",\"query\",\"_getAdditionalHeaders\",\"languageCode\",\"fetchArgs\",\"_getFinalTarget\",\"apiHost\",\"customErrorMap\",\"fetchFn\",\"_canInitEmulator\",\"networkTimeout\",\"NetworkTimeout\",\"race\",\"clearNetworkTimeout\",\"_makeTaggedError\",\"serverErrorCode\",\"serverErrorMessage\",\"authError\",\"_performSignInRequest\",\"serverResponse\",\"_serverResponse\",\"apiScheme\",\"_parseEnforcementState\",\"enforcementStateStr\",\"errorParams\",\"phoneNumber\",\"_tokenResponse\",\"isEnterprise\",\"grecaptcha\",\"enterprise\",\"RecaptchaConfig\",\"siteKey\",\"recaptchaEnforcementState\",\"recaptchaKey\",\"getProviderEnforcementState\",\"providerStr\",\"enforcementState\",\"isProviderEnabled\",\"isAnyProviderEnabled\",\"getRecaptchaConfig\",\"getAccountInfo\",\"utcTimestampToDateString\",\"utcTimestamp\",\"getTime\",\"toUTCString\",\"secondsStringToMilliseconds\",\"seconds\",\"_parseToken\",\"algorithm\",\"signature\",\"_tokenExpiresIn\",\"parsedToken\",\"_logoutIfInvalidated\",\"user\",\"isUserInvalidated\",\"currentUser\",\"signOut\",\"ProactiveRefresh\",\"isRunning\",\"timerId\",\"errorBackoff\",\"_start\",\"schedule\",\"_stop\",\"getInterval\",\"wasError\",\"interval\",\"stsTokenManager\",\"iteration\",\"getIdToken\",\"UserMetadata\",\"createdAt\",\"lastLoginAt\",\"_initializeTime\",\"lastSignInTime\",\"_copy\",\"toJSON\",\"_reloadWithoutSaving\",\"idToken\",\"users\",\"coreAccount\",\"_notifyReloadListener\",\"newProviderData\",\"providerUserInfo\",\"extractProviderData\",\"providerData\",\"original\",\"newData\",\"providerId\",\"oldIsAnonymous\",\"isAnonymous\",\"newIsAnonymous\",\"passwordHash\",\"updates\",\"localId\",\"photoURL\",\"photoUrl\",\"emailVerified\",\"rawId\",\"StsTokenManager\",\"accessToken\",\"isExpired\",\"updateFromServerResponse\",\"updateTokensAndExpiration\",\"updateFromIdToken\",\"refresh\",\"clearRefreshToken\",\"oldToken\",\"tokenApiHost\",\"access_token\",\"expires_in\",\"refresh_token\",\"requestStsToken\",\"expiresInSec\",\"fromJSON\",\"manager\",\"_assign\",\"_clone\",\"_performRefresh\",\"assertStringOrUndefined\",\"UserImpl\",\"opt\",\"proactiveRefresh\",\"reloadUserInfo\",\"reloadListener\",\"_persistUserIfCurrent\",\"_notifyListenersIfCurrent\",\"getIdTokenResult\",\"userInternal\",\"claims\",\"signInProvider\",\"authTime\",\"issuedAtTime\",\"signInSecondFactor\",\"userInfo\",\"newUser\",\"_onReload\",\"_startProactiveRefresh\",\"_stopProactiveRefresh\",\"_updateTokensIfNecessary\",\"tokensRefreshed\",\"deleteAccount\",\"_redirectEventId\",\"_fromJSON\",\"_c\",\"_d\",\"_e\",\"_f\",\"_g\",\"_h\",\"plainObjectTokenManager\",\"_fromIdTokenResponse\",\"idTokenResponse\",\"_fromGetAccountInfoResponse\",\"instanceCache\",\"_getInstance\",\"cls\",\"InMemoryPersistence\",\"storage\",\"_isAvailable\",\"_set\",\"_get\",\"_remove\",\"_addListener\",\"_listener\",\"_removeListener\",\"inMemoryPersistence\",\"_persistenceKeyName\",\"PersistenceUserManager\",\"persistence\",\"userKey\",\"fullUserKey\",\"fullPersistenceKey\",\"boundEventHandler\",\"_onStorageEvent\",\"setCurrentUser\",\"getCurrentUser\",\"blob\",\"removeCurrentUser\",\"savePersistenceForRedirect\",\"setPersistence\",\"newPersistence\",\"persistenceHierarchy\",\"availablePersistences\",\"selectedPersistence\",\"userToMigrate\",\"migrationHierarchy\",\"_shouldAllowMigration\",\"_getBrowserName\",\"ua\",\"_isIEMobile\",\"_isFirefox\",\"_isBlackBerry\",\"_isWebOS\",\"_isSafari\",\"_isChromeIOS\",\"_isAndroid\",\"_isIOS\",\"_isIE10\",\"isIE\",\"_isMobileBrowser\",\"_getClientVersion\",\"clientPlatform\",\"reportedPlatform\",\"frameworks\",\"reportedFrameworks\",\"AuthMiddlewareQueue\",\"pushCallback\",\"onAbort\",\"wrappedCallback\",\"runMiddleware\",\"nextUser\",\"onAbortStack\",\"beforeStateCallback\",\"reverse\",\"originalMessage\",\"PasswordPolicyImpl\",\"responseOptions\",\"customStrengthOptions\",\"minPasswordLength\",\"maxPasswordLength\",\"containsLowercaseCharacter\",\"containsLowercaseLetter\",\"containsUppercaseCharacter\",\"containsUppercaseLetter\",\"containsNumericCharacter\",\"containsNonAlphanumericCharacter\",\"allowedNonAlphanumericCharacters\",\"forceUpgradeOnSignin\",\"schemaVersion\",\"validatePassword\",\"isValid\",\"passwordPolicy\",\"validatePasswordLengthOptions\",\"validatePasswordCharacterOptions\",\"meetsMinPasswordLength\",\"meetsMaxPasswordLength\",\"passwordChar\",\"updatePasswordCharacterOptionsStatuses\",\"AuthImpl\",\"appCheckServiceProvider\",\"emulatorConfig\",\"operations\",\"authStateSubscription\",\"Subscription\",\"idTokenSubscription\",\"beforeStateQueue\",\"redirectUser\",\"isProactiveRefreshEnabled\",\"EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION\",\"_isInitialized\",\"_deleted\",\"_initializationPromise\",\"_popupRedirectResolver\",\"_agentRecaptchaConfig\",\"_tenantRecaptchaConfigs\",\"_projectPasswordPolicy\",\"_tenantPasswordPolicies\",\"lastNotifiedUid\",\"appVerificationDisabledForTesting\",\"clientVersion\",\"sdkClientVersion\",\"_initializeWithPersistence\",\"popupRedirectResolver\",\"persistenceManager\",\"_shouldInitProactively\",\"_initialize\",\"initializeCurrentUser\",\"assertedPersistence\",\"_currentUser\",\"_updateCurrentUser\",\"initializeCurrentUserFromIdToken\",\"directlySetCurrentUser\",\"authIdToken\",\"previouslyStoredUser\",\"futureCurrentUser\",\"needsTocheckMiddleware\",\"authDomain\",\"getOrInitRedirectPersistenceManager\",\"redirectUserEventId\",\"storedUserEventId\",\"tryRedirectSignIn\",\"_overrideRedirectResult\",\"reloadAndSetCurrentUserOrClear\",\"redirectResolver\",\"_completeRedirectFn\",\"_setRedirectUser\",\"useDeviceLanguage\",\"navigatorLanguage\",\"languages\",\"language\",\"_getUserLanguage\",\"updateCurrentUser\",\"userExtern\",\"skipBeforeStateCallbacks\",\"notifyAuthListeners\",\"redirectPersistenceManager\",\"_getRecaptchaConfig\",\"_getPasswordPolicyInternal\",\"_updatePasswordPolicy\",\"_getPasswordPolicy\",\"_getPersistence\",\"_updateErrorMap\",\"onAuthStateChanged\",\"completed\",\"registerStateListener\",\"beforeAuthStateChanged\",\"onIdTokenChanged\",\"authStateReady\",\"unsubscribe\",\"revokeAccessToken\",\"tokenType\",\"revokeToken\",\"redirectManager\",\"resolver\",\"_redirectPersistence\",\"_redirectUserForId\",\"currentUid\",\"subscription\",\"isUnsubscribed\",\"addObserver\",\"_logFramework\",\"framework\",\"_getFrameworks\",\"appCheckToken\",\"_getAppCheckToken\",\"appCheckTokenResult\",\"_logWarn\",\"_castAuth\",\"proxy\",\"createSubscribe\",\"externalJSProvider\",\"loadJS\",\"recaptchaV2Script\",\"recaptchaEnterpriseScript\",\"gapiScript\",\"_loadJS\",\"_generateCallbackName\",\"MockGreCAPTCHATopLevel\",\"MockGreCAPTCHA\",\"ready\",\"execute\",\"_siteKey\",\"_parameters\",\"FAKE_TOKEN\",\"RecaptchaEnterpriseVerifier\",\"authExtern\",\"verify\",\"retrieveRecaptchaToken\",\"clientType\",\"retrieveSiteKey\",\"injectRecaptchaFields\",\"isCaptchaResp\",\"isFakeToken\",\"verifier\",\"captchaResponse\",\"newRequest\",\"phoneEnrollmentInfo\",\"recaptchaToken\",\"phoneSignInInfo\",\"handleRecaptchaFlow\",\"authInstance\",\"actionName\",\"actionMethod\",\"recaptchaAuthProvider\",\"requestWithRecaptcha\",\"requestWithRecaptchaFields\",\"_initializeRecaptchaConfig\",\"authInternal\",\"connectAuthEmulator\",\"disableWarnings\",\"extractProtocol\",\"authority\",\"hostAndPort\",\"bracketedIPv6\",\"parsePort\",\"extractHostAndPort\",\"portStr\",\"freeze\",\"attachBanner\",\"el\",\"sty\",\"innerText\",\"readyState\",\"emitEmulatorWarning\",\"protocolEnd\",\"AuthCredential\",\"signInMethod\",\"_getIdTokenResponse\",\"_auth\",\"_linkToIdToken\",\"_idToken\",\"_getReauthenticationResolver\",\"linkEmailPassword\",\"signInWithPassword\",\"sendOobCode\",\"sendPasswordResetEmail$1\",\"EmailAuthCredential\",\"_email\",\"_password\",\"_tenantId\",\"_fromEmailAndPassword\",\"_fromEmailAndCode\",\"oobCode\",\"returnSecureToken\",\"signInWithEmailLink$1\",\"signInWithEmailLinkForLinking\",\"signInWithIdp\",\"OAuthCredential\",\"pendingToken\",\"_fromParams\",\"cred\",\"oauthToken\",\"oauthTokenSecret\",\"secret\",\"buildRequest\",\"autoCreate\",\"requestUri\",\"postBody\",\"sendPhoneVerificationCode\",\"VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\",\"PhoneAuthCredential\",\"_fromVerification\",\"verificationId\",\"verificationCode\",\"_fromTokenResponse\",\"temporaryProof\",\"signInWithPhoneNumber$1\",\"_makeVerificationRequest\",\"linkWithPhoneNumber$1\",\"operation\",\"verifyPhoneNumberForExisting\",\"sessionInfo\",\"ActionCodeURL\",\"actionLink\",\"parseMode\",\"continueUrl\",\"parseLink\",\"doubleDeepLink\",\"iOSDeepLink\",\"parseDeepLink\",\"EmailAuthProvider\",\"PROVIDER_ID\",\"credential\",\"credentialWithLink\",\"emailLink\",\"actionCodeUrl\",\"EMAIL_PASSWORD_SIGN_IN_METHOD\",\"EMAIL_LINK_SIGN_IN_METHOD\",\"FederatedAuthProvider\",\"defaultLanguageCode\",\"customParameters\",\"setDefaultLanguage\",\"setCustomParameters\",\"customOAuthParameters\",\"getCustomParameters\",\"BaseOAuthProvider\",\"scopes\",\"addScope\",\"getScopes\",\"FacebookAuthProvider\",\"FACEBOOK_SIGN_IN_METHOD\",\"credentialFromResult\",\"userCredential\",\"credentialFromTaggedObject\",\"credentialFromError\",\"tokenResponse\",\"oauthAccessToken\",\"GoogleAuthProvider\",\"GOOGLE_SIGN_IN_METHOD\",\"oauthIdToken\",\"GithubAuthProvider\",\"GITHUB_SIGN_IN_METHOD\",\"TwitterAuthProvider\",\"TWITTER_SIGN_IN_METHOD\",\"signUp\",\"UserCredentialImpl\",\"operationType\",\"providerIdForResponse\",\"_forOperation\",\"MultiFactorError\",\"_fromErrorAndOperation\",\"_processCredentialSavingMfaContextIfNecessary\",\"_link$1\",\"bypassAuthState\",\"_reauthenticate\",\"_signInWithCredential\",\"signInWithCredential\",\"_setActionCodeSettingsOnRequest\",\"actionCodeSettings\",\"dynamicLinkDomain\",\"canHandleCodeInApp\",\"handleCodeInApp\",\"iOS\",\"bundleId\",\"iOSBundleId\",\"android\",\"packageName\",\"androidInstallApp\",\"installApp\",\"androidMinimumVersionCode\",\"minimumVersion\",\"androidPackageName\",\"recachePasswordPolicy\",\"updateProfile\",\"profileRequest\",\"updateProfile$1\",\"passwordProvider\",\"_ref10\",\"startEnrollPhoneMfa\",\"STORAGE_AVAILABLE_KEY\",\"BrowserPersistenceClass\",\"storageRetriever\",\"removeItem\",\"BrowserLocalPersistence\",\"poll\",\"onStorageEvent\",\"localCache\",\"pollTimer\",\"fallbackToPolling\",\"forAllChangedKeys\",\"_oldValue\",\"notifyListeners\",\"detachListener\",\"stopPolling\",\"triggerListeners\",\"storedValue\",\"startPolling\",\"setInterval\",\"StorageEvent\",\"clearInterval\",\"attachListener\",\"browserLocalPersistence\",\"BrowserSessionPersistence\",\"sessionStorage\",\"browserSessionPersistence\",\"Receiver\",\"eventTarget\",\"handlersMap\",\"handleEvent\",\"receivers\",\"isListeningto\",\"newInstance\",\"messageEvent\",\"eventId\",\"ports\",\"fulfilled\",\"_allSettled\",\"_subscribe\",\"_unsubscribe\",\"_generateEventId\",\"digits\",\"Sender\",\"removeMessageHandler\",\"messageChannel\",\"onMessage\",\"_send\",\"completionTimer\",\"ackTimer\",\"finally\",\"_window\",\"_isWorker\",\"DB_NAME\",\"DB_OBJECTSTORE_NAME\",\"DB_DATA_KEYPATH\",\"DBPromise\",\"toPromise\",\"getObjectStore\",\"isReadWrite\",\"_openDatabase\",\"keyPath\",\"_deleteDatabase\",\"_putObject\",\"_deleteObject\",\"IndexedDBLocalPersistence\",\"pendingWrites\",\"sender\",\"serviceWorkerReceiverAvailable\",\"activeServiceWorker\",\"_workerInitializationPromise\",\"initializeServiceWorkerMessaging\",\"_openDb\",\"_withRetries\",\"op\",\"numAttempts\",\"initializeReceiver\",\"initializeSender\",\"_origin\",\"keyProcessed\",\"_poll\",\"_data\",\"serviceWorker\",\"_getActiveServiceWorker\",\"results\",\"notifyServiceWorker\",\"_getServiceWorkerController\",\"_withPendingWrite\",\"write\",\"getObject\",\"getAllRequest\",\"keysInResult\",\"fbase_key\",\"localKey\",\"indexedDBLocalPersistence\",\"startSignInPhoneMfa\",\"RECAPTCHA_VERIFIER_TYPE\",\"_verifyPhoneNumber\",\"phoneInfoOptions\",\"session\",\"startPhoneMfaEnrollmentRequest\",\"startPhoneMfaEnrollmentResponse\",\"injectRecaptchaV2Token\",\"phoneSessionInfo\",\"mfaEnrollmentId\",\"multiFactorHint\",\"multiFactorUid\",\"startPhoneMfaSignInRequest\",\"mfaPendingCredential\",\"startPhoneMfaSignInResponse\",\"phoneResponseInfo\",\"sendPhoneVerificationCodeRequest\",\"sendPhoneVerificationCodeResponse\",\"_reset\",\"recaptchaV2Verifier\",\"recaptchaV2Token\",\"recaptchaVersion\",\"PhoneAuthProvider\",\"verifyPhoneNumber\",\"phoneOptions\",\"applicationVerifier\",\"_withDefaultResolver\",\"resolverOverride\",\"PHONE_SIGN_IN_METHOD\",\"IdpCredential\",\"_buildIdpRequest\",\"sessionId\",\"returnIdpCredential\",\"_signIn\",\"_reauth\",\"_link\",\"AbstractPopupRedirectOperation\",\"pendingPromise\",\"eventManager\",\"onExecution\",\"registerConsumer\",\"onAuthEvent\",\"urlResponse\",\"getIdpTask\",\"unregisterAndCleanUp\",\"unregisterConsumer\",\"cleanUp\",\"_POLL_WINDOW_CLOSE_TIMEOUT\",\"PopupOperation\",\"authWindow\",\"pollId\",\"currentPopupAction\",\"cancel\",\"executeNotNull\",\"_openPopup\",\"associatedEvent\",\"_originValidation\",\"_isIframeWebStorageSupported\",\"isSupported\",\"pollUserCancellation\",\"closed\",\"redirectOutcomeMap\",\"RedirectAction\",\"readyOutcome\",\"hasPendingRedirect\",\"pendingRedirectKey\",\"resolverPersistence\",\"_getAndClearPendingRedirectStatus\",\"_getRedirectResult\",\"resolverExtern\",\"AuthEventManager\",\"cachedEventUids\",\"consumers\",\"queuedRedirectEvent\",\"hasHandledPotentialRedirect\",\"lastProcessedEventTime\",\"authEventConsumer\",\"isEventForConsumer\",\"sendToConsumer\",\"saveEventToCache\",\"onEvent\",\"hasEventBeenHandled\",\"handled\",\"isNullRedirectEvent\",\"isRedirectEvent\",\"eventIdMatches\",\"clear\",\"eventUid\",\"_ref13\",\"IP_ADDRESS_REGEX\",\"HTTP_REGEX\",\"_validateOrigin\",\"authorizedDomains\",\"_getProjectConfig\",\"domain\",\"matchDomain\",\"expected\",\"hostname\",\"ceUrl\",\"escapedDomainPattern\",\"NETWORK_TIMEOUT\",\"resetUnloadedGapiModules\",\"beacon\",\"___jsl\",\"hint\",\"CP\",\"loadGapi\",\"loadGapiIframe\",\"gapi\",\"load\",\"iframes\",\"getContext\",\"ontimeout\",\"Iframe\",\"cbName\",\"cachedGApiLoader\",\"PING_TIMEOUT\",\"IFRAME_ATTRIBUTES\",\"tabindex\",\"EID_FROM_APIHOST\",\"getIframeUrl\",\"eid\",\"fw\",\"_openIframe\",\"_loadGapi\",\"where\",\"messageHandlersFilter\",\"CROSS_ORIGIN_IFRAMES_FILTER\",\"dontclear\",\"iframe\",\"restyle\",\"setHideOnLeave\",\"networkError\",\"networkErrorTimer\",\"clearTimerAndResolve\",\"ping\",\"BASE_POPUP_OPTIONS\",\"resizable\",\"statusbar\",\"AuthPopup\",\"_open\",\"screen\",\"availHeight\",\"availWidth\",\"scrollbars\",\"optionsString\",\"accum\",\"standalone\",\"_isIOSStandalone\",\"click\",\"createEvent\",\"initMouseEvent\",\"openAsNewWindowIOS\",\"newWin\",\"WIDGET_PATH\",\"EMULATOR_WIDGET_PATH\",\"FIREBASE_APP_CHECK_FRAGMENT_ID\",\"_getRedirectUrl\",\"authType\",\"redirectUrl\",\"additionalParams\",\"isEmpty\",\"tid\",\"paramsDict\",\"appCheckTokenFragment\",\"getHandlerBase\",\"WEB_STORAGE_SUPPORT_KEY\",\"browserPopupRedirectResolver\",\"eventManagers\",\"originValidationPromises\",\"_openRedirect\",\"_setWindowLocation\",\"initAndGetManager\",\"register\",\"iframeEvent\",\"authEvent\",\"send\",\"AuthInterop\",\"internalListeners\",\"getUid\",\"assertAuthConfigured\",\"addAuthTokenListener\",\"updateProactiveRefresh\",\"removeAuthTokenListener\",\"authIdTokenMaxAge\",\"lastPostedIdToken\",\"charset\",\"getScriptParentElement\",\"hierarchy\",\"_initializeAuthInstance\",\"_instanceIdentifier\",\"getVersionForPlatform\",\"blockSize\",\"B\",\"isFinite\",\"F\",\"G\",\"I\",\"J\",\"ceil\",\"E\",\"and\",\"or\",\"xor\",\"bloom_blob_es2018\",\"Md5\",\"multiply\",\"modulo\",\"toNumber\",\"getBits\",\"fromNumber\",\"fromString\",\"Integer\",\"commonjsGlobal\",\"aa\",\"ca\",\"ba\",\"da\",\"ea\",\"fa\",\"ha\",\"ia\",\"ja\",\"ka\",\"Qb\",\"la\",\"ma\",\"oa\",\"pa\",\"qa\",\"sa\",\"ta\",\"va\",\"wa\",\"xa\",\"za\",\"Ba\",\"Ca\",\"Ea\",\"Da\",\"N\",\"Fa\",\"Ga\",\"Ha\",\"Ia\",\"Ja\",\"Ka\",\"Ma\",\"La\",\"Na\",\"Oa\",\"Qa\",\"once\",\"Ra\",\"Sa\",\"K\",\"Ta\",\"Ua\",\"Xa\",\"Va\",\"Wa\",\"Ya\",\"Za\",\"$a\",\"ab\",\"bb\",\"eb\",\"fb\",\"gb\",\"ib\",\"jb\",\"kb\",\"lb\",\"OPEN\",\"wb\",\"nb\",\"ob\",\"qb\",\"rb\",\"sb\",\"STAT_EVENT\",\"stat\",\"tb\",\"ub\",\"vb\",\"yb\",\"Cb\",\"Ab\",\"NO_ERROR\",\"TIMEOUT\",\"xb\",\"Bb\",\"Hb\",\"zb\",\"Pb\",\"Db\",\"R\",\"U\",\"O\",\"W\",\"P\",\"Eb\",\"XMLHttpRequest\",\"Fb\",\"Gb\",\"Ib\",\"Jb\",\"Kb\",\"Lb\",\"Mb\",\"Y\",\"Sb\",\"Wb\",\"Ob\",\"Ub\",\"Q\",\"Rb\",\"Xb\",\"Yb\",\"Zb\",\"$b\",\"ac\",\"Aa\",\"ya\",\"getResponseHeader\",\"bc\",\"cc\",\"dc\",\"ec\",\"fc\",\"gc\",\"Z\",\"Nb\",\"TextDecoder\",\"stream\",\"Tb\",\"getAllResponseHeaders\",\"ra\",\"Vb\",\"hc\",\"ic\",\"PerformanceNavigationTiming\",\"getEntriesByType\",\"nextHopProtocol\",\"loadTimes\",\"wasFetchedViaSpdy\",\"jc\",\"kc\",\"nc\",\"na\",\"V\",\"mc\",\"lc\",\"oc\",\"qc\",\"rc\",\"sc\",\"tc\",\"uc\",\"Dc\",\"Ac\",\"vc\",\"Bc\",\"decodeURI\",\"encodeURI\",\"Cc\",\"wc\",\"xc\",\"yc\",\"zc\",\"pc\",\"Ec\",\"onabort\",\"Hc\",\"Ic\",\"Jc\",\"Kc\",\"responseType\",\"responseText\",\"onreadystatechange\",\"Nc\",\"Pa\",\"ga\",\"Mc\",\"Lc\",\"Oc\",\"Pc\",\"credentials\",\"Request\",\"arrayBuffer\",\"ReadableStream\",\"getReader\",\"setRequestHeader\",\"Qc\",\"Rc\",\"Sc\",\"Uc\",\"Vc\",\"Wc\",\"Tc\",\"mozResponseArrayBuffer\",\"Xc\",\"internalChannelParams\",\"Yc\",\"xmlHttpFactory\",\"useFetchStreams\",\"supportsCrossDomainXhr\",\"concurrentRequestLimit\",\"fastHandshake\",\"encodeInitMessageHeaders\",\"forceLongPolling\",\"detectBufferingProxy\",\"longPollingTimeout\",\"Zc\",\"$c\",\"sendBeacon\",\"Image\",\"ad\",\"ed\",\"dd\",\"cd\",\"fd\",\"bd\",\"Fc\",\"Gc\",\"gd\",\"hd\",\"messageUrlParams\",\"messageHeaders\",\"clientProtocolHeaderRequired\",\"initMessageHeaders\",\"messageContentType\",\"sendRawJson\",\"httpSessionIdParam\",\"__headers__\",\"statusCode\",\"__status__\",\"__sm__\",\"jd\",\"withCredentials\",\"connect\",\"OSID\",\"OAID\",\"__data__\",\"createWebChannel\",\"createWebChannelTransport\",\"webchannel_blob_es2018\",\"getStatEventTarget\",\"Event\",\"Stat\",\"PROXY\",\"NOPROXY\",\"HTTP_ERROR\",\"ErrorCode\",\"COMPLETE\",\"EventType\",\"CLOSE\",\"MESSAGE\",\"WebChannel\",\"FetchXmlHttpFactory\",\"listenOnce\",\"getLastError\",\"getLastErrorCode\",\"getStatus\",\"getResponseJson\",\"getResponseText\",\"setWithCredentials\",\"XhrIo\",\"User\",\"isAuthenticated\",\"toKey\",\"isEqual\",\"UNAUTHENTICATED\",\"GOOGLE_CREDENTIALS\",\"FIRST_PARTY\",\"MOCK_USER\",\"__PRIVATE_getLogLevel\",\"__PRIVATE_logDebug\",\"__PRIVATE_argToString\",\"__PRIVATE_logError\",\"__PRIVATE_logWarn\",\"fail\",\"__PRIVATE_hardAssert\",\"__PRIVATE_debugCast\",\"OK\",\"CANCELLED\",\"UNKNOWN\",\"INVALID_ARGUMENT\",\"DEADLINE_EXCEEDED\",\"NOT_FOUND\",\"ALREADY_EXISTS\",\"PERMISSION_DENIED\",\"RESOURCE_EXHAUSTED\",\"FAILED_PRECONDITION\",\"ABORTED\",\"OUT_OF_RANGE\",\"UNIMPLEMENTED\",\"UNAVAILABLE\",\"DATA_LOSS\",\"FirestoreError\",\"__PRIVATE_Deferred\",\"__PRIVATE_OAuthToken\",\"__PRIVATE_EmptyAuthCredentialsProvider\",\"invalidateToken\",\"enqueueRetryable\",\"shutdown\",\"__PRIVATE_EmulatorAuthCredentialsProvider\",\"changeListener\",\"__PRIVATE_FirebaseAuthCredentialsProvider\",\"__PRIVATE_guardedChangeListener\",\"__PRIVATE_awaitNextToken\",\"__PRIVATE_registerAuth\",\"__PRIVATE_FirstPartyToken\",\"__PRIVATE_FirstPartyAuthCredentialsProvider\",\"AppCheckToken\",\"__PRIVATE_FirebaseAppCheckTokenProvider\",\"appCheck\",\"onTokenChanged\",\"__PRIVATE_registerAppCheck\",\"addTokenListener\",\"removeTokenListener\",\"__PRIVATE_primitiveComparator\",\"__PRIVATE_arrayEquals\",\"Timestamp\",\"fromMillis\",\"fromDate\",\"nanoseconds\",\"toDate\",\"toMillis\",\"_compareTo\",\"padStart\",\"SnapshotVersion\",\"fromTimestamp\",\"timestamp\",\"compareTo\",\"toMicroseconds\",\"toTimestamp\",\"BasePath\",\"comparator\",\"limit\",\"popFirst\",\"popLast\",\"firstSegment\",\"lastSegment\",\"isPrefixOf\",\"isImmediateParentOf\",\"ResourcePath\",\"canonicalString\",\"toUriEncodedString\",\"emptyPath\",\"FieldPath$1\",\"isValidIdentifier\",\"isKeyField\",\"keyField\",\"fromServerFormat\",\"__PRIVATE_addCurrentSegment\",\"DocumentKey\",\"fromPath\",\"fromName\",\"empty\",\"collectionGroup\",\"hasCollectionId\",\"getCollectionGroup\",\"getCollectionPath\",\"isDocumentKey\",\"fromSegments\",\"FieldIndex\",\"indexId\",\"fields\",\"indexState\",\"UNKNOWN_ID\",\"__PRIVATE_newIndexOffsetSuccessorFromReadTime\",\"IndexOffset\",\"__PRIVATE_newIndexOffsetFromDocument\",\"readTime\",\"documentKey\",\"largestBatchId\",\"__PRIVATE_indexOffsetComparator\",\"PersistenceTransaction\",\"onCommittedListeners\",\"addOnCommittedListener\",\"raiseOnCommittedEvent\",\"PersistencePromise\",\"nextCallback\",\"catchCallback\",\"isDone\",\"callbackAttached\",\"wrapFailure\",\"wrapSuccess\",\"wrapUserFunction\",\"waitFor\",\"mapArray\",\"doWhile\",\"__PRIVATE_getAndroidVersion\",\"__PRIVATE_isIndexedDbTransactionError\",\"__PRIVATE_ListenSequence\",\"previousValue\",\"sequenceNumberHandler\",\"ie\",\"se\",\"writeSequenceNumber\",\"__PRIVATE_isNullOrUndefined\",\"__PRIVATE_isNegativeZero\",\"oe\",\"__PRIVATE_objectSize\",\"SortedMap\",\"LLRBNode\",\"EMPTY\",\"BLACK\",\"minKey\",\"maxKey\",\"inorderTraversal\",\"reverseTraversal\",\"getIterator\",\"SortedMapIterator\",\"getIteratorFrom\",\"getReverseIterator\",\"getReverseIteratorFrom\",\"isReverse\",\"nodeStack\",\"getNext\",\"hasNext\",\"RED\",\"fixUp\",\"removeMin\",\"isRed\",\"moveRedLeft\",\"rotateRight\",\"moveRedRight\",\"rotateLeft\",\"colorFlip\",\"checkMaxDepth\",\"SortedSet\",\"forEachInRange\",\"forEachWhile\",\"firstAfterOrEqual\",\"SortedSetIterator\",\"unionWith\",\"iter\",\"FieldMask\",\"covers\",\"__PRIVATE_Base64DecodeError\",\"ByteString\",\"binaryString\",\"fromBase64String\",\"fromUint8Array\",\"toBase64\",\"toUint8Array\",\"approximateByteSize\",\"EMPTY_BYTE_STRING\",\"ne\",\"__PRIVATE_normalizeTimestamp\",\"nanos\",\"__PRIVATE_normalizeNumber\",\"__PRIVATE_normalizeByteString\",\"__PRIVATE_isServerTimestamp\",\"mapValue\",\"__type__\",\"stringValue\",\"__PRIVATE_getPreviousValue\",\"__previous_value__\",\"__PRIVATE_getLocalWriteTime\",\"__local_write_time__\",\"timestampValue\",\"DatabaseId\",\"database\",\"isDefaultDatabase\",\"__PRIVATE_typeOrder\",\"__PRIVATE_isMaxValue\",\"__PRIVATE_isVectorValue\",\"__PRIVATE_valueEquals\",\"booleanValue\",\"bytesValue\",\"referenceValue\",\"geoPointValue\",\"latitude\",\"longitude\",\"integerValue\",\"doubleValue\",\"arrayValue\",\"__PRIVATE_arrayValueContains\",\"__PRIVATE_valueCompare\",\"__PRIVATE_compareTimestamps\",\"__PRIVATE_compareArrays\",\"canonicalId\",\"__PRIVATE_canonifyValue\",\"isInteger\",\"__PRIVATE_isMapValue\",\"__PRIVATE_deepClone\",\"ObjectValue\",\"getFieldsMap\",\"setAll\",\"applyChanges\",\"MutableDocument\",\"documentType\",\"createTime\",\"documentState\",\"newInvalidDocument\",\"newFoundDocument\",\"newNoDocument\",\"newUnknownDocument\",\"convertToFoundDocument\",\"convertToNoDocument\",\"convertToUnknownDocument\",\"setHasCommittedMutations\",\"setHasLocalMutations\",\"setReadTime\",\"hasLocalMutations\",\"hasCommittedMutations\",\"hasPendingWrites\",\"isValidDocument\",\"isFoundDocument\",\"isNoDocument\",\"isUnknownDocument\",\"mutableCopy\",\"Bound\",\"inclusive\",\"__PRIVATE_boundCompareToDocument\",\"__PRIVATE_boundEquals\",\"OrderBy\",\"__PRIVATE_orderByEquals\",\"Filter\",\"FieldFilter\",\"createKeyFieldInFilter\",\"__PRIVATE_KeyFieldFilter\",\"__PRIVATE_ArrayContainsFilter\",\"__PRIVATE_InFilter\",\"__PRIVATE_NotInFilter\",\"__PRIVATE_ArrayContainsAnyFilter\",\"__PRIVATE_KeyFieldInFilter\",\"__PRIVATE_KeyFieldNotInFilter\",\"matchesComparison\",\"isInequality\",\"getFlattenedFilters\",\"getFilters\",\"CompositeFilter\",\"filters\",\"ae\",\"__PRIVATE_compositeFilterIsConjunction\",\"__PRIVATE_compositeFilterIsFlatConjunction\",\"__PRIVATE_compositeFilterIsFlat\",\"__PRIVATE_canonifyFilter\",\"__PRIVATE_filterEquals\",\"__PRIVATE_stringifyFilter\",\"__PRIVATE_extractDocumentKeysFromArrayValue\",\"nullValue\",\"__PRIVATE_TargetImpl\",\"orderBy\",\"startAt\",\"endAt\",\"ue\",\"__PRIVATE_newTarget\",\"__PRIVATE_canonifyTarget\",\"__PRIVATE_targetEquals\",\"__PRIVATE_QueryImpl\",\"explicitOrderBy\",\"limitType\",\"ce\",\"le\",\"he\",\"__PRIVATE_newQuery\",\"__PRIVATE_queryMatchesAllDocuments\",\"__PRIVATE_isCollectionGroupQuery\",\"__PRIVATE_queryNormalizedOrderBy\",\"__PRIVATE_queryToTarget\",\"__PRIVATE__queryToTarget\",\"__PRIVATE_queryWithLimit\",\"__PRIVATE_queryEquals\",\"__PRIVATE_canonifyQuery\",\"__PRIVATE_stringifyQuery\",\"__PRIVATE_queryMatches\",\"__PRIVATE_newQueryComparator\",\"__PRIVATE_compareDocs\",\"ObjectMap\",\"mapKeyFn\",\"equalsFn\",\"inner\",\"innerSize\",\"__PRIVATE_mutableDocumentMap\",\"documentMap\",\"__PRIVATE_convertOverlayedDocumentMapToDocumentMap\",\"overlayedDocument\",\"__PRIVATE_newOverlayMap\",\"__PRIVATE_newDocumentKeyMap\",\"__PRIVATE_newMutationMap\",\"__PRIVATE_documentKeySet\",\"__PRIVATE_targetIdSet\",\"__PRIVATE_toDouble\",\"useProto3Json\",\"__PRIVATE_toInteger\",\"TransformOperation\",\"__PRIVATE_applyTransformOperationToLocalView\",\"__PRIVATE_ServerTimestampTransform\",\"__PRIVATE_ArrayUnionTransformOperation\",\"__PRIVATE_applyArrayUnionTransformOperation\",\"__PRIVATE_ArrayRemoveTransformOperation\",\"__PRIVATE_applyArrayRemoveTransformOperation\",\"__PRIVATE_computeTransformOperationBaseValue\",\"asNumber\",\"Pe\",\"__PRIVATE_applyTransformOperationToRemoteDocument\",\"__PRIVATE_NumericIncrementTransformOperation\",\"__PRIVATE_coercedFieldValuesArray\",\"Precondition\",\"updateTime\",\"exists\",\"none\",\"isNone\",\"__PRIVATE_preconditionIsValidForDocument\",\"Mutation\",\"__PRIVATE_calculateOverlayMutation\",\"__PRIVATE_DeleteMutation\",\"__PRIVATE_SetMutation\",\"__PRIVATE_PatchMutation\",\"__PRIVATE_mutationApplyToRemoteDocument\",\"__PRIVATE_serverTransformResults\",\"fieldTransforms\",\"transformResults\",\"precondition\",\"__PRIVATE_getPatch\",\"__PRIVATE_mutationApplyToLocalView\",\"__PRIVATE_localTransformResults\",\"fieldMask\",\"__PRIVATE_mutationEquals\",\"__PRIVATE_fieldTransformEquals\",\"getFieldMask\",\"MutationBatch\",\"batchId\",\"localWriteTime\",\"baseMutations\",\"mutations\",\"applyToRemoteDocument\",\"mutationResults\",\"applyToLocalView\",\"applyToLocalDocumentSet\",\"mutatedFields\",\"Overlay\",\"mutation\",\"__PRIVATE_mapCodeFromRpcCode\",\"JsonProtoSerializer\",\"databaseId\",\"__PRIVATE_fromVersion\",\"__PRIVATE_toResourcePath\",\"__PRIVATE_fromResourceName\",\"__PRIVATE_isValidResourceName\",\"__PRIVATE_fromQueryPath\",\"__PRIVATE_extractLocalPathFromResourceName\",\"__PRIVATE_convertQueryTargetToQuery\",\"structuredQuery\",\"allDescendants\",\"collectionId\",\"__PRIVATE_fromFilter\",\"__PRIVATE_fromFieldPathReference\",\"unaryFilter\",\"NaN\",\"fieldFilter\",\"compositeFilter\",\"fieldPath\",\"__PRIVATE_LocalSerializer\",\"ht\",\"__PRIVATE_fromBundledQuery\",\"__PRIVATE_FirestoreIndexValueWriter\",\"Et\",\"dt\",\"At\",\"Rt\",\"Vt\",\"ft\",\"gt\",\"yt\",\"wt\",\"St\",\"bt\",\"Dt\",\"vt\",\"Ct\",\"__PRIVATE_MemoryIndexManager\",\"__PRIVATE_MemoryCollectionParentIndex\",\"addToCollectionParentIndex\",\"ln\",\"getCollectionParents\",\"getEntries\",\"addFieldIndex\",\"deleteFieldIndex\",\"deleteAllFieldIndexes\",\"createTargetIndexes\",\"getDocumentsMatchingTarget\",\"getIndexType\",\"getFieldIndexes\",\"getNextCollectionGroupToUpdate\",\"getMinOffset\",\"getMinOffsetFromCollectionGroup\",\"updateCollectionGroup\",\"updateIndexEntries\",\"LruParams\",\"withCacheSize\",\"DEFAULT_COLLECTION_PERCENTILE\",\"DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\",\"cacheSizeCollectionThreshold\",\"percentileToCollect\",\"maximumSequenceNumbersToCollect\",\"DEFAULT\",\"DISABLED\",\"__PRIVATE_TargetIdGenerator\",\"kn\",\"qn\",\"Qn\",\"RemoteDocumentChangeBuffer\",\"changes\",\"changesApplied\",\"addEntry\",\"assertNotApplied\",\"removeEntry\",\"getEntry\",\"getFromCache\",\"getAllFromCache\",\"OverlayedDocument\",\"LocalDocumentsView\",\"remoteDocumentCache\",\"mutationQueue\",\"documentOverlayCache\",\"indexManager\",\"getDocument\",\"getOverlay\",\"getDocuments\",\"getLocalViewOfDocuments\",\"populateOverlays\",\"computeViews\",\"getOverlayedDocuments\",\"recalculateAndSaveOverlays\",\"getAllMutationBatchesAffectingDocumentKeys\",\"saveOverlays\",\"recalculateAndSaveOverlaysForDocumentKeys\",\"getDocumentsMatchingQuery\",\"getDocumentsMatchingDocumentQuery\",\"getDocumentsMatchingCollectionGroupQuery\",\"getDocumentsMatchingCollectionQuery\",\"getNextDocuments\",\"getAllFromCollectionGroup\",\"getOverlaysForCollectionGroup\",\"getOverlaysForCollection\",\"__PRIVATE_MemoryBundleCache\",\"Tr\",\"Ir\",\"getBundleMetadata\",\"saveBundleMetadata\",\"getNamedQuery\",\"saveNamedQuery\",\"bundledQuery\",\"__PRIVATE_MemoryDocumentOverlayCache\",\"Er\",\"Tt\",\"removeOverlaysForBatchId\",\"__PRIVATE_MemoryGlobalsCache\",\"sessionToken\",\"getSessionToken\",\"setSessionToken\",\"__PRIVATE_ReferenceSet\",\"dr\",\"__PRIVATE_DocReference\",\"Ar\",\"Rr\",\"Vr\",\"addReference\",\"removeReference\",\"gr\",\"yr\",\"wr\",\"Sr\",\"containsKey\",\"br\",\"__PRIVATE_MemoryMutationQueue\",\"referenceDelegate\",\"Dr\",\"vr\",\"checkEmpty\",\"addMutationBatch\",\"lookupMutationBatch\",\"Cr\",\"getNextMutationBatchAfterBatchId\",\"Fr\",\"getHighestUnacknowledgedBatchId\",\"getAllMutationBatches\",\"getAllMutationBatchesAffectingDocumentKey\",\"POSITIVE_INFINITY\",\"Mr\",\"getAllMutationBatchesAffectingQuery\",\"removeMutationBatch\",\"Or\",\"markPotentiallyOrphaned\",\"Ln\",\"performConsistencyCheck\",\"__PRIVATE_MemoryRemoteDocumentCacheImpl\",\"Nr\",\"docs\",\"setIndexManager\",\"Lr\",\"newChangeBuffer\",\"__PRIVATE_MemoryRemoteDocumentChangeBuffer\",\"getSize\",\"hr\",\"__PRIVATE_MemoryTargetCache\",\"Br\",\"lastRemoteSnapshotVersion\",\"highestTargetId\",\"kr\",\"qr\",\"targetCount\",\"Qr\",\"forEachTarget\",\"getLastRemoteSnapshotVersion\",\"getHighestSequenceNumber\",\"allocateTargetId\",\"setTargetsMetadata\",\"Un\",\"targetId\",\"sequenceNumber\",\"addTargetData\",\"updateTargetData\",\"removeTargetData\",\"removeTargets\",\"removeMatchingKeysForTargetId\",\"getTargetCount\",\"getTargetData\",\"addMatchingKeys\",\"removeMatchingKeys\",\"getMatchingKeysForTargetId\",\"__PRIVATE_MemoryPersistence\",\"Kr\",\"$r\",\"Ur\",\"Wr\",\"Gr\",\"zr\",\"jr\",\"started\",\"setDatabaseDeletedListener\",\"setNetworkEnabled\",\"getIndexManager\",\"getDocumentOverlayCache\",\"getMutationQueue\",\"getGlobalsCache\",\"getTargetCache\",\"getRemoteDocumentCache\",\"getBundleCache\",\"runTransaction\",\"__PRIVATE_MemoryTransaction\",\"Hr\",\"Jr\",\"Yr\",\"currentSequenceNumber\",\"__PRIVATE_MemoryEagerDelegate\",\"Xr\",\"ei\",\"ti\",\"Zr\",\"removeTarget\",\"ni\",\"updateLimboDocument\",\"__PRIVATE_LocalViewChanges\",\"fromCache\",\"Wi\",\"Gi\",\"zi\",\"docChanges\",\"QueryContext\",\"_documentReadCount\",\"documentReadCount\",\"incrementDocumentReadCount\",\"__PRIVATE_QueryEngine\",\"ji\",\"Hi\",\"Ji\",\"Yi\",\"Zi\",\"Xi\",\"es\",\"ts\",\"rs\",\"ss\",\"os\",\"__PRIVATE_LocalStoreImpl\",\"_s\",\"us\",\"cs\",\"ls\",\"hs\",\"Ps\",\"localDocuments\",\"collectGarbage\",\"collect\",\"__PRIVATE_newLocalStore\",\"__PRIVATE_localStoreHandleUserChange\",\"Ts\",\"removedBatchIds\",\"addedBatchIds\",\"__PRIVATE_LocalClientState\",\"activeTargetIds\",\"ps\",\"ys\",\"gs\",\"updateTimeMs\",\"__PRIVATE_MemorySharedClientState\",\"_o\",\"ao\",\"onlineStateHandler\",\"addPendingMutation\",\"updateMutationState\",\"addLocalQueryTarget\",\"updateQueryState\",\"removeLocalQueryTarget\",\"isLocalQueryTarget\",\"clearQueryState\",\"getAllActiveQueryTargets\",\"isActiveQueryTarget\",\"handleUserChange\",\"setOnlineState\",\"notifyBundleLoaded\",\"__PRIVATE_NoopConnectivityMonitor\",\"uo\",\"__PRIVATE_BrowserConnectivityMonitor\",\"co\",\"lo\",\"ho\",\"Po\",\"To\",\"Io\",\"me\",\"__PRIVATE_generateUniqueDebugId\",\"fe\",\"BatchGetDocuments\",\"Commit\",\"RunQuery\",\"RunAggregationQuery\",\"__PRIVATE_StreamBridge\",\"Eo\",\"Ao\",\"Ro\",\"Vo\",\"mo\",\"fo\",\"po\",\"yo\",\"wo\",\"So\",\"bo\",\"Do\",\"vo\",\"ge\",\"__PRIVATE_WebChannelConnection\",\"Co\",\"databaseInfo\",\"ssl\",\"Fo\",\"Mo\",\"xo\",\"Oo\",\"No\",\"Lo\",\"Bo\",\"ko\",\"terminate\",\"autoDetectLongPolling\",\"longPollingOptions\",\"qo\",\"forwardChannelRequestTimeoutMs\",\"timeoutSeconds\",\"__PRIVATE_closeFn\",\"__PRIVATE_unguardedEventListen\",\"__PRIVATE_newSerializer\",\"__PRIVATE_ExponentialBackoff\",\"li\",\"Qo\",\"Ko\",\"$o\",\"Uo\",\"Wo\",\"Go\",\"zo\",\"jo\",\"Ho\",\"enqueueAfterDelay\",\"Jo\",\"skipDelay\",\"__PRIVATE_DatastoreImpl\",\"authCredentials\",\"appCheckCredentials\",\"connection\",\"S_\",\"b_\",\"_ref11\",\"__PRIVATE_OnlineStateTracker\",\"asyncQueue\",\"D_\",\"v_\",\"C_\",\"F_\",\"M_\",\"x_\",\"O_\",\"N_\",\"__PRIVATE_RemoteStoreImpl\",\"localStore\",\"datastore\",\"remoteSyncer\",\"L_\",\"q_\",\"Q_\",\"enqueueAndForget\",\"__PRIVATE_canUseNetwork\",\"k_\",\"__PRIVATE_disableNetworkInternal\",\"K_\",\"__PRIVATE_enableNetworkInternal\",\"__PRIVATE_remoteStoreApplyPrimaryState\",\"DelayedOperation\",\"targetTimeMs\",\"removalCallback\",\"createAndSchedule\",\"timerHandle\",\"handleDelayElapsed\",\"__PRIVATE_EventManagerImpl\",\"queries\",\"__PRIVATE_newQueriesObjectMap\",\"onlineState\",\"J_\",\"__PRIVATE_raiseSnapshotsInSyncEvent\",\"X_\",\"pe\",\"ye\",\"Cache\",\"__PRIVATE_SyncEngineImpl\",\"remoteStore\",\"sharedClientState\",\"maxConcurrentLimboResolutions\",\"isPrimaryClient\",\"__PRIVATE_syncEngineApplyOnlineStateChange\",\"snapshot\",\"R_\",\"__PRIVATE_syncEngineEmitNewSnapsAndNotifyLocalStore\",\"targetChanges\",\"snapshotVersion\",\"withLastLimboFreeSnapshotVersion\",\"__PRIVATE_syncEngineHandleCredentialChange\",\"__PRIVATE_MemoryOfflineComponentProvider\",\"kind\",\"synchronizeTabs\",\"gcScheduler\",\"indexBackfillerScheduler\",\"initialUser\",\"stop\",\"build\",\"OnlineComponentProvider\",\"createDatastore\",\"createRemoteStore\",\"createEventManager\",\"syncEngine\",\"createSyncEngine\",\"handleCredentialChange\",\"__PRIVATE_cloneLongPollingOptions\",\"we\",\"__PRIVATE_valueDescription\",\"__PRIVATE_cast\",\"FirestoreSettingsImpl\",\"ignoreUndefinedProperties\",\"cacheSizeBytes\",\"__PRIVATE_validateIsNotUsedTogether\",\"experimentalForceLongPolling\",\"experimentalAutoDetectLongPolling\",\"experimentalLongPollingOptions\",\"Firestore$1\",\"_authCredentials\",\"_appCheckCredentials\",\"_databaseId\",\"_app\",\"_persistenceKey\",\"_settings\",\"_settingsFrozen\",\"_terminateTask\",\"_initialized\",\"_terminated\",\"_setSettings\",\"sessionIndex\",\"iamToken\",\"authTokenFactory\",\"client\",\"_getSettings\",\"_freezeSettings\",\"_terminate\",\"_restart\",\"__PRIVATE_AsyncQueueImpl\",\"Iu\",\"Eu\",\"du\",\"Au\",\"Ru\",\"Vu\",\"mu\",\"r_\",\"fu\",\"visibilityState\",\"gu\",\"isShuttingDown\",\"enqueue\",\"enqueueAndForgetEvenWhileRestricted\",\"pu\",\"yu\",\"enterRestrictedMode\",\"wu\",\"Su\",\"verifyOperationInProgress\",\"bu\",\"Du\",\"vu\",\"Cu\",\"Firestore\",\"_queue\",\"_firestoreClient\",\"DEFAULT_HOST\",\"CONFIG_STORAGE_BUCKET_KEY\",\"StorageError\",\"status_\",\"prependCode\",\"_baseMessage\",\"_codeEquals\",\"StorageErrorCode\",\"unknown\",\"retryLimitExceeded\",\"RETRY_LIMIT_EXCEEDED\",\"canceled\",\"CANCELED\",\"invalidArgument\",\"appDeleted\",\"APP_DELETED\",\"Location\",\"bucket\",\"path_\",\"isRoot\",\"fullServerUrl\",\"bucketOnlyServerUrl\",\"makeFromBucketSpec\",\"bucketString\",\"bucketLocation\",\"makeFromUrl\",\"INVALID_DEFAULT_BUCKET\",\"bucketDomain\",\"gsRegex\",\"httpModify\",\"loc\",\"firebaseStorageHost\",\"groups\",\"indices\",\"postModify\",\"group\",\"captures\",\"bucketValue\",\"pathValue\",\"INVALID_URL\",\"invalidUrl\",\"FailRequest\",\"promise_\",\"getPromise\",\"validateNumber\",\"minValue\",\"maxValue\",\"makeQueryString\",\"queryPart\",\"isRetryStatusCode\",\"additionalRetryCodes\",\"isFiveHundredCode\",\"isExtraRetryCode\",\"isAdditionalRetryCode\",\"NetworkRequest\",\"url_\",\"method_\",\"headers_\",\"body_\",\"successCodes_\",\"additionalRetryCodes_\",\"callback_\",\"errorCallback_\",\"timeout_\",\"progressCallback_\",\"connectionFactory_\",\"pendingConnection_\",\"backoffId_\",\"canceled_\",\"appDelete_\",\"resolve_\",\"reject_\",\"start_\",\"doTheRequest\",\"backoffCallback\",\"RequestEndStatus\",\"progressListener\",\"progressEvent\",\"loaded\",\"total\",\"lengthComputable\",\"addUploadProgressListener\",\"removeUploadProgressListener\",\"hitServer\",\"getErrorCode\",\"wasCanceled\",\"ABORT\",\"successCode\",\"backoffDone\",\"requestWentThrough\",\"wasSuccessCode\",\"getResponse\",\"isJustDef\",\"getErrorText\",\"doRequest\",\"backoffCompleteCb\",\"waitSeconds\",\"retryTimeoutId\",\"globalTimeoutId\",\"hitTimeout\",\"cancelState\",\"triggeredCallback\",\"triggerCallback\",\"callWithDelay\",\"millis\",\"responseHandler\",\"clearGlobalTimeout\",\"waitMillis\",\"stopped\",\"wasTimeout\",\"appDelete\",\"lastComponent\",\"Reference\",\"_service\",\"_location\",\"_newRef\",\"fullPath\",\"newPath\",\"_throwIfRoot\",\"INVALID_ROOT_OPERATION\",\"invalidRootOperation\",\"extractBucket\",\"FirebaseStorageImpl\",\"_authProvider\",\"_appCheckProvider\",\"_url\",\"_firebaseVersion\",\"_bucket\",\"_host\",\"_protocol\",\"_appId\",\"_maxOperationRetryTime\",\"_maxUploadRetryTime\",\"_requests\",\"maxUploadRetryTime\",\"maxOperationRetryTime\",\"_getAuthToken\",\"_overrideAuthToken\",\"tokenData\",\"_makeStorageReference\",\"_makeRequest\",\"requestInfo\",\"requestFactory\",\"firebaseVersion\",\"urlParams\",\"addGmpidHeader_\",\"addAuthHeader_\",\"addVersionHeader_\",\"addAppCheckHeader_\",\"successCodes\",\"errorHandler\",\"progressCallback\",\"makeRequest\",\"makeRequestWithTokens\",\"STORAGE_TYPE\",\"authProvider\",\"appCheckProvider\",\"storageBucket\",\"messagingSenderId\",\"initializeAuth\",\"authTokenSyncPath\",\"isSecureContext\",\"authTokenSyncUrl\",\"mintCookie\",\"idTokenResult\",\"idTokenAge\",\"authEmulatorHost\",\"getAuth\",\"AuthContext\",\"mockUserToken\",\"connectFirestoreEmulator\",\"getFirestore\",\"bucketUrl\",\"storageInstance\",\"connectStorageEmulator$1\",\"connectStorageEmulator\",\"getStorage\",\"analyticsProvider\",\"initializeAnalytics\",\"getAnalytics\",\"useAuth\",\"AuthProvider\",\"setLoading\",\"signup\",\"signUpResponse\",\"createUserWithEmailAndPassword\",\"login\",\"signInWithEmailAndPassword\",\"loginWithGoogle\",\"resolverInternal\",\"signInWithPopup\",\"logout\",\"resetPassword\",\"requestType\",\"sendPasswordResetEmail\",\"composeClasses\",\"slots\",\"getUtilityClass\",\"classes\",\"slotName\",\"slot\",\"buffer\",\"reactPropsRegex\",\"testOmitPropsOnStringTag\",\"testOmitPropsOnComponent\",\"getDefaultShouldForwardProp\",\"composeShouldForwardProps\",\"isReal\",\"shouldForwardProp\",\"optionsShouldForwardProp\",\"__emotion_forwardProp\",\"newStyled\",\"createStyled\",\"targetClassName\",\"__emotion_real\",\"baseTag\",\"__emotion_base\",\"label\",\"defaultShouldForwardProp\",\"shouldUseAs\",\"templateStringsArr\",\"Styled\",\"FinalTag\",\"classInterpolations\",\"finalShouldForwardProp\",\"withComponent\",\"nextTag\",\"nextOptions\",\"_extends\",\"styled\",\"emStyled\",\"wrapper\",\"internal_serializeStyles\",\"emSerializeStyles\",\"preprocessStyles\",\"isProcessed\",\"systemDefaultTheme\",\"defaultOverridesResolver\",\"processStyle\",\"resolvedStyle\",\"flatMap\",\"subStyle\",\"rootStyle\",\"processStyleVariants\",\"mergedState\",\"variantLoop\",\"_mergedState\",\"_mergedState2\",\"ownerState\",\"_props$ownerState\",\"rootShouldForwardProp\",\"slotShouldForwardProp\",\"styleAttachTheme\",\"isObjectEmpty\",\"attachTheme\",\"inputOptions\",\"processor\",\"mutateStyles\",\"componentSlot\",\"skipVariantsResolver\",\"inputSkipVariantsResolver\",\"skipSx\",\"inputSkipSx\",\"overridesResolver\",\"lowercaseFirstLetter\",\"shouldForwardPropOption\",\"defaultStyledResolver\",\"styledEngineStyled\",\"generateStyledLabel\",\"transformStyle\",\"muiStyledResolver\",\"expressionsHead\",\"expressionsInput\",\"expressionsBody\",\"expressionsTail\",\"_theme$components\",\"resolvedStyleOverrides\",\"_theme$components2\",\"themeVariants\",\"inputStrings\",\"placeholdersHead\",\"fill\",\"placeholdersTail\",\"outputStrings\",\"expressions\",\"muiName\",\"withConfig\",\"styleFn\",\"lastTheme\",\"useSystemDefaultProps\",\"defaultGenerator\",\"createClassNameGenerator\",\"generate\",\"configure\",\"generator\",\"globalStateClasses\",\"expanded\",\"focused\",\"focusVisible\",\"readOnly\",\"generateUtilityClass\",\"globalStateClass\",\"ClassNameGenerator\",\"generateUtilityClasses\",\"globalStatePrefix\",\"getSvgIconUtilityClass\",\"SvgIconRoot\",\"_theme$transitions\",\"_theme$transitions$cr\",\"_theme$vars\",\"_theme$typography\",\"_theme$typography$pxT\",\"_theme$typography2\",\"_theme$typography2$px\",\"_theme$typography3\",\"_theme$typography3$px\",\"_theme$vars2\",\"_palette2\",\"_theme$vars4\",\"_palette3\",\"_theme$vars5\",\"userSelect\",\"hasSvgAsChild\",\"_palette\",\"_theme$vars3\",\"SvgIcon\",\"inProps\",\"htmlColor\",\"inheritViewBox\",\"titleAccess\",\"viewBox\",\"instanceFontSize\",\"more\",\"useUtilityClasses\",\"clsx\",\"focusable\",\"role\",\"createSvgIcon\",\"useThemeProps\",\"defaultCreateStyledComponent\",\"systemStyled\",\"fixed\",\"disableGutters\",\"useThemePropsDefault\",\"useThemePropsSystem\",\"Container\",\"createStyledComponent\",\"ContainerRoot\",\"breakpointValueKey\",\"classesProp\",\"createContainer\",\"extendSxProp\",\"inSx\",\"systemProps\",\"_props$theme$unstable\",\"splitProps\",\"finalSx\",\"Box\",\"defaultClassName\",\"generateClassName\",\"BoxRoot\",\"_extendSxProp\",\"createBox\",\"boxClasses\",\"MuiGlobalStyles\",\"SystemGlobalStyles\",\"globalCss\",\"createSimplePaletteValueFilter\",\"additionalPropertiesToCheck\",\"hasCorrectMainProperty\",\"checkSimplePaletteColorValues\",\"getTypographyUtilityClass\",\"v6Colors\",\"textPrimary\",\"textSecondary\",\"textDisabled\",\"TypographyRoot\",\"align\",\"noWrap\",\"gutterBottom\",\"paragraph\",\"_theme$palette\",\"_ref8\",\"defaultVariantMapping\",\"Typography\",\"_useDefaultProps\",\"themeProps\",\"isSxColor\",\"variantMapping\",\"setRef\",\"useForkRef\",\"isHostComponent\",\"componentProps\",\"slotState\",\"excludeKeys\",\"parameters\",\"getSlotProps\",\"additionalProps\",\"externalSlotProps\",\"externalForwardedProps\",\"joinedClasses\",\"mergedStyle\",\"internalRef\",\"eventHandlers\",\"extractEventHandlers\",\"componentsPropsWithoutEventHandlers\",\"omitEventHandlers\",\"otherPropsWithoutEventHandlers\",\"internalSlotProps\",\"_excluded3\",\"useSlot\",\"initialElementType\",\"internalForwardedProps\",\"useSlotPropsParams\",\"rootComponent\",\"resolvedComponentsProps\",\"resolveComponentProps\",\"_mergeSlotProps\",\"mergeSlotProps\",\"slotComponent\",\"LeafComponent\",\"appendOwnerState\",\"useThemeSystem\",\"getPaperUtilityClass\",\"PaperRoot\",\"square\",\"rounded\",\"backgroundImage\",\"Paper\",\"_theme$vars$overlays\",\"getAlertUtilityClass\",\"isFocusVisible\",\"useEnhancedEffect\",\"UNINITIALIZED\",\"useLazyRef\",\"initArg\",\"LazyRipple\",\"ripple\",\"shouldMount\",\"setShouldMount\",\"didMount\",\"mounted\",\"mount\",\"resolveFn\",\"rejectFn\",\"createControlledPromise\",\"_this$ref$current\",\"_this$ref$current2\",\"pulsate\",\"_this$ref$current3\",\"_taggedTemplateLiteral\",\"_setPrototypeOf\",\"__proto__\",\"_inheritsLoose\",\"getChildMapping\",\"mapFn\",\"mapper\",\"getProp\",\"getNextChildMapping\",\"prevChildMapping\",\"onExited\",\"nextChildMapping\",\"getValueForKey\",\"nextKeysPending\",\"pendingKeys\",\"prevKey\",\"childMapping\",\"nextKey\",\"pendingNextKey\",\"mergeChildMappings\",\"hasPrev\",\"prevChild\",\"isLeaving\",\"in\",\"exit\",\"enter\",\"TransitionGroup\",\"_React$Component\",\"handleExited\",\"ReferenceError\",\"_assertThisInitialized\",\"isMounting\",\"firstRender\",\"appear\",\"currentChildMapping\",\"_this$props\",\"childFactory\",\"TransitionGroupContext\",\"Timeout\",\"currentId\",\"useTimeout\",\"disposeEffect\",\"rippleX\",\"rippleY\",\"rippleSize\",\"inProp\",\"leaving\",\"setLeaving\",\"rippleClassName\",\"rippleVisible\",\"ripplePulsate\",\"rippleStyles\",\"childClassName\",\"childLeaving\",\"childPulsate\",\"timeoutId\",\"_templateObject\",\"_templateObject2\",\"_templateObject3\",\"_templateObject4\",\"enterKeyframe\",\"exitKeyframe\",\"pulsateKeyframe\",\"TouchRippleRoot\",\"pointerEvents\",\"TouchRippleRipple\",\"Ripple\",\"touchRippleClasses\",\"TouchRipple\",\"center\",\"centerProp\",\"ripples\",\"setRipples\",\"rippleCallback\",\"ignoringMouseDown\",\"startTimer\",\"startTimerCommit\",\"startCommit\",\"oldRipples\",\"fakeElement\",\"rect\",\"getBoundingClientRect\",\"sqrt\",\"sizeX\",\"clientWidth\",\"sizeY\",\"clientHeight\",\"getButtonBaseUtilityClass\",\"ButtonBaseRoot\",\"WebkitTapHighlightColor\",\"verticalAlign\",\"MozAppearance\",\"WebkitAppearance\",\"textDecoration\",\"borderStyle\",\"buttonBaseClasses\",\"colorAdjust\",\"ButtonBase\",\"centerRipple\",\"disableRipple\",\"disableTouchRipple\",\"focusRipple\",\"focusVisibleClassName\",\"LinkComponent\",\"onContextMenu\",\"onDragLeave\",\"onFocusVisible\",\"onKeyDown\",\"onKeyUp\",\"onMouseDown\",\"onMouseUp\",\"onTouchEnd\",\"onTouchMove\",\"tabIndex\",\"TouchRippleProps\",\"touchRippleRef\",\"buttonRef\",\"handleRippleRef\",\"setFocusVisible\",\"enableTouchRipple\",\"handleMouseDown\",\"useRippleHandler\",\"handleContextMenu\",\"handleDragLeave\",\"handleMouseUp\",\"handleMouseLeave\",\"handleTouchStart\",\"handleTouchEnd\",\"handleTouchMove\",\"handleBlur\",\"handleFocus\",\"useEventCallback\",\"isNonNativeButton\",\"handleKeyDown\",\"handleKeyUp\",\"ComponentProp\",\"buttonProps\",\"handleRef\",\"composedClasses\",\"rippleAction\",\"eventCallback\",\"skipRippleAction\",\"getIconButtonUtilityClass\",\"IconButtonRoot\",\"edge\",\"activeChannel\",\"mainChannel\",\"iconButtonClasses\",\"IconButton\",\"disableFocusRipple\",\"AlertRoot\",\"severity\",\"getColor\",\"getBackgroundColor\",\"colorSeverity\",\"alertClasses\",\"AlertIcon\",\"AlertMessage\",\"AlertAction\",\"defaultIconMapping\",\"SuccessOutlinedIcon\",\"ReportProblemOutlinedIcon\",\"ErrorOutlineIcon\",\"InfoOutlinedIcon\",\"closeText\",\"componentsProps\",\"iconMapping\",\"onClose\",\"closeButton\",\"CloseButton\",\"closeIcon\",\"CloseIcon\",\"CloseButtonSlot\",\"closeButtonProps\",\"CloseIconSlot\",\"closeIconProps\",\"globalId\",\"maybeReactUseId\",\"idOverride\",\"reactId\",\"defaultId\",\"setDefaultId\",\"useGlobalId\",\"ownerWindow\",\"debounce\",\"wait\",\"debounced\",\"later\",\"TextareaAutosize\",\"onChange\",\"maxRows\",\"minRows\",\"isControlled\",\"inputRef\",\"heightRef\",\"shadowRef\",\"calculateTextareaStyles\",\"computedStyle\",\"outerHeightStyle\",\"overflowing\",\"inputShallow\",\"placeholder\",\"borderBottomWidth\",\"borderTopWidth\",\"innerHeight\",\"scrollHeight\",\"singleRowHeight\",\"outerHeight\",\"syncHeight\",\"textareaStyles\",\"handleResize\",\"rAF\",\"debounceHandleResize\",\"containerWindow\",\"resizeObserver\",\"ResizeObserver\",\"cancelAnimationFrame\",\"rows\",\"formControlState\",\"states\",\"muiFormControl\",\"useFormControl\",\"FormControlContext\",\"hasValue\",\"isFilled\",\"SSR\",\"getInputBaseUtilityClass\",\"_InputGlobalStyles\",\"rootOverridesResolver\",\"formControl\",\"startAdornment\",\"adornedStart\",\"endAdornment\",\"adornedEnd\",\"sizeSmall\",\"multiline\",\"fullWidth\",\"hiddenLabel\",\"inputOverridesResolver\",\"inputSizeSmall\",\"inputMultiline\",\"inputTypeSearch\",\"inputAdornedStart\",\"inputAdornedEnd\",\"inputHiddenLabel\",\"InputBaseRoot\",\"inputBaseClasses\",\"InputBaseInput\",\"placeholderHidden\",\"placeholderVisible\",\"WebkitTextFillColor\",\"disableInjectingGlobalStyles\",\"animationDuration\",\"resize\",\"InputGlobalStyles\",\"InputBase\",\"_slotProps$input\",\"ariaDescribedby\",\"autoComplete\",\"inputComponent\",\"inputProps\",\"inputPropsProp\",\"inputRefProp\",\"renderSuffix\",\"valueProp\",\"handleInputRefWarning\",\"handleInputRef\",\"setFocused\",\"fcs\",\"onFilled\",\"onEmpty\",\"checkDirty\",\"InputComponent\",\"setAdornedStart\",\"Root\",\"rootProps\",\"Input\",\"onAnimationStart\",\"getInputUtilityClass\",\"InputRoot\",\"inputBaseRootOverridesResolver\",\"disableUnderline\",\"underline\",\"bottomLineColor\",\"onBackgroundChannel\",\"inputClasses\",\"borderBottomStyle\",\"InputInput\",\"inputBaseInputOverridesResolver\",\"_slots$root\",\"_slots$input\",\"componentsPropsProp\",\"inputComponentsProps\",\"RootSlot\",\"InputSlot\",\"getFilledInputUtilityClass\",\"FilledInputRoot\",\"hoverBackground\",\"bg\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"hoverBg\",\"filledInputClasses\",\"disabledBg\",\"_palette$color\",\"FilledInputInput\",\"WebkitBoxShadow\",\"caretColor\",\"_ref17\",\"filledInputComponentsProps\",\"_span\",\"NotchedOutlineRoot\",\"borderWidth\",\"NotchedOutlineLegend\",\"float\",\"withLabel\",\"notched\",\"getOutlinedInputUtilityClass\",\"OutlinedInputRoot\",\"outlinedInputClasses\",\"notchedOutline\",\"OutlinedInputInput\",\"OutlinedInput\",\"_React$Fragment\",\"filled\",\"getFormLabelUtilityClasses\",\"FormLabelRoot\",\"colorSecondary\",\"formLabelClasses\",\"AsteriskComponent\",\"asterisk\",\"FormLabel\",\"getInputLabelUtilityClasses\",\"InputLabelRoot\",\"shrink\",\"disableAnimation\",\"animated\",\"transformOrigin\",\"InputLabel\",\"shrinkProp\",\"muiNames\",\"_element$type$muiName\",\"_element$type\",\"getFormControlUtilityClasses\",\"FormControlRoot\",\"FormControl\",\"visuallyFocused\",\"initialAdornedStart\",\"isMuiElement\",\"setFilled\",\"initialFilled\",\"focusedState\",\"registerEffect\",\"childContext\",\"getFormHelperTextUtilityClasses\",\"FormHelperTextRoot\",\"contained\",\"formHelperTextClasses\",\"FormHelperText\",\"getReactElementRef\",\"_element$props\",\"_parameters$additiona\",\"skipResolvingSlotProps\",\"getListUtilityClass\",\"ListRoot\",\"disablePadding\",\"dense\",\"subheader\",\"listStyle\",\"List\",\"ListContext\",\"getScrollbarSize\",\"win\",\"documentWidth\",\"innerWidth\",\"nextItem\",\"disableListWrap\",\"previousItem\",\"previousElementSibling\",\"textCriteriaMatches\",\"nextFocus\",\"textCriteria\",\"repeating\",\"moveFocus\",\"currentFocus\",\"disabledItemsFocusable\",\"traversalFunction\",\"wrappedOnce\",\"nextFocusDisabled\",\"MenuList\",\"actions\",\"autoFocusItem\",\"listRef\",\"textCriteriaRef\",\"previousKeyMatched\",\"lastTime\",\"adjustStyleForScrollbar\",\"containerElement\",\"noExplicitWidth\",\"scrollbarSize\",\"activeItemIndex\",\"muiSkipListHighlight\",\"items\",\"newChildProps\",\"criteria\",\"lowerKey\",\"currTime\",\"keepFocusOnCurrent\",\"UNMOUNTED\",\"EXITED\",\"ENTERING\",\"ENTERED\",\"EXITING\",\"Transition\",\"initialStatus\",\"appearStatus\",\"unmountOnExit\",\"mountOnEnter\",\"updateStatus\",\"nextStatus\",\"cancelNextCallback\",\"getTimeouts\",\"mounting\",\"nodeRef\",\"forceReflow\",\"performEnter\",\"performExit\",\"_this2\",\"appearing\",\"maybeNode\",\"maybeAppearing\",\"timeouts\",\"enterTimeout\",\"safeSetState\",\"onEntered\",\"onEnter\",\"onEntering\",\"onTransitionEnd\",\"_this3\",\"onExit\",\"onExiting\",\"setNextCallback\",\"_this4\",\"doesNotHaveTimeoutOrListener\",\"addEndListener\",\"maybeNextCallback\",\"childProps\",\"reflow\",\"getTransitionProps\",\"_style$transitionDura\",\"_style$transitionTimi\",\"transitionDuration\",\"transitionTimingFunction\",\"transitionDelay\",\"getScale\",\"entering\",\"entered\",\"isWebKit154\",\"Grow\",\"TransitionComponent\",\"autoTimeout\",\"normalizedTransitionCallback\",\"maybeIsAppearing\",\"handleEntering\",\"handleEnter\",\"isAppearing\",\"handleEntered\",\"handleExiting\",\"handleExit\",\"restChildProps\",\"muiSupportAuto\",\"candidatesSelector\",\"defaultGetTabbable\",\"regularTabNodes\",\"orderedTabNodes\",\"nodeTabIndex\",\"tabindexAttr\",\"getTabIndex\",\"getRadio\",\"roving\",\"isNonTabbableRadio\",\"isNodeMatchingSelectorFocusable\",\"documentOrder\",\"defaultIsEnabled\",\"disableAutoFocus\",\"disableEnforceFocus\",\"disableRestoreFocus\",\"getTabbable\",\"isEnabled\",\"ignoreNextEnforceFocus\",\"sentinelStart\",\"sentinelEnd\",\"nodeToRestore\",\"reactFocusEventTarget\",\"activated\",\"rootRef\",\"lastKeydown\",\"loopFocus\",\"contain\",\"rootElement\",\"hasFocus\",\"tabbable\",\"_lastKeydown$current\",\"_lastKeydown$current2\",\"isShiftTab\",\"focusNext\",\"focusPrevious\",\"handleFocusSentinel\",\"childrenPropsHandler\",\"disablePortal\",\"mountNode\",\"setMountNode\",\"getContainer\",\"Fade\",\"defaultTimeout\",\"transitionProps\",\"webkitTransition\",\"getBackdropUtilityClass\",\"BackdropRoot\",\"invisible\",\"Backdrop\",\"TransitionComponentProp\",\"TransitionSlot\",\"createChainedFunction\",\"funcs\",\"ariaHidden\",\"hide\",\"getPaddingRight\",\"ariaHiddenSiblings\",\"mountElement\",\"currentElement\",\"elementsToExclude\",\"isNotExcludedElement\",\"isNotForbiddenElement\",\"isForbiddenTagName\",\"isInputHidden\",\"isAriaHiddenForbiddenOnElement\",\"findIndexOf\",\"handleContainer\",\"restoreStyle\",\"disableScrollLock\",\"isOverflowing\",\"scrollContainer\",\"DocumentFragment\",\"parentElement\",\"overflowY\",\"overflowX\",\"restore\",\"removeProperty\",\"modals\",\"containers\",\"modalIndex\",\"modalRef\",\"hiddenSiblings\",\"getHiddenSiblings\",\"containerIndex\",\"ariaHiddenState\",\"nextTop\",\"isTopModal\",\"disableEscapeKeyDown\",\"closeAfterTransition\",\"onTransitionEnter\",\"onTransitionExited\",\"mountNodeRef\",\"exited\",\"setExited\",\"hasTransition\",\"getHasTransition\",\"ariaHiddenProp\",\"getModal\",\"handleMounted\",\"handleOpen\",\"resolvedContainer\",\"handlePortalRef\",\"handleClose\",\"createHandleKeyDown\",\"otherHandlers\",\"_otherHandlers$onKeyD\",\"createHandleBackdropClick\",\"_otherHandlers$onClic\",\"getRootProps\",\"propsEventHandlers\",\"externalEventHandlers\",\"getBackdropProps\",\"_children$props$onEnt\",\"_children$props$onExi\",\"portalRef\",\"getModalUtilityClass\",\"ModalRoot\",\"hidden\",\"ModalBackdrop\",\"backdrop\",\"Modal\",\"BackdropComponent\",\"BackdropProps\",\"hideBackdrop\",\"keepMounted\",\"onBackdropClick\",\"propsWithDefaults\",\"useModal\",\"BackdropSlot\",\"backdropProps\",\"backdropRef\",\"FocusTrap\",\"getPopoverUtilityClass\",\"getOffsetTop\",\"vertical\",\"getOffsetLeft\",\"horizontal\",\"getTransformOriginValue\",\"resolveAnchorEl\",\"anchorEl\",\"PopoverRoot\",\"PopoverPaper\",\"PaperBase\",\"Popover\",\"_slotProps$paper\",\"anchorOrigin\",\"anchorPosition\",\"anchorReference\",\"containerProp\",\"marginThreshold\",\"PaperProps\",\"PaperPropsProp\",\"transitionDurationProp\",\"TransitionProps\",\"externalPaperSlotProps\",\"paperRef\",\"getAnchorOffset\",\"resolvedAnchorEl\",\"anchorRect\",\"getTransformOrigin\",\"elemRect\",\"getPositioningStyle\",\"offsetWidth\",\"offsetHeight\",\"elemTransformOrigin\",\"heightThreshold\",\"widthThreshold\",\"isPositioned\",\"setIsPositioned\",\"setPositioningStyles\",\"positioning\",\"updatePosition\",\"PaperSlot\",\"paperProps\",\"rootSlotPropsProp\",\"handlePaperRef\",\"getMenuUtilityClass\",\"RTL_ORIGIN\",\"LTR_ORIGIN\",\"MenuRoot\",\"MenuPaper\",\"WebkitOverflowScrolling\",\"MenuMenuList\",\"_slots$paper\",\"disableAutoFocusItem\",\"MenuListProps\",\"PopoverClasses\",\"isRtl\",\"menuListActionsRef\",\"paperExternalSlotProps\",\"rootSlotProps\",\"useSlotProps\",\"paperSlotProps\",\"getNativeSelectUtilityClasses\",\"StyledSelectSelect\",\"nativeSelectClasses\",\"NativeSelectSelect\",\"select\",\"StyledSelectIcon\",\"NativeSelectIcon\",\"iconOpen\",\"NativeSelectInput\",\"IconComponent\",\"controlled\",\"defaultProp\",\"valueState\",\"getSelectUtilityClasses\",\"SelectSelect\",\"selectClasses\",\"SelectIcon\",\"SelectNativeInput\",\"nativeInput\",\"areEqualValues\",\"SelectInput\",\"_MenuProps$slotProps\",\"ariaLabel\",\"autoWidth\",\"defaultOpen\",\"displayEmpty\",\"labelId\",\"MenuProps\",\"onOpen\",\"openProp\",\"renderValue\",\"SelectDisplayProps\",\"tabIndexProp\",\"setValueState\",\"useControlled\",\"openState\",\"setOpenState\",\"displayRef\",\"displayNode\",\"setDisplayNode\",\"isOpenControlled\",\"menuMinWidthState\",\"setMenuMinWidthState\",\"handleDisplayRef\",\"anchorElement\",\"getElementById\",\"isCollapsed\",\"childrenArray\",\"handleItemClick\",\"itemIndex\",\"clonedEvent\",\"displaySingle\",\"displayMultiple\",\"computeDisplay\",\"foundMatch\",\"menuMinWidth\",\"buttonId\",\"listboxId\",\"childItem\",\"styledRootConfig\",\"StyledInput\",\"StyledOutlinedInput\",\"StyledFilledInput\",\"Select\",\"ArrowDropDownIcon\",\"native\",\"variantProp\",\"restOfClasses\",\"outlined\",\"inputComponentRef\",\"getTextFieldUtilityClass\",\"variantComponent\",\"TextFieldRoot\",\"TextField\",\"FormHelperTextProps\",\"FormHelperTextPropsProp\",\"helperText\",\"InputLabelProps\",\"InputLabelPropsProp\",\"InputProps\",\"InputPropsProp\",\"SelectProps\",\"SelectPropsProp\",\"helperTextId\",\"inputLabelId\",\"inputLabel\",\"htmlInput\",\"formHelperText\",\"inputAdditionalProps\",\"inputLabelSlotProps\",\"InputLabelSlot\",\"inputLabelProps\",\"HtmlInputSlot\",\"htmlInputProps\",\"FormHelperTextSlot\",\"formHelperTextProps\",\"SelectSlot\",\"selectProps\",\"InputElement\",\"htmlFor\",\"getInputAdornmentUtilityClass\",\"InputAdornmentRoot\",\"disablePointerEvents\",\"inputAdornmentClasses\",\"positionStart\",\"InputAdornment\",\"disableTypography\",\"getButtonUtilityClass\",\"commonIconStyles\",\"ButtonRoot\",\"colorInherit\",\"disableElevation\",\"inheritContainedBackgroundColor\",\"inheritContainedHoverBackgroundColor\",\"buttonClasses\",\"inheritContainedBg\",\"inheritContainedHoverBg\",\"primaryChannel\",\"ButtonStartIcon\",\"startIcon\",\"ButtonEndIcon\",\"endIcon\",\"contextProps\",\"ButtonGroupContext\",\"buttonGroupButtonContextPositionClassName\",\"ButtonGroupButtonContext\",\"endIconProp\",\"startIconProp\",\"positionClassName\",\"getDividerUtilityClass\",\"DividerRoot\",\"absolute\",\"orientation\",\"flexItem\",\"withChildren\",\"withChildrenVertical\",\"textAlignRight\",\"textAlignLeft\",\"dividerChannel\",\"borderRightWidth\",\"borderTopStyle\",\"borderLeftStyle\",\"DividerWrapper\",\"wrapperVertical\",\"Divider\",\"Login\",\"setEmail\",\"setPassword\",\"setError\",\"showPassword\",\"setShowPassword\",\"VisibilityOff\",\"Visibility\",\"GoogleIcon\",\"ProtectedRoute\",\"ResetPassword\",\"setMessage\",\"Signup\",\"confirmPassword\",\"setConfirmPassword\",\"setDisplayName\",\"getToolbarUtilityClass\",\"ToolbarRoot\",\"gutters\",\"Toolbar\",\"getListItemUtilityClass\",\"getListItemSecondaryActionClassesUtilityClass\",\"ListItemSecondaryActionRoot\",\"ListItemSecondaryAction\",\"ListItemRoot\",\"alignItemsFlexStart\",\"hasSecondaryAction\",\"secondaryAction\",\"listItemButtonClasses\",\"backgroundClip\",\"ListItemContainer\",\"ListItem\",\"childrenProp\",\"componentProp\",\"ContainerComponent\",\"ContainerProps\",\"ContainerClassName\",\"listItemRef\",\"getListItemIconUtilityClass\",\"ListItemIconRoot\",\"ListItemIcon\",\"getListItemTextUtilityClass\",\"ListItemTextRoot\",\"listItemTextClasses\",\"inset\",\"typographyClasses\",\"ListItemText\",\"primaryProp\",\"primaryTypographyProps\",\"secondaryProp\",\"secondaryTypographyProps\",\"PrimarySlot\",\"primarySlotProps\",\"SecondarySlot\",\"secondarySlotProps\",\"isDynamicSupport\",\"enableColorScheme\",\"WebkitFontSmoothing\",\"MozOsxFontSmoothing\",\"WebkitTextSizeAdjust\",\"colorSchemeStyles\",\"_scheme$palette\",\"_scheme$palette2\",\"defaultStyles\",\"themeOverrides\",\"MuiCssBaseline\",\"SELECTOR\",\"baseStyles\",\"_scheme$palette3\",\"_scheme$palette4\",\"staticStyles\",\"getAppBarUtilityClass\",\"joinVars\",\"var1\",\"var2\",\"AppBarRoot\",\"defaultBg\",\"enableColorOnDark\",\"darkBg\",\"darkColor\",\"setTranslateValue\",\"containerPropProp\",\"containerRect\",\"fakeTransform\",\"getPropertyValue\",\"offsetX\",\"offsetY\",\"transformValues\",\"getTranslateValue\",\"webkitTransform\",\"Slide\",\"defaultEasing\",\"easingProp\",\"childrenRef\",\"getDrawerUtilityClass\",\"docked\",\"DrawerRoot\",\"DrawerDockedRoot\",\"DrawerPaper\",\"anchor\",\"oppositeDirection\",\"Drawer\",\"defaultTransitionDuration\",\"anchorProp\",\"ModalProps\",\"BackdropPropsProp\",\"SlideProps\",\"anchorInvariant\",\"isHorizontal\",\"getAnchor\",\"slidingDrawer\",\"drawerWidth\",\"Dashboard\",\"mobileOpen\",\"setMobileOpen\",\"handleDrawerToggle\",\"handleLogout\",\"DashboardIcon\",\"PersonIcon\",\"GameIcon\",\"TrophyIcon\",\"LogoutIcon\",\"CssBaseline\",\"MenuIcon\",\"App\"],\"sourceRoot\":\"\"}",
        "TODO found: found: comments",
        "TODO found: found: s = re.findall(r'(?i)#?\\s*todo:?\\s*(.+)$', content, re.MULTILINE)",
        "TODO found: found: s:",
        "TODO found: found: found: {todo.strip()}\" for todo in todos])",
        "TODO found: found: Implement forgot password functionality",
        "TODO found: found: Implement token generation/retrieval",
        "TODO found: found: Implement contact form handling",
        "TODO found: found: Implement art direction based on specified crop/focus",
        "TODO found: found: Implement database query to fetch matches",
        "TODO found: found: Implement database query to fetch historical data",
        "TODO found: found: Implement email sending",
        "TODO found: found: Implement email sending",
        "TODO found: found: Implement admin check",
        "TODO found: found: Implement rate limiting",
        "TODO found: found: Implement actual token verification",
        "TODO found: found: Implement actual notification sending",
        "TODO found: found: Implement proper validation",
        "TODO found: found: Load from configuration file",
        "TODO found: found: Implement proper schema validation",
        "TODO found: found: Implement double elimination bracket creation",
        "TODO found: found: Implement actual visit tracking",
        "TODO found: found: Implement regional leaderboard",
        "TODO found: found: Implement challenge generation logic",
        "TODO found: found: Implement error tracking service integration",
        "TODO found: found: v6: remove `lowercaseFirstLetter()` in the next major release\\n        // For more details: https://github.com/mui/material-ui/pull/37908\\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\\n      } = inputOptions,\\n      options = (0, _objectWithoutPropertiesLoose2.default)(inputOptions, _excluded3);\\n\\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\\n    // TODO v6: remove `Root` in the next major release\\n    // For more details: https://github.com/mui/material-ui/pull/37908\\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\\n    const skipSx = inputSkipSx || false;\\n    let label;\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (componentName) {\\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\\n        // For more details: https://github.com/mui/material-ui/pull/37908\\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\\n      }\\n    }\\n    let shouldForwardPropOption = shouldForwardProp;\\n\\n    // TODO v6: remove `Root` in the next major release\\n    // For more details: https://github.com/mui/material-ui/pull/37908\\n    if (componentSlot === 'Root' || componentSlot === 'root') {\\n      shouldForwardPropOption = rootShouldForwardProp;\\n    } else if (componentSlot) {\\n      // any other slot specified\\n      shouldForwardPropOption = slotShouldForwardProp;\\n    } else if (isStringTag(tag)) {\\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\\n      shouldForwardPropOption = undefined;\\n    }\\n    const defaultStyledResolver = (0, _styledEngine.default)(tag, (0, _extends2.default)({\\n      shouldForwardProp: shouldForwardPropOption,\\n      label\\n    }, options));\\n    const transformStyleArg = stylesArg => {\\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\\n      // component stays as a function. This condition makes sure that we do not interpolate functions\\n      // which are basically components used as a selectors.\\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || (0, _deepmerge.isPlainObject)(stylesArg)) {\\n        return props => processStyleArg(stylesArg, (0, _extends2.default)({}, props, {\\n          theme: resolveTheme({\\n            theme: props.theme,\\n            defaultTheme,\\n            themeId\\n          })\\n        }));\\n      }\\n      return stylesArg;\\n    };\\n    const muiStyledResolver = (styleArg, ...expressions) => {\\n      let transformedStyleArg = transformStyleArg(styleArg);\\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\\n      if (componentName && overridesResolver) {\\n        expressionsWithDefaultTheme.push(props => {\\n          const theme = resolveTheme((0, _extends2.default)({}, props, {\\n            defaultTheme,\\n            themeId\\n          }));\\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\\n            return null;\\n          }\\n          const styleOverrides = theme.components[componentName].styleOverrides;\\n          const resolvedStyleOverrides = {};\\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, (0, _extends2.default)({}, props, {\\n              theme\\n            }));\\n          });\\n          return overridesResolver(props, resolvedStyleOverrides);\\n        });\\n      }\\n      if (componentName && !skipVariantsResolver) {\\n        expressionsWithDefaultTheme.push(props => {\\n          var _theme$components;\\n          const theme = resolveTheme((0, _extends2.default)({}, props, {\\n            defaultTheme,\\n            themeId\\n          }));\\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\\n          return processStyleArg({\\n            variants: themeVariants\\n          }, (0, _extends2.default)({}, props, {\\n            theme\\n          }));\\n        });\\n      }\\n      if (!skipSx) {\\n        expressionsWithDefaultTheme.push(systemSx);\\n      }\\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\\n        transformedStyleArg = [...styleArg, ...placeholders];\\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\\n      }\\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\\n      if (process.env.NODE_ENV !== 'production') {\\n        let displayName;\\n        if (componentName) {\\n          displayName = `${componentName}${(0, _capitalize.default)(componentSlot || '')}`;\\n        }\\n        if (displayName === undefined) {\\n          displayName = `Styled(${(0, _getDisplayName.default)(tag)})`;\\n        }\\n        Component.displayName = displayName;\\n      }\\n      if (tag.muiName) {\\n        Component.muiName = tag.muiName;\\n      }\\n      return Component;\\n    };\\n    if (defaultStyledResolver.withConfig) {\\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\\n    }\\n    return muiStyledResolver;\\n  };\\n}\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport PropTypes from 'prop-types';\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport merge from './merge';\\n\\n// The breakpoint **start** at this value.\\n// For instance with the first breakpoint xs: [xs, sm[.\\nexport const values = {\\n  xs: 0,\\n  // phone\\n  sm: 600,\\n  // tablet\\n  md: 900,\\n  // small laptop\\n  lg: 1200,\\n  // desktop\\n  xl: 1536 // large screen\\n};\\nconst defaultBreakpoints = {\\n  // Sorted ASC by size. That's important.\\n  // It can't be configured as it's used statically for propTypes.\\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\\n  up: key => `@media (min-width:${values[key]}px)`\\n};\\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\\n  const theme = props.theme || {};\\n  if (Array.isArray(propValue)) {\\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\\n    return propValue.reduce((acc, item, index) => {\\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\\n      return acc;\\n    }, {});\\n  }\\n  if (typeof propValue === 'object') {\\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\\n      // key is breakpoint\\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\\n        const mediaKey = themeBreakpoints.up(breakpoint);\\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\\n      } else {\\n        const cssKey = breakpoint;\\n        acc[cssKey] = propValue[cssKey];\\n      }\\n      return acc;\\n    }, {});\\n  }\\n  const output = styleFromPropValue(propValue);\\n  return output;\\n}\\nfunction breakpoints(styleFunction) {\\n  // false positive\\n  // eslint-disable-next-line react/function-component-definition\\n  const newStyleFunction = props => {\\n    const theme = props.theme || {};\\n    const base = styleFunction(props);\\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\\n      if (props[key]) {\\n        acc = acc || {};\\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\\n          theme\\n        }, props[key]));\\n      }\\n      return acc;\\n    }, null);\\n    return merge(base, extended);\\n  };\\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\\n    xs: PropTypes.object,\\n    sm: PropTypes.object,\\n    md: PropTypes.object,\\n    lg: PropTypes.object,\\n    xl: PropTypes.object\\n  }) : {};\\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\\n  return newStyleFunction;\\n}\\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\\n  var _breakpointsInput$key;\\n  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\\n    const breakpointStyleKey = breakpointsInput.up(key);\\n    acc[breakpointStyleKey] = {};\\n    return acc;\\n  }, {});\\n  return breakpointsInOrder || {};\\n}\\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\\n  return breakpointKeys.reduce((acc, key) => {\\n    const breakpointOutput = acc[key];\\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\\n    if (isBreakpointUnused) {\\n      delete acc[key];\\n    }\\n    return acc;\\n  }, style);\\n}\\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\\n}\\n\\n// compute base for responsive values; e.g.,\\n// [1,2,3] => {xs: true, sm: true, md: true}\\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\\nexport function computeBreakpointsBase(breakpointValues, themeBreakpoints) {\\n  // fixed value\\n  if (typeof breakpointValues !== 'object') {\\n    return {};\\n  }\\n  const base = {};\\n  const breakpointsKeys = Object.keys(themeBreakpoints);\\n  if (Array.isArray(breakpointValues)) {\\n    breakpointsKeys.forEach((breakpoint, i) => {\\n      if (i < breakpointValues.length) {\\n        base[breakpoint] = true;\\n      }\\n    });\\n  } else {\\n    breakpointsKeys.forEach(breakpoint => {\\n      if (breakpointValues[breakpoint] != null) {\\n        base[breakpoint] = true;\\n      }\\n    });\\n  }\\n  return base;\\n}\\nexport function resolveBreakpointValues({\\n  values: breakpointValues,\\n  breakpoints: themeBreakpoints,\\n  base: customBase\\n}) {\\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\\n  const keys = Object.keys(base);\\n  if (keys.length === 0) {\\n    return breakpointValues;\\n  }\\n  let previous;\\n  return keys.reduce((acc, breakpoint, i) => {\\n    if (Array.isArray(breakpointValues)) {\\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\\n      previous = i;\\n    } else if (typeof breakpointValues === 'object') {\\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\\n      previous = breakpoint;\\n    } else {\\n      acc[breakpoint] = breakpointValues;\\n    }\\n    return acc;\\n  }, {});\\n}\\nexport default breakpoints;\",\"/**\\n * A universal utility to style components with multiple color modes. Always use it from the theme object.\\n * It works with:\\n *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)\\n *  - [CSS theme variables](https://mui.com/material-ui/experimental-api/css-theme-variables/overview/)\\n *  - Zero-runtime engine\\n *\\n * Tips: Use an array over object spread and place `theme.applyStyles()` last.\\n *\\n * \u2705 [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]\\n *\\n * \ud83d\udeab { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}\\n *\\n * @example\\n * 1. using with `styled`:\\n * ```jsx\\n *   const Component = styled('div')(({ theme }) => [\\n *     { background: '#e5e5e5' },\\n *     theme.applyStyles('dark', {\\n *       background: '#1c1c1c',\\n *       color: '#fff',\\n *     }),\\n *   ]);\\n * ```\\n *\\n * @example\\n * 2. using with `sx` prop:\\n * ```jsx\\n *   <Box sx={theme => [\\n *     { background: '#e5e5e5' },\\n *     theme.applyStyles('dark', {\\n *        background: '#1c1c1c',\\n *        color: '#fff',\\n *      }),\\n *     ]}\\n *   />\\n * ```\\n *\\n * @example\\n * 3. theming a component:\\n * ```jsx\\n *   extendTheme({\\n *     components: {\\n *       MuiButton: {\\n *         styleOverrides: {\\n *           root: ({ theme }) => [\\n *             { background: '#e5e5e5' },\\n *             theme.applyStyles('dark', {\\n *               background: '#1c1c1c',\\n *               color: '#fff',\\n *             }),\\n *           ],\\n *         },\\n *       }\\n *     }\\n *   })\\n *```\\n */\\nexport default function applyStyles(key, styles) {\\n  // @ts-expect-error this is 'any' type\\n  const theme = this;\\n  if (theme.vars && typeof theme.getColorSchemeSelector === 'function') {\\n    // If CssVarsProvider is used as a provider,\\n    // returns '* :where([data-mui-color-scheme=\\\"light|dark\\\"]) &'\\n    const selector = theme.getColorSchemeSelector(key).replace(/(\\\\[[^\\\\]]+\\\\])/, '*:where($1)');\\n    return {\\n      [selector]: styles\\n    };\\n  }\\n  if (theme.palette.mode === key) {\\n    return styles;\\n  }\\n  return {};\\n}\",\"import _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nimport _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nconst _excluded = [\\\"values\\\", \\\"unit\\\", \\\"step\\\"];\\n// Sorted ASC by size. That's important.\\n// It can't be configured as it's used statically for propTypes.\\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\\nconst sortBreakpointsValues = values => {\\n  const breakpointsAsArray = Object.keys(values).map(key => ({\\n    key,\\n    val: values[key]\\n  })) || [];\\n  // Sort in ascending order\\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\\n  return breakpointsAsArray.reduce((acc, obj) => {\\n    return _extends({}, acc, {\\n      [obj.key]: obj.val\\n    });\\n  }, {});\\n};\\n\\n// Keep in mind that @media is inclusive by the CSS specification.\\nexport default function createBreakpoints(breakpoints) {\\n  const {\\n      // The breakpoint **start** at this value.\\n      // For instance with the first breakpoint xs: [xs, sm).\\n      values = {\\n        xs: 0,\\n        // phone\\n        sm: 600,\\n        // tablet\\n        md: 900,\\n        // small laptop\\n        lg: 1200,\\n        // desktop\\n        xl: 1536 // large screen\\n      },\\n      unit = 'px',\\n      step = 5\\n    } = breakpoints,\\n    other = _objectWithoutPropertiesLoose(breakpoints, _excluded);\\n  const sortedValues = sortBreakpointsValues(values);\\n  const keys = Object.keys(sortedValues);\\n  function up(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (min-width:${value}${unit})`;\\n  }\\n  function down(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (max-width:${value - step / 100}${unit})`;\\n  }\\n  function between(start, end) {\\n    const endIndex = keys.indexOf(end);\\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\\n  }\\n  function only(key) {\\n    if (keys.indexOf(key) + 1 < keys.length) {\\n      return between(key, keys[keys.indexOf(key) + 1]);\\n    }\\n    return up(key);\\n  }\\n  function not(key) {\\n    // handle first and last key separately, for better readability\\n    const keyIndex = keys.indexOf(key);\\n    if (keyIndex === 0) {\\n      return up(keys[1]);\\n    }\\n    if (keyIndex === keys.length - 1) {\\n      return down(keys[keyIndex]);\\n    }\\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\\n  }\\n  return _extends({\\n    keys,\\n    values: sortedValues,\\n    up,\\n    down,\\n    between,\\n    only,\\n    not,\\n    unit\\n  }, other);\\n}\",\"const shape = {\\n  borderRadius: 4\\n};\\nexport default shape;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nconst _excluded = [\\\"breakpoints\\\", \\\"palette\\\", \\\"spacing\\\", \\\"shape\\\"];\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport createBreakpoints from './createBreakpoints';\\nimport shape from './shape';\\nimport createSpacing from './createSpacing';\\nimport styleFunctionSx from '../styleFunctionSx/styleFunctionSx';\\nimport defaultSxConfig from '../styleFunctionSx/defaultSxConfig';\\nimport applyStyles from './applyStyles';\\nfunction createTheme(options = {}, ...args) {\\n  const {\\n      breakpoints: breakpointsInput = {},\\n      palette: paletteInput = {},\\n      spacing: spacingInput,\\n      shape: shapeInput = {}\\n    } = options,\\n    other = _objectWithoutPropertiesLoose(options, _excluded);\\n  const breakpoints = createBreakpoints(breakpointsInput);\\n  const spacing = createSpacing(spacingInput);\\n  let muiTheme = deepmerge({\\n    breakpoints,\\n    direction: 'ltr',\\n    components: {},\\n    // Inject component definitions.\\n    palette: _extends({\\n      mode: 'light'\\n    }, paletteInput),\\n    spacing,\\n    shape: _extends({}, shape, shapeInput)\\n  }, other);\\n  muiTheme.applyStyles = applyStyles;\\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\\n  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig, other == null ? void 0 : other.unstable_sxConfig);\\n  muiTheme.unstable_sx = function sx(props) {\\n    return styleFunctionSx({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  return muiTheme;\\n}\\nexport default createTheme;\",\"import { createUnarySpacing } from '../spacing';\\n\\n// The different signatures imply different meaning for their arguments that can't be expressed structurally.\\n// We express the difference with variable names.\\n\\nexport default function createSpacing(spacingInput = 8) {\\n  // Already transformed.\\n  if (spacingInput.mui) {\\n    return spacingInput;\\n  }\\n\\n  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\\n  // Smaller components, such as icons, can align to a 4dp grid.\\n  // https://m2.material.io/design/layout/understanding-layout.html\\n  const transform = createUnarySpacing({\\n    spacing: spacingInput\\n  });\\n  const spacing = (...argsInput) => {\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (!(argsInput.length <= 4)) {\\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\\n      }\\n    }\\n    const args = argsInput.length === 0 ? [1] : argsInput;\\n    return args.map(argument => {\\n      const output = transform(argument);\\n      return typeof output === 'number' ? `${output}px` : output;\\n    }).join(' ');\\n  };\\n  spacing.mui = true;\\n  return spacing;\\n}\",\"import deepmerge from '@mui/utils/deepmerge';\\nfunction merge(acc, item) {\\n  if (!item) {\\n    return acc;\\n  }\\n  return deepmerge(acc, item, {\\n    clone: false // No need to clone deep, it's way faster.\\n  });\\n}\\nexport default merge;\",\"import responsivePropType from './responsivePropType';\\nimport { handleBreakpoints } from './breakpoints';\\nimport { getPath } from './style';\\nimport merge from './merge';\\nimport memoize from './memoize';\\nconst properties = {\\n  m: 'margin',\\n  p: 'padding'\\n};\\nconst directions = {\\n  t: 'Top',\\n  r: 'Right',\\n  b: 'Bottom',\\n  l: 'Left',\\n  x: ['Left', 'Right'],\\n  y: ['Top', 'Bottom']\\n};\\nconst aliases = {\\n  marginX: 'mx',\\n  marginY: 'my',\\n  paddingX: 'px',\\n  paddingY: 'py'\\n};\\n\\n// memoize() impact:\\n// From 300,000 ops/sec\\n// To 350,000 ops/sec\\nconst getCssProperties = memoize(prop => {\\n  // It's not a shorthand notation.\\n  if (prop.length > 2) {\\n    if (aliases[prop]) {\\n      prop = aliases[prop];\\n    } else {\\n      return [prop];\\n    }\\n  }\\n  const [a, b] = prop.split('');\\n  const property = properties[a];\\n  const direction = directions[b] || '';\\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\\n});\\nexport const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\\nexport const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\\nconst spacingKeys = [...marginKeys, ...paddingKeys];\\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\\n  var _getPath;\\n  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\\n  if (typeof themeSpacing === 'number') {\\n    return abs => {\\n      if (typeof abs === 'string') {\\n        return abs;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (typeof abs !== 'number') {\\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\\n        }\\n      }\\n      return themeSpacing * abs;\\n    };\\n  }\\n  if (Array.isArray(themeSpacing)) {\\n    return abs => {\\n      if (typeof abs === 'string') {\\n        return abs;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (!Number.isInteger(abs)) {\\n          console.error([`MUI: The \\\\`theme.${themeKey}\\\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\\\`theme.${themeKey}\\\\` as a number.`].join('\\\\n'));\\n        } else if (abs > themeSpacing.length - 1) {\\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\\\n'));\\n        }\\n      }\\n      return themeSpacing[abs];\\n    };\\n  }\\n  if (typeof themeSpacing === 'function') {\\n    return themeSpacing;\\n  }\\n  if (process.env.NODE_ENV !== 'production') {\\n    console.error([`MUI: The \\\\`theme.${themeKey}\\\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\\\n'));\\n  }\\n  return () => undefined;\\n}\\nexport function createUnarySpacing(theme) {\\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\\n}\\nexport function getValue(transformer, propValue) {\\n  if (typeof propValue === 'string' || propValue == null) {\\n    return propValue;\\n  }\\n  const abs = Math.abs(propValue);\\n  const transformed = transformer(abs);\\n  if (propValue >= 0) {\\n    return transformed;\\n  }\\n  if (typeof transformed === 'number') {\\n    return -transformed;\\n  }\\n  return `-${transformed}`;\\n}\\nexport function getStyleFromPropValue(cssProperties, transformer) {\\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\\n    acc[cssProperty] = getValue(transformer, propValue);\\n    return acc;\\n  }, {});\\n}\\nfunction resolveCssProperty(props, keys, prop, transformer) {\\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\\n  // it's doesn't worth the bundle size.\\n  if (keys.indexOf(prop) === -1) {\\n    return null;\\n  }\\n  const cssProperties = getCssProperties(prop);\\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\\n  const propValue = props[prop];\\n  return handleBreakpoints(props, propValue, styleFromPropValue);\\n}\\nfunction style(props, keys) {\\n  const transformer = createUnarySpacing(props.theme);\\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\\n}\\nexport function margin(props) {\\n  return style(props, marginKeys);\\n}\\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\\n  obj[key] = responsivePropType;\\n  return obj;\\n}, {}) : {};\\nmargin.filterProps = marginKeys;\\nexport function padding(props) {\\n  return style(props, paddingKeys);\\n}\\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\\n  obj[key] = responsivePropType;\\n  return obj;\\n}, {}) : {};\\npadding.filterProps = paddingKeys;\\nfunction spacing(props) {\\n  return style(props, spacingKeys);\\n}\\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\\n  obj[key] = responsivePropType;\\n  return obj;\\n}, {}) : {};\\nspacing.filterProps = spacingKeys;\\nexport default spacing;\",\"export default function memoize(fn) {\\n  const cache = {};\\n  return arg => {\\n    if (cache[arg] === undefined) {\\n      cache[arg] = fn(arg);\\n    }\\n    return cache[arg];\\n  };\\n}\",\"import capitalize from '@mui/utils/capitalize';\\nimport responsivePropType from './responsivePropType';\\nimport { handleBreakpoints } from './breakpoints';\\nexport function getPath(obj, path, checkVars = true) {\\n  if (!path || typeof path !== 'string') {\\n    return null;\\n  }\\n\\n  // Check if CSS variables are used\\n  if (obj && obj.vars && checkVars) {\\n    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\\n    if (val != null) {\\n      return val;\\n    }\\n  }\\n  return path.split('.').reduce((acc, item) => {\\n    if (acc && acc[item] != null) {\\n      return acc[item];\\n    }\\n    return null;\\n  }, obj);\\n}\\nexport function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\\n  let value;\\n  if (typeof themeMapping === 'function') {\\n    value = themeMapping(propValueFinal);\\n  } else if (Array.isArray(themeMapping)) {\\n    value = themeMapping[propValueFinal] || userValue;\\n  } else {\\n    value = getPath(themeMapping, propValueFinal) || userValue;\\n  }\\n  if (transform) {\\n    value = transform(value, userValue, themeMapping);\\n  }\\n  return value;\\n}\\nfunction style(options) {\\n  const {\\n    prop,\\n    cssProperty = options.prop,\\n    themeKey,\\n    transform\\n  } = options;\\n\\n  // false positive\\n  // eslint-disable-next-line react/function-component-definition\\n  const fn = props => {\\n    if (props[prop] == null) {\\n      return null;\\n    }\\n    const propValue = props[prop];\\n    const theme = props.theme;\\n    const themeMapping = getPath(theme, themeKey) || {};\\n    const styleFromPropValue = propValueFinal => {\\n      let value = getStyleValue(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return handleBreakpoints(props, propValue, styleFromPropValue);\\n  };\\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\\n    [prop]: responsivePropType\\n  } : {};\\n  fn.filterProps = [prop];\\n  return fn;\\n}\\nexport default style;\",\"import merge from './merge';\\nfunction compose(...styles) {\\n  const handlers = styles.reduce((acc, style) => {\\n    style.filterProps.forEach(prop => {\\n      acc[prop] = style;\\n    });\\n    return acc;\\n  }, {});\\n\\n  // false positive\\n  // eslint-disable-next-line react/function-component-definition\\n  const fn = props => {\\n    return Object.keys(props).reduce((acc, prop) => {\\n      if (handlers[prop]) {\\n        return merge(acc, handlers[prop](props));\\n      }\\n      return acc;\\n    }, {});\\n  };\\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) : {};\\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\\n  return fn;\\n}\\nexport default compose;\",\"import responsivePropType from './responsivePropType';\\nimport style from './style';\\nimport compose from './compose';\\nimport { createUnaryUnit, getValue } from './spacing';\\nimport { handleBreakpoints } from './breakpoints';\\nexport function borderTransform(value) {\\n  if (typeof value !== 'number') {\\n    return value;\\n  }\\n  return `${value}px solid`;\\n}\\nfunction createBorderStyle(prop, transform) {\\n  return style({\\n    prop,\\n    themeKey: 'borders',\\n    transform\\n  });\\n}\\nexport const border = createBorderStyle('border', borderTransform);\\nexport const borderTop = createBorderStyle('borderTop', borderTransform);\\nexport const borderRight = createBorderStyle('borderRight', borderTransform);\\nexport const borderBottom = createBorderStyle('borderBottom', borderTransform);\\nexport const borderLeft = createBorderStyle('borderLeft', borderTransform);\\nexport const borderColor = createBorderStyle('borderColor');\\nexport const borderTopColor = createBorderStyle('borderTopColor');\\nexport const borderRightColor = createBorderStyle('borderRightColor');\\nexport const borderBottomColor = createBorderStyle('borderBottomColor');\\nexport const borderLeftColor = createBorderStyle('borderLeftColor');\\nexport const outline = createBorderStyle('outline', borderTransform);\\nexport const outlineColor = createBorderStyle('outlineColor');\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const borderRadius = props => {\\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\\n    const styleFromPropValue = propValue => ({\\n      borderRadius: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\\n  }\\n  return null;\\n};\\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  borderRadius: responsivePropType\\n} : {};\\nborderRadius.filterProps = ['borderRadius'];\\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, outline, outlineColor);\\nexport default borders;\",\"import style from './style';\\nimport compose from './compose';\\nimport { createUnaryUnit, getValue } from './spacing';\\nimport { handleBreakpoints } from './breakpoints';\\nimport responsivePropType from './responsivePropType';\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const gap = props => {\\n  if (props.gap !== undefined && props.gap !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');\\n    const styleFromPropValue = propValue => ({\\n      gap: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.gap, styleFromPropValue);\\n  }\\n  return null;\\n};\\ngap.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  gap: responsivePropType\\n} : {};\\ngap.filterProps = ['gap'];\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const columnGap = props => {\\n  if (props.columnGap !== undefined && props.columnGap !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');\\n    const styleFromPropValue = propValue => ({\\n      columnGap: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.columnGap, styleFromPropValue);\\n  }\\n  return null;\\n};\\ncolumnGap.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  columnGap: responsivePropType\\n} : {};\\ncolumnGap.filterProps = ['columnGap'];\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const rowGap = props => {\\n  if (props.rowGap !== undefined && props.rowGap !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');\\n    const styleFromPropValue = propValue => ({\\n      rowGap: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.rowGap, styleFromPropValue);\\n  }\\n  return null;\\n};\\nrowGap.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  rowGap: responsivePropType\\n} : {};\\nrowGap.filterProps = ['rowGap'];\\nexport const gridColumn = style({\\n  prop: 'gridColumn'\\n});\\nexport const gridRow = style({\\n  prop: 'gridRow'\\n});\\nexport const gridAutoFlow = style({\\n  prop: 'gridAutoFlow'\\n});\\nexport const gridAutoColumns = style({\\n  prop: 'gridAutoColumns'\\n});\\nexport const gridAutoRows = style({\\n  prop: 'gridAutoRows'\\n});\\nexport const gridTemplateColumns = style({\\n  prop: 'gridTemplateColumns'\\n});\\nexport const gridTemplateRows = style({\\n  prop: 'gridTemplateRows'\\n});\\nexport const gridTemplateAreas = style({\\n  prop: 'gridTemplateAreas'\\n});\\nexport const gridArea = style({\\n  prop: 'gridArea'\\n});\\nconst grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\\nexport default grid;\",\"import style from './style';\\nimport compose from './compose';\\nexport function paletteTransform(value, userValue) {\\n  if (userValue === 'grey') {\\n    return userValue;\\n  }\\n  return value;\\n}\\nexport const color = style({\\n  prop: 'color',\\n  themeKey: 'palette',\\n  transform: paletteTransform\\n});\\nexport const bgcolor = style({\\n  prop: 'bgcolor',\\n  cssProperty: 'backgroundColor',\\n  themeKey: 'palette',\\n  transform: paletteTransform\\n});\\nexport const backgroundColor = style({\\n  prop: 'backgroundColor',\\n  themeKey: 'palette',\\n  transform: paletteTransform\\n});\\nconst palette = compose(color, bgcolor, backgroundColor);\\nexport default palette;\",\"import style from './style';\\nimport compose from './compose';\\nimport { handleBreakpoints, values as breakpointsValues } from './breakpoints';\\nexport function sizingTransform(value) {\\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\\n}\\nexport const width = style({\\n  prop: 'width',\\n  transform: sizingTransform\\n});\\nexport const maxWidth = props => {\\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\\n    const styleFromPropValue = propValue => {\\n      var _props$theme, _props$theme2;\\n      const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || breakpointsValues[propValue];\\n      if (!breakpoint) {\\n        return {\\n          maxWidth: sizingTransform(propValue)\\n        };\\n      }\\n      if (((_props$theme2 = props.theme) == null || (_props$theme2 = _props$theme2.breakpoints) == null ? void 0 : _props$theme2.unit) !== 'px') {\\n        return {\\n          maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`\\n        };\\n      }\\n      return {\\n        maxWidth: breakpoint\\n      };\\n    };\\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\\n  }\\n  return null;\\n};\\nmaxWidth.filterProps = ['maxWidth'];\\nexport const minWidth = style({\\n  prop: 'minWidth',\\n  transform: sizingTransform\\n});\\nexport const height = style({\\n  prop: 'height',\\n  transform: sizingTransform\\n});\\nexport const maxHeight = style({\\n  prop: 'maxHeight',\\n  transform: sizingTransform\\n});\\nexport const minHeight = style({\\n  prop: 'minHeight',\\n  transform: sizingTransform\\n});\\nexport const sizeWidth = style({\\n  prop: 'size',\\n  cssProperty: 'width',\\n  transform: sizingTransform\\n});\\nexport const sizeHeight = style({\\n  prop: 'size',\\n  cssProperty: 'height',\\n  transform: sizingTransform\\n});\\nexport const boxSizing = style({\\n  prop: 'boxSizing'\\n});\\nconst sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\\nexport default sizing;\",\"import { padding, margin } from '../spacing';\\nimport { borderRadius, borderTransform } from '../borders';\\nimport { gap, rowGap, columnGap } from '../cssGrid';\\nimport { paletteTransform } from '../palette';\\nimport { maxWidth, sizingTransform } from '../sizing';\\nconst defaultSxConfig = {\\n  // borders\\n  border: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderTop: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderRight: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderBottom: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderLeft: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderColor: {\\n    themeKey: 'palette'\\n  },\\n  borderTopColor: {\\n    themeKey: 'palette'\\n  },\\n  borderRightColor: {\\n    themeKey: 'palette'\\n  },\\n  borderBottomColor: {\\n    themeKey: 'palette'\\n  },\\n  borderLeftColor: {\\n    themeKey: 'palette'\\n  },\\n  outline: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  outlineColor: {\\n    themeKey: 'palette'\\n  },\\n  borderRadius: {\\n    themeKey: 'shape.borderRadius',\\n    style: borderRadius\\n  },\\n  // palette\\n  color: {\\n    themeKey: 'palette',\\n    transform: paletteTransform\\n  },\\n  bgcolor: {\\n    themeKey: 'palette',\\n    cssProperty: 'backgroundColor',\\n    transform: paletteTransform\\n  },\\n  backgroundColor: {\\n    themeKey: 'palette',\\n    transform: paletteTransform\\n  },\\n  // spacing\\n  p: {\\n    style: padding\\n  },\\n  pt: {\\n    style: padding\\n  },\\n  pr: {\\n    style: padding\\n  },\\n  pb: {\\n    style: padding\\n  },\\n  pl: {\\n    style: padding\\n  },\\n  px: {\\n    style: padding\\n  },\\n  py: {\\n    style: padding\\n  },\\n  padding: {\\n    style: padding\\n  },\\n  paddingTop: {\\n    style: padding\\n  },\\n  paddingRight: {\\n    style: padding\\n  },\\n  paddingBottom: {\\n    style: padding\\n  },\\n  paddingLeft: {\\n    style: padding\\n  },\\n  paddingX: {\\n    style: padding\\n  },\\n  paddingY: {\\n    style: padding\\n  },\\n  paddingInline: {\\n    style: padding\\n  },\\n  paddingInlineStart: {\\n    style: padding\\n  },\\n  paddingInlineEnd: {\\n    style: padding\\n  },\\n  paddingBlock: {\\n    style: padding\\n  },\\n  paddingBlockStart: {\\n    style: padding\\n  },\\n  paddingBlockEnd: {\\n    style: padding\\n  },\\n  m: {\\n    style: margin\\n  },\\n  mt: {\\n    style: margin\\n  },\\n  mr: {\\n    style: margin\\n  },\\n  mb: {\\n    style: margin\\n  },\\n  ml: {\\n    style: margin\\n  },\\n  mx: {\\n    style: margin\\n  },\\n  my: {\\n    style: margin\\n  },\\n  margin: {\\n    style: margin\\n  },\\n  marginTop: {\\n    style: margin\\n  },\\n  marginRight: {\\n    style: margin\\n  },\\n  marginBottom: {\\n    style: margin\\n  },\\n  marginLeft: {\\n    style: margin\\n  },\\n  marginX: {\\n    style: margin\\n  },\\n  marginY: {\\n    style: margin\\n  },\\n  marginInline: {\\n    style: margin\\n  },\\n  marginInlineStart: {\\n    style: margin\\n  },\\n  marginInlineEnd: {\\n    style: margin\\n  },\\n  marginBlock: {\\n    style: margin\\n  },\\n  marginBlockStart: {\\n    style: margin\\n  },\\n  marginBlockEnd: {\\n    style: margin\\n  },\\n  // display\\n  displayPrint: {\\n    cssProperty: false,\\n    transform: value => ({\\n      '@media print': {\\n        display: value\\n      }\\n    })\\n  },\\n  display: {},\\n  overflow: {},\\n  textOverflow: {},\\n  visibility: {},\\n  whiteSpace: {},\\n  // flexbox\\n  flexBasis: {},\\n  flexDirection: {},\\n  flexWrap: {},\\n  justifyContent: {},\\n  alignItems: {},\\n  alignContent: {},\\n  order: {},\\n  flex: {},\\n  flexGrow: {},\\n  flexShrink: {},\\n  alignSelf: {},\\n  justifyItems: {},\\n  justifySelf: {},\\n  // grid\\n  gap: {\\n    style: gap\\n  },\\n  rowGap: {\\n    style: rowGap\\n  },\\n  columnGap: {\\n    style: columnGap\\n  },\\n  gridColumn: {},\\n  gridRow: {},\\n  gridAutoFlow: {},\\n  gridAutoColumns: {},\\n  gridAutoRows: {},\\n  gridTemplateColumns: {},\\n  gridTemplateRows: {},\\n  gridTemplateAreas: {},\\n  gridArea: {},\\n  // positions\\n  position: {},\\n  zIndex: {\\n    themeKey: 'zIndex'\\n  },\\n  top: {},\\n  right: {},\\n  bottom: {},\\n  left: {},\\n  // shadows\\n  boxShadow: {\\n    themeKey: 'shadows'\\n  },\\n  // sizing\\n  width: {\\n    transform: sizingTransform\\n  },\\n  maxWidth: {\\n    style: maxWidth\\n  },\\n  minWidth: {\\n    transform: sizingTransform\\n  },\\n  height: {\\n    transform: sizingTransform\\n  },\\n  maxHeight: {\\n    transform: sizingTransform\\n  },\\n  minHeight: {\\n    transform: sizingTransform\\n  },\\n  boxSizing: {},\\n  // typography\\n  fontFamily: {\\n    themeKey: 'typography'\\n  },\\n  fontSize: {\\n    themeKey: 'typography'\\n  },\\n  fontStyle: {\\n    themeKey: 'typography'\\n  },\\n  fontWeight: {\\n    themeKey: 'typography'\\n  },\\n  letterSpacing: {},\\n  textTransform: {},\\n  lineHeight: {},\\n  textAlign: {},\\n  typography: {\\n    cssProperty: false,\\n    themeKey: 'typography'\\n  }\\n};\\nexport default defaultSxConfig;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nconst _excluded = [\\\"sx\\\"];\\nimport { isPlainObject } from '@mui/utils/deepmerge';\\nimport defaultSxConfig from './defaultSxConfig';\\nconst splitProps = props => {\\n  var _props$theme$unstable, _props$theme;\\n  const result = {\\n    systemProps: {},\\n    otherProps: {}\\n  };\\n  const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\\n  Object.keys(props).forEach(prop => {\\n    if (config[prop]) {\\n      result.systemProps[prop] = props[prop];\\n    } else {\\n      result.otherProps[prop] = props[prop];\\n    }\\n  });\\n  return result;\\n};\\nexport default function extendSxProp(props) {\\n  const {\\n      sx: inSx\\n    } = props,\\n    other = _objectWithoutPropertiesLoose(props, _excluded);\\n  const {\\n    systemProps,\\n    otherProps\\n  } = splitProps(other);\\n  let finalSx;\\n  if (Array.isArray(inSx)) {\\n    finalSx = [systemProps, ...inSx];\\n  } else if (typeof inSx === 'function') {\\n    finalSx = (...args) => {\\n      const result = inSx(...args);\\n      if (!isPlainObject(result)) {\\n        return systemProps;\\n      }\\n      return _extends({}, systemProps, result);\\n    };\\n  } else {\\n    finalSx = _extends({}, systemProps, inSx);\\n  }\\n  return _extends({}, otherProps, {\\n    sx: finalSx\\n  });\\n}\",\"import capitalize from '@mui/utils/capitalize';\\nimport merge from '../merge';\\nimport { getPath, getStyleValue as getValue } from '../style';\\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from '../breakpoints';\\nimport defaultSxConfig from './defaultSxConfig';\\nfunction objectsHaveSameKeys(...objects) {\\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\\n  const union = new Set(allKeys);\\n  return objects.every(object => union.size === Object.keys(object).length);\\n}\\nfunction callIfFn(maybeFn, arg) {\\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\\n}\\n\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\nexport function unstable_createStyleFunctionSx() {\\n  function getThemeValue(prop, val, theme, config) {\\n    const props = {\\n      [prop]: val,\\n      theme\\n    };\\n    const options = config[prop];\\n    if (!options) {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const {\\n      cssProperty = prop,\\n      themeKey,\\n      transform,\\n      style\\n    } = options;\\n    if (val == null) {\\n      return null;\\n    }\\n\\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\\n    if (themeKey === 'typography' && val === 'inherit') {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const themeMapping = getPath(theme, themeKey) || {};\\n    if (style) {\\n      return style(props);\\n    }\\n    const styleFromPropValue = propValueFinal => {\\n      let value = getValue(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return handleBreakpoints(props, val, styleFromPropValue);\\n  }\\n  function styleFunctionSx(props) {\\n    var _theme$unstable_sxCon;\\n    const {\\n      sx,\\n      theme = {}\\n    } = props || {};\\n    if (!sx) {\\n      return null; // Emotion & styled-components will neglect null\\n    }\\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig;\\n\\n    /*\\n     * Receive `sxInput` as object or callback\\n     * and then recursively check keys & values to create media query object styles.\\n     * (the result will be used in `styled`)\\n     */\\n    function traverse(sxInput) {\\n      let sxObject = sxInput;\\n      if (typeof sxInput === 'function') {\\n        sxObject = sxInput(theme);\\n      } else if (typeof sxInput !== 'object') {\\n        // value\\n        return sxInput;\\n      }\\n      if (!sxObject) {\\n        return null;\\n      }\\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\\n      let css = emptyBreakpoints;\\n      Object.keys(sxObject).forEach(styleKey => {\\n        const value = callIfFn(sxObject[styleKey], theme);\\n        if (value !== null && value !== undefined) {\\n          if (typeof value === 'object') {\\n            if (config[styleKey]) {\\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\\n            } else {\\n              const breakpointsValues = handleBreakpoints({\\n                theme\\n              }, value, x => ({\\n                [styleKey]: x\\n              }));\\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\\n                css[styleKey] = styleFunctionSx({\\n                  sx: value,\\n                  theme\\n                });\\n              } else {\\n                css = merge(css, breakpointsValues);\\n              }\\n            }\\n          } else {\\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\\n          }\\n        }\\n      });\\n      return removeUnusedBreakpoints(breakpointsKeys, css);\\n    }\\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\\n  }\\n  return styleFunctionSx;\\n}\\nconst styleFunctionSx = unstable_createStyleFunctionSx();\\nstyleFunctionSx.filterProps = ['sx'];\\nexport default styleFunctionSx;\",\"import _formatMuiErrorMessage from \\\"@mui/utils/formatMuiErrorMessage\\\";\\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\\n//\\n// A strict capitalization should uppercase the first letter of each word in the sentence.\\n// We only handle the first word.\\nexport default function capitalize(string) {\\n  if (typeof string !== 'string') {\\n    throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? `MUI: \\\\`capitalize(string)\\\\` expects a string argument.` : _formatMuiErrorMessage(7));\\n  }\\n  return string.charAt(0).toUpperCase() + string.slice(1);\\n}\",\"function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {\\n  return Math.max(min, Math.min(val, max));\\n}\\nexport default clamp;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport * as React from 'react';\\n\\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\\nexport function isPlainObject(item) {\\n  if (typeof item !== 'object' || item === null) {\\n    return false;\\n  }\\n  const prototype = Object.getPrototypeOf(item);\\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\\n}\\nfunction deepClone(source) {\\n  if ( /*#__PURE__*/React.isValidElement(source) || !isPlainObject(source)) {\\n    return source;\\n  }\\n  const output = {};\\n  Object.keys(source).forEach(key => {\\n    output[key] = deepClone(source[key]);\\n  });\\n  return output;\\n}\\nexport default function deepmerge(target, source, options = {\\n  clone: true\\n}) {\\n  const output = options.clone ? _extends({}, target) : target;\\n  if (isPlainObject(target) && isPlainObject(source)) {\\n    Object.keys(source).forEach(key => {\\n      if ( /*#__PURE__*/React.isValidElement(source[key])) {\\n        output[key] = source[key];\\n      } else if (isPlainObject(source[key]) &&\\n      // Avoid prototype pollution\\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\\n        output[key] = deepmerge(target[key], source[key], options);\\n      } else if (options.clone) {\\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\\n      } else {\\n        output[key] = source[key];\\n      }\\n    });\\n  }\\n  return output;\\n}\",\"/**\\n * WARNING: Don't import this directly.\\n * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.\\n * @param {number} code\\n */\\nexport default function formatMuiErrorMessage(code) {\\n  // Apply babel-plugin-transform-template-literals in loose mode\\n  // loose mode is safe if we're concatenating primitives\\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\\n  /* eslint-disable prefer-template */\\n  let url = 'https://mui.com/production-error/?code=' + code;\\n  for (let i = 1; i < arguments.length; i += 1) {\\n    // rest params over-transpile for this case\\n    // eslint-disable-next-line prefer-rest-params\\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\\n  }\\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\\n  /* eslint-enable prefer-template */\\n}\",\"import { ForwardRef, Memo } from 'react-is';\\n\\n// Simplified polyfill for IE11 support\\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\\nconst fnNameMatchRegex = /^\\\\s*function(?:\\\\s|\\\\s*\\\\/\\\\*.*\\\\*\\\\/\\\\s*)+([^(\\\\s/]*)\\\\s*/;\\nexport function getFunctionName(fn) {\\n  const match = `${fn}`.match(fnNameMatchRegex);\\n  const name = match && match[1];\\n  return name || '';\\n}\\nfunction getFunctionComponentName(Component, fallback = '') {\\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\\n}\\nfunction getWrappedName(outerType, innerType, wrapperName) {\\n  const functionName = getFunctionComponentName(innerType);\\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\\n}\\n\\n/**\\n * cherry-pick from\\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\\n * originally forked from recompose/getDisplayName with added IE11 support\\n */\\nexport default function getDisplayName(Component) {\\n  if (Component == null) {\\n    return undefined;\\n  }\\n  if (typeof Component === 'string') {\\n    return Component;\\n  }\\n  if (typeof Component === 'function') {\\n    return getFunctionComponentName(Component, 'Component');\\n  }\\n\\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\\n  if (typeof Component === 'object') {\\n    switch (Component.$$typeof) {\\n      case ForwardRef:\\n        return getWrappedName(Component, Component.render, 'ForwardRef');\\n      case Memo:\\n        return getWrappedName(Component, Component.type, 'memo');\\n      default:\\n        return undefined;\\n    }\\n  }\\n  return undefined;\\n}\",\"'use strict';\\n\\nvar reactIs = require('react-is');\\n\\n/**\\n * Copyright 2015, Yahoo! Inc.\\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\\n */\\nvar REACT_STATICS = {\\n  childContextTypes: true,\\n  contextType: true,\\n  contextTypes: true,\\n  defaultProps: true,\\n  displayName: true,\\n  getDefaultProps: true,\\n  getDerivedStateFromError: true,\\n  getDerivedStateFromProps: true,\\n  mixins: true,\\n  propTypes: true,\\n  type: true\\n};\\nvar KNOWN_STATICS = {\\n  name: true,\\n  length: true,\\n  prototype: true,\\n  caller: true,\\n  callee: true,\\n  arguments: true,\\n  arity: true\\n};\\nvar FORWARD_REF_STATICS = {\\n  '$$typeof': true,\\n  render: true,\\n  defaultProps: true,\\n  displayName: true,\\n  propTypes: true\\n};\\nvar MEMO_STATICS = {\\n  '$$typeof': true,\\n  compare: true,\\n  defaultProps: true,\\n  displayName: true,\\n  propTypes: true,\\n  type: true\\n};\\nvar TYPE_STATICS = {};\\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\\n\\nfunction getStatics(component) {\\n  // React v16.11 and below\\n  if (reactIs.isMemo(component)) {\\n    return MEMO_STATICS;\\n  } // React v16.12 and above\\n\\n\\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\\n}\\n\\nvar defineProperty = Object.defineProperty;\\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\nvar getPrototypeOf = Object.getPrototypeOf;\\nvar objectPrototype = Object.prototype;\\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\\n  if (typeof sourceComponent !== 'string') {\\n    // don't hoist over string (html) components\\n    if (objectPrototype) {\\n      var inheritedComponent = getPrototypeOf(sourceComponent);\\n\\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\\n      }\\n    }\\n\\n    var keys = getOwnPropertyNames(sourceComponent);\\n\\n    if (getOwnPropertySymbols) {\\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\\n    }\\n\\n    var targetStatics = getStatics(targetComponent);\\n    var sourceStatics = getStatics(sourceComponent);\\n\\n    for (var i = 0; i < keys.length; ++i) {\\n      var key = keys[i];\\n\\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\\n\\n        try {\\n          // Avoid failures from read-only properties\\n          defineProperty(targetComponent, key, descriptor);\\n        } catch (e) {}\\n      }\\n    }\\n  }\\n\\n  return targetComponent;\\n}\\n\\nmodule.exports = hoistNonReactStatics;\\n\",\"/** @license React v16.13.1\\n * react-is.production.min.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';var b=\\\"function\\\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\\\"react.element\\\"):60103,d=b?Symbol.for(\\\"react.portal\\\"):60106,e=b?Symbol.for(\\\"react.fragment\\\"):60107,f=b?Symbol.for(\\\"react.strict_mode\\\"):60108,g=b?Symbol.for(\\\"react.profiler\\\"):60114,h=b?Symbol.for(\\\"react.provider\\\"):60109,k=b?Symbol.for(\\\"react.context\\\"):60110,l=b?Symbol.for(\\\"react.async_mode\\\"):60111,m=b?Symbol.for(\\\"react.concurrent_mode\\\"):60111,n=b?Symbol.for(\\\"react.forward_ref\\\"):60112,p=b?Symbol.for(\\\"react.suspense\\\"):60113,q=b?\\nSymbol.for(\\\"react.suspense_list\\\"):60120,r=b?Symbol.for(\\\"react.memo\\\"):60115,t=b?Symbol.for(\\\"react.lazy\\\"):60116,v=b?Symbol.for(\\\"react.block\\\"):60121,w=b?Symbol.for(\\\"react.fundamental\\\"):60117,x=b?Symbol.for(\\\"react.responder\\\"):60118,y=b?Symbol.for(\\\"react.scope\\\"):60119;\\nfunction z(a){if(\\\"object\\\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\\\"object\\\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\\nexports.isValidElementType=function(a){return\\\"string\\\"===typeof a||\\\"function\\\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\\\"object\\\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\\n\",\"'use strict';\\n\\nif (process.env.NODE_ENV === 'production') {\\n  module.exports = require('./cjs/react-is.production.min.js');\\n} else {\\n  module.exports = require('./cjs/react-is.development.js');\\n}\\n\",\"/**\\n * @license React\\n * react-dom.production.min.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n/*\\n Modernizr 3.0.0pre (Custom Build) | MIT\\n*/\\n'use strict';var aa=require(\\\"react\\\"),ca=require(\\\"scheduler\\\");function p(a){for(var b=\\\"https://reactjs.org/docs/error-decoder.html?invariant=\\\"+a,c=1;c<arguments.length;c++)b+=\\\"&args[]=\\\"+encodeURIComponent(arguments[c]);return\\\"Minified React error #\\\"+a+\\\"; visit \\\"+b+\\\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\\\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\\\"Capture\\\",b)}\\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\\nvar ia=!(\\\"undefined\\\"===typeof window||\\\"undefined\\\"===typeof window.document||\\\"undefined\\\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$/,la=\\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \\\"function\\\":case \\\"symbol\\\":return!0;case \\\"boolean\\\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\\\"data-\\\"!==a&&\\\"aria-\\\"!==a;default:return!1}}\\nfunction qa(a,b,c,d){if(null===b||\\\"undefined\\\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\\n\\\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\\\".split(\\\" \\\").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\\\"acceptCharset\\\",\\\"accept-charset\\\"],[\\\"className\\\",\\\"class\\\"],[\\\"htmlFor\\\",\\\"for\\\"],[\\\"httpEquiv\\\",\\\"http-equiv\\\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\\\"contentEditable\\\",\\\"draggable\\\",\\\"spellCheck\\\",\\\"value\\\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\\n[\\\"autoReverse\\\",\\\"externalResourcesRequired\\\",\\\"focusable\\\",\\\"preserveAlpha\\\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\\\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\\\".split(\\\" \\\").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\\n[\\\"checked\\\",\\\"multiple\\\",\\\"muted\\\",\\\"selected\\\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\\\"capture\\\",\\\"download\\\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\\\"cols\\\",\\\"rows\\\",\\\"size\\\",\\\"span\\\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\\\"rowSpan\\\",\\\"start\\\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\\n\\\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\\\".split(\\\" \\\").forEach(function(a){var b=a.replace(ra,\\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\\\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\\\".split(\\\" \\\").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\\\"http://www.w3.org/1999/xlink\\\",!1,!1)});[\\\"xml:base\\\",\\\"xml:lang\\\",\\\"xml:space\\\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\\\"http://www.w3.org/XML/1998/namespace\\\",!1,!1)});[\\\"tabIndex\\\",\\\"crossOrigin\\\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\\nz.xlinkHref=new v(\\\"xlinkHref\\\",1,!1,\\\"xlink:href\\\",\\\"http://www.w3.org/1999/xlink\\\",!0,!1);[\\\"src\\\",\\\"href\\\",\\\"action\\\",\\\"formAction\\\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\\\"o\\\"!==b[0]&&\\\"O\\\"!==b[0]||\\\"n\\\"!==b[1]&&\\\"N\\\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\\\"\\\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\\\"\\\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\\\"\\\":\\\"\\\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\\\"react.element\\\"),wa=Symbol.for(\\\"react.portal\\\"),ya=Symbol.for(\\\"react.fragment\\\"),za=Symbol.for(\\\"react.strict_mode\\\"),Aa=Symbol.for(\\\"react.profiler\\\"),Ba=Symbol.for(\\\"react.provider\\\"),Ca=Symbol.for(\\\"react.context\\\"),Da=Symbol.for(\\\"react.forward_ref\\\"),Ea=Symbol.for(\\\"react.suspense\\\"),Fa=Symbol.for(\\\"react.suspense_list\\\"),Ga=Symbol.for(\\\"react.memo\\\"),Ha=Symbol.for(\\\"react.lazy\\\");Symbol.for(\\\"react.scope\\\");Symbol.for(\\\"react.debug_trace_mode\\\");\\nvar Ia=Symbol.for(\\\"react.offscreen\\\");Symbol.for(\\\"react.legacy_hidden\\\");Symbol.for(\\\"react.cache\\\");Symbol.for(\\\"react.tracing_marker\\\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\\\"object\\\"!==typeof a)return null;a=Ja&&a[Ja]||a[\\\"@@iterator\\\"];return\\\"function\\\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\\\n( *(at )?)/);La=b&&b[1]||\\\"\\\"}return\\\"\\\\n\\\"+La+a}var Na=!1;\\nfunction Oa(a,b){if(!a||Na)return\\\"\\\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\\\"props\\\",{set:function(){throw Error();}}),\\\"object\\\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\\\"string\\\"===typeof l.stack){for(var e=l.stack.split(\\\"\\\\n\\\"),\\nf=d.stack.split(\\\"\\\\n\\\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\\\"\\\\n\\\"+e[g].replace(\\\" at new \\\",\\\" at \\\");a.displayName&&k.includes(\\\"<anonymous>\\\")&&(k=k.replace(\\\"<anonymous>\\\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\\\"\\\")?Ma(a):\\\"\\\"}\\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\\\"Lazy\\\");case 13:return Ma(\\\"Suspense\\\");case 19:return Ma(\\\"SuspenseList\\\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\\\"\\\"}}\\nfunction Qa(a){if(null==a)return null;if(\\\"function\\\"===typeof a)return a.displayName||a.name||null;if(\\\"string\\\"===typeof a)return a;switch(a){case ya:return\\\"Fragment\\\";case wa:return\\\"Portal\\\";case Aa:return\\\"Profiler\\\";case za:return\\\"StrictMode\\\";case Ea:return\\\"Suspense\\\";case Fa:return\\\"SuspenseList\\\"}if(\\\"object\\\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\\\"Context\\\")+\\\".Consumer\\\";case Ba:return(a._context.displayName||\\\"Context\\\")+\\\".Provider\\\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\\nb.name||\\\"\\\",a=\\\"\\\"!==a?\\\"ForwardRef(\\\"+a+\\\")\\\":\\\"ForwardRef\\\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\\\"Memo\\\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\\\"Cache\\\";case 9:return(b.displayName||\\\"Context\\\")+\\\".Consumer\\\";case 10:return(b._context.displayName||\\\"Context\\\")+\\\".Provider\\\";case 18:return\\\"DehydratedFragment\\\";case 11:return a=b.render,a=a.displayName||a.name||\\\"\\\",b.displayName||(\\\"\\\"!==a?\\\"ForwardRef(\\\"+a+\\\")\\\":\\\"ForwardRef\\\");case 7:return\\\"Fragment\\\";case 5:return b;case 4:return\\\"Portal\\\";case 3:return\\\"Root\\\";case 6:return\\\"Text\\\";case 16:return Qa(b);case 8:return b===za?\\\"StrictMode\\\":\\\"Mode\\\";case 22:return\\\"Offscreen\\\";\\ncase 12:return\\\"Profiler\\\";case 21:return\\\"Scope\\\";case 13:return\\\"Suspense\\\";case 19:return\\\"SuspenseList\\\";case 25:return\\\"TracingMarker\\\";case 1:case 0:case 17:case 2:case 14:case 15:if(\\\"function\\\"===typeof b)return b.displayName||b.name||null;if(\\\"string\\\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \\\"boolean\\\":case \\\"number\\\":case \\\"string\\\":case \\\"undefined\\\":return a;case \\\"object\\\":return a;default:return\\\"\\\"}}\\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\\\"input\\\"===a.toLowerCase()&&(\\\"checkbox\\\"===b||\\\"radio\\\"===b)}\\nfunction Ua(a){var b=Ta(a)?\\\"checked\\\":\\\"value\\\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\\\"\\\"+a[b];if(!a.hasOwnProperty(b)&&\\\"undefined\\\"!==typeof c&&\\\"function\\\"===typeof c.get&&\\\"function\\\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\\\"\\\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\\\"\\\"+a},stopTracking:function(){a._valueTracker=\\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\\\"\\\";a&&(d=Ta(a)?a.checked?\\\"true\\\":\\\"false\\\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\\\"undefined\\\"!==typeof document?document:void 0);if(\\\"undefined\\\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\\\"\\\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\\\"checkbox\\\"===b.type||\\\"radio\\\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\\\"checked\\\",b,!1)}\\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\\\"number\\\"===d){if(0===c&&\\\"\\\"===a.value||a.value!=c)a.value=\\\"\\\"+c}else a.value!==\\\"\\\"+c&&(a.value=\\\"\\\"+c);else if(\\\"submit\\\"===d||\\\"reset\\\"===d){a.removeAttribute(\\\"value\\\");return}b.hasOwnProperty(\\\"value\\\")?cb(a,b.type,c):b.hasOwnProperty(\\\"defaultValue\\\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\\nfunction db(a,b,c){if(b.hasOwnProperty(\\\"value\\\")||b.hasOwnProperty(\\\"defaultValue\\\")){var d=b.type;if(!(\\\"submit\\\"!==d&&\\\"reset\\\"!==d||void 0!==b.value&&null!==b.value))return;b=\\\"\\\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\\\"\\\"!==c&&(a.name=\\\"\\\");a.defaultChecked=!!a._wrapperState.initialChecked;\\\"\\\"!==c&&(a.name=c)}\\nfunction cb(a,b,c){if(\\\"number\\\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\\\"\\\"+a._wrapperState.initialValue:a.defaultValue!==\\\"\\\"+c&&(a.defaultValue=\\\"\\\"+c)}var eb=Array.isArray;\\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\\\"$\\\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\\\"$\\\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\\\"\\\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\\\"\\\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\\\"\\\");c=b}a._wrapperState={initialValue:Sa(c)}}\\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\\\"\\\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\\\"\\\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\\\"\\\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \\\"svg\\\":return\\\"http://www.w3.org/2000/svg\\\";case \\\"math\\\":return\\\"http://www.w3.org/1998/Math/MathML\\\";default:return\\\"http://www.w3.org/1999/xhtml\\\"}}\\nfunction lb(a,b){return null==a||\\\"http://www.w3.org/1999/xhtml\\\"===a?kb(b):\\\"http://www.w3.org/2000/svg\\\"===a&&\\\"foreignObject\\\"===b?\\\"http://www.w3.org/1999/xhtml\\\":a}\\nvar mb,nb=function(a){return\\\"undefined\\\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\\\"http://www.w3.org/2000/svg\\\"!==a.namespaceURI||\\\"innerHTML\\\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\\\"div\\\");mb.innerHTML=\\\"<svg>\\\"+b.valueOf().toString()+\\\"</svg>\\\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\\\"Webkit\\\",\\\"ms\\\",\\\"Moz\\\",\\\"O\\\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\\\"boolean\\\"===typeof b||\\\"\\\"===b?\\\"\\\":c||\\\"number\\\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\\\"\\\"+b).trim():b+\\\"px\\\"}\\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\\\"--\\\"),e=rb(c,b[c],d);\\\"float\\\"===c&&(c=\\\"cssFloat\\\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\\\"object\\\"!==typeof b.dangerouslySetInnerHTML||!(\\\"__html\\\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\\\"object\\\"!==typeof b.style)throw Error(p(62));}}\\nfunction vb(a,b){if(-1===a.indexOf(\\\"-\\\"))return\\\"string\\\"===typeof b.is;switch(a){case \\\"annotation-xml\\\":case \\\"color-profile\\\":case \\\"font-face\\\":case \\\"font-face-src\\\":case \\\"font-face-uri\\\":case \\\"font-face-format\\\":case \\\"font-face-name\\\":case \\\"missing-glyph\\\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\\nfunction Bb(a){if(a=Cb(a)){if(\\\"function\\\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \\\"onClick\\\":case \\\"onClickCapture\\\":case \\\"onDoubleClick\\\":case \\\"onDoubleClickCapture\\\":case \\\"onMouseDown\\\":case \\\"onMouseDownCapture\\\":case \\\"onMouseMove\\\":case \\\"onMouseMoveCapture\\\":case \\\"onMouseUp\\\":case \\\"onMouseUpCapture\\\":case \\\"onMouseEnter\\\":(d=!d.disabled)||(a=a.type,d=!(\\\"button\\\"===a||\\\"input\\\"===a||\\\"select\\\"===a||\\\"textarea\\\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\\\"function\\\"!==\\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\\\"passive\\\",{get:function(){Lb=!0}});window.addEventListener(\\\"test\\\",Mb,Mb);window.removeEventListener(\\\"test\\\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\\\"function\\\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\\\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\\\".split(\\\" \\\");\\nfunction Sc(a,b){switch(a){case \\\"focusin\\\":case \\\"focusout\\\":Lc=null;break;case \\\"dragenter\\\":case \\\"dragleave\\\":Mc=null;break;case \\\"mouseover\\\":case \\\"mouseout\\\":Nc=null;break;case \\\"pointerover\\\":case \\\"pointerout\\\":Oc.delete(b.pointerId);break;case \\\"gotpointercapture\\\":case \\\"lostpointercapture\\\":Pc.delete(b.pointerId)}}\\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\\nfunction Uc(a,b,c,d,e){switch(b){case \\\"focusin\\\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \\\"dragenter\\\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \\\"mouseover\\\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \\\"pointerover\\\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \\\"gotpointercapture\\\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\\nfunction jd(a){switch(a){case \\\"cancel\\\":case \\\"click\\\":case \\\"close\\\":case \\\"contextmenu\\\":case \\\"copy\\\":case \\\"cut\\\":case \\\"auxclick\\\":case \\\"dblclick\\\":case \\\"dragend\\\":case \\\"dragstart\\\":case \\\"drop\\\":case \\\"focusin\\\":case \\\"focusout\\\":case \\\"input\\\":case \\\"invalid\\\":case \\\"keydown\\\":case \\\"keypress\\\":case \\\"keyup\\\":case \\\"mousedown\\\":case \\\"mouseup\\\":case \\\"paste\\\":case \\\"pause\\\":case \\\"play\\\":case \\\"pointercancel\\\":case \\\"pointerdown\\\":case \\\"pointerup\\\":case \\\"ratechange\\\":case \\\"reset\\\":case \\\"resize\\\":case \\\"seeked\\\":case \\\"submit\\\":case \\\"touchcancel\\\":case \\\"touchend\\\":case \\\"touchstart\\\":case \\\"volumechange\\\":case \\\"change\\\":case \\\"selectionchange\\\":case \\\"textInput\\\":case \\\"compositionstart\\\":case \\\"compositionend\\\":case \\\"compositionupdate\\\":case \\\"beforeblur\\\":case \\\"afterblur\\\":case \\\"beforeinput\\\":case \\\"blur\\\":case \\\"fullscreenchange\\\":case \\\"focus\\\":case \\\"hashchange\\\":case \\\"popstate\\\":case \\\"select\\\":case \\\"selectstart\\\":return 1;case \\\"drag\\\":case \\\"dragenter\\\":case \\\"dragexit\\\":case \\\"dragleave\\\":case \\\"dragover\\\":case \\\"mousemove\\\":case \\\"mouseout\\\":case \\\"mouseover\\\":case \\\"pointermove\\\":case \\\"pointerout\\\":case \\\"pointerover\\\":case \\\"scroll\\\":case \\\"toggle\\\":case \\\"touchmove\\\":case \\\"wheel\\\":case \\\"mouseenter\\\":case \\\"mouseleave\\\":case \\\"pointerenter\\\":case \\\"pointerleave\\\":return 4;\\ncase \\\"message\\\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\\\"value\\\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\\nfunction od(a){var b=a.keyCode;\\\"charCode\\\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\\\"unknown\\\"!==typeof a.returnValue&&\\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\\\"unknown\\\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\\\"movementX\\\"in\\na)return a.movementX;a!==yd&&(yd&&\\\"mousemove\\\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\\\"movementY\\\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\\\"clipboardData\\\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\\\"Escape\\\",\\nSpacebar:\\\" \\\",Left:\\\"ArrowLeft\\\",Up:\\\"ArrowUp\\\",Right:\\\"ArrowRight\\\",Down:\\\"ArrowDown\\\",Del:\\\"Delete\\\",Win:\\\"OS\\\",Menu:\\\"ContextMenu\\\",Apps:\\\"ContextMenu\\\",Scroll:\\\"ScrollLock\\\",MozPrintableKey:\\\"Unidentified\\\"},Nd={8:\\\"Backspace\\\",9:\\\"Tab\\\",12:\\\"Clear\\\",13:\\\"Enter\\\",16:\\\"Shift\\\",17:\\\"Control\\\",18:\\\"Alt\\\",19:\\\"Pause\\\",20:\\\"CapsLock\\\",27:\\\"Escape\\\",32:\\\" \\\",33:\\\"PageUp\\\",34:\\\"PageDown\\\",35:\\\"End\\\",36:\\\"Home\\\",37:\\\"ArrowLeft\\\",38:\\\"ArrowUp\\\",39:\\\"ArrowRight\\\",40:\\\"ArrowDown\\\",45:\\\"Insert\\\",46:\\\"Delete\\\",112:\\\"F1\\\",113:\\\"F2\\\",114:\\\"F3\\\",115:\\\"F4\\\",116:\\\"F5\\\",117:\\\"F6\\\",118:\\\"F7\\\",\\n119:\\\"F8\\\",120:\\\"F9\\\",121:\\\"F10\\\",122:\\\"F11\\\",123:\\\"F12\\\",144:\\\"NumLock\\\",145:\\\"ScrollLock\\\",224:\\\"Meta\\\"},Od={Alt:\\\"altKey\\\",Control:\\\"ctrlKey\\\",Meta:\\\"metaKey\\\",Shift:\\\"shiftKey\\\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\\\"Unidentified\\\"!==b)return b}return\\\"keypress\\\"===a.type?(a=od(a),13===a?\\\"Enter\\\":String.fromCharCode(a)):\\\"keydown\\\"===a.type||\\\"keyup\\\"===a.type?Nd[a.keyCode]||\\\"Unidentified\\\":\\\"\\\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\\\"keypress\\\"===a.type?od(a):0},keyCode:function(a){return\\\"keydown\\\"===a.type||\\\"keyup\\\"===a.type?a.keyCode:0},which:function(a){return\\\"keypress\\\"===\\na.type?od(a):\\\"keydown\\\"===a.type||\\\"keyup\\\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\\\"deltaX\\\"in a?a.deltaX:\\\"wheelDeltaX\\\"in a?-a.wheelDeltaX:0},\\ndeltaY:function(a){return\\\"deltaY\\\"in a?a.deltaY:\\\"wheelDeltaY\\\"in a?-a.wheelDeltaY:\\\"wheelDelta\\\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\\\"CompositionEvent\\\"in window,be=null;ia&&\\\"documentMode\\\"in document&&(be=document.documentMode);var ce=ia&&\\\"TextEvent\\\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\\nfunction ge(a,b){switch(a){case \\\"keyup\\\":return-1!==$d.indexOf(b.keyCode);case \\\"keydown\\\":return 229!==b.keyCode;case \\\"keypress\\\":case \\\"mousedown\\\":case \\\"focusout\\\":return!0;default:return!1}}function he(a){a=a.detail;return\\\"object\\\"===typeof a&&\\\"data\\\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \\\"compositionend\\\":return he(b);case \\\"keypress\\\":if(32!==b.which)return null;fe=!0;return ee;case \\\"textInput\\\":return a=b.data,a===ee&&fe?null:a;default:return null}}\\nfunction ke(a,b){if(ie)return\\\"compositionend\\\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \\\"paste\\\":return null;case \\\"keypress\\\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \\\"compositionend\\\":return de&&\\\"ko\\\"!==b.locale?null:b.data;default:return null}}\\nvar le={color:!0,date:!0,datetime:!0,\\\"datetime-local\\\":!0,email:!0,month:!0,number:!0,${PASSWORD_11};\\r\\nimport App from './App.tsx';\\r\\n\\r\\nconst theme = createTheme({\\r\\n    palette: {\\r\\n        mode: 'dark',\\r\\n        primary: {\\r\\n            main: '#00e5ff',\\r\\n        },\\r\\n        secondary: {\\r\\n            main: '#ff00e5',\\r\\n        },\\r\\n    },\\r\\n});\\r\\n\\r\\nconst root = ReactDOM.createRoot(\\r\\n    document.getElementById('root') as HTMLElement\\r\\n);\\r\\n\\r\\nroot.render(\\r\\n    <React.StrictMode>\\r\\n        <BrowserRouter>\\r\\n            <ThemeProvider theme={theme}>\\r\\n                <CssBaseline />\\r\\n                <App />\\r\\n            </ThemeProvider>\\r\\n        </BrowserRouter>\\r\\n    </React.StrictMode>\\r\\n);\\r\\n\"],\"names\":[\"StyleSheet\",\"options\",\"_this\",\"this\",\"_insertTag\",\"tag\",\"before\",\"tags\",\"length\",\"insertionPoint\",\"nextSibling\",\"prepend\",\"container\",\"firstChild\",\"insertBefore\",\"push\",\"isSpeedy\",\"undefined\",\"speedy\",\"ctr\",\"nonce\",\"key\",\"_proto\",\"prototype\",\"hydrate\",\"nodes\",\"forEach\",\"insert\",\"rule\",\"document\",\"createElement\",\"setAttribute\",\"appendChild\",\"createTextNode\",\"createStyleElement\",\"sheet\",\"i\",\"styleSheets\",\"ownerNode\",\"sheetForTag\",\"insertRule\",\"cssRules\",\"e\",\"flush\",\"_tag$parentNode\",\"parentNode\",\"removeChild\",\"abs\",\"Math\",\"from\",\"String\",\"fromCharCode\",\"assign\",\"Object\",\"trim\",\"value\",\"replace\",\"pattern\",\"replacement\",\"indexof\",\"search\",\"indexOf\",\"charat\",\"index\",\"charCodeAt\",\"substr\",\"begin\",\"end\",\"slice\",\"strlen\",\"sizeof\",\"append\",\"array\",\"line\",\"column\",\"position\",\"character\",\"characters\",\"node\",\"root\",\"parent\",\"type\",\"props\",\"children\",\"return\",\"copy\",\"prev\",\"next\",\"peek\",\"caret\",\"token\",\"alloc\",\"dealloc\",\"delimit\",\"delimiter\",\"whitespace\",\"escaping\",\"count\",\"commenter\",\"identifier\",\"MS\",\"MOZ\",\"WEBKIT\",\"COMMENT\",\"RULESET\",\"DECLARATION\",\"KEYFRAMES\",\"serialize\",\"callback\",\"output\",\"stringify\",\"element\",\"join\",\"compile\",\"parse\",\"rules\",\"rulesets\",\"pseudo\",\"points\",\"declarations\",\"offset\",\"atrule\",\"property\",\"previous\",\"variable\",\"scanning\",\"ampersand\",\"reference\",\"comment\",\"declaration\",\"ruleset\",\"post\",\"size\",\"j\",\"k\",\"x\",\"y\",\"z\",\"identifierWithPointTracking\",\"getRules\",\"parsed\",\"toRules\",\"fixedElements\",\"WeakMap\",\"compat\",\"isImplicitRule\",\"get\",\"set\",\"parentRules\",\"removeLabel\",\"prefix\",\"hash\",\"defaultStylisPlugins\",\"map\",\"combine\",\"exec\",\"match\",\"createCache\",\"ssrStyles\",\"querySelectorAll\",\"Array\",\"call\",\"getAttribute\",\"head\",\"_insert\",\"stylisPlugins\",\"inserted\",\"nodesToHydrate\",\"attrib\",\"split\",\"currentSheet\",\"finalizingPlugins\",\"serializer\",\"collection\",\"middleware\",\"concat\",\"selector\",\"serialized\",\"shouldCache\",\"styles\",\"cache\",\"name\",\"registered\",\"memoize\",\"fn\",\"create\",\"arg\",\"EmotionCacheContext\",\"React\",\"HTMLElement\",\"CacheProvider\",\"Provider\",\"withEmotionCache\",\"func\",\"forwardRef\",\"ref\",\"useContext\",\"ThemeContext\",\"hasOwn\",\"hasOwnProperty\",\"typePropName\",\"createEmotionProps\",\"newProps\",\"_key\",\"Insertion\",\"_ref\",\"isStringTag\",\"registerStyles\",\"useInsertionEffectAlwaysWithSyncFallback\",\"insertStyles\",\"Emotion$1\",\"cssProp\",\"css\",\"WrappedComponent\",\"registeredStyles\",\"className\",\"getRegisteredStyles\",\"serializeStyles\",\"_key2\",\"jsx\",\"args\",\"arguments\",\"apply\",\"argsLength\",\"createElementArgArray\",\"Emotion\",\"_jsx\",\"JSX\",\"Global\",\"sheetRef\",\"useInsertionEffectWithLayoutFallback\",\"constructor\",\"rehydrating\",\"querySelector\",\"current\",\"sheetRefCurrent\",\"nextElementSibling\",\"_len\",\"keyframes\",\"insertable\",\"anim\",\"toString\",\"unitlessKeys\",\"animationIterationCount\",\"aspectRatio\",\"borderImageOutset\",\"borderImageSlice\",\"borderImageWidth\",\"boxFlex\",\"boxFlexGroup\",\"boxOrdinalGroup\",\"columnCount\",\"columns\",\"flex\",\"flexGrow\",\"flexPositive\",\"flexShrink\",\"flexNegative\",\"flexOrder\",\"gridRow\",\"gridRowEnd\",\"gridRowSpan\",\"gridRowStart\",\"gridColumn\",\"gridColumnEnd\",\"gridColumnSpan\",\"gridColumnStart\",\"msGridRow\",\"msGridRowSpan\",\"msGridColumn\",\"msGridColumnSpan\",\"fontWeight\",\"lineHeight\",\"opacity\",\"order\",\"orphans\",\"scale\",\"tabSize\",\"widows\",\"zIndex\",\"zoom\",\"WebkitLineClamp\",\"fillOpacity\",\"floodOpacity\",\"stopOpacity\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"isDevelopment\",\"hyphenateRegex\",\"animationRegex\",\"isCustomProperty\",\"isProcessableValue\",\"processStyleName\",\"styleName\",\"toLowerCase\",\"processStyleValue\",\"p1\",\"p2\",\"cursor\",\"unitless\",\"noComponentSelectorMessage\",\"handleInterpolation\",\"mergedProps\",\"interpolation\",\"componentSelector\",\"__emotion_styles\",\"serializedStyles\",\"obj\",\"string\",\"isArray\",\"asString\",\"Error\",\"interpolated\",\"_i\",\"createStringFromObject\",\"previousCursor\",\"result\",\"cached\",\"labelPattern\",\"stringMode\",\"strings\",\"raw\",\"lastIndex\",\"identifierName\",\"str\",\"h\",\"len\",\"hashString\",\"useInsertionEffect\",\"classNames\",\"rawClassName\",\"GlobalStyles\",\"defaultTheme\",\"globalStyles\",\"themeInput\",\"keys\",\"reactPropsRegex\",\"testOmitPropsOnStringTag\",\"prop\",\"test\",\"testOmitPropsOnComponent\",\"getDefaultShouldForwardProp\",\"composeShouldForwardProps\",\"isReal\",\"shouldForwardProp\",\"optionsShouldForwardProp\",\"__emotion_forwardProp\",\"propName\",\"newStyled\",\"createStyled\",\"targetClassName\",\"__emotion_real\",\"baseTag\",\"__emotion_base\",\"label\",\"target\",\"defaultShouldForwardProp\",\"shouldUseAs\",\"templateStringsArr\",\"Styled\",\"FinalTag\",\"as\",\"classInterpolations\",\"theme\",\"finalShouldForwardProp\",\"displayName\",\"defaultProps\",\"defineProperty\",\"withComponent\",\"nextTag\",\"nextOptions\",\"_extends\",\"bind\",\"tagName\",\"StyledEngineProvider\",\"injectFirst\",\"styled\",\"emStyled\",\"internal_processStyles\",\"processor\",\"_interopRequireDefault\",\"require\",\"exports\",\"darken\",\"foreground\",\"background\",\"lumA\",\"getLuminance\",\"lumB\",\"max\",\"min\",\"lighten\",\"_formatMuiErrorMessage2\",\"_clamp\",\"clampWrapper\",\"default\",\"hexToRgb\",\"color\",\"re\",\"RegExp\",\"colors\",\"n\",\"parseInt\",\"round\",\"decomposeColor\",\"charAt\",\"marker\",\"substring\",\"colorSpace\",\"values\",\"shift\",\"parseFloat\",\"colorChannel\",\"decomposedColor\",\"val\",\"idx\",\"recomposeColor\",\"hslToRgb\",\"s\",\"l\",\"a\",\"f\",\"rgb\",\"Number\",\"toFixed\",\"alpha\",\"coefficient\",\"emphasize\",\"input\",\"themeId\",\"systemDefaultTheme\",\"rootShouldForwardProp\",\"slotShouldForwardProp\",\"systemSx\",\"_styleFunctionSx\",\"_extends2\",\"resolveTheme\",\"__mui_systemSx\",\"inputOptions\",\"_styledEngine\",\"filter\",\"style\",\"componentName\",\"slot\",\"componentSlot\",\"skipVariantsResolver\",\"inputSkipVariantsResolver\",\"skipSx\",\"inputSkipSx\",\"overridesResolver\",\"defaultOverridesResolver\",\"lowercaseFirstLetter\",\"_objectWithoutPropertiesLoose2\",\"_excluded3\",\"shouldForwardPropOption\",\"defaultStyledResolver\",\"transformStyleArg\",\"stylesArg\",\"_deepmerge\",\"isPlainObject\",\"processStyleArg\",\"muiStyledResolver\",\"styleArg\",\"transformedStyleArg\",\"expressions\",\"expressionsWithDefaultTheme\",\"components\",\"styleOverrides\",\"resolvedStyleOverrides\",\"entries\",\"_ref3\",\"slotKey\",\"slotStyle\",\"_theme$components\",\"variants\",\"numOfCustomFnsApplied\",\"placeholders\",\"fill\",\"Component\",\"muiName\",\"withConfig\",\"r\",\"__esModule\",\"t\",\"_getRequireWildcardCache\",\"has\",\"__proto__\",\"getOwnPropertyDescriptor\",\"u\",\"_interopRequireWildcard\",\"_createTheme\",\"_excluded\",\"_excluded2\",\"_ref2\",\"callableStyle\",\"ownerState\",\"resolvedStylesArg\",\"flatMap\",\"resolvedStyle\",\"variant\",\"isMatch\",\"xs\",\"sm\",\"md\",\"lg\",\"xl\",\"defaultBreakpoints\",\"up\",\"handleBreakpoints\",\"propValue\",\"styleFromPropValue\",\"themeBreakpoints\",\"breakpoints\",\"reduce\",\"acc\",\"item\",\"breakpoint\",\"cssKey\",\"createEmptyBreakpointObject\",\"breakpointsInput\",\"_breakpointsInput$key\",\"removeUnusedBreakpoints\",\"breakpointKeys\",\"breakpointOutput\",\"applyStyles\",\"vars\",\"getColorSchemeSelector\",\"palette\",\"mode\",\"sortBreakpointsValues\",\"breakpointsAsArray\",\"sort\",\"breakpoint1\",\"breakpoint2\",\"createBreakpoints\",\"unit\",\"step\",\"other\",\"_objectWithoutPropertiesLoose\",\"sortedValues\",\"down\",\"between\",\"start\",\"endIndex\",\"only\",\"not\",\"keyIndex\",\"borderRadius\",\"paletteInput\",\"spacing\",\"spacingInput\",\"shape\",\"shapeInput\",\"mui\",\"transform\",\"createUnarySpacing\",\"argsInput\",\"argument\",\"createSpacing\",\"muiTheme\",\"deepmerge\",\"direction\",\"unstable_sxConfig\",\"defaultSxConfig\",\"unstable_sx\",\"styleFunctionSx\",\"sx\",\"clone\",\"properties\",\"m\",\"p\",\"directions\",\"b\",\"aliases\",\"marginX\",\"marginY\",\"paddingX\",\"paddingY\",\"getCssProperties\",\"dir\",\"marginKeys\",\"paddingKeys\",\"spacingKeys\",\"createUnaryUnit\",\"themeKey\",\"defaultValue\",\"_getPath\",\"themeSpacing\",\"getPath\",\"getValue\",\"transformer\",\"transformed\",\"resolveCssProperty\",\"cssProperties\",\"cssProperty\",\"getStyleFromPropValue\",\"merge\",\"margin\",\"padding\",\"propTypes\",\"filterProps\",\"path\",\"checkVars\",\"getStyleValue\",\"themeMapping\",\"propValueFinal\",\"userValue\",\"capitalize\",\"handlers\",\"borderTransform\",\"createBorderStyle\",\"border\",\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\",\"borderColor\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"outline\",\"outlineColor\",\"compose\",\"gap\",\"columnGap\",\"rowGap\",\"paletteTransform\",\"sizingTransform\",\"width\",\"maxWidth\",\"_props$theme\",\"_props$theme2\",\"breakpointsValues\",\"minWidth\",\"height\",\"maxHeight\",\"minHeight\",\"bgcolor\",\"backgroundColor\",\"pt\",\"pr\",\"pb\",\"pl\",\"px\",\"py\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"paddingInline\",\"paddingInlineStart\",\"paddingInlineEnd\",\"paddingBlock\",\"paddingBlockStart\",\"paddingBlockEnd\",\"mt\",\"mr\",\"mb\",\"ml\",\"mx\",\"my\",\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\",\"marginInline\",\"marginInlineStart\",\"marginInlineEnd\",\"marginBlock\",\"marginBlockStart\",\"marginBlockEnd\",\"displayPrint\",\"display\",\"overflow\",\"textOverflow\",\"visibility\",\"whiteSpace\",\"flexBasis\",\"flexDirection\",\"flexWrap\",\"justifyContent\",\"alignItems\",\"alignContent\",\"alignSelf\",\"justifyItems\",\"justifySelf\",\"gridAutoFlow\",\"gridAutoColumns\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"gridTemplateAreas\",\"gridArea\",\"top\",\"right\",\"bottom\",\"left\",\"boxShadow\",\"boxSizing\",\"fontFamily\",\"fontSize\",\"fontStyle\",\"letterSpacing\",\"textTransform\",\"textAlign\",\"typography\",\"splitProps\",\"_props$theme$unstable\",\"systemProps\",\"otherProps\",\"config\",\"extendSxProp\",\"inSx\",\"finalSx\",\"unstable_createStyleFunctionSx\",\"getThemeValue\",\"_theme$unstable_sxCon\",\"traverse\",\"sxInput\",\"sxObject\",\"emptyBreakpoints\",\"breakpointsKeys\",\"styleKey\",\"maybeFn\",\"objects\",\"allKeys\",\"object\",\"union\",\"Set\",\"every\",\"objectsHaveSameKeys\",\"_formatMuiErrorMessage\",\"toUpperCase\",\"MIN_SAFE_INTEGER\",\"MAX_SAFE_INTEGER\",\"getPrototypeOf\",\"Symbol\",\"toStringTag\",\"iterator\",\"deepClone\",\"source\",\"formatMuiErrorMessage\",\"code\",\"url\",\"encodeURIComponent\",\"fnNameMatchRegex\",\"getFunctionName\",\"getFunctionComponentName\",\"fallback\",\"getWrappedName\",\"outerType\",\"innerType\",\"wrapperName\",\"functionName\",\"getDisplayName\",\"$$typeof\",\"ForwardRef\",\"render\",\"Memo\",\"reactIs\",\"REACT_STATICS\",\"childContextTypes\",\"contextType\",\"contextTypes\",\"getDefaultProps\",\"getDerivedStateFromError\",\"getDerivedStateFromProps\",\"mixins\",\"KNOWN_STATICS\",\"caller\",\"callee\",\"arity\",\"MEMO_STATICS\",\"compare\",\"TYPE_STATICS\",\"getStatics\",\"component\",\"isMemo\",\"getOwnPropertyNames\",\"getOwnPropertySymbols\",\"objectPrototype\",\"module\",\"hoistNonReactStatics\",\"targetComponent\",\"sourceComponent\",\"blacklist\",\"inheritedComponent\",\"targetStatics\",\"sourceStatics\",\"descriptor\",\"for\",\"c\",\"d\",\"g\",\"q\",\"v\",\"w\",\"A\",\"AsyncMode\",\"ConcurrentMode\",\"ContextConsumer\",\"ContextProvider\",\"Element\",\"Fragment\",\"Lazy\",\"Portal\",\"Profiler\",\"StrictMode\",\"Suspense\",\"isAsyncMode\",\"isConcurrentMode\",\"isContextConsumer\",\"isContextProvider\",\"isElement\",\"isForwardRef\",\"isFragment\",\"isLazy\",\"isPortal\",\"isProfiler\",\"isStrictMode\",\"isSuspense\",\"isValidElementType\",\"typeOf\",\"aa\",\"ca\",\"da\",\"ea\",\"fa\",\"ha\",\"add\",\"ia\",\"window\",\"ja\",\"ka\",\"la\",\"ma\",\"acceptsBooleans\",\"attributeName\",\"attributeNamespace\",\"mustUseProperty\",\"propertyName\",\"sanitizeURL\",\"removeEmptyString\",\"ra\",\"sa\",\"ta\",\"pa\",\"isNaN\",\"qa\",\"oa\",\"removeAttribute\",\"setAttributeNS\",\"xlinkHref\",\"ua\",\"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\",\"va\",\"wa\",\"ya\",\"za\",\"Aa\",\"Ba\",\"Ca\",\"Da\",\"Ea\",\"Fa\",\"Ga\",\"Ha\",\"Ia\",\"Ja\",\"Ka\",\"La\",\"Ma\",\"stack\",\"Na\",\"Oa\",\"prepareStackTrace\",\"Reflect\",\"construct\",\"includes\",\"Pa\",\"Qa\",\"_context\",\"_payload\",\"_init\",\"Ra\",\"Sa\",\"Ta\",\"nodeName\",\"Va\",\"_valueTracker\",\"configurable\",\"enumerable\",\"setValue\",\"stopTracking\",\"Ua\",\"Wa\",\"checked\",\"Xa\",\"activeElement\",\"body\",\"Ya\",\"defaultChecked\",\"_wrapperState\",\"initialChecked\",\"Za\",\"initialValue\",\"controlled\",\"ab\",\"bb\",\"cb\",\"db\",\"ownerDocument\",\"eb\",\"fb\",\"selected\",\"defaultSelected\",\"disabled\",\"gb\",\"dangerouslySetInnerHTML\",\"hb\",\"ib\",\"jb\",\"textContent\",\"kb\",\"lb\",\"nb\",\"namespaceURI\",\"innerHTML\",\"valueOf\",\"MSApp\",\"execUnsafeLocalFunction\",\"ob\",\"lastChild\",\"nodeType\",\"nodeValue\",\"lineClamp\",\"qb\",\"rb\",\"sb\",\"setProperty\",\"tb\",\"menuitem\",\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"keygen\",\"link\",\"meta\",\"param\",\"track\",\"wbr\",\"ub\",\"vb\",\"is\",\"wb\",\"xb\",\"srcElement\",\"correspondingUseElement\",\"yb\",\"zb\",\"Ab\",\"Bb\",\"Cb\",\"stateNode\",\"Db\",\"Eb\",\"Fb\",\"Gb\",\"Hb\",\"Ib\",\"Jb\",\"Kb\",\"Lb\",\"Mb\",\"addEventListener\",\"removeEventListener\",\"Nb\",\"onError\",\"Ob\",\"Pb\",\"Qb\",\"Rb\",\"Sb\",\"Tb\",\"Vb\",\"alternate\",\"flags\",\"Wb\",\"memoizedState\",\"dehydrated\",\"Xb\",\"Zb\",\"child\",\"sibling\",\"Yb\",\"$b\",\"ac\",\"unstable_scheduleCallback\",\"bc\",\"unstable_cancelCallback\",\"cc\",\"unstable_shouldYield\",\"dc\",\"unstable_requestPaint\",\"B\",\"unstable_now\",\"ec\",\"unstable_getCurrentPriorityLevel\",\"fc\",\"unstable_ImmediatePriority\",\"gc\",\"unstable_UserBlockingPriority\",\"hc\",\"unstable_NormalPriority\",\"ic\",\"unstable_LowPriority\",\"jc\",\"unstable_IdlePriority\",\"kc\",\"lc\",\"oc\",\"clz32\",\"pc\",\"qc\",\"log\",\"LN2\",\"rc\",\"sc\",\"tc\",\"uc\",\"pendingLanes\",\"suspendedLanes\",\"pingedLanes\",\"entangledLanes\",\"entanglements\",\"vc\",\"xc\",\"yc\",\"zc\",\"Ac\",\"eventTimes\",\"Cc\",\"C\",\"Dc\",\"Ec\",\"Fc\",\"Gc\",\"Hc\",\"Ic\",\"Jc\",\"Kc\",\"Lc\",\"Mc\",\"Nc\",\"Oc\",\"Map\",\"Pc\",\"Qc\",\"Rc\",\"Sc\",\"delete\",\"pointerId\",\"Tc\",\"nativeEvent\",\"blockedOn\",\"domEventName\",\"eventSystemFlags\",\"targetContainers\",\"Vc\",\"Wc\",\"priority\",\"isDehydrated\",\"containerInfo\",\"Xc\",\"Yc\",\"dispatchEvent\",\"Zc\",\"$c\",\"ad\",\"bd\",\"cd\",\"ReactCurrentBatchConfig\",\"dd\",\"ed\",\"transition\",\"fd\",\"gd\",\"hd\",\"id\",\"Uc\",\"stopPropagation\",\"jd\",\"kd\",\"ld\",\"nd\",\"od\",\"keyCode\",\"charCode\",\"pd\",\"qd\",\"rd\",\"_reactName\",\"_targetInst\",\"currentTarget\",\"isDefaultPrevented\",\"defaultPrevented\",\"returnValue\",\"isPropagationStopped\",\"preventDefault\",\"cancelBubble\",\"persist\",\"isPersistent\",\"wd\",\"xd\",\"yd\",\"sd\",\"eventPhase\",\"bubbles\",\"cancelable\",\"timeStamp\",\"Date\",\"now\",\"isTrusted\",\"td\",\"ud\",\"view\",\"detail\",\"vd\",\"Ad\",\"screenX\",\"screenY\",\"clientX\",\"clientY\",\"pageX\",\"pageY\",\"ctrlKey\",\"shiftKey\",\"altKey\",\"metaKey\",\"getModifierState\",\"zd\",\"button\",\"buttons\",\"relatedTarget\",\"fromElement\",\"toElement\",\"movementX\",\"movementY\",\"Bd\",\"Dd\",\"dataTransfer\",\"Fd\",\"Hd\",\"animationName\",\"elapsedTime\",\"pseudoElement\",\"Id\",\"clipboardData\",\"Jd\",\"Ld\",\"data\",\"Md\",\"Esc\",\"Spacebar\",\"Left\",\"Up\",\"Right\",\"Down\",\"Del\",\"Win\",\"Menu\",\"Apps\",\"Scroll\",\"MozPrintableKey\",\"Nd\",\"Od\",\"Alt\",\"Control\",\"Meta\",\"Shift\",\"Pd\",\"Qd\",\"location\",\"repeat\",\"locale\",\"which\",\"Rd\",\"Td\",\"pressure\",\"tangentialPressure\",\"tiltX\",\"tiltY\",\"twist\",\"pointerType\",\"isPrimary\",\"Vd\",\"touches\",\"targetTouches\",\"changedTouches\",\"Xd\",\"Yd\",\"deltaX\",\"wheelDeltaX\",\"deltaY\",\"wheelDeltaY\",\"wheelDelta\",\"deltaZ\",\"deltaMode\",\"Zd\",\"$d\",\"ae\",\"be\",\"documentMode\",\"ce\",\"de\",\"ee\",\"fe\",\"ge\",\"he\",\"ie\",\"le\",\"date\",\"datetime\",\"email\",\"month\",\"number\",\"password\",\"range\",\"tel\",\"text\",\"time\",\"week\",\"me\",\"ne\",\"oe\",\"event\",\"listeners\",\"pe\",\"qe\",\"se\",\"te\",\"ue\",\"ve\",\"we\",\"xe\",\"ye\",\"ze\",\"oninput\",\"Ae\",\"detachEvent\",\"Be\",\"Ce\",\"attachEvent\",\"De\",\"Ee\",\"Fe\",\"He\",\"Ie\",\"Je\",\"Ke\",\"Le\",\"contains\",\"compareDocumentPosition\",\"Me\",\"HTMLIFrameElement\",\"contentWindow\",\"href\",\"Ne\",\"contentEditable\",\"Oe\",\"focusedElem\",\"selectionRange\",\"documentElement\",\"selectionStart\",\"selectionEnd\",\"defaultView\",\"getSelection\",\"extend\",\"rangeCount\",\"anchorNode\",\"anchorOffset\",\"focusNode\",\"focusOffset\",\"createRange\",\"setStart\",\"removeAllRanges\",\"addRange\",\"setEnd\",\"scrollLeft\",\"scrollTop\",\"focus\",\"Pe\",\"Qe\",\"Re\",\"Se\",\"Te\",\"Ue\",\"Ve\",\"We\",\"animationend\",\"animationiteration\",\"animationstart\",\"transitionend\",\"Xe\",\"Ye\",\"Ze\",\"animation\",\"$e\",\"af\",\"bf\",\"cf\",\"df\",\"ef\",\"ff\",\"gf\",\"hf\",\"lf\",\"mf\",\"nf\",\"Ub\",\"instance\",\"listener\",\"D\",\"of\",\"pf\",\"qf\",\"rf\",\"random\",\"sf\",\"capture\",\"passive\",\"J\",\"F\",\"tf\",\"uf\",\"parentWindow\",\"vf\",\"wf\",\"na\",\"xa\",\"$a\",\"ba\",\"je\",\"char\",\"ke\",\"unshift\",\"xf\",\"yf\",\"zf\",\"Af\",\"Bf\",\"Cf\",\"Df\",\"Ef\",\"__html\",\"Ff\",\"setTimeout\",\"Gf\",\"clearTimeout\",\"Hf\",\"Promise\",\"Jf\",\"queueMicrotask\",\"resolve\",\"then\",\"catch\",\"If\",\"Kf\",\"Lf\",\"Mf\",\"previousSibling\",\"Nf\",\"Of\",\"Pf\",\"Qf\",\"Rf\",\"Sf\",\"Tf\",\"Uf\",\"E\",\"G\",\"Vf\",\"H\",\"Wf\",\"Xf\",\"Yf\",\"__reactInternalMemoizedUnmaskedChildContext\",\"__reactInternalMemoizedMaskedChildContext\",\"Zf\",\"$f\",\"ag\",\"bg\",\"getChildContext\",\"cg\",\"__reactInternalMemoizedMergedChildContext\",\"dg\",\"eg\",\"fg\",\"gg\",\"hg\",\"jg\",\"kg\",\"mg\",\"ng\",\"og\",\"pg\",\"qg\",\"rg\",\"sg\",\"tg\",\"ug\",\"vg\",\"wg\",\"xg\",\"yg\",\"I\",\"zg\",\"Ag\",\"Bg\",\"elementType\",\"deletions\",\"Cg\",\"pendingProps\",\"treeContext\",\"retryLane\",\"Dg\",\"Eg\",\"Fg\",\"Gg\",\"memoizedProps\",\"Hg\",\"Ig\",\"Jg\",\"Kg\",\"Lg\",\"_owner\",\"_stringRef\",\"refs\",\"Mg\",\"Ng\",\"Og\",\"Pg\",\"Qg\",\"Rg\",\"implementation\",\"Sg\",\"Tg\",\"done\",\"Ug\",\"Vg\",\"Wg\",\"Xg\",\"Yg\",\"Zg\",\"$g\",\"ah\",\"_currentValue\",\"bh\",\"childLanes\",\"ch\",\"dependencies\",\"firstContext\",\"lanes\",\"dh\",\"eh\",\"context\",\"memoizedValue\",\"fh\",\"gh\",\"hh\",\"interleaved\",\"ih\",\"jh\",\"kh\",\"updateQueue\",\"baseState\",\"firstBaseUpdate\",\"lastBaseUpdate\",\"shared\",\"pending\",\"effects\",\"lh\",\"mh\",\"eventTime\",\"lane\",\"payload\",\"nh\",\"K\",\"oh\",\"ph\",\"qh\",\"rh\",\"sh\",\"th\",\"uh\",\"vh\",\"wh\",\"xh\",\"yh\",\"zh\",\"Ah\",\"Bh\",\"L\",\"Ch\",\"revealOrder\",\"Dh\",\"Eh\",\"_workInProgressVersionPrimary\",\"Fh\",\"ReactCurrentDispatcher\",\"Gh\",\"Hh\",\"M\",\"N\",\"O\",\"Ih\",\"Jh\",\"Kh\",\"Lh\",\"P\",\"Mh\",\"Nh\",\"Oh\",\"Ph\",\"Qh\",\"Rh\",\"Sh\",\"Th\",\"baseQueue\",\"queue\",\"Uh\",\"Vh\",\"Wh\",\"lastRenderedReducer\",\"action\",\"hasEagerState\",\"eagerState\",\"lastRenderedState\",\"dispatch\",\"Xh\",\"Yh\",\"Zh\",\"$h\",\"ai\",\"getSnapshot\",\"bi\",\"ci\",\"Q\",\"di\",\"lastEffect\",\"stores\",\"ei\",\"fi\",\"gi\",\"hi\",\"ii\",\"destroy\",\"deps\",\"ji\",\"ki\",\"li\",\"mi\",\"ni\",\"oi\",\"pi\",\"qi\",\"ri\",\"si\",\"ti\",\"ui\",\"vi\",\"wi\",\"xi\",\"yi\",\"zi\",\"Ai\",\"R\",\"Bi\",\"readContext\",\"useCallback\",\"useEffect\",\"useImperativeHandle\",\"useLayoutEffect\",\"useMemo\",\"useReducer\",\"useRef\",\"useState\",\"useDebugValue\",\"useDeferredValue\",\"useTransition\",\"useMutableSource\",\"useSyncExternalStore\",\"useId\",\"unstable_isNewReconciler\",\"identifierPrefix\",\"Ci\",\"Di\",\"Ei\",\"isMounted\",\"_reactInternals\",\"enqueueSetState\",\"enqueueReplaceState\",\"enqueueForceUpdate\",\"Fi\",\"shouldComponentUpdate\",\"isPureReactComponent\",\"Gi\",\"state\",\"updater\",\"Hi\",\"componentWillReceiveProps\",\"UNSAFE_componentWillReceiveProps\",\"Ii\",\"getSnapshotBeforeUpdate\",\"UNSAFE_componentWillMount\",\"componentWillMount\",\"componentDidMount\",\"Ji\",\"message\",\"digest\",\"Ki\",\"Li\",\"console\",\"error\",\"Mi\",\"Ni\",\"Oi\",\"Pi\",\"Qi\",\"componentDidCatch\",\"Ri\",\"componentStack\",\"Si\",\"pingCache\",\"Ti\",\"Ui\",\"Vi\",\"Wi\",\"ReactCurrentOwner\",\"Xi\",\"Yi\",\"Zi\",\"$i\",\"aj\",\"bj\",\"cj\",\"dj\",\"baseLanes\",\"cachePool\",\"transitions\",\"ej\",\"fj\",\"gj\",\"hj\",\"ij\",\"UNSAFE_componentWillUpdate\",\"componentWillUpdate\",\"componentDidUpdate\",\"jj\",\"kj\",\"pendingContext\",\"lj\",\"zj\",\"Aj\",\"Bj\",\"Cj\",\"mj\",\"nj\",\"oj\",\"pj\",\"qj\",\"sj\",\"dataset\",\"dgst\",\"tj\",\"uj\",\"_reactRetry\",\"rj\",\"subtreeFlags\",\"vj\",\"wj\",\"isBackwards\",\"rendering\",\"renderingStartTime\",\"last\",\"tail\",\"tailMode\",\"xj\",\"Dj\",\"S\",\"Ej\",\"Fj\",\"wasMultiple\",\"multiple\",\"suppressHydrationWarning\",\"onClick\",\"onclick\",\"createElementNS\",\"autoFocus\",\"T\",\"Gj\",\"Hj\",\"Ij\",\"Jj\",\"U\",\"Kj\",\"WeakSet\",\"V\",\"Lj\",\"W\",\"Mj\",\"Nj\",\"Pj\",\"Qj\",\"Rj\",\"Sj\",\"Tj\",\"Uj\",\"Vj\",\"_reactRootContainer\",\"Wj\",\"X\",\"Xj\",\"Yj\",\"Zj\",\"onCommitFiberUnmount\",\"componentWillUnmount\",\"ak\",\"bk\",\"ck\",\"dk\",\"ek\",\"isHidden\",\"fk\",\"gk\",\"hk\",\"ik\",\"jk\",\"kk\",\"__reactInternalSnapshotBeforeUpdate\",\"src\",\"Vk\",\"lk\",\"ceil\",\"mk\",\"nk\",\"ok\",\"Y\",\"Z\",\"pk\",\"qk\",\"rk\",\"sk\",\"tk\",\"Infinity\",\"uk\",\"vk\",\"wk\",\"xk\",\"yk\",\"zk\",\"Ak\",\"Bk\",\"Ck\",\"Dk\",\"callbackNode\",\"expirationTimes\",\"expiredLanes\",\"wc\",\"callbackPriority\",\"ig\",\"Ek\",\"Fk\",\"Gk\",\"Hk\",\"Ik\",\"Jk\",\"Kk\",\"Lk\",\"Mk\",\"Nk\",\"Ok\",\"finishedWork\",\"finishedLanes\",\"Pk\",\"timeoutHandle\",\"Qk\",\"Rk\",\"Sk\",\"Tk\",\"Uk\",\"mutableReadLanes\",\"Bc\",\"Oj\",\"onCommitFiberRoot\",\"mc\",\"onRecoverableError\",\"Wk\",\"onPostCommitFiberRoot\",\"Xk\",\"Yk\",\"$k\",\"isReactComponent\",\"pendingChildren\",\"al\",\"mutableSourceEagerHydrationData\",\"bl\",\"pendingSuspenseBoundaries\",\"dl\",\"el\",\"fl\",\"gl\",\"hl\",\"il\",\"yj\",\"Zk\",\"kl\",\"reportError\",\"ll\",\"_internalRoot\",\"nl\",\"ol\",\"rl\",\"ql\",\"unmount\",\"unstable_scheduleHydration\",\"splice\",\"JSON\",\"form\",\"sl\",\"usingClientEntryPoint\",\"Events\",\"tl\",\"findFiberByHostInstance\",\"bundleType\",\"version\",\"rendererPackageName\",\"ul\",\"rendererConfig\",\"overrideHookState\",\"overrideHookStateDeletePath\",\"overrideHookStateRenamePath\",\"overrideProps\",\"overridePropsDeletePath\",\"overridePropsRenamePath\",\"setErrorHandler\",\"setSuspenseHandler\",\"scheduleUpdate\",\"currentDispatcherRef\",\"findHostInstanceByFiber\",\"findHostInstancesForRefresh\",\"scheduleRefresh\",\"scheduleRoot\",\"setRefreshHandler\",\"getCurrentFiber\",\"reconcilerVersion\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"vl\",\"isDisabled\",\"supportsFiber\",\"inject\",\"createPortal\",\"cl\",\"createRoot\",\"unstable_strictMode\",\"findDOMNode\",\"flushSync\",\"hydrateRoot\",\"hydratedSources\",\"_getVersion\",\"_source\",\"unmountComponentAtNode\",\"unstable_batchedUpdates\",\"unstable_renderSubtreeIntoContainer\",\"checkDCE\",\"err\",\"REACT_ELEMENT_TYPE\",\"REACT_PORTAL_TYPE\",\"REACT_FRAGMENT_TYPE\",\"REACT_STRICT_MODE_TYPE\",\"REACT_PROFILER_TYPE\",\"REACT_CONSUMER_TYPE\",\"REACT_CONTEXT_TYPE\",\"REACT_FORWARD_REF_TYPE\",\"REACT_SUSPENSE_TYPE\",\"REACT_SUSPENSE_LIST_TYPE\",\"REACT_MEMO_TYPE\",\"REACT_LAZY_TYPE\",\"REACT_OFFSCREEN_TYPE\",\"REACT_CLIENT_REFERENCE\",\"__self\",\"__source\",\"jsxs\",\"setState\",\"forceUpdate\",\"escape\",\"_status\",\"_result\",\"Children\",\"toArray\",\"PureComponent\",\"act\",\"cloneElement\",\"createContext\",\"_currentValue2\",\"_threadCount\",\"Consumer\",\"_defaultValue\",\"_globalName\",\"createFactory\",\"createRef\",\"isValidElement\",\"lazy\",\"memo\",\"startTransition\",\"unstable_act\",\"pop\",\"sortIndex\",\"performance\",\"setImmediate\",\"startTime\",\"expirationTime\",\"priorityLevel\",\"navigator\",\"scheduling\",\"isInputPending\",\"MessageChannel\",\"port2\",\"port1\",\"onmessage\",\"postMessage\",\"unstable_Profiling\",\"unstable_continueExecution\",\"unstable_forceFrameRate\",\"floor\",\"unstable_getFirstCallbackNode\",\"unstable_next\",\"unstable_pauseExecution\",\"unstable_runWithPriority\",\"delay\",\"unstable_wrapCallback\",\"__webpack_module_cache__\",\"__webpack_require__\",\"moduleId\",\"cachedModule\",\"__webpack_modules__\",\"getter\",\"leafPrototypes\",\"getProto\",\"ns\",\"def\",\"definition\",\"o\",\"black\",\"white\",\"A100\",\"A200\",\"A400\",\"A700\",\"light\",\"primary\",\"secondary\",\"divider\",\"paper\",\"common\",\"active\",\"hover\",\"hoverOpacity\",\"selectedOpacity\",\"disabledBackground\",\"disabledOpacity\",\"focusOpacity\",\"activatedOpacity\",\"dark\",\"icon\",\"addLightOrDark\",\"intent\",\"shade\",\"tonalOffset\",\"tonalOffsetLight\",\"tonalOffsetDark\",\"main\",\"createPalette\",\"contrastThreshold\",\"blue\",\"getDefaultPrimary\",\"purple\",\"getDefaultSecondary\",\"red\",\"getDefaultError\",\"info\",\"lightBlue\",\"getDefaultInfo\",\"success\",\"green\",\"getDefaultSuccess\",\"warning\",\"orange\",\"getDefaultWarning\",\"getContrastText\",\"getContrastRatio\",\"augmentColor\",\"mainShade\",\"lightShade\",\"darkShade\",\"contrastText\",\"modes\",\"grey\",\"caseAllCaps\",\"defaultFontFamily\",\"createTypography\",\"fontWeightLight\",\"fontWeightRegular\",\"fontWeightMedium\",\"fontWeightBold\",\"htmlFontSize\",\"allVariants\",\"pxToRem\",\"pxToRem2\",\"coef\",\"buildVariant\",\"casing\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"overline\",\"inherit\",\"createShadow\",\"easing\",\"easeInOut\",\"easeOut\",\"easeIn\",\"sharp\",\"duration\",\"shortest\",\"shorter\",\"short\",\"standard\",\"complex\",\"enteringScreen\",\"leavingScreen\",\"formatMs\",\"milliseconds\",\"getAutoHeightDuration\",\"constant\",\"createTransitions\",\"inputTransitions\",\"mergedEasing\",\"mergedDuration\",\"durationOption\",\"easingOption\",\"animatedProp\",\"mobileStepper\",\"fab\",\"speedDial\",\"appBar\",\"drawer\",\"modal\",\"snackbar\",\"tooltip\",\"createTheme\",\"mixinsInput\",\"transitionsInput\",\"typographyInput\",\"systemTheme\",\"systemCreateTheme\",\"toolbar\",\"shadows\",\"useTheme\",\"localTheme\",\"outerTheme\",\"mergeOuterLocalTheme\",\"nested\",\"contextTheme\",\"RtlContext\",\"resolveProps\",\"defaultSlotProps\",\"slotProps\",\"slotPropName\",\"PropsContext\",\"useDefaultProps\",\"params\",\"getThemeProps\",\"EMPTY_THEME\",\"useThemeScoping\",\"upperTheme\",\"isPrivate\",\"resolvedTheme\",\"mergedTheme\",\"useThemeWithoutDefault\",\"upperPrivateTheme\",\"usePrivateTheme\",\"engineTheme\",\"privateTheme\",\"rtlValue\",\"MuiThemeProvider\",\"StyledEngineThemeContext\",\"RtlProvider\",\"DefaultPropsProvider\",\"ThemeProvider\",\"scopedTheme\",\"THEME_ID\",\"SystemThemeProvider\",\"useSystemDefaultProps\",\"MuiGlobalStyles\",\"SystemGlobalStyles\",\"html\",\"enableColorScheme\",\"WebkitFontSmoothing\",\"MozOsxFontSmoothing\",\"WebkitTextSizeAdjust\",\"colorScheme\",\"inProps\",\"_jsxs\",\"colorSchemeStyles\",\"colorSchemes\",\"scheme\",\"_scheme$palette\",\"defaultStyles\",\"themeOverrides\",\"MuiCssBaseline\",\"Action\",\"PopStateEventType\",\"invariant\",\"cond\",\"warn\",\"getHistoryState\",\"usr\",\"createLocation\",\"to\",\"pathname\",\"parsePath\",\"createPath\",\"parsedPath\",\"hashIndex\",\"searchIndex\",\"getUrlBasedHistory\",\"getLocation\",\"createHref\",\"validateLocation\",\"v5Compat\",\"globalHistory\",\"history\",\"Pop\",\"getIndex\",\"handlePop\",\"nextIndex\",\"delta\",\"createURL\",\"origin\",\"URL\",\"replaceState\",\"listen\",\"encodeLocation\",\"Push\",\"historyState\",\"pushState\",\"DOMException\",\"Replace\",\"go\",\"ResultType\",\"matchRoutes\",\"routes\",\"locationArg\",\"basename\",\"matchRoutesImpl\",\"allowPartial\",\"stripBasename\",\"branches\",\"flattenRoutes\",\"score\",\"siblings\",\"compareIndexes\",\"routesMeta\",\"childrenIndex\",\"rankRouteBranches\",\"matches\",\"decoded\",\"decodePath\",\"matchRouteBranch\",\"parentsMeta\",\"parentPath\",\"flattenRoute\",\"route\",\"relativePath\",\"caseSensitive\",\"startsWith\",\"joinPaths\",\"computeScore\",\"_route$path\",\"exploded\",\"explodeOptionalSegments\",\"segments\",\"first\",\"rest\",\"isOptional\",\"endsWith\",\"required\",\"restExploded\",\"subpath\",\"paramRe\",\"dynamicSegmentValue\",\"indexRouteValue\",\"emptySegmentValue\",\"staticSegmentValue\",\"splatPenalty\",\"isSplat\",\"initialScore\",\"some\",\"segment\",\"branch\",\"matchedParams\",\"matchedPathname\",\"remainingPathname\",\"matchPath\",\"pathnameBase\",\"normalizePathname\",\"matcher\",\"compiledParams\",\"regexpSource\",\"_\",\"paramName\",\"compilePath\",\"captureGroups\",\"splatValue\",\"decodeURIComponent\",\"startIndex\",\"nextChar\",\"paths\",\"isRouteErrorResponse\",\"status\",\"statusText\",\"internal\",\"validMutationMethodsArr\",\"validRequestMethodsArr\",\"DataRouterContext\",\"DataRouterStateContext\",\"NavigationContext\",\"LocationContext\",\"RouteContext\",\"outlet\",\"isDataRoute\",\"RouteErrorContext\",\"useInRouterContext\",\"useLocation\",\"UNSAFE_invariant\",\"useRoutesImpl\",\"dataRouterState\",\"future\",\"parentMatches\",\"routeMatch\",\"parentParams\",\"parentPathnameBase\",\"locationFromContext\",\"_parsedLocationArg$pa\",\"parsedLocationArg\",\"parentSegments\",\"renderedMatches\",\"_renderMatches\",\"navigationType\",\"DefaultErrorComponent\",\"_state$errors\",\"useDataRouterState\",\"DataRouterStateHook\",\"UseRouteError\",\"routeId\",\"useCurrentRouteId\",\"errors\",\"useRouteError\",\"lightgrey\",\"preStyles\",\"defaultErrorElement\",\"RenderErrorBoundary\",\"super\",\"revalidation\",\"errorInfo\",\"routeContext\",\"RenderedRoute\",\"dataRouterContext\",\"static\",\"staticContext\",\"errorElement\",\"ErrorBoundary\",\"_deepestRenderedBoundaryId\",\"_dataRouterState\",\"_future\",\"v7_partialHydration\",\"initialized\",\"errorIndex\",\"findIndex\",\"renderFallback\",\"fallbackIndex\",\"HydrateFallback\",\"hydrateFallbackElement\",\"loaderData\",\"needsToRunLoader\",\"loader\",\"reduceRight\",\"shouldRenderHydrateFallback\",\"alreadyWarned$1\",\"getChildren\",\"hookName\",\"useRouteContext\",\"thisRoute\",\"alreadyWarned\",\"logDeprecation\",\"flag\",\"msg\",\"logV6DeprecationWarnings\",\"renderFuture\",\"routerFuture\",\"v7_startTransition\",\"v7_relativeSplatPath\",\"v7_fetcherPersist\",\"v7_normalizeFormMethod\",\"v7_skipActionErrorRevalidation\",\"Route\",\"_props\",\"Router\",\"_ref5\",\"basenameProp\",\"locationProp\",\"staticProp\",\"navigationContext\",\"locationContext\",\"trailingPathname\",\"Routes\",\"_ref6\",\"createRoutesFromChildren\",\"treePath\",\"hasErrorBoundary\",\"shouldRevalidate\",\"handle\",\"__reactRouterVersion\",\"startTransitionImpl\",\"ReactDOM\",\"BrowserRouter\",\"_ref4\",\"historyRef\",\"setStateImpl\",\"newState\",\"UNSAFE_logV6DeprecationWarnings\",\"DataRouterHook\",\"defaultGenerator\",\"createClassNameGenerator\",\"generate\",\"configure\",\"generator\",\"reset\",\"globalStateClasses\",\"completed\",\"expanded\",\"focused\",\"focusVisible\",\"open\",\"readOnly\",\"generateUtilityClass\",\"globalStateClass\",\"ClassNameGenerator\",\"generateUtilityClasses\",\"slots\",\"globalStatePrefix\",\"defaultClassName\",\"generateClassName\",\"BoxRoot\",\"_extendSxProp\",\"clsx\",\"createBox\",\"boxClasses\",\"getTypographyUtilityClass\",\"useUtilityClasses\",\"align\",\"gutterBottom\",\"noWrap\",\"paragraph\",\"classes\",\"getUtilityClass\",\"utilityClass\",\"composeClasses\",\"TypographyRoot\",\"font\",\"defaultVariantMapping\",\"colorTransformations\",\"textPrimary\",\"textSecondary\",\"themeProps\",\"transformDeprecatedColors\",\"variantMapping\",\"Home\",\"Box\",\"Typography\",\"App\",\"getElementById\",\"CssBaseline\"],\"sourceRoot\":\"\"}",
        "TODO found: found: Implement search functionality",
        "TODO found: found: Implement sorting functionality",
        "TODO found: found: Replace with actual API call",
        "TODO found: found: Replace with actual API call",
        "TODO found: found: Add venue options */}",
        "TODO found: found: Implement refresh token logic",
        "TODO found: found: Implement actual login logic",
        "TODO found: found: Handle successful login",
        "TODO found: found: Implement achievement retrieval",
        "TODO found: found: Implement progress retrieval",
        "TODO found: found: Implement achievement claiming",
        "TODO found: found: Implement stats retrieval",
        "TODO found: found: Implement history retrieval",
        "TODO found: found: Implement leaderboard retrieval",
        "TODO found: found: Implement avatar retrieval",
        "TODO found: found: Implement avatar update",
        "TODO found: found: Implement avatar items retrieval",
        "TODO found: found: Implement event retrieval",
        "TODO found: found: Implement event creation",
        "TODO found: found: Implement event update",
        "TODO found: found: Implement event deletion",
        "TODO found: found: Implement database query",
        "TODO found: found: Implement metric averaging",
        "TODO found: found: Implement trend calculation",
        "TODO found: found: Implement highlight identification",
        "TODO found: found: Implement venue retrieval",
        "TODO found: found: Implement venue details retrieval",
        "TODO found: found: Implement venue search",
        "TODO found: found: Implement mobile authentication",
        "TODO found: found: Implement data synchronization",
        "TODO found: found: Implement config retrieval",
        "TODO found: found: Implement notification retrieval",
        "TODO found: found: Implement marking notifications as read",
        "TODO found: found: Implement getting notification settings",
        "TODO found: found: Implement updating notification settings",
        "TODO found: found: Implement offline data synchronization",
        "TODO found: found: Implement cache retrieval",
        "TODO found: found: Implement cache update",
        "TODO found: found: Implement venue retrieval",
        "TODO found: found: Implement venue details retrieval",
        "TODO found: found: Implement table retrieval",
        "TODO found: found: Add OAuth provider initialization",
        "TODO found: found: Send confirmation email",
        "Long lines found on lines: [12, 13, 14, 15, 16, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 538, 541, 544, 547, 550, 553, 556, 559, 562, 565, 568, 571, 574, 577, 580, 583, 586, 589, 592, 595, 598, 601, 604, 607, 610, 613, 616, 619, 622, 625, 628, 631, 634, 637, 640, 643, 646, 649, 652, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 712, 715, 718, 721, 724, 727, 730, 733, 736, 739, 742, 745, 748, 751, 754, 757, 760, 763, 766, 769, 772, 775, 778, 781, 784, 787, 790, 793, 796, 799, 802, 805, 808, 811, 814, 817, 820, 823, 826, 829, 832, 835, 838, 841, 844, 847, 850, 853, 856, 859, 862, 865, 868, 871, 874, 877, 880, 883, 886, 889, 892, 895, 898, 901, 904, 907, 910, 913, 916, 919, 922, 925, 928, 931, 934, 937, 940, 943, 946, 949, 952, 955, 958, 961, 964, 967, 970, 973, 976, 979, 982, 985, 988, 991, 994, 997, 1000, 1003, 1006, 1009, 1012, 1015, 1018, 1021, 1024, 1027, 1030, 1033, 1036, 1039, 1042, 1045, 1048, 1051, 1054, 1057, 1060, 1063, 1066, 1069, 1072, 1075, 1078, 1081, 1084, 1087, 1090, 1093, 1096, 1099, 1102, 1105, 1108, 1111, 1114, 1117, 1120, 1123, 1126, 1129, 1132, 1135, 1138, 1141, 1144, 1147, 1150, 1153, 1156, 1159, 1162, 1165, 1168, 1171, 1174, 1177, 1180, 1183, 1186, 1189, 1192, 1195, 1198, 1201, 1204, 1207, 1210, 1213, 1216, 1219, 1222, 1225, 1228, 1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270, 1273, 1276, 1279, 1282, 1285, 1288, 1291, 1294, 1297, 1300, 1303, 1306, 1309, 1312, 1315, 1318, 1321, 1324, 1327, 1330, 1333, 1336, 1339, 1342, 1345, 1348, 1351, 1354, 1357, 1360, 1363, 1366, 1369, 1372, 1375, 1378, 1381, 1384, 1387, 1390, 1393, 1396, 1399, 1402, 1405, 1408, 1411, 1414, 1417, 1420, 1423, 1426, 1429, 1432, 1435, 1438, 1441, 1444, 1447, 1450, 1453, 1456, 1459, 1462, 1465, 1468, 1471, 1474, 1477, 1480, 1483, 1486, 1489, 1492, 1495, 1498, 1501, 1504, 1507, 1510, 1513, 1516, 1519, 1522, 1525, 1528, 1531, 1534, 1537, 1540, 1543, 1546, 1549, 1552, 1555, 1558, 1561, 1564, 1567, 1570, 1573, 1576, 1579, 1582, 1585, 1588, 1591, 1594, 1597, 1600, 1603, 1606, 1609, 1612, 1615, 1618, 1621, 1624, 1627, 1630, 1633, 1636, 1639, 1642, 1645, 1648, 1651, 1654, 1657, 1660, 1663, 1666, 1669, 1672, 1675, 1678, 1681, 1684, 1687, 1690, 1693, 1696, 1699, 1702, 1705, 1708, 1711, 1714, 1717, 1720, 1723, 1726, 1729, 1732, 1735, 1738, 1741, 1744, 1747, 1750, 1753, 1756, 1759, 1762, 1765, 1768, 1771, 1774, 1777, 1780, 1783, 1786, 1789, 1792, 1795, 1798, 1801, 1804, 1807, 1810, 1813, 1816, 1819, 1822, 1825, 1828, 1831, 1834, 1837, 1840, 1843, 1846, 1849, 1852, 1855, 1858, 1861, 1864, 1867, 1870, 1873, 1876, 1879, 1882, 1885, 1888, 1891, 1894, 1897, 1900, 1903, 1906, 1909, 1912, 1915, 1918, 1921, 1924, 1927, 1930, 1933, 1936, 1939, 1942, 1945, 1948, 1951, 1954, 1957, 1960, 1963, 1966, 1969, 1972, 1975, 1978, 1981, 1984, 1987, 1990, 1993, 1996, 1999, 2002, 2005, 2008, 2011, 2014, 2017, 2020, 2023, 2026, 2029, 2032, 2035, 2038, 2041, 2044, 2047, 2050, 2053, 2056, 2059, 2062, 2065, 2068, 2071, 2074, 2077, 2080, 2083, 2086, 2089, 2092, 2095, 2098, 2101, 2104, 2107, 2110, 2113, 2116, 2119, 2122, 2125, 2128, 2131, 2134, 2137, 2140, 2143, 2146, 2149, 2152, 2155, 2158, 2161, 2164, 2167, 2170, 2173, 2176, 2179, 2182, 2185, 2188, 2191]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\cleanup\\analyze_files.py",
      "size": 8350,
      "created": "2025-01-14T16:31:56.208976",
      "modified": "2025-01-14T16:32:07.433488",
      "hash": "1488e997323a9b3028ab79ae027531c5ddea4fa6eef1ca0f2f526f5140c7b9e3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: comments",
        "TODO found: s = re.findall(r'(?i)#?\\s*todo:?\\s*(.+)$', content, re.MULTILINE)",
        "TODO found: s:",
        "TODO found: found: {todo.strip()}\" for todo in todos])"
      ],
      "similar_files": [],
      "dependencies": ["json"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\cleanup\\CLEANUP_TRACKING.md",
      "size": 3241,
      "created": "2025-01-14T16:29:38.210044",
      "modified": "2025-01-14T16:29:51.585645",
      "hash": "e2318a82c809cfb4a9e3eddece776d18ef0ad166cd598add969bd3c0ca0e5346",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\cleanup\\file_inventory.json",
      "size": 5058559,
      "created": "2025-01-14T16:32:25.214707",
      "modified": "2025-01-14T16:32:35.720987",
      "hash": "877347008d82deb262eab2da3ca4280d309b5de1fb1367fed7b4bdfe53ccacc6",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Large file size (>1MB)",
        "Long lines found on lines: [104, 832, 1084, 1098, 1112, 1224, 1322, 1336, 1350, 1364, 1476, 1518, 1532, 1616, 1714, 1742, 1756, 1770, 2008, 2036, 2050, 2078, 2092, 2204, 2218, 2274, 2302, 2316, 2694, 2708, 2764, 2778, 2806, 2820, 2834, 2848, 2862, 2876, 2918, 2932, 2946, 2974, 3002, 3016, 3044, 3072, 3086, 3100, 3114, 3142, 3156, 3170, 3184, 3198, 3212, 3226, 3240, 3254, 3268, 3282, 3352, 3366, 3380, 3394, 3408, 3422, 3436, 3450, 3464, 3478, 3492, 3506, 3548, 3562, 3576, 3590, 3604, 3618, 3632, 3646, 3660, 3674, 3688, 3702, 3716, 3730, 3744, 3758, 3772, 3786, 3814, 3828, 3842, 3856, 3870, 3884, 3898, 3912, 3954, 3968, 3982, 3996, 4066, 4080, 4094, 4108, 4136, 4150, 4164, 4192, 4220, 4234, 4248, 4262, 4276, 4290, 4304, 4318, 4332, 4346, 4360, 4374, 4388, 4402, 4416, 4430, 4444, 4570, 4584, 4598, 4612, 4626, 4640, 4654, 4780, 4794, 4808, 4822, 4836, 4850, 4864, 4878, 4906, 5004, 5046, 5060, 5074, 5088, 5172, 5186, 5200, 5214, 5228, 5242, 5256, 5270, 5284, 5298, 5312, 5326, 5396, 5410, 5424, 5438, 5452, 5494, 5536, 5550, 5564, 5578, 5592, 5606, 5620, 5634, 5648, 5662, 5676, 5690, 5704, 5718, 5732, 5746, 5788, 5802, 5816, 5844, 5858, 5872, 5886, 5900, 5914, 5928, 5942, 5956, 5970, 5984, 5998, 6012, 6026, 6040, 6054, 6068, 6082, 6096, 6110, 6124, 6138, 6152, 6166, 6194, 6208, 6222, 6236, 6250, 6264, 6278, 6292, 6306, 6320, 6334, 6348, 6362, 6376, 6390, 6404, 6418, 6432, 6446, 6460, 6474, 6488, 6502, 6516, 6530, 6544, 6558, 6572, 6586, 6600, 6614, 6628, 6642, 6656, 6670, 6684, 6698, 6712, 6726, 6740, 6754, 6768, 6782, 6796, 6810, 6824, 6838, 6852, 6866, 6880, 6894, 6908, 6922, 6936, 6950, 6964, 6978, 6992, 7006, 7020, 7034, 7048, 7062, 7076, 7090, 7104, 7118, 7132, 7146, 7160, 7174, 7188, 7202, 7216, 7230, 7244, 7258, 7272, 7286, 7300, 7314, 7328, 7342, 7356, 7370, 7384, 7398, 7412, 7426, 7440, 7454, 7468, 7482, 7496, 7510, 7524, 7538, 7552, 7566, 7580, 7594, 7608, 7622, 7636, 7650, 7664, 7678, 7692, 7706, 7720, 7734, 7748, 7762, 7776, 7790, 7804, 7818, 7832, 7846, 7860, 7874, 7888, 7902, 7916, 7930, 7944, 7958, 7972, 7986, 8000, 8014, 8028, 8042, 8056, 8070, 8084, 8098, 8112, 8126, 8140, 8154, 8168, 8182, 8196, 8210, 8224, 8238, 8252, 8266, 8280, 8294, 8308, 8322, 8336, 8350, 8364, 8378, 8392, 8406, 8420, 8434, 8448, 8462, 8476, 8490, 8504, 8518, 8532, 8546, 8574, 8588, 8616, 8630, 8644, 8658, 8672, 8686, 8700, 8714, 8728, 8742, 8756, 8770, 8784, 8798, 8812, 8826, 8840, 8854, 8868, 8882, 8896, 8910, 8924, 8938, 8952, 8966, 8980, 8994, 9008, 9022, 9036, 9050, 9064, 9078, 9092, 9106, 9120, 9134, 9148, 9162, 9176, 9190, 9204, 9218, 9232, 9246, 9260, 9274, 9288, 9302, 9316, 9330, 9344, 9358, 9372, 9386, 9400, 9414, 9428, 9442, 9456, 9470, 9484, 9498, 9512, 9526, 9540, 9554, 9568, 9582, 9596, 9610, 9624, 9638, 9652, 9666, 9680, 9694, 9708, 9722, 9736, 9750, 9764, 9778, 9792, 9806, 9820, 9834, 9848, 9862, 9876, 9890, 9904, 9918, 9932, 9946, 9960, 9974, 9988, 10002, 10016, 10030, 10044, 10058, 10072, 10086, 10100, 10114, 10128, 10142, 10156, 10170, 10184, 10198, 10212, 10226, 10240, 10254, 10268, 10282, 10296, 10310, 10324, 10338, 10352, 10366, 10380, 10394, 10408, 10422, 10436, 10450, 10464, 10478, 10492, 10506, 10520, 10534, 10548, 10562, 10576, 10590, 10604, 10618, 10632, 10646, 10660, 10674, 10688, 10702, 10716, 10730, 10744, 10758, 10772, 10786, 10800, 10814, 10828, 10842, 10856, 10870, 10884, 10898, 10912, 10926, 10940, 10954, 10968, 10982, 10996, 11010, 11024, 11038, 11052, 11066, 11080, 11094, 11108, 11122, 11136, 11150, 11164, 11178, 11192, 11206, 11220, 11234, 11248, 11262, 11276, 11290, 11304, 11318, 11332, 11346, 11360, 11374, 11388, 11402, 11416, 11430, 11444, 11458, 11472, 11486, 11500, 11514, 11528, 11542, 11556, 11570, 11584, 11598, 11612, 11626, 11640, 11654, 11668, 11682, 11696, 11710, 11724, 11738, 11752, 11766, 11780, 11794, 11808, 11822, 11836, 11850, 11864, 11878, 11892, 11906, 11920, 11934, 11948, 11962, 11976, 11990, 12004, 12018, 12032, 12046, 12060, 12074, 12088, 12102, 12116, 12130, 12144, 12158, 12172, 12186, 12200, 12214, 12228, 12242, 12256, 12270, 12284, 12298, 12312, 12326, 12340, 12354, 12368, 12382, 12396, 12410, 12424, 12438, 12452, 12466, 12480, 12494, 12508, 12522, 12536, 12550, 12564, 12578, 12592, 12606, 12620, 12634, 12648, 12662, 12676, 12690, 12704, 12718, 12732, 12746, 12760, 12774, 12788, 12802, 12816, 12830, 12844, 12858, 12872, 12886, 12900, 12914, 12928, 12942, 12956, 12970, 12984, 12998, 13012, 13026, 13040, 13054, 13068, 13082, 13096, 13110, 13124, 13138, 13152, 13166, 13180, 13194, 13208, 13222, 13236, 13250, 13264, 13278, 13292, 13306, 13320, 13334, 13348, 13362, 13376, 13390, 13404, 13418, 13432, 13446, 13460, 13474, 13488, 13502, 13516, 13530, 13544, 13558, 13572, 13586, 13600, 13614, 13628, 13642, 13656, 13670, 13684, 13698, 13712, 13726, 13740, 13754, 13768, 13782, 13796, 13810, 13824, 13838, 13852, 13866, 13880, 13894, 13908, 13922, 13936, 13950, 13964, 13978, 13992, 14006, 14020, 14034, 14048, 14062, 14076, 14090, 14104, 14118, 14132, 14146, 14160, 14174, 14188, 14202, 14216, 14230, 14244, 14258, 14272, 14286, 14300, 14314, 14328, 14342, 14356, 14370, 14384, 14398, 14412, 14426, 14440, 14454, 14468, 14482, 14496, 14510, 14524, 14538, 14552, 14566, 14580, 14594, 14608, 14622, 14636, 14650, 14664, 14678, 14692, 14706, 14720, 14734, 14748, 14762, 14776, 14790, 14804, 14818, 14832, 14846, 14860, 14874, 14888, 14902, 14916, 14930, 14944, 14958, 14972, 14986, 15000, 15014, 15028, 15042, 15056, 15070, 15084, 15098, 15112, 15126, 15140, 15154, 15168, 15182, 15196, 15210, 15224, 15238, 15252, 15266, 15280, 15294, 15308, 15322, 15336, 15350, 15364, 15378, 15392, 15406, 15420, 15434, 15448, 15462, 15476, 15490, 15504, 15518, 15532, 15546, 15560, 15574, 15588, 15602, 15616, 15630, 15644, 15658, 15672, 15686, 15700, 15714, 15728, 15742, 15756, 15770, 15784, 15798, 15812, 15826, 15840, 15854, 15868, 15882, 15896, 15910, 15924, 15938, 15952, 15966, 15980, 15994, 16008, 16022, 16036, 16050, 16064, 16078, 16092, 16106, 16120, 16134, 16148, 16162, 16176, 16190, 16204, 16218, 16232, 16246, 16260, 16274, 16288, 16302, 16316, 16330, 16344, 16358, 16372, 16386, 16400, 16414, 16428, 16442, 16456, 16470, 16484, 16498, 16512, 16526, 16540, 16554, 16568, 16582, 16596, 16610, 16624, 16638, 16652, 16666, 16680, 16694, 16708, 16722, 16736, 16750, 16764, 16778, 16792, 16806, 16820, 16834, 16848, 16862, 16876, 16890, 16904, 16918, 16932, 16946, 16960, 16974, 16988, 17002, 17016, 17030, 17044, 17058, 17072, 17086, 17100, 17114, 17128, 17142, 17156, 17170, 17184, 17198, 17212, 17226, 17240, 17254, 17268, 17282, 17296, 17310, 17324, 17338, 17352, 17366, 17380, 17394, 17408, 17422, 17436, 17450, 17464, 17478, 17492, 17506, 17520, 17534, 17548, 17562, 17576, 17590, 17604, 17618, 17632, 17646, 17660, 17674, 17688, 17702, 17716, 17730, 17744, 17758, 17772, 17786, 17800, 17814, 17828, 17842, 17856, 17870, 17884, 17898, 17912, 17926, 17940, 17954, 17968, 17982, 17996, 18010, 18024, 18038, 18052, 18066, 18080, 18094, 18108, 18122, 18136, 18150, 18164, 18178, 18192, 18206, 18220, 18234, 18248, 18262, 18276, 18290, 18304, 18318, 18332, 18346, 18360, 18374, 18388, 18402, 18416, 18430, 18444, 18458, 18472, 18486, 18500, 18514, 18528, 18542, 18556, 18570, 18584, 18598, 18612, 18626, 18640, 18654, 18668, 18682, 18696, 18710, 18724, 18738, 18752, 18766, 18780, 18794, 18808, 18822, 18836, 18850, 18864, 18878, 18892, 18906, 18920, 18934, 18948, 18962, 18976, 18990, 19004, 19018, 19032, 19046, 19060, 19074, 19088, 19102, 19116, 19130, 19144, 19158, 19172, 19186, 19200, 19214, 19228, 19242, 19256, 19270, 19284, 19298, 19312, 19326, 19340, 19354, 19368, 19382, 19396, 19410, 19424, 19438, 19452, 19466, 19480, 19494, 19508, 19522, 19536, 19550, 19564, 19578, 19592, 19606, 19620, 19634, 19648, 19662, 19676, 19690, 19704, 19718, 19732, 19746, 19760, 19774, 19788, 19802, 19816, 19830, 19844, 19858, 19872, 19886, 19900, 19914, 19928, 19942, 19956, 19970, 19984, 19998, 20012, 20026, 20040, 20054, 20068, 20082, 20096, 20110, 20124, 20138, 20152, 20166, 20180, 20194, 20208, 20222, 20236, 20250, 20264, 20278, 20292, 20306, 20320, 20334, 20348, 20362, 20376, 20390, 20404, 20418, 20432, 20446, 20460, 20474, 20488, 20502, 20516, 20530, 20544, 20558, 20572, 20586, 20600, 20614, 20628, 20642, 20656, 20670, 20684, 20698, 20712, 20726, 20740, 20754, 20768, 20782, 20796, 20810, 20824, 20838, 20852, 20866, 20880, 20894, 20908, 20922, 20936, 20950, 20964, 20978, 20992, 21006, 21020, 21034, 21048, 21062, 21076, 21090, 21104, 21118, 21132, 21146, 21160, 21174, 21188, 21202, 21216, 21230, 21244, 21258, 21272, 21286, 21300, 21314, 21328, 21342, 21356, 21370, 21384, 21398, 21412, 21426, 21440, 21454, 21468, 21482, 21496, 21510, 21524, 21538, 21552, 21566, 21580, 21594, 21608, 21622, 21636, 21650, 21664, 21678, 21692, 21706, 21720, 21734, 21748, 21762, 21776, 21790, 21804, 21818, 21832, 21846, 21860, 21874, 21888, 21902, 21916, 21930, 21944, 21958, 21972, 21986, 22000, 22014, 22028, 22042, 22056, 22070, 22084, 22098, 22112, 22126, 22140, 22154, 22168, 22182, 22210, 22238, 22252, 22266, 22294, 22308, 22322, 22336, 22350, 22364, 22420, 22434, 22504, 22602, 22630, 22644, 22658, 22672, 22686, 22700, 22714, 22728, 22742, 22756, 22770, 22784, 22798, 22812, 22826, 22854, 22868, 22910, 22938, 22952, 22966, 22980, 22994, 23008, 23022, 23050, 23064, 23106, 23120, 23134, 23148, 23162, 23190, 23204, 23218, 23232, 23246, 23260, 23274, 23288, 23302, 23316, 23330, 23344, 23358, 23372, 23386, 23400, 23414, 23428, 23442, 23456, 23470, 23484, 23498, 23512, 23526, 23540, 23554, 23568, 23582, 23596, 23610, 23624, 23638, 23652, 23666, 23680, 23694, 23708, 23722, 23736, 23750, 23764, 23778, 23792, 23806, 23820, 23834, 23848, 23862, 23876, 23890, 23904, 23918, 23932, 23946]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\cleanup\\file_inventory.py",
      "size": 3810,
      "created": "2025-01-14T16:31:19.097434",
      "modified": "2025-01-14T16:32:07.432673",
      "hash": "5f7bf159f6e36acfe2ca3aa9afbf79ab8305d97b1e6c9f4c3486267cfe465c73",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\cleanup\\file_inventory_summary.md",
      "size": 1137,
      "created": "2025-01-14T16:32:25.293703",
      "modified": "2025-01-14T16:32:25.293703",
      "hash": "debf2f4128670b13e28e3a1d9ec434db7bb98fcdf962a09d65d86f67525b3f6f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\components\\buttons.md",
      "size": 6773,
      "created": "2024-12-21T11:05:05.447106",
      "modified": "2024-12-21T11:06:15.771665",
      "hash": "b714b3f0580f082821e5a9bd34ce61dc1023eccbca7a7306412c9a01b0313c1c",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\components\\forms.md",
      "size": 9228,
      "created": "2024-12-21T11:05:55.378533",
      "modified": "2024-12-21T11:06:15.771665",
      "hash": "792ab129b328813eed3a74a35b7b06fe3830cc7dfda0204213c5fe64e32edff5",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [3]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\getting_started\\configuration.md",
      "size": 4297,
      "created": "2024-12-18T15:10:36.606381",
      "modified": "2025-01-14T05:04:12.596850",
      "hash": "798bb2b4f4d9fc6c1858a557c2f10deda3f0013afe57467806e5f2593051fd1f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\getting_started\\development.md",
      "size": 4998,
      "created": "2024-12-18T15:11:41.947912",
      "modified": "2025-01-14T05:04:24.940416",
      "hash": "1eed8c59f90f74ac6dcc0e3b28c512fbc34c5bb1b9a6fa503cd6a390fdc93ae4",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\getting_started\\installation.md",
      "size": 2524,
      "created": "2024-12-18T15:09:35.360197",
      "modified": "2025-01-14T05:03:59.768003",
      "hash": "481172928921e3cf197c1150d31797a4e707421d4612341dabb8b1abfbf0f467",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\guide\\coding-standards.md",
      "size": 8614,
      "created": "2024-12-21T11:15:32.221292",
      "modified": "2024-12-21T11:26:00.017523",
      "hash": "cf7087f966adb512424f86e3a96285a3a308f8fb9abaa3e53acd4a4f9f5c0839",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\guide\\installation.md",
      "size": 5584,
      "created": "2024-12-21T11:08:34.627122",
      "modified": "2024-12-21T11:11:47.406065",
      "hash": "cfe36784e0ff5573a27f17ce3cbfd6de088ae92ac3a4418d928070bf09558707",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [25]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\guide\\introduction.md",
      "size": 5009,
      "created": "2024-12-21T11:07:58.916865",
      "modified": "2025-01-14T05:05:08.875768",
      "hash": "8d4bc7bccbba10b79aaaf1ed2dd4d33529e3f33abe27debfe70c05eff73f9d9f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\guide\\structure.md",
      "size": 6684,
      "created": "2024-12-21T11:14:45.937132",
      "modified": "2024-12-21T11:26:00.017523",
      "hash": "23b9837bccc789a8aa779ade886772ad3c470098f6ebfa9b44fd95e2c16ee00f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\guide\\workflow.md",
      "size": 6564,
      "created": "2024-12-21T11:29:38.100358",
      "modified": "2025-01-14T05:05:08.875768",
      "hash": "410d7106d11954f9186d89b1c2cd3aca9311150bd69e7d36afd597f846258efe",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\planning\\development-tracking.md",
      "size": 6384,
      "created": "2025-01-13T04:25:44.462640",
      "modified": "2025-01-14T13:17:16.089186",
      "hash": "86bd0693e5ac0fa57ff1bf25a7e6ecd8c7019a6cf0464bae3bc4990c05981d3e",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\planning\\image-system-roadmap.md",
      "size": 306,
      "created": "2025-01-13T04:25:37.614934",
      "modified": "2025-01-13T04:25:41.796384",
      "hash": "4a435f9fd9160c4d3a92ee129968916cd36aebe21892822dadf27c2194c5a66f",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\planning\\main-roadmap.md",
      "size": 5383,
      "created": "2025-01-13T04:25:31.448716",
      "modified": "2025-01-14T16:29:51.585645",
      "hash": "9e0f4807d3f9c07329dc8050fcbef616b569ed886cc7baed9ca2915b4a4e0172",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\planning\\project-planning-guide.md",
      "size": 6069,
      "created": "2025-01-14T05:05:40.083474",
      "modified": "2025-01-14T05:11:04.107411",
      "hash": "191ba8e60fb19b7bb855845422bc7ac880171eecbd40d517c1e67adc7680be53",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\technical\\ai_system.md",
      "size": 3370,
      "created": "2024-12-18T01:59:23.598809",
      "modified": "2024-12-18T01:59:29.037091",
      "hash": "6512268580e4f755e05bd11bb7f3c6627220178a0bd52b5afd11038751059ef4",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\technical\\code_style.md",
      "size": 6413,
      "created": "2024-12-18T01:59:53.842982",
      "modified": "2024-12-18T01:59:59.339498",
      "hash": "908637029c18220184405216b226d7b6aaafcc370c355a868311885d5beae80d",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\technical\\git_workflow.md",
      "size": 4133,
      "created": "2024-12-18T02:00:56.784778",
      "modified": "2024-12-18T02:01:03.098509",
      "hash": "19133be00b554c33433a922ac57c5bfc09ffd6172c08ba809e9619b52361c5e2",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\technical\\testing_debugging.md",
      "size": 8176,
      "created": "2024-12-18T02:02:52.433781",
      "modified": "2024-12-18T02:02:59.261252",
      "hash": "d1c55a0b1e80c729dbf444c2be0d9c94df8b27c6f5ec2595f26b2ded6eb61ba0",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\testing\\README.md",
      "size": 594,
      "created": "2025-01-14T04:26:21.795848",
      "modified": "2025-01-14T04:39:53.404753",
      "hash": "af55ef20ac24748669f6ed253c66e96edab1a68127702c96106866123dbfafe4",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\transcripts\\checkingoutdojopool.html",
      "size": 2806,
      "created": "2025-01-14T04:59:42.559821",
      "modified": "2025-01-14T05:00:12.557956",
      "hash": "9b6df79a3bd135e8669b24908569e5a7f3abf94059cb7e3bea4367b9f861fe00",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [42, 48, 50, 56, 58, 65, 67]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\README.md",
      "size": 2099,
      "created": "2024-12-17T13:24:25.251408",
      "modified": "2025-01-14T05:01:35.375412",
      "hash": "870b4342ccc2993c40888b12082bdad0578e6f50bcd3c2fe44c56f58dced9b25",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\auth\\README.md",
      "size": 2418,
      "created": "2024-12-17T13:25:00.937826",
      "modified": "2024-12-17T13:25:24.061320",
      "hash": "999b90f0bd5a72b379ad22df1dd862422fea26025b1dfc0b93e1537cec4533f0",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\avatars\\README.md",
      "size": 5710,
      "created": "2024-12-17T13:28:19.315088",
      "modified": "2024-12-17T13:28:39.339107",
      "hash": "9959f49c677b36ad44eb4fb211b42eff17bd13d18b45af398fa97d3ba0d105e0",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\games\\README.md",
      "size": 6439,
      "created": "2024-12-17T13:26:41.105041",
      "modified": "2024-12-17T13:27:02.489309",
      "hash": "059953a7f5713c05a90ddd706ac1cf4628e88bd50f10da580a24f5924cf7a49e",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\narrative\\README.md",
      "size": 7935,
      "created": "2024-12-17T13:29:09.534842",
      "modified": "2024-12-17T13:29:32.975008",
      "hash": "ef132902753cd5baa3ec50434b2777ae7b79b7eafa11310cdb461a0c8de2fae7",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\tournaments\\README.md",
      "size": 6641,
      "created": "2024-12-17T13:27:31.969190",
      "modified": "2024-12-17T13:27:53.916604",
      "hash": "ed98905b34aada502860224cf1e7e0d8e4cfda5ad5b3de53302ab043ae487870",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\api\\v1\\venues\\README.md",
      "size": 4905,
      "created": "2024-12-17T13:25:47.631683",
      "modified": "2024-12-17T13:26:10.681827",
      "hash": "5816c694bdc807e4cbf6ed67ab3d938fe77414322909962561e36e5535c88c68",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\business\\partnerships\\dojo pool sponsorship partnership.docx",
      "size": 8491,
      "created": "2024-12-17T09:06:22.427020",
      "modified": "2024-12-17T09:06:22.428022",
      "hash": "6f1b703cbdb792dc209843548bec99936660fa50fd87fe1b1f3a951c4f5c1fd4",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\business\\partnerships\\Dojo Pool_ Venue Partnership Program.docx",
      "size": 8664,
      "created": "2024-12-17T09:06:21.918403",
      "modified": "2024-12-17T09:06:21.919404",
      "hash": "86dc441315bf95da7de5e16f0c4a272ce2211897e2c75010234f9790c58e65e2",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\business\\whitepapers\\Dojo Pool_ Business Plan (Hybrid Currency Model).docx",
      "size": 656893,
      "created": "2024-12-17T09:06:21.909402",
      "modified": "2024-12-17T09:06:21.909402",
      "hash": "1601b3a78905ea83eabbf66da3bcc720beb3998082609e693f4bdc26421e5877",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\business\\whitepapers\\Dojo Pool_ Business Plan.docx",
      "size": 663507,
      "created": "2024-12-17T09:06:21.911403",
      "modified": "2024-12-17T09:06:21.912403",
      "hash": "a6ab6a5b3d63b1feea95fa1ab853db6fb34d0055c1331706e253b04a5f76fe33",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\business\\whitepapers\\White Paper Dojo Pool.docx",
      "size": 657971,
      "created": "2024-12-17T09:06:21.965079",
      "modified": "2024-12-17T09:06:21.965079",
      "hash": "8690e1f2572966d1c043f86192665b0323454bbaa2715acd581b6deffcb18077",
      "extension": ".docx",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\planning\\archive\\development-tracking-2024-01-10-optimization.md",
      "size": 123,
      "created": "2025-01-13T04:30:03.764997",
      "modified": "2025-01-13T04:30:20.152369",
      "hash": "4d44089610ecff92652900ebb01ceb12f329f7fda8b3e19574d01e2bbed0a454",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\docs\\planning\\archive\\development-tracking-2024-01-10.md",
      "size": 95,
      "created": "2025-01-13T04:29:57.904974",
      "modified": "2025-01-13T04:30:20.152369",
      "hash": "59f2ada8b145178e5ec3e0af158922ef48b531399cd278eaa15d2df503a89b7a",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\instance\\dojopool.db",
      "size": 49152,
      "created": "2024-12-18T01:31:44.619940",
      "modified": "2024-12-18T01:43:35.750600",
      "hash": "dc63d68c16b06c46881a853bd26b38658a52375560982c32b20445c074437a8e",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\logs\\dojopool.log.1",
      "size": 10231,
      "created": "2024-12-13T15:57:03.386595",
      "modified": "2024-12-13T16:10:57.957695",
      "hash": "a5d56028ca6b2d9bee77cf13f75adb486bd1571dfb0581fb8489ab65ddc24ef8",
      "extension": ".1",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\reports\\test_report_20241213_123437.html",
      "size": 35381,
      "created": "2024-12-13T12:34:42.934964",
      "modified": "2024-12-13T12:34:48.187853",
      "hash": "f840b9e4599a7d013fde55979100e13376c0a72ee9a86130036f71ca1463bee8",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [10, 68, 74, 76, 78, 80, 82, 84, 86, 90, 111, 113, 211, 218, 232, 252, 325, 385, 389, 477, 648, 698, 703, 734, 738]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\instance\\reports\\assets\\style.css",
      "size": 5636,
      "created": "2024-12-13T12:17:52.258553",
      "modified": "2024-12-13T12:34:42.885942",
      "hash": "826692a72a6bd8fc9b5596f2c17287d02ca80bf9a357393239ca0d0975d59a5a",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\access.log",
      "size": 0,
      "created": "2025-01-10T01:57:49.515300",
      "modified": "2025-01-10T01:57:49.515300",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\api.log",
      "size": 96,
      "created": "2025-01-10T01:57:49.521301",
      "modified": "2025-01-10T03:13:48.700498",
      "hash": "a3a6d675eae7e70c3ccd25980e7fedebb1ba2fe38aa39a9b3e3e06192d99ec8b",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\error.log",
      "size": 150757,
      "created": "2025-01-10T01:57:49.504308",
      "modified": "2025-01-10T07:01:51.267761",
      "hash": "86a885341db3f80d592ff4cf9e6a12b5cc9486f22695c80dea3e52bfac1ec472",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [1259, 1267, 1275, 1276, 1295, 1296, 1297, 1350, 1358, 1359, 1371, 1390, 1417, 1422, 1423, 1460, 1461, 1464, 1471, 1507, 1508, 1511, 1518, 1527, 1538, 1589, 1596, 1614, 1615, 1637, 1638, 1642, 1643, 1644, 1645, 1668, 1710, 1715, 1716, 1723, 1725, 1744, 1769, 1921, 1926, 1927, 1934, 1936, 1955, 1980, 2001, 2139, 2147, 2148, 2155, 2185, 2191, 2207, 2222, 2223, 2227, 2228, 2232, 2233, 2237, 2238, 2239, 2240, 2262]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\flask.log",
      "size": 233,
      "created": "2025-01-10T01:57:49.523299",
      "modified": "2025-01-10T04:18:29.085557",
      "hash": "4f272c152837e3a63703f659356dbeeba34746c6c36fbd1c9d1ba391b791bc99",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\frontend.log",
      "size": 201,
      "created": "2025-01-10T06:53:30.413257",
      "modified": "2025-01-10T06:59:45.842336",
      "hash": "b4cc4cc59e0aac00114ee16f061cfae1b4ade8f04dec90ab1722af9e905e7dac",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\root.log",
      "size": 597,
      "created": "2025-01-10T01:57:49.517299",
      "modified": "2025-01-10T04:22:52.059568",
      "hash": "b833d1745b55601e7ceea86644248cc1188540de6d94ef361d4e63deb0493f43",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1, 2, 3]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\static.log",
      "size": 0,
      "created": "2025-01-10T01:57:49.518299",
      "modified": "2025-01-10T01:57:49.518299",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\logs\\nginx\\websocket.log",
      "size": 0,
      "created": "2025-01-10T01:57:49.519299",
      "modified": "2025-01-10T01:57:49.519299",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\migrations\\versions\\97df2f7c0cb5_initial_migration.py",
      "size": 32988,
      "created": "2025-01-10T03:35:33.804829",
      "modified": "2025-01-10T03:35:33.805831",
      "hash": "7730246a444af0ebbe3e49d3f0fd0e31126179abafd13e7677805b0658ddf302",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [240, 241, 242, 342, 343, 344, 345, 550, 590]"
      ],
      "similar_files": [],
      "dependencies": ["alembic", "postgresql"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\monitoring\\alertmanager\\alertmanager.yml",
      "size": 995,
      "created": "2024-12-28T06:25:57.488780",
      "modified": "2025-01-14T03:13:01.361946",
      "hash": "a4d7bd2230b885c5b9f9767e92742214c09d7a3bf088efce6bb8f83b321e7bf9",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\monitoring\\prometheus\\prometheus.yml",
      "size": 849,
      "created": "2024-12-28T06:25:30.046684",
      "modified": "2024-12-29T04:12:28.876731",
      "hash": "0fa6b813b8233b1e454bc69fe8c415aced3c9987efb62de9e3fae741fb04f481",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\monitoring\\grafana\\dashboards\\dojopool.json",
      "size": 8708,
      "created": "2024-12-29T04:06:08.503306",
      "modified": "2024-12-29T04:14:14.391895",
      "hash": "815e8588d90b5ce0ec1d8661e2010b9717d0860a456ffd95404cc90a7767c3e0",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\monitoring\\grafana\\provisioning\\dashboards\\dojopool.yml",
      "size": 310,
      "created": "2024-12-29T04:06:22.676228",
      "modified": "2024-12-29T04:06:30.627629",
      "hash": "ab7b5e32e335c17b9e7520eaf70d190da1688f9ec47d025ea496fac8b72251fe",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\monitoring\\grafana\\provisioning\\datasources\\prometheus.yml",
      "size": 487,
      "created": "2024-12-29T04:06:34.050116",
      "modified": "2024-12-29T04:07:28.377696",
      "hash": "9b84b87b00120462f974d028c12c1a23edde78763794fe14cdb556883b82c623",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\monitoring\\prometheus\\rules\\alerts.yml",
      "size": 3431,
      "created": "2024-12-28T06:25:45.760893",
      "modified": "2024-12-29T04:06:30.625630",
      "hash": "323381da6acb40e66ac03f2338013c2e0243f5d3ba1e22941b9a1966e7778bf0",
      "extension": ".yml",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [12, 26, 36, 46, 66]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\logs\\access.log",
      "size": 1549,
      "created": "2025-01-10T08:22:14.841625",
      "modified": "2025-01-11T02:45:16.147791",
      "hash": "6426746f32a79f90fe176b1fcd8a58ff8aef026d4e885254c83320e01101e651",
      "extension": ".log",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [2, 3, 4, 5, 6, 7, 8]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\logs\\api.log",
      "size": 0,
      "created": "2025-01-10T08:22:14.845623",
      "modified": "2025-01-10T08:22:14.845623",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\logs\\error.log",
      "size": 18937,
      "created": "2025-01-10T08:22:14.818703",
      "modified": "2025-01-11T03:40:45.404904",
      "hash": "2f01a009b5ccfd3608f94e3a4ad37706e3a73fa6bf8b502c1e52f8a5a57867fa",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\logs\\frontend.log",
      "size": 0,
      "created": "2025-01-10T08:22:14.842627",
      "modified": "2025-01-10T08:22:14.842627",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\logs\\static.log",
      "size": 0,
      "created": "2025-01-10T08:22:14.843625",
      "modified": "2025-01-10T08:22:14.843625",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\logs\\websocket.log",
      "size": 0,
      "created": "2025-01-10T08:22:14.844625",
      "modified": "2025-01-10T08:22:14.844625",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\ssl\\nginx.crt",
      "size": 1134,
      "created": "2024-12-27T03:57:39.905432",
      "modified": "2024-12-27T03:57:39.906431",
      "hash": "ef0e27a3be8c06d25e38ec3abf6b5d3588ee74d9c0112d57904696817a04028e",
      "extension": ".crt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\nginx\\ssl\\nginx.key",
      "size": 1732,
      "created": "2024-12-27T03:57:39.900425",
      "modified": "2024-12-27T03:57:39.902427",
      "hash": "6a9f826ef98568a3cb6f48313f1a4dd48e3acbf103e565e45d130b2598347e6e",
      "extension": ".key",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\backup\\backup.crontab",
      "size": 136,
      "created": "2024-12-28T03:49:48.723750",
      "modified": "2024-12-28T05:12:01.928162",
      "hash": "79fc5f6398e3b2c4a7ad1b330c2efc53d80c29253e67ba3723055854a9588e8f",
      "extension": ".crontab",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\backup\\database_backup.py",
      "size": 3406,
      "created": "2024-12-28T03:49:17.539382",
      "modified": "2024-12-28T04:24:36.105762",
      "hash": "512c9d29e4b7a7ab61afe2622dba5aec38369eac374f151625321b428adb68ab",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\backup\\start-backup.sh",
      "size": 553,
      "created": "2024-12-28T05:12:09.351807",
      "modified": "2024-12-28T05:12:15.340334",
      "hash": "4907f03143f4285931ff819aacf4d9f89b37c1d71e56893948b837fef7bcd775",
      "extension": ".sh",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\maintenance\\cleanup_codebase.py",
      "size": 1899,
      "created": "2024-12-17T09:46:31.057259",
      "modified": "2024-12-17T09:46:48.369870",
      "hash": "710b7a8cf348edc1600c252382b209c54fd2cb9c3a1aad48272347c316a204e3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\maintenance\\cleanup_codebase_final.py",
      "size": 4921,
      "created": "2024-12-17T09:48:25.320181",
      "modified": "2024-12-17T09:48:42.686204",
      "hash": "8c500f91b977119b8411130458e03df5827d6533315ba04d5ba3b397890d05b5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\maintenance\\cleanup_codebase_final_pass.py",
      "size": 2590,
      "created": "2024-12-17T09:49:55.092215",
      "modified": "2024-12-17T09:50:13.000741",
      "hash": "55b993002fdbb986240628ec2cb639e3f0595bc2d8c45b824d9b849cb46d781c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\maintenance\\cleanup_codebase_phase2.py",
      "size": 3389,
      "created": "2024-12-17T09:47:20.727123",
      "modified": "2024-12-17T09:47:43.765832",
      "hash": "93e84fbceb2484fd56793af5c0b8e79cbef42981815113f0ff53e003b6f93a93",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\scripts\\maintenance\\cleanup_git_scripts.py",
      "size": 2681,
      "created": "2024-12-17T09:50:54.817941",
      "modified": "2024-12-17T09:51:11.484854",
      "hash": "870ccea9da5ee1f75cb8f4e6e76df650e28fde64798e47ea819c34454e7623e4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [11, 13]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\Dashboard.js",
      "size": 4260,
      "created": "2025-01-13T06:57:20.182180",
      "modified": "2025-01-13T08:00:59.976753",
      "hash": "3e0f93acebe3e23f637df23c9d172dca3ad55872ad4ea9a737f223a4ed1d9729",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\ErrorBoundary.js",
      "size": 750,
      "created": "2025-01-13T23:57:01.243355",
      "modified": "2025-01-13T23:57:26.193727",
      "hash": "7aa4ef9fbf5da5ab097619abd89678de30e549360d81439cb8ec3997f0db06e2",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "ServerError"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\app.py",
      "size": 5786,
      "created": "2025-01-10T14:14:27.307982",
      "modified": "2025-01-14T05:47:15.386834",
      "hash": "1c3dce28b271fca5bcabdba531211146a8c1760476627cf99b04ecb0f9751a86",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: secret",
        "Long lines found on lines: [36]"
      ],
      "similar_files": [],
      "dependencies": ["flask", "auth_bp", ".core.auth.models", "bp"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config.py",
      "size": 1894,
      "created": "2025-01-06T03:36:41.634719",
      "modified": "2025-01-11T17:47:23.602319",
      "hash": "6dd878be54c805afaa6acf6ccd4d1ab87c2ba76f02e5689cf8a4c077b83ecb9c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: password",
        "Potential security issue: secret"
      ],
      "similar_files": [],
      "dependencies": ["os", "datetime"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\exceptions.py",
      "size": 861,
      "created": "2024-12-20T02:40:13.384193",
      "modified": "2025-01-06T07:07:23.386152",
      "hash": "45db29d679ca86b660811cbe016622d8ada48f112f18cf8e2171f00596c3f4fe",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\extensions.py",
      "size": 937,
      "created": "2024-12-18T11:26:48.103637",
      "modified": "2025-01-14T15:40:37.736919",
      "hash": "a624ddfe499dfc46cea017bfadf68caf37c0a3bedd3b1c1d559b00571c92216f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_sqlalchemy", "dojopool.models.user"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes.py",
      "size": 293,
      "created": "2025-01-10T12:37:47.469773",
      "modified": "2025-01-12T08:37:58.280557",
      "hash": "a5ae3c44e9d5e84402dcc4411b61912796088baf97fc3823a12147716b99dcd6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scheduler.py",
      "size": 909,
      "created": "2024-12-23T04:04:28.092849",
      "modified": "2024-12-23T04:05:43.141764",
      "hash": "a6d7f8dd81d899caa4d069861939f8a2ede9e142e670e8df244a7813b18fdb3b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "process_tournament_tasks"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\test_websocket.py",
      "size": 921,
      "created": "2024-12-25T04:12:04.769384",
      "modified": "2024-12-25T22:18:25.383369",
      "hash": "11bbf7dae7acebae1415ab8c32f5112d0ea02efd2a7f6b4353534ccc3c3b15bd",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["socketio", "server"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\__init__.py",
      "size": 388,
      "created": "2024-12-22T11:27:18.275553",
      "modified": "2025-01-14T16:23:19.784189",
      "hash": "18398dcde39e46d0c28f0beb6d6b486467869ff97d4c4a89a8ffa87bd9355519",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "maps"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\__main__.py",
      "size": 1,
      "created": "2025-01-14T16:00:59.449642",
      "modified": "2025-01-14T16:01:03.964273",
      "hash": "36a9e7f1c95b82ffb99743e0c5c4ce95d83c9a430aac59f84ef3cbfab6145068",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool.egg-info\\dependency_links.txt",
      "size": 1,
      "created": "2025-01-10T12:26:32.818383",
      "modified": "2025-01-10T12:47:24.995893",
      "hash": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool.egg-info\\PKG-INFO",
      "size": 4264,
      "created": "2025-01-10T12:47:24.993887",
      "modified": "2025-01-10T12:47:24.993887",
      "hash": "819df5e08125691998a0696891704834a6e46ad1ac682293a3c583c58bca8339",
      "extension": "",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [33]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool.egg-info\\SOURCES.txt",
      "size": 48727,
      "created": "2025-01-10T12:26:32.819382",
      "modified": "2025-01-10T12:47:26.670469",
      "hash": "ed17488eb1a9b12728c25a575beb3cafd12d60780231a66442b7de43ee321bb5",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [57, 899]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool.egg-info\\top_level.txt",
      "size": 9,
      "created": "2025-01-10T12:26:32.819382",
      "modified": "2025-01-10T12:47:24.996893",
      "hash": "eda863bd03af407caa395a736600c53b7f16766ebdeccce2c52a27371e4d6ac6",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\instance\\dojopool.db",
      "size": 28672,
      "created": "2025-01-12T09:05:43.373593",
      "modified": "2025-01-12T09:05:43.391257",
      "hash": "49e2da265dbe624f9b2416b560340f08aa24328d17b40bc0398710a24578db32",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\pages\\Home.js",
      "size": 6010,
      "created": "2025-01-10T05:33:09.654716",
      "modified": "2025-01-13T08:01:06.847682",
      "hash": "9161835d56092af086b12b8f9b8474175baba77e14a7c4fc33db9576d802da6b",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [13]"],
      "similar_files": [],
      "dependencies": [
        "AssessmentIcon",
        "GroupsIcon",
        "SchoolIcon",
        "ShoppingCartIcon",
        "SportsEsportsIcon"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\pages\\NotFound.js",
      "size": 1810,
      "created": "2025-01-10T05:33:26.486918",
      "modified": "2025-01-13T08:01:06.855682",
      "hash": "f30328c154e8fc0eacc645e3c9a4eb903f328cfdd4d49b9002476c2e63a96805",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["SportsEsportsIcon", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\index.html",
      "size": 22791,
      "created": "2025-01-05T13:46:37.278200",
      "modified": "2025-01-06T02:50:58.582392",
      "hash": "508ad672b5a9444cc15903cc6678be3772c92ca2cd2b561ae492bc88dd6c0ed3",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [15, 18, 24, 45, 46, 63, 71, 79]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\utils\\analytics.js",
      "size": 1123,
      "created": "2025-01-13T23:56:49.287608",
      "modified": "2025-01-13T23:56:53.692156",
      "hash": "3729c2ae2eab3d0f315312252637a62b1b159c077bcfcf3260fe6bd2b39e8b8a",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\auth\\AuthContext.js",
      "size": 2026,
      "created": "2025-01-13T06:55:23.612069",
      "modified": "2025-01-13T08:00:59.772687",
      "hash": "2d4d531cbc388cd762856bc7045c764478a7dd7da0a02c8d6d2ea788e5f6b7a7",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\auth\\Login.js",
      "size": 4033,
      "created": "2025-01-13T06:55:45.515960",
      "modified": "2025-01-13T08:00:59.826690",
      "hash": "31e281324987bdfc31b15809955c503af2ec874209d8d630968fc0ce6ed08257",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\auth\\ProtectedRoute.js",
      "size": 332,
      "created": "2025-01-13T06:56:42.586826",
      "modified": "2025-01-13T08:00:59.841756",
      "hash": "d214f1d80897bde3a76ce653a03cb9a52d3da4971cbd582ced30047505510423",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\auth\\ResetPassword.js",
      "size": 2382,
      "created": "2025-01-13T06:56:30.621477",
      "modified": "2025-01-13T08:00:59.879755",
      "hash": "e1668da3387424c171001c7db1be5a3d0fcc7873b76941c57f77bcfb648feca3",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\auth\\Signup.js",
      "size": 4893,
      "created": "2025-01-13T06:56:10.179244",
      "modified": "2025-01-13T08:00:59.924754",
      "hash": "e3a7e52c027009ee52b41f42e5d98f375565f284898e8cae8fe1836a51179570",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\ErrorPages\\404.js",
      "size": 1391,
      "created": "2025-01-13T23:56:04.152955",
      "modified": "2025-01-13T23:56:35.115116",
      "hash": "78565742ef3cd184ba4f2f22a76079087f62f00ddc7dcd5930c9e72675870711",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\ErrorPages\\500.js",
      "size": 1398,
      "created": "2025-01-13T23:56:16.793781",
      "modified": "2025-01-13T23:56:35.117118",
      "hash": "739af6b8562faaeb78c755985858dd9ae40c46f742efc86789e3b97d0a69ef4e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\layout\\Footer.js",
      "size": 5306,
      "created": "2025-01-10T05:32:38.263621",
      "modified": "2025-01-13T08:01:00.011755",
      "hash": "ebfc165765d6256e83885d43bc9063c922f42296c22698dc36b72b9aef0de64c",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "FacebookIcon",
        "InstagramIcon",
        "SportsEsportsIcon",
        "TwitterIcon",
        "YouTubeIcon"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\layout\\Layout.js",
      "size": 587,
      "created": "2025-01-10T05:31:49.560401",
      "modified": "2025-01-10T06:13:22.780719",
      "hash": "61d540343a075871a387cce3e40fb44df31fe099aac1f05d80e809dbdd73e80d",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["Navbar"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\components\\layout\\Navbar.js",
      "size": 1884,
      "created": "2025-01-10T05:32:15.130930",
      "modified": "2025-01-13T08:01:00.045754",
      "hash": "4e34e7db271ce4302776127c98495ee862d26ad626208f4a3507094be007b088",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["SportsEsportsIcon"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\analysis.py",
      "size": 6451,
      "created": "2024-12-18T04:03:34.911839",
      "modified": "2025-01-12T13:30:29.902213",
      "hash": "021f508299ace672f46eb0d477ea564006ba3a5cfbc0a985ea1038a483e8c946",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [92]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "joinedload",
        "sqlalchemy.exc",
        "AdaptiveDifficulty",
        ".service",
        "Match",
        "..core.database",
        "AnalysisError",
        "e",
        "e",
        "cache"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\difficulty.py",
      "size": 9484,
      "created": "2024-12-18T04:02:34.004260",
      "modified": "2024-12-22T12:11:49.282191",
      "hash": "566ddb96be315658ab7211576ffa1a7f30ad28bed4fb6100d51e5ded6b4b78ff",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [201]"],
      "similar_files": [],
      "dependencies": ["numpy", "datetime", "db", "..models"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\prompts.py",
      "size": 2561,
      "created": "2024-12-18T01:52:19.943864",
      "modified": "2024-12-19T04:57:29.691649",
      "hash": "1545aff1856d796ffc95aeeb8229b5e9baf16398fb62e0d0be9b99190224b3e4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\prompts.ts",
      "size": 4015,
      "created": "2024-12-22T16:44:31.627290",
      "modified": "2025-01-13T08:01:00.184906",
      "hash": "517b7258d4d3dece31edf33a2f186a8534a5b9f740ab6347b63d1c9da824fdfc",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [42, 53]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\service.py",
      "size": 30205,
      "created": "2024-12-18T01:53:17.003023",
      "modified": "2025-01-12T14:57:58.530569",
      "hash": "02ddc6964240d1107e20c2d701da84f0306257a2755e3b292cab7574709c801b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [92, 122, 226, 238, 317, 358, 362, 363, 364, 367, 370, 371, 465, 473, 474, 476, 477, 511, 516, 517, 523, 538, 542, 543, 555, 608, 657, 666, 677, 690]"
      ],
      "similar_files": [],
      "dependencies": [
        "typing",
        "joinedload",
        "sqlalchemy.exc",
        "AdaptiveDifficulty",
        "..core.ai.service",
        "Match",
        "..core.database",
        "AnalysisError",
        "cache.",
        "cache",
        "cache",
        "e",
        "e",
        "_process_match_events."
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\story.py",
      "size": 6888,
      "created": "2024-12-18T01:52:49.405694",
      "modified": "2024-12-19T18:19:32.878803",
      "hash": "fd18f3e44889f03de573f254c38027f9a910f2c0657f03eed5e8e6f43d8a1c2b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [89, 153]"],
      "similar_files": [],
      "dependencies": [
        "json",
        "STORY_PROMPTS",
        ".",
        "game",
        "match",
        "tournament"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\__init__.py",
      "size": 1008,
      "created": "2024-12-19T18:09:22.765777",
      "modified": "2024-12-19T18:34:59.619865",
      "hash": "3f15ad5008386dd94d9eedcfd0f1d665e6d5a2a320cc624c9b135758433bd321",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        ".service",
        ".difficulty",
        ".story",
        ".analysis"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\api_handler.py",
      "size": 8492,
      "created": "2024-12-17T09:06:21.967077",
      "modified": "2024-12-17T09:06:21.967077",
      "hash": "bebe2193676a6a0ea74b56dd7611af856ad5cd14a4d213ea7bb2d9fdbe1f4b85",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: secret",
        "Long lines found on lines: [35]"
      ],
      "similar_files": [],
      "dependencies": ["typing", "AsyncIOMotorClient", "pymongo"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\__init__.py",
      "size": 958,
      "created": "2024-12-20T15:00:34.204801",
      "modified": "2025-01-05T07:42:50.297295",
      "hash": "00502fe38248d5731655079804bd78e50467a04d046d30d62531816e0263c97e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "api_v1_bp", ".api_handler"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\blueprint.py",
      "size": 4638,
      "created": "2024-12-18T16:18:24.795940",
      "modified": "2024-12-18T16:18:28.686528",
      "hash": "38724e5a03bde625b781cee4127bd29a549aed2f59017ff83aae115f6bcd6f24",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "BaseBlueprint",
        "src.core.auth.security",
        "db_session",
        ".models"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\decorators.py",
      "size": 5615,
      "created": "2024-12-20T17:19:03.247621",
      "modified": "2024-12-21T03:29:05.028599",
      "hash": "a50ed2c9f4198f825c91ed2581bc9c2488b8d897907819db161bbcb5ed4b1093",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "AuthenticationError"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\forms.py",
      "size": 5413,
      "created": "2024-12-20T17:19:31.894304",
      "modified": "2024-12-21T03:29:05.028599",
      "hash": "866b79dce45233986f44f5dfadb8f8a9954ef4505fb81d030bc44cb1971d958d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask_wtf",
        "wtforms.validators",
        "dojopool.models.user"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\oauth.py",
      "size": 2775,
      "created": "2024-12-18T01:10:15.198474",
      "modified": "2024-12-19T05:05:19.357897",
      "hash": "9e1571afd8f2d083d4f63b33a37c5751fd1e73f47f6a0dd64ce403b3e04d1ec4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": ["os", "flask", "WebApplicationClient"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\routes.py",
      "size": 6121,
      "created": "2024-12-17T23:17:24.153311",
      "modified": "2025-01-12T12:55:01.066204",
      "hash": "7d510348c2af6554ebcfc5d04558b9dd5a89d96d530caeb2a73eb2a2731f1a88",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "TODO found: Implement forgot password functionality"
      ],
      "similar_files": [],
      "dependencies": [
        "flask",
        "flask_login",
        "DataRequired",
        "werkzeug.security",
        "User",
        ".oauth",
        "Google",
        "Google"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\utils.py",
      "size": 3196,
      "created": "2024-12-18T01:00:47.334162",
      "modified": "2024-12-19T04:51:30.936407",
      "hash": "cc25bf5169f96721e50b6cb6477fc1dae0d7e057e7da136f789c8a1c0c495532",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "generate_password_hash", "urllib.parse"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\views.py",
      "size": 10116,
      "created": "2024-12-20T17:20:09.583356",
      "modified": "2024-12-21T03:29:05.031602",
      "hash": "c321e2dd75f8ceb5d92f4a379254001590879398eb9281dd8f61be4c6766b540",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "flask_login",
        "werkzeug.wrappers",
        "verified_required",
        "dojopool.auth.forms",
        "dojopool.core.extensions",
        "AuthenticationError",
        "dojopool.models.user",
        "Role",
        "dojopool.utils.email",
        "generate_token"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\auth\\__init__.py",
      "size": 315,
      "created": "2024-12-17T23:20:28.840365",
      "modified": "2024-12-20T06:49:05.535683",
      "hash": "8f7eab62d5dac0b99db0153c4316cf9c3708fa0170984b57412a3659064c5ea8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", ".routes", "verified_user_required", ".oauth"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\backup\\database_backup.py",
      "size": 3063,
      "created": "2024-12-28T06:19:08.775729",
      "modified": "2024-12-28T06:22:03.429243",
      "hash": "6614d4fd7cd88e497117184ee61394597553ec5d75edb87a9ef23c9a8b94bdf2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [58]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\backup\\Dockerfile",
      "size": 722,
      "created": "2024-12-28T06:19:21.440208",
      "modified": "2024-12-28T06:22:03.429243",
      "hash": "edf16a01c6bfe01ce888b67f165199f9ac1464dbaa8a82fadd7db322fd5e8da7",
      "extension": "",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [16]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\commands\\__init__.py",
      "size": 645,
      "created": "2025-01-03T15:54:50.585656",
      "modified": "2025-01-03T15:56:25.754778",
      "hash": "968ee8ae266cdefbfb02b14626acc36daaa54f39855f288a76a8ef113e4918e8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["click", "flask.cli", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\achievements.py",
      "size": 5854,
      "created": "2024-12-23T11:23:05.826030",
      "modified": "2024-12-23T11:51:39.984429",
      "hash": "f668b9198a5529dc2948e3ca9d92ed590a4c92fd5faaeb50380e04d6a38ffe7c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\api_keys.py",
      "size": 3342,
      "created": "2024-12-23T09:42:04.200493",
      "modified": "2024-12-23T09:43:04.123434",
      "hash": "64795adc196327fe391ebf43c1264876fb569f9ec10ac63204a5ba7befb73d3e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: secret",
        "Long lines found on lines: [30]"
      ],
      "similar_files": [],
      "dependencies": ["os", "typing"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\base.py",
      "size": 1504,
      "created": "2024-12-18T15:01:21.410201",
      "modified": "2025-01-03T16:05:33.882038",
      "hash": "115351247d6b78348e8dbdf6b5c8a1fe912e6f937dbefcf9b6eb9de3ddeb01db",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Potential security issue: secret"
      ],
      "similar_files": [],
      "dependencies": ["os", "datetime"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\compression_config.py",
      "size": 1436,
      "created": "2025-01-14T03:55:35.620830",
      "modified": "2025-01-14T03:57:22.832797",
      "hash": "a6cf669166a5adb6e51749b7277ed6bf77297947da0c88131986cf07ba806924",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\default.py",
      "size": 938,
      "created": "2024-12-20T04:53:01.855725",
      "modified": "2024-12-20T04:53:05.098756",
      "hash": "2e915b3a9476159c9a3ee007a1d12e75b4db4371a29c1cf67cf4055ae6fbade9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: secret"
      ],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\development.py",
      "size": 645,
      "created": "2024-12-18T15:02:06.796239",
      "modified": "2024-12-24T03:42:19.330173",
      "hash": "3a53b87cdee8f3767493efc644c2dd7ac24035a88039b4a2f8a71da61d9a07a2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [16]"],
      "similar_files": [],
      "dependencies": ["os", ".default"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\image_paths.py",
      "size": 4522,
      "created": "2025-01-14T05:25:51.474425",
      "modified": "2025-01-14T05:27:11.123387",
      "hash": "e1a9c38ce74b0d09d34d2ea2e65a15f1de603615856863eec613c33c3dae10d9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pathlib"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\maps.py",
      "size": 1376,
      "created": "2025-01-14T16:21:09.159815",
      "modified": "2025-01-14T16:21:21.964348",
      "hash": "2643317a8a4eb7c81513c62bc87c9a0363ebbc33d7911c30926f658553a0a9f5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\production.py",
      "size": 1056,
      "created": "2024-12-18T15:02:55.176893",
      "modified": "2024-12-22T11:42:25.241239",
      "hash": "0f366f35cb248373d46e1f3f600827a179c679748acd95bb8906ac2798e2519c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "SysLogHandler", ".default"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\testing.py",
      "size": 3603,
      "created": "2024-12-18T15:03:43.822737",
      "modified": "2024-12-22T11:47:54.945204",
      "hash": "59429400ac319b160e04a66ddb527e2254ff9f4a5124cffce07a6c890b2ace65",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: secret"
      ],
      "similar_files": [],
      "dependencies": [
        "os",
        "datetime",
        "StaticPool",
        ".default",
        "sqlalchemy",
        "Engine",
        "..core.extensions",
        "flask",
        "db"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\__init__.py",
      "size": 2079,
      "created": "2024-12-18T01:05:27.784351",
      "modified": "2025-01-06T06:00:11.232478",
      "hash": "69cb5f59523f2c4666cc32b30e783c1d4a6801b7e2aadcc74e9841b4a737f19d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Potential security issue: secret",
        "Long lines found on lines: [13]"
      ],
      "similar_files": [],
      "dependencies": ["os", "datetime", "BaseConfig"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\api_docs.py",
      "size": 9244,
      "created": "2024-12-17T10:42:32.590075",
      "modified": "2024-12-17T16:57:28.983929",
      "hash": "9ae247a2dd452b876ad2405f39afdd39213e5cada94aec71031e992c1f77f14a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\cache.py",
      "size": 13418,
      "created": "2024-12-18T03:31:34.136448",
      "modified": "2025-01-14T03:25:59.655206",
      "hash": "698d04c26f750827b4cd255609570e0489dc5a9a8f737d0c6f5962008bff2106",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "time",
        "typing",
        "RedisError",
        "threading",
        "Redis",
        "local",
        "cache"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\cli.py",
      "size": 1577,
      "created": "2024-12-22T13:37:17.562328",
      "modified": "2024-12-22T13:37:36.295525",
      "hash": "54f7f495a00128f094ca7f30ebf9fd4e667b2d5ca3cabde2bb18143d258e0515",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "click",
        "flask.cli",
        "init_migrations",
        "src.core.database.init_db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config.py",
      "size": 450,
      "created": "2024-12-20T05:52:19.829764",
      "modified": "2025-01-12T13:40:54.503087",
      "hash": "8512094044785e90b71b4658bf03ad90494e594ceb25d170bac8c2e15f46e962",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": ["os", "dataclasses", "environment"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database.py",
      "size": 1206,
      "created": "2024-12-18T15:32:18.596032",
      "modified": "2024-12-23T03:52:30.054530",
      "hash": "8c91c2f0b773f771a9eaf435b53d295a4ca5623f6b888f4fc84c7c13a93208ef",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask_sqlalchemy",
        "src.models.player",
        "PlayerStatus",
        "src.models.game",
        "Venue"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\db_optimization.py",
      "size": 8078,
      "created": "2024-12-22T16:05:54.140624",
      "modified": "2024-12-22T16:18:29.590888",
      "hash": "404c49c032e7b82c30dba6654212366314120804ab743a72a10dd966ce0ce056",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "time",
        "ThreadedConnectionPool",
        "psycopg2.extras",
        "CacheManager",
        "the"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\email.py",
      "size": 1203,
      "created": "2025-01-06T03:35:01.402477",
      "modified": "2025-01-06T03:36:00.809105",
      "hash": "e44856466d726e85923a768e4f2d26aa8c082252d388e8b9feb393b7ac56cf40",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "mail"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\errors.py",
      "size": 3166,
      "created": "2024-12-20T14:57:58.226398",
      "modified": "2024-12-21T03:29:05.020597",
      "hash": "451ba2ce4bec964ed613fe4a26c2b289c2b7a3ddce5a533f6585329552b227a2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "HTTPException", "dojopool.core.extensions"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\events.py",
      "size": 4275,
      "created": "2024-12-23T04:58:31.553971",
      "modified": "2025-01-05T08:22:30.602664",
      "hash": "908268cdede36aba2509b211dd2e4b943e122d4cc7203561d01ea0e4296983f8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["json", "redis_client", "queue"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\exceptions.py",
      "size": 5776,
      "created": "2024-12-19T18:54:12.701254",
      "modified": "2025-01-12T13:40:54.503087",
      "hash": "99603b8b033a51a6882bd086d62f89ffb24461363eeb4b5ecf94bbe65c16c41e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\extensions.py",
      "size": 1614,
      "created": "2024-12-17T09:03:16.845440",
      "modified": "2025-01-06T13:05:46.118902",
      "hash": "bf4aa6d7f25e5af0499e60b33a4fe101fe677214ae5e9ad9e9136a22ad2b7946",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask_sqlalchemy",
        "get_remote_address",
        "authlib.integrations.flask_client",
        "scoped_session",
        "flask",
        "SessionCSRF",
        "src.extensions"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\factory.py",
      "size": 1392,
      "created": "2024-12-18T15:32:09.418006",
      "modified": "2024-12-22T13:38:02.511415",
      "hash": "143f1f4615200696fe2a9498d6c35662ad2e23074e132683525df13e0a4a8c00",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "os",
        "flask",
        "config",
        "src.core.database",
        "init_app",
        "src.core.database.migrations",
        "environment",
        "src.core.auth",
        "src.core.api",
        "src.core.admin"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\load_testing.py",
      "size": 12588,
      "created": "2024-12-22T15:30:02.531607",
      "modified": "2024-12-22T16:42:24.130970",
      "hash": "be86ee3f5b32bb027b80046c2c39ff4625ae24ca4eabb1bd104b1ec0066689e5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Implement token generation/retrieval"],
      "similar_files": [],
      "dependencies": ["time", "ThreadPoolExecutor"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\logging.py",
      "size": 3435,
      "created": "2024-12-18T15:34:09.143080",
      "modified": "2024-12-21T03:29:05.022597",
      "hash": "5039f06e8e610e04c4990e74d40be83a11332e9743794686714d699ec5a76681",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "os",
        "RotatingFileHandler",
        "pathlib",
        "default_handler"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\marketplace.py",
      "size": 38348,
      "created": "2025-01-10T04:35:57.454227",
      "modified": "2025-01-10T04:41:04.066049",
      "hash": "f5887a2d4cf32bbda5e3927e151382763dac8dca3b58f8b7b86da4edfc0f0c7b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [341, 390, 430, 577, 584, 585, 598, 899]"
      ],
      "similar_files": [],
      "dependencies": ["typing", "analytics_manager", ".constants", "logger"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware.py",
      "size": 15025,
      "created": "2024-12-18T03:39:38.095118",
      "modified": "2024-12-22T16:20:08.456346",
      "hash": "ed156c75fbc4dba77b369faa2a264e74070ed6b5c855d35c911c6af4755a9ba0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [204]"],
      "similar_files": [],
      "dependencies": [
        "functools",
        "urlparse",
        ".security",
        "cache",
        ".exceptions",
        "route"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\mixins.py",
      "size": 327,
      "created": "2024-12-19T05:40:55.085016",
      "modified": "2024-12-22T11:34:05.106972",
      "hash": "9be5642c4c434eb197527187d80d9330338137e3beddee43c4bff77f9a243794",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models.py",
      "size": 480,
      "created": "2024-12-17T09:03:16.847441",
      "modified": "2024-12-19T04:38:33.894795",
      "hash": "8f76ec7894e9846cd588eaa76ace0e6f64a94c292ec25c2f86a2e10ba7ef35d6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "flask_login",
        "generate_password_hash",
        "their",
        "..models.user",
        "Game",
        "..models.venue",
        "Tournament"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\model_mixins.py",
      "size": 4589,
      "created": "2024-12-23T03:51:07.083304",
      "modified": "2024-12-23T03:53:29.133681",
      "hash": "c52969d63016f7715f470994e8c3a8a74f7e1a2db122da19322e26c5b91aabd9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "func",
        "sqlalchemy.ext.declarative",
        "db",
        "the",
        "dictionary"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\monitoring.py",
      "size": 13012,
      "created": "2024-12-18T03:33:55.278952",
      "modified": "2024-12-22T16:42:24.130970",
      "hash": "5de697600d766be9d89aba989890fcb48973cc1d8f1c2be9622f983db3740da7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["time"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\notifications.py",
      "size": 4558,
      "created": "2024-12-18T03:44:02.530933",
      "modified": "2024-12-25T00:31:50.580080",
      "hash": "3a2c81ecd93ec4a2a0db6a51aff4f5240137d2f553891c1ffa6605be45c183eb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_socketio", "db", "flask", "socketio", "main"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\routes.py",
      "size": 420,
      "created": "2024-12-17T09:03:16.851576",
      "modified": "2024-12-17T16:57:28.988982",
      "hash": "34898ca4bc753773da65f892c90e1658261e83f9fc40508bc7ac014b0a38b414",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\security.py",
      "size": 472,
      "created": "2024-12-18T03:37:18.310622",
      "modified": "2025-01-11T14:48:53.831809",
      "hash": "74d294345092ca03081a4d8ce15daff957b19ab7154033c5232a492a92f3a0b7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["werkzeug.security", "check_password_hash"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\tournament.py",
      "size": 14825,
      "created": "2024-12-18T04:30:34.806690",
      "modified": "2024-12-18T04:30:51.660621",
      "hash": "64afad8ea5b810db937b3b5f91adea779330fb026f07e167a80deec109e36dca",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [213, 238, 248]"],
      "similar_files": [],
      "dependencies": ["math", "db", "..models.tournament"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation.py",
      "size": 10117,
      "created": "2024-12-18T03:38:49.829746",
      "modified": "2024-12-22T16:42:24.129966",
      "hash": "c490d7b835dd016077968e79f66acaae136c45044d6ca55bbfe6b4131ea96af0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["re", "typing"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\__init__.py",
      "size": 154,
      "created": "2024-12-17T09:22:51.699804",
      "modified": "2024-12-25T03:37:04.275844",
      "hash": "02ff219d43293822450a3d2d11673380fc32d5de42129142c03d9b3211b18325",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".database"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\dojo_pool.egg-info\\dependency_links.txt",
      "size": 1,
      "created": "2024-12-25T03:49:42.255196",
      "modified": "2025-01-05T06:52:53.166288",
      "hash": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\dojo_pool.egg-info\\PKG-INFO",
      "size": 2022,
      "created": "2025-01-05T06:52:53.164287",
      "modified": "2025-01-05T06:52:53.164287",
      "hash": "f3bda30f6e9d3b1ae67e406486c494480ff91426612bf2b6ab40dadcf6db7b53",
      "extension": "",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [15, 67, 75]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\dojo_pool.egg-info\\SOURCES.txt",
      "size": 12989,
      "created": "2024-12-25T03:49:42.256321",
      "modified": "2025-01-05T06:52:56.750123",
      "hash": "8e7e6573e993164eb7d6b861cf12088eb7887998a2b9c32eb72113b65f4d2610",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\dojo_pool.egg-info\\top_level.txt",
      "size": 218,
      "created": "2024-12-25T03:49:42.256321",
      "modified": "2025-01-05T06:52:53.168287",
      "hash": "3f2b9c80bbe318ec06544b150a7311c51708c8de7e167446bddd294429d94701",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\events\\__init__.py",
      "size": 1116,
      "created": "2025-01-03T17:03:04.503535",
      "modified": "2025-01-03T17:03:33.358176",
      "hash": "26ef3c85ce5d024648f7cbdc17b8e43f98e4411955d28a134d9a8446124d4fc4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_socketio", "socketio", "src.models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\forms\\auth.py",
      "size": 2363,
      "created": "2025-01-06T03:34:06.784143",
      "modified": "2025-01-06T03:34:53.323973",
      "hash": "cf66748f14b64d1d93df78813b7133d2c64f8fc15baff17a6516d7de642c1284",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [33, 55]"
      ],
      "similar_files": [],
      "dependencies": ["flask_wtf", "DataRequired"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\forms\\venue_forms.py",
      "size": 6119,
      "created": "2024-12-23T04:44:35.335243",
      "modified": "2024-12-23T04:46:14.704618",
      "hash": "a95a7b5ecfb096f69fd30895665dee6465d67b1886b52cdc30ca1dfd47b09e10",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask_wtf",
        "wtforms.validators",
        "src.utils.validators",
        "field"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\errorTracker.ts",
      "size": 0,
      "created": "2024-12-22T04:20:30.151405",
      "modified": "2024-12-22T04:20:30.151405",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\localhost.crt",
      "size": 969,
      "created": "2025-01-03T21:59:59.927347",
      "modified": "2025-01-03T21:59:59.928453",
      "hash": "1d86b9cd06b7a17336e0750e7f459908f19051562a668886c0d6c13e728b8848",
      "extension": ".crt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\localhost.key",
      "size": 1704,
      "created": "2025-01-03T21:59:59.928453",
      "modified": "2025-01-03T21:59:59.929538",
      "hash": "4b1cc618fb24fbe63ad5a6254c592ba4179bcda24a4f478a2f200f0eb2026dd3",
      "extension": ".key",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\package-lock.json",
      "size": 768948,
      "created": "2025-01-03T15:59:05.301988",
      "modified": "2025-01-10T06:51:47.179160",
      "hash": "0dd31a8eabfba94d931304c99fc1885b06810e3e706a6fed3955e090398875cc",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [33, 39, 51, 64, 78, 87, 117, 123, 132, 150, 159, 168, 183, 184, 195, 196, 212, 220, 221, 242, 250, 251, 268, 276, 277, 292, 293, 305, 306, 318, 319, 335, 336, 347, 348, 356, 357, 373, 374, 390, 391, 403, 404, 412, 413, 421, 422, 430, 431, 445, 458, 472, 473, 488, 489, 503, 504, 518, 519, 535, 536, 551, 552, 553, 568, 569, 585, 586, 587, 602, 603, 604, 619, 620, 621, 637, 638, 639, 654, 655, 666, 667, 678, 679, 690, 691, 702, 703, 717, 718, 732, 733, 747, 748, 762, 763, 777, 778, 789, 790, 801, 802, 816, 817, 828, 829, 840, 841, 852, 853, 864, 865, 876, 877, 888, 889, 903, 904, 918, 919, 933, 934, 949, 950, 964, 965, 981, 982, 998, 999, 1013, 1014, 1028, 1029, 1044, 1045, 1060, 1061, 1080, 1081, 1096, 1097, 1111, 1112, 1127, 1128, 1142, 1143, 1158, 1159, 1173, 1174, 1188, 1189, 1203, 1204, 1219, 1220, 1235, 1236, 1252, 1253, 1267, 1268, 1282, 1283, 1297, 1298, 1312, 1313, 1328, 1329, 1344, 1345, 1362, 1363, 1378, 1379, 1394, 1395, 1409, 1410, 1424, 1425, 1439, 1440, 1456, 1457, 1472, 1473, 1487, 1488, 1503, 1504, 1518, 1519, 1534, 1535, 1551, 1552, 1566, 1567, 1581, 1582, 1596, 1597, 1615, 1616, 1630, 1631, 1646, 1647, 1662, 1663, 1678, 1679, 1693, 1694, 1714, 1722, 1723, 1737, 1738, 1753, 1754, 1768, 1769, 1783, 1784, 1798, 1799, 1817, 1818, 1832, 1833, 1848, 1849, 1864, 1865, 1881, 1964, 1972, 1973, 1987, 2006, 2007, 2026, 2038, 2052, 2070, 2083, 2089, 2094, 2095, 2114, 2115, 2134, 2135, 2153, 2154, 2172, 2173, 2192, 2193, 2212, 2213, 2231, 2232, 2250, 2251, 2270, 2271, 2285, 2286, 2304, 2305, 2323, 2324, 2342, 2343, 2358, 2359, 2375, 2394, 2407, 2413, 2422, 2428, 2452, 2465, 2471, 2494, 2499, 2500, 2509, 2515, 2520, 2521, 2539, 2548, 2571, 2581, 2596, 2608, 2620, 2628, 2629, 2644, 2654, 2665, 2666, 2678, 2679, 2686, 2703, 2715, 2727, 2744, 2759, 2775, 2776, 2792, 2801, 2810, 2823, 2836, 2848, 2863, 2875, 2884, 2893, 2910, 2926, 2935, 2955, 2972, 3019, 3035, 3044, 3064, 3081, 3096, 3112, 3121, 3138, 3154, 3163, 3183, 3200, 3214, 3230, 3239, 3254, 3274, 3318, 3334, 3343, 3360, 3369, 3383, 3392, 3407, 3423, 3432, 3447, 3473, 3489, 3498, 3515, 3524, 3538, 3547, 3556, 3565, 3566, 3572, 3582, 3587, 3588, 3598, 3624, 3669, 3696, 3728, 3768, 3782, 3811, 3812, 3821, 3834, 3843, 3856, 3865, 3878, 3887, 3888, 3936, 3945, 3955, 3964, 3986, 3987, 4007, 4020, 4037, 4043, 4049, 4055, 4064, 4072, 4073, 4084, 4085, 4097, 4098, 4110, 4111, 4123, 4124, 4136, 4137, 4149, 4150, 4162, 4163, 4175, 4176, 4189, 4212, 4229, 4230, 4246, 4265, 4283, 4306, 4326, 4348, 4361, 4379, 4398, 4407, 4423, 4432, 4441, 4447, 4460, 4469, 4479, 4488, 4498, 4507, 4515, 4516, 4526, 4536, 4546, 4552, 4563, 4564, 4575, 4576, 4588, 4596, 4597, 4603, 4609, 4617, 4618, 4623, 4624, 4633, 4642, 4652, 4658, 4664, 4670, 4676, 4685, 4691, 4697, 4703, 4709, 4715, 4721, 4731, 4739, 4740, 4749, 4758, 4764, 4770, 4780, 4789, 4800, 4809, 4814, 4815, 4824, 4830, 4839, 4848, 4853, 4854, 4870, 4872, 4873, 4890, 4900, 4902, 4903, 4930, 4953, 4955, 4956, 4973, 4986, 4995, 5001, 5010, 5011, 5016, 5017, 5022, 5023, 5028, 5029, 5039, 5040, 5045, 5046, 5058, 5067, 5076, 5082, 5098, 5111, 5123, 5136, 5137, 5147, 5153, 5159, 5166, 5179, 5188, 5200, 5210, 5222, 5231, 5240, 5248, 5249, 5262, 5274, 5290, 5307, 5322, 5323, 5329, 5338, 5353, 5365, 5377, 5386, 5401, 5407, 5420, 5426, 5432, 5440, 5441, 5457, 5463, 5483, 5491, 5492, 5511, 5512, 5531, 5532, 5549, 5550, 5567, 5568, 5588, 5589, 5604, 5605, 5626, 5632, 5638, 5644, 5650, 5659, 5695, 5696, 5711, 5720, 5729, 5751, 5767, 5776, 5795, 5812, 5813, 5828, 5829, 5844, 5858, 5859, 5867, 5868, 5882, 5890, 5891, 5903, 5904, 5915, 5916, 5921, 5922, 5948, 5963, 5964, 5988, 5994, 6000, 6016, 6025, 6037, 6043, 6067, 6076, 6088, 6094, 6104, 6110, 6119, 6130, 6131, 6137, 6169, 6178, 6184, 6196, 6205, 6222, 6223, 6236, 6252, 6261, 6271, 6283, 6292, 6304, 6323, 6324, 6333, 6349, 6358, 6364, 6388, 6400, 6409, 6424, 6430, 6442, 6451, 6462, 6471, 6481, 6495, 6507, 6521, 6530, 6535, 6536, 6545, 6554, 6566, 6572, 6584, 6590, 6596, 6602, 6614, 6623, 6632, 6638, 6650, 6668, 6677, 6683, 6688, 6689, 6694, 6695, 6704, 6716, 6725, 6731, 6740, 6746, 6757, 6770, 6781, 6787, 6803, 6816, 6817, 6826, 6843, 6844, 6856, 6874, 6908, 6909, 6947, 6955, 6956, 6971, 6986, 6987, 6993, 7006, 7015, 7027, 7033, 7049, 7061, 7081, 7082, 7125, 7137, 7149, 7162, 7168, 7177, 7183, 7195, 7201, 7207, 7213, 7227, 7243, 7244, 7260, 7261, 7278, 7295, 7301, 7307, 7339, 7345, 7354, 7365, 7366, 7383, 7392, 7409, 7418, 7427, 7436, 7446, 7455, 7461, 7478, 7487, 7493, 7499, 7508, 7520, 7526, 7538, 7549, 7550, 7556, 7565, 7575, 7589, 7601, 7614, 7623, 7638, 7652, 7662, 7671, 7677, 7691, 7697, 7703, 7709, 7723, 7724, 7730, 7742, 7748, 7757, 7766, 7779, 7788, 7797, 7806, 7870, 7871, 7877, 7886, 7895, 7915, 7942, 7948, 7960, 7975, 7984, 8001, 8010, 8015, 8016, 8028, 8049, 8059, 8060, 8114, 8115, 8142, 8143, 8177, 8203, 8204, 8220, 8221, 8248, 8260, 8261, 8288, 8313, 8314, 8331, 8355, 8368, 8376, 8377, 8388, 8397, 8414, 8422, 8423, 8440, 8441, 8474, 8484, 8493, 8505, 8517, 8525, 8526, 8555, 8564, 8574, 8586, 8617, 8618, 8630, 8640, 8652, 8664, 8681, 8689, 8690, 8705, 8706, 8723, 8733, 8735, 8736, 8763, 8788, 8789, 8806, 8819, 8828, 8844, 8855, 8856, 8880, 8894, 8909, 8919, 8934, 8946, 8958, 8975, 8988, 9000, 9012, 9021, 9027, 9036, 9045, 9051, 9060, 9083, 9091, 9137, 9146, 9152, 9158, 9174, 9185, 9186, 9192, 9198, 9204, 9213, 9225, 9234, 9246, 9266, 9284, 9293, 9305, 9314, 9326, 9344, 9353, 9359, 9376, 9382, 9398, 9412, 9418, 9438, 9447, 9463, 9474, 9475, 9514, 9524, 9540, 9555, 9567, 9585, 9594, 9603, 9616, 9625, 9639, 9645, 9651, 9665, 9673, 9674, 9693, 9694, 9703, 9712, 9721, 9744, 9745, 9751, 9760, 9773, 9784, 9785, 9802, 9823, 9835, 9841, 9851, 9863, 9875, 9889, 9901, 9910, 9926, 9946, 9958, 9964, 9970, 9985, 9991, 9997, 10009, 10017, 10018, 10030, 10045, 10057, 10072, 10084, 10092, 10093, 10102, 10108, 10117, 10129, 10135, 10150, 10156, 10164, 10165, 10177, 10193, 10198, 10199, 10220, 10252, 10271, 10277, 10293, 10299, 10313, 10326, 10327, 10351, 10364, 10373, 10385, 10397, 10403, 10415, 10424, 10434, 10450, 10469, 10478, 10487, 10488, 10498, 10504, 10510, 10524, 10533, 10549, 10566, 10572, 10590, 10605, 10617, 10633, 10645, 10660, 10677, 10693, 10708, 10716, 10717, 10731, 10732, 10741, 10749, 10750, 10768, 10780, 10792, 10798, 10807, 10823, 10832, 10841, 10852, 10853, 10859, 10877, 10886, 10895, 10906, 10907, 10922, 10934, 10950, 10967, 10982, 10988, 11000, 11015, 11031, 11043, 11049, 11054, 11055, 11063, 11064, 11080, 11089, 11103, 11117, 11118, 11132, 11141, 11154, 11171, 11186, 11204, 11214, 11226, 11251, 11265, 11281, 11290, 11320, 11336, 11345, 11360, 11380, 11397, 11431, 11447, 11456, 11473, 11516, 11532, 11541, 11558, 11573, 11585, 11601, 11617, 11626, 11642, 11643, 11661, 11677, 11686, 11702, 11703, 11720, 11736, 11745, 11762, 11771, 11797, 11813, 11822, 11839, 11867, 11883, 11892, 11907, 11927, 11944, 11957, 11972, 11985, 12001, 12010, 12027, 12036, 12056, 12057, 12071, 12087, 12096, 12112, 12121, 12138, 12170, 12186, 12195, 12215, 12232, 12265, 12281, 12290, 12310, 12327, 12340, 12373, 12389, 12398, 12413, 12433, 12450, 12467, 12483, 12491, 12492, 12513, 12530, 12539, 12551, 12566, 12583, 12589, 12601, 12613, 12633, 12642, 12651, 12668, 12687, 12700, 12712, 12727, 12733, 12745, 12761, 12770, 12785, 12797, 12815, 12831, 12840, 12857, 12871, 12886, 12895, 12901, 12913, 12959, 12973, 12985, 12990, 12991, 12997, 13002, 13003, 13008, 13009, 13015, 13027, 13039, 13050, 13062, 13071, 13086, 13095, 13104, 13113, 13121, 13122, 13128, 13140, 13150, 13159, 13172, 13181, 13187, 13196, 13210, 13225, 13231, 13237, 13243, 13249, 13255, 13261, 13273, 13282, 13291, 13300, 13309, 13324, 13333, 13342, 13351, 13357, 13366, 13378, 13387, 13393, 13402, 13411, 13424, 13436, 13445, 13457, 13466, 13474, 13475, 13495, 13501, 13510, 13519, 13531, 13537, 13550, 13561, 13579, 13584, 13585, 13591, 13600, 13606, 13616, 13625, 13631, 13637, 13646, 13655, 13667, 13679, 13691, 13697, 13706, 13715, 13727, 13743, 13752, 13772, 13786, 13803, 13804, 13825, 13839, 13857, 13863, 13875, 13884, 13893, 13908, 13925, 13942, 13959, 13974, 13989, 14002, 14010, 14011, 14017, 14027, 14039, 14057, 14063, 14072, 14082, 14091, 14100, 14109, 14115, 14131, 14137, 14143, 14152, 14158, 14164, 14176, 14185, 14194, 14206, 14219, 14231, 14246, 14258, 14270, 14282, 14295, 14310, 14322, 14330, 14331, 14340, 14367, 14368, 14386, 14387, 14400, 14413, 14427, 14428, 14446, 14447, 14465, 14466, 14485, 14502, 14503, 14518, 14519, 14537, 14538, 14556, 14557, 14575, 14576, 14594, 14595, 14606, 14607, 14618, 14619, 14630, 14631, 14642, 14643, 14662, 14663, 14677, 14678, 14686, 14687, 14701, 14702, 14716, 14717, 14725, 14726, 14741, 14742, 14761, 14778, 14787, 14805, 14806, 14826, 14861, 14873, 14885, 14907, 14918, 14919, 14930, 14931, 14947, 14964, 14965, 14979, 14980, 14996, 14997, 15013, 15014, 15028, 15029, 15040, 15041, 15057, 15058, 15070, 15071, 15085, 15086, 15098, 15099, 15114, 15139, 15159, 15176, 15177, 15188, 15189, 15203, 15204, 15218, 15219, 15233, 15234, 15248, 15249, 15263, 15264, 15279, 15280, 15295, 15296, 15310, 15311, 15332, 15333, 15348, 15349, 15368, 15377, 15396, 15462, 15463, 15481, 15482, 15497, 15498, 15512, 15513, 15521, 15522, 15540, 15541, 15554, 15570, 15579, 15592, 15598, 15607, 15627, 15628, 15642, 15643, 15649, 15658, 15670, 15680, 15694, 15706, 15711, 15712, 15718, 15727, 15740, 15751, 15757, 15770, 15779, 15791, 15800, 15801, 15811, 15826, 15832, 15852, 15861, 15870, 15879, 15894, 15906, 15918, 15934, 15935, 15941, 15976, 15985, 15998, 16004, 16010, 16019, 16034, 16051, 16123, 16124, 16140, 16149, 16163, 16175, 16187, 16197, 16209, 16221, 16222, 16244, 16249, 16250, 16262, 16267, 16268, 16277, 16282, 16283, 16303, 16320, 16326, 16338, 16350, 16359, 16372, 16381, 16390, 16396, 16416, 16428, 16437, 16446, 16474, 16480, 16497, 16506, 16515, 16524, 16534, 16550, 16564, 16565, 16566, 16581, 16594, 16595, 16604, 16627, 16646, 16666, 16682, 16699, 16705, 16711, 16749, 16755, 16767, 16776, 16795, 16811, 16822, 16823, 16829, 16835, 16848, 16860, 16884, 16893, 16899, 16907, 16908, 16917, 16935, 16944, 16953, 16968, 16974, 16980, 16986, 16995, 17010, 17027, 17042, 17056, 17062, 17074, 17083, 17095, 17114, 17130, 17147, 17148, 17167, 17173, 17179, 17188, 17199, 17205, 17214, 17223, 17244, 17254, 17263, 17270, 17286, 17300, 17306, 17307, 17313, 17324, 17325, 17334, 17340, 17349, 17371, 17380, 17393, 17410, 17418, 17428, 17440, 17448, 17449, 17462, 17471, 17483, 17484, 17490, 17505, 17519, 17525, 17530, 17531, 17544, 17545, 17571, 17572, 17581, 17582, 17602, 17603, 17620, 17621, 17638, 17652, 17665, 17677, 17686, 17695, 17704, 17716, 17728, 17744, 17760, 17766, 17788, 17797, 17817, 17832, 17844, 17856, 17857, 17869, 17875, 17903, 17915, 17924, 17938, 17947, 17953, 17965, 17977, 17987, 17997, 18002, 18003, 18012, 18021, 18034, 18043, 18055, 18061, 18098, 18110, 18119, 18128, 18146, 18158, 18174, 18191, 18192, 18226, 18232, 18246, 18256, 18268, 18274, 18283, 18295, 18301, 18307, 18313, 18325, 18334, 18349, 18358, 18370, 18375, 18376, 18382, 18394, 18406, 18415, 18421, 18430, 18436, 18442, 18454, 18463, 18475, 18488, 18501, 18502, 18520, 18521, 18542, 18561, 18562, 18571, 18584, 18602, 18607, 18608, 18616, 18617, 18629, 18630, 18638, 18639, 18648, 18660, 18669, 18678, 18684, 18693, 18694, 18724, 18733, 18743, 18749, 18764, 18770, 18779, 18788, 18802, 18811, 18820, 18830, 18842, 18851, 18864, 18873, 18879, 18888, 18933, 18934, 18957, 19016, 19036, 19037, 19053, 19062, 19075, 19084, 19097, 19106, 19124, 19137, 19138, 19147, 19156, 19168, 19174, 19180, 19194, 19208, 19209, 19228, 19255, 19273, 19293, 19301, 19302, 19311, 19312, 19321, 19368, 19369, 19386, 19402, 19416, 19417, 19423, 19435, 19444, 19450, 19460, 19461, 19471, 19477, 19486, 19487, 19488, 19499, 19500, 19509, 19519, 19520, 19529, 19543, 19552, 19561, 19571, 19576, 19577, 19596, 19605, 19615, 19625, 19643, 19660, 19666, 19678, 19699, 19705, 19711, 19720, 19726, 19735, 19753, 19762]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\package.json",
      "size": 1200,
      "created": "2025-01-03T15:55:52.668190",
      "modified": "2025-01-10T06:48:02.548655",
      "hash": "f5718e572ab96e47eb32e53911a70bb1b91e039c907ca027a4c40504132bc4e9",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\server.py",
      "size": 6477,
      "created": "2025-01-03T21:55:53.354039",
      "modified": "2025-01-05T05:39:09.136698",
      "hash": "665d2efb0fa4653d532fbf10f0593e84e9d0330b81ba173f80c64cd4fa60ab3b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["http.server"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\setupTests.ts",
      "size": 1420,
      "created": "2024-12-22T05:12:12.622907",
      "modified": "2025-01-10T05:54:18.903388",
      "hash": "0ceab527c9eeb6fb75d3715a34ce44d2a4362d86500153f5767922a47b7e080d",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["@testing-library/jest-dom"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\game\\routes.py",
      "size": 2433,
      "created": "2024-12-18T15:15:09.396438",
      "modified": "2024-12-24T02:39:07.440648",
      "hash": "1d75224e76695467de191444bad5a43da28362fa3261a133cc1858ddda279e34",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "game_bp", "src.core.models.game", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\game\\__init__.py",
      "size": 150,
      "created": "2024-12-18T15:14:16.125802",
      "modified": "2024-12-18T15:15:00.024085",
      "hash": "9ba99ef1fe3e5a44e900b06aa4314e44a76caa04d50e24c8bb6cac4b2e29d907",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\hooks\\useAI.ts",
      "size": 5350,
      "created": "2024-12-23T12:48:38.227703",
      "modified": "2025-01-13T08:01:06.400680",
      "hash": "353a8f1dac12f13652a93d19ba3cf8d5a5cfa84c8cd40d21d6ce472da5c58a8f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\hooks\\useAnalytics.ts",
      "size": 4185,
      "created": "2024-12-23T12:18:17.402830",
      "modified": "2025-01-13T08:01:06.422362",
      "hash": "7caa323bd272f3c78a6ace8a16d0354a8bcd00aac44dcb8b1b073832052f5d80",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\hooks\\usePerformanceMonitor.ts",
      "size": 3723,
      "created": "2024-12-23T13:29:58.601631",
      "modified": "2025-01-13T08:01:06.439682",
      "hash": "93d43479f0bbbdf087981c56d9fa3f2269ea819a9c3b0ee8993c4a5b0f00a0bd",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\hooks\\usePredictiveAnalytics.ts",
      "size": 4013,
      "created": "2024-12-23T13:12:37.061102",
      "modified": "2025-01-13T08:01:06.463685",
      "hash": "452075b8860ca725b45f089519786229cbf9f17d0f0ed2a1bd8c730b83529d11",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\instance\\dojopool.db",
      "size": 28672,
      "created": "2024-12-24T04:20:57.511769",
      "modified": "2025-01-12T12:55:40.630041",
      "hash": "49e2da265dbe624f9b2416b560340f08aa24328d17b40bc0398710a24578db32",
      "extension": ".db",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\logs\\websocket.log",
      "size": 0,
      "created": "2025-01-13T05:48:01.346178",
      "modified": "2025-01-13T05:48:01.346178",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".log",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\__init__.py",
      "size": 4881,
      "created": "2025-01-05T08:22:43.817249",
      "modified": "2025-01-05T08:22:49.673280",
      "hash": "13bb35da46602b9c3193d51e67c92eb97543ef987931e8d0af53fa4b65136edb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_mail"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\main\\routes.py",
      "size": 5091,
      "created": "2024-12-20T03:35:30.487076",
      "modified": "2024-12-20T06:54:50.144252",
      "hash": "b67f655a8dbba9f808090530984a2bdd85b5f3dc32041886785d35e20e4c697a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "TODO found: Implement contact form handling"
      ],
      "similar_files": [],
      "dependencies": [
        "flask",
        "check_password_hash",
        ".",
        "db",
        "src.models.user"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\main\\__init__.py",
      "size": 150,
      "created": "2024-12-20T03:35:12.165229",
      "modified": "2024-12-20T06:50:00.499772",
      "hash": "d31d78507454dbf9841d27919e514c0335da70a048b0ddf951e5549afaae6df1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\App.tsx",
      "size": 641,
      "created": "2024-12-17T12:10:07.250956",
      "modified": "2025-01-10T05:54:20.080963",
      "hash": "dc052c3cb2f0e2e1c12cdb6e9782d212629b6c58fb308bdb9c36a29b1c664a08",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "RootNavigator"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\config.ts",
      "size": 1324,
      "created": "2024-12-17T13:47:15.929561",
      "modified": "2025-01-10T05:54:20.088964",
      "hash": "f3d099582453090720bfca555a2c59f572c184662a3c2abf47cfdffbb1037ea4",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\package.json",
      "size": 1635,
      "created": "2024-12-17T12:13:07.140637",
      "modified": "2025-01-10T05:54:20.105960",
      "hash": "c56c16f6d6ff4280fff6967a35ffb7444f4e7c1725044887434b1da1138e391d",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\achievement.py",
      "size": 8520,
      "created": "2024-12-18T04:38:56.127256",
      "modified": "2024-12-24T14:14:36.012193",
      "hash": "7718eaac66228cff3c4831816aaa796b16b43b5d166e165bacf49b5e4172927c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [168]"],
      "similar_files": [],
      "dependencies": ["datetime", "BaseModel"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\analytics.py",
      "size": 7328,
      "created": "2024-12-23T12:13:39.422929",
      "modified": "2025-01-05T07:54:00.319395",
      "hash": "102c790ca4afc2fa3d7d3b4b1b444525a20aada19c8afade23ab335e4f50f89d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [13, 40, 63, 116]"],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\associations.py",
      "size": 2946,
      "created": "2024-12-19T06:10:17.644963",
      "modified": "2024-12-23T03:58:36.565165",
      "hash": "c1dbdcab80ec3aa7f000ffaa2dc60a0052954d8ca298aeab24a17ab47dc85ed4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\base.py",
      "size": 2116,
      "created": "2024-12-20T17:04:17.222681",
      "modified": "2025-01-05T07:44:40.339252",
      "hash": "2aa32601e519f1d8c7c3a018a7fc5873d53f66c7d0cc37f25e93b7c6d20f59f3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\cached_queries.py",
      "size": 2288,
      "created": "2024-12-18T03:32:46.996229",
      "modified": "2024-12-18T03:33:00.092899",
      "hash": "37db325f3267b44f1de8c307e9b27c2fd1f22b456a337a3b90b8282573b8f1ba",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [9, 19, 37]"],
      "similar_files": [],
      "dependencies": [
        "functools",
        "db",
        ".user",
        "Game",
        ".match",
        "Tournament",
        "..core.cache"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\chat.py",
      "size": 2444,
      "created": "2024-12-18T04:17:43.083877",
      "modified": "2024-12-22T12:09:26.394124",
      "hash": "86068fe9e00fdcca5ce94c5bed7e431a2f45227182cd0c9ac3c6a957e36a2833",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\device.py",
      "size": 3149,
      "created": "2024-12-23T10:46:18.048410",
      "modified": "2025-01-05T07:55:13.536733",
      "hash": "1def39e3417b018df6375aa2851295159687b0304ed3948ddac180324a401ce6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", ".base"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\event.py",
      "size": 3123,
      "created": "2024-12-19T18:37:40.599892",
      "modified": "2024-12-24T03:24:21.879949",
      "hash": "e47b6efffe86f78dc3fda4348a16f8a453cbac1b4a82c625492b5f4984816aed",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [69]"],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\event_participant.py",
      "size": 2620,
      "created": "2024-12-23T11:27:12.306328",
      "modified": "2024-12-24T03:24:49.874841",
      "hash": "d9c8a84a1caf655ca98b1d18c5006f3bf40a77d1609d416d82d36658cdc2f587",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [18]"],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\forum.py",
      "size": 7347,
      "created": "2024-12-23T12:10:54.042635",
      "modified": "2024-12-23T12:12:57.194613",
      "hash": "dfa32de445b636f4a1f92a91d536f48c7629c3f20b515093b65d0165f5c7f827",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..models.user"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\friendship.py",
      "size": 2711,
      "created": "2024-12-18T04:14:52.696781",
      "modified": "2024-12-22T12:11:49.281189",
      "hash": "80116c63da7dcdf782d16afd2f83ed5faec114c21404116ea00432b6972abbd4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [22, 27]"],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\game.py",
      "size": 3040,
      "created": "2024-12-18T01:18:59.201628",
      "modified": "2025-01-05T07:10:32.070548",
      "hash": "20c43621d67af48c04f072c9d2d5e97a186ee833e305e19bcc1d814498d79d28",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\game_analytics.py",
      "size": 3032,
      "created": "2024-12-23T12:54:49.495822",
      "modified": "2025-01-10T03:34:22.022054",
      "hash": "3fc2fafad144c624a9fb47fd369aed5016bb6222a7334eb9b1b7934ca1f3db45",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "JSONB", "sqlalchemy.sql", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\inventory.py",
      "size": 2874,
      "created": "2024-12-24T03:17:27.947468",
      "modified": "2025-01-05T07:54:37.135473",
      "hash": "9edbfa3a777db8cabb6acdcd1f5336187659570a563a7c1402ac06396ba7b175",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", ".base"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\leaderboard.py",
      "size": 2163,
      "created": "2024-12-18T05:08:16.714295",
      "modified": "2024-12-22T12:07:24.863069",
      "hash": "9f5e82a951d769e0a1af2e2b21f56b20c8052df31b8f8c1ef11038fe24d89afb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [17]"],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\location.py",
      "size": 3048,
      "created": "2024-12-18T01:19:35.838703",
      "modified": "2024-12-22T12:07:24.862069",
      "hash": "a2b8057dc79fb442bb693bdcd9b6b9c2d47d3d7012c5b1ed3bdb621a66709ac4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins", "dictionary."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\marketplace.py",
      "size": 6660,
      "created": "2024-12-23T10:13:19.259988",
      "modified": "2025-01-05T07:50:40.511879",
      "hash": "ce5e3e13aab370e4db4ccaa221402a14cb7cc26ac64d9e8fd2db61ec5765bf52",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "JSONB",
        "dojopool.core.extensions",
        "reference_col",
        ".base"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\match.py",
      "size": 6420,
      "created": "2024-12-18T01:19:18.932345",
      "modified": "2025-01-05T07:43:16.440365",
      "hash": "3f83a4fd2412d6f3396eae8b478842311e82df55530f199770b01b16df541cb3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "JSONB", ".base"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\notification.py",
      "size": 2304,
      "created": "2024-12-18T03:44:30.267484",
      "modified": "2025-01-05T07:46:03.125229",
      "hash": "237baf8decca2c695545fa93146d2188d9fcc630b848426a14c4ee8e97ce16c9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", ".base"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\notification_settings.py",
      "size": 2609,
      "created": "2024-12-23T04:17:04.273131",
      "modified": "2025-01-05T07:47:22.689076",
      "hash": "bd2961606e4698a11b1d4279861c6341a3581a10bf6348ea143e384108ea8547",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [50, 51]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "dojopool.core.database",
        "TimestampedModel"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\player.py",
      "size": 3864,
      "created": "2024-12-23T03:40:48.656595",
      "modified": "2025-01-05T07:45:27.462547",
      "hash": "7670e7e7f4790a8190ca924f9a274d66db6b851ba73bb3d95007c0b4757e1801",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "JSONB",
        "werkzeug.security",
        "TimestampedModel",
        "being"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\player_status.py",
      "size": 3374,
      "created": "2024-12-23T03:41:36.531071",
      "modified": "2025-01-10T03:33:01.373353",
      "hash": "46c5d981af4fcc59c2ffb928b6a9ce435270bdc0b0bd6bde409989abbf1ed34b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "dojopool.core.database",
        "TimestampedModel"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\rating.py",
      "size": 1074,
      "created": "2024-12-18T04:59:03.073903",
      "modified": "2024-12-22T12:07:24.863069",
      "hash": "ea856fb8fbc0a07d2821cbb03be1d0338944a1d518d0de5cc187ac50995df85e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\review.py",
      "size": 3474,
      "created": "2024-12-18T05:32:23.831872",
      "modified": "2024-12-22T12:08:51.332731",
      "hash": "58d80bb28533342118822c1c7a7cb4a985b3bbad334f48223b1504c92fa9b737",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\reward.py",
      "size": 1820,
      "created": "2024-12-19T03:49:23.971306",
      "modified": "2024-12-22T12:08:09.666201",
      "hash": "3a55bc59f79dcbda6383db0c380b461eacf39172953c72c89fb3aedbe70fb059",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..core.mixins"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\role.py",
      "size": 819,
      "created": "2024-12-19T04:17:24.459790",
      "modified": "2025-01-05T07:12:31.133361",
      "hash": "993b850e5363be39fb92da33c6016b109aa1c485c553eb6103cc847b775a15da",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\session.py",
      "size": 2008,
      "created": "2024-12-19T09:48:07.144340",
      "modified": "2025-01-06T03:46:37.628818",
      "hash": "70f8a0b3dd8c208d42111e0716c079e07eb8a659adaed76e5e9e50e0fff13832",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "dojopool.extensions"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\shot.py",
      "size": 6112,
      "created": "2024-12-19T18:37:56.072521",
      "modified": "2025-01-05T07:45:42.332084",
      "hash": "38e00ac1d76a3550c21c877fe85b0fe02eeb137aa325e976f4d890d2af4d1cd8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "JSONB", ".base"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\token.py",
      "size": 1932,
      "created": "2024-12-17T23:32:04.791293",
      "modified": "2025-01-05T07:12:53.863815",
      "hash": "9b2af2fd9b110cee0d1b483da1b16e87dafa9d96ea1297090094468a77f6504e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\tournament.py",
      "size": 7802,
      "created": "2024-12-18T03:21:56.841309",
      "modified": "2025-01-10T03:35:19.228371",
      "hash": "ebf1a423602bf748670ce563a8fbf18d26e6565bcdd868810b8aceb5616ec5ef",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [56, 159, 183]"],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\user.py",
      "size": 3431,
      "created": "2024-12-24T02:32:08.067260",
      "modified": "2025-01-14T15:39:14.291003",
      "hash": "95e1cc3c7c039dd8524a80d0415f514529c6ed3ff8006b49dc591cc627c3ef1c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [74, 75]"
      ],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "relationship",
        "werkzeug.security",
        "db",
        ".user_roles"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\user_roles.py",
      "size": 469,
      "created": "2024-12-24T02:47:33.601174",
      "modified": "2024-12-24T02:52:04.629817",
      "hash": "567341cbe8682aa92d6ba3dcb081e3b1c3db9af47ac3732e2655b89f52bf097d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\venue.py",
      "size": 7562,
      "created": "2024-12-18T03:21:16.890728",
      "modified": "2025-01-05T07:45:02.663587",
      "hash": "5fc30ca2a34ca94cf5d8aec5e998aa517121ea9842288b63a26de1748c6fac17",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "JSONB", ".base"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\models\\__init__.py",
      "size": 2780,
      "created": "2024-12-18T01:02:43.839293",
      "modified": "2025-01-10T03:32:21.474783",
      "hash": "d5d3165abc36f683c0696f2837ace9a38b822addc23d0ef8a2a63b46aa6caa0d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        ".base",
        "User",
        ".role",
        "Token",
        ".notification",
        "Game",
        ".tournament",
        ".match",
        "Leaderboard",
        ".venue",
        "Location",
        ".player",
        "Shot",
        ".event",
        "EventParticipant",
        ".notification_settings",
        "PlayerStatus",
        ".game_analytics",
        ".session",
        "MarketplaceItem",
        ".friendship",
        "ChatRoom",
        ".review",
        "UserReward",
        ".rating",
        "Achievement",
        ".analytics",
        ".inventory",
        "Device"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\narrative\\narrative_generator.py",
      "size": 426,
      "created": "2024-12-17T09:06:22.462359",
      "modified": "2024-12-17T09:06:22.462359",
      "hash": "6af5bfe1a47dc8ace14f05dfd050573c05279d319a6b9f5cf67b1ab646f1cb73",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ranking\\ranking_system.py",
      "size": 236,
      "created": "2024-12-17T09:06:22.467357",
      "modified": "2024-12-17T09:06:22.467357",
      "hash": "3b3c9ddef96891e30f986374a7a6d75000bcfb0d1011a0976a3f7bb966475d07",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["enum"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\dashboard.py",
      "size": 2032,
      "created": "2024-12-23T08:03:20.604705",
      "modified": "2024-12-23T08:03:38.902948",
      "hash": "96c32be71302253c09adf06a815bdd590415e0148891e13990694b0217a6a8ff",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "session_security_middleware",
        "dojopool.services.statistics"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\features.py",
      "size": 2121,
      "created": "2024-12-20T06:43:43.637044",
      "modified": "2024-12-20T06:50:56.763269",
      "hash": "e98e5c50d35875592fbc1255e1e24a7259588720303654ab4484ca176caa19ae",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "db",
        "src.models.venue",
        "AvatarService",
        "src.services.map"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\game.py",
      "size": 1853,
      "created": "2025-01-12T15:55:11.343724",
      "modified": "2025-01-13T01:50:30.557779",
      "hash": "29b6d9246be34b40dbd70282bdf5e89ded6d256b5ef49ecd5f4bb8849fc481f8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "ImageProcessor"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\main.py",
      "size": 914,
      "created": "2024-12-18T01:16:45.298056",
      "modified": "2025-01-06T07:28:42.928167",
      "hash": "16ddcc0811b86be8c250d567fb8b36c1800ddf69fc6ff7068fae0466ec08edca",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "login_required", "dojopool.models.user"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\maps.py",
      "size": 486,
      "created": "2025-01-14T16:22:47.368934",
      "modified": "2025-01-14T16:23:19.776188",
      "hash": "5ec5f3b8c0fa170a98aee49617a74e1256bd0ac5cebd9d1b37b6c7d8c36df6f0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "get_maps_config"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\notification_routes.py",
      "size": 3255,
      "created": "2024-12-23T04:07:25.057164",
      "modified": "2024-12-23T04:15:39.284160",
      "hash": "3b0efed66614b9b3dfbe27b5f20856d1b8b7a19a03d5aea073b09dfde7f3a0fb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "NotificationService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\notification_settings_routes.py",
      "size": 1423,
      "created": "2024-12-23T04:18:52.909024",
      "modified": "2024-12-23T04:22:52.976422",
      "hash": "e208981ea74bcd28b5179bd6d25f458b77468971c8b94a0f1b3b831da75bf14d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "NotificationService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\performance.py",
      "size": 2764,
      "created": "2025-01-14T05:45:57.990926",
      "modified": "2025-01-14T05:46:02.282331",
      "hash": "cfd2ee5ab97d7f2b1683b6549b0b5157007a135e8d5d52b5d5fa4ccde81cfda7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\tournament.py",
      "size": 7820,
      "created": "2024-12-23T08:16:10.445326",
      "modified": "2024-12-23T09:24:48.410886",
      "hash": "1764d6b0fda04d01bfbbe1e7a59cc4469e5e87872378153c0c6b6ce7af0d05f4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "login_required",
        "dojopool.services.tournament_service",
        "PrizeService",
        "dojopool.schemas.tournament"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\tournament_routes.py",
      "size": 5445,
      "created": "2024-12-23T04:00:50.572374",
      "modified": "2024-12-23T04:02:24.725790",
      "hash": "144a16718df473ce548235477e2f62969ff50d429a2b8d1fbe5d17055c974451",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "TournamentService",
        "src.utils.validators",
        "Tournament"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\venue.py",
      "size": 8264,
      "created": "2024-12-23T08:08:10.604785",
      "modified": "2024-12-23T09:27:59.978746",
      "hash": "8d073c751c07e36b324e5a3c435e5105ebba2bd7a1addf198660ddfed757cbf2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "login_required",
        "dojopool.services.venue_service",
        "CheckInService",
        "dojopool.schemas.venue",
        "a"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\venue_routes.py",
      "size": 9933,
      "created": "2024-12-23T04:37:42.992027",
      "modified": "2024-12-23T04:46:14.706525",
      "hash": "8ce20bfea1f11b5d79a83b36436415f6343f756ccdb48f7aa0eeb6e271879de4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": [
        "flask",
        "flask_login",
        "secure_filename",
        "Venue",
        "src.forms.venue_forms",
        "validate_coordinates",
        "src.core.database"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\__init__.py",
      "size": 764,
      "created": "2024-12-18T12:04:02.387156",
      "modified": "2025-01-03T15:56:25.753782",
      "hash": "bad19acb02f2d238291c62cd8ff8810bc03b777a15c4f80d46f88c24e01e5f13",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "auth_bp",
        ".api",
        "main_bp",
        ".game",
        "ranking_bp",
        ".spectator",
        "narrative_bp"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\schemas\\tournament.py",
      "size": 3797,
      "created": "2024-12-23T08:16:33.562574",
      "modified": "2024-12-23T09:08:16.937412",
      "hash": "29446fa5d1b9a02d25ba859b637619e6e186c12bc0def542e74204e835f9513e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["marshmallow"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\schemas\\venue.py",
      "size": 4514,
      "created": "2024-12-23T08:08:33.825269",
      "modified": "2024-12-23T08:09:30.404017",
      "hash": "1b980e0c214a431339a47ea64e6f5ec59ef9c75408d074778b8a6a5bcac3714a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["marshmallow"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\add_avif_support.py",
      "size": 5685,
      "created": "2025-01-14T05:19:47.396118",
      "modified": "2025-01-14T05:38:48.905538",
      "hash": "d38b180cf38648522ef68d2937063ef46d7054405bc36008d8187bbeab013e40",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pathlib", "https", "bs4"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\add_lazy_loading.py",
      "size": 3601,
      "created": "2025-01-10T16:09:25.904691",
      "modified": "2025-01-14T05:15:40.293047",
      "hash": "ab21167026b6c1bf82a1bd4d23379935130b799b01b901028ba5ad98f02fe49d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pathlib"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\convert_icons.py",
      "size": 2067,
      "created": "2024-12-22T15:41:30.130466",
      "modified": "2024-12-22T15:42:32.970995",
      "hash": "290b0b157f0291d402935acf1d82d011fe1fb887c5ef9a56dc8bfd1bc94d8251",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [9]"],
      "similar_files": [],
      "dependencies": ["os", "cairosvg"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\convert_to_avif.js",
      "size": 909,
      "created": "2025-01-14T05:38:06.876234",
      "modified": "2025-01-14T05:38:19.830726",
      "hash": "9382e1e484052975f1269092e2786b102d82377cb108a191a33afec3536f0acb",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["sharp", "path", "fs"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\enhance_images.py",
      "size": 9011,
      "created": "2025-01-10T16:12:32.264971",
      "modified": "2025-01-12T15:18:07.495730",
      "hash": "18ad9e1956bc3c6769622d98a9dca36d4b05c52b4b17a5848cb1bd9259f09053",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement art direction based on specified crop/focus",
        "Long lines found on lines: [178, 182]"
      ],
      "similar_files": [],
      "dependencies": ["os", "ThreadPoolExecutor", "tqdm", "re", "argparse"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\generate_background.py",
      "size": 2216,
      "created": "2025-01-11T00:57:56.469455",
      "modified": "2025-01-11T01:19:45.638487",
      "hash": "b7a769a96b271beab773c69b86ead0a3c6e94fa1a49ec20cb462cf499f4c8837",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["PIL"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\generate_context_summary.py",
      "size": 4660,
      "created": "2025-01-11T00:35:57.211900",
      "modified": "2025-01-11T00:39:11.826167",
      "hash": "7dea1aeab03e874a8a49f5c41cdd6d6d4866650eb4167dc04b901a34f1b25ebe",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "pathlib", "various"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\monitor_performance.py",
      "size": 5900,
      "created": "2025-01-10T16:16:20.594480",
      "modified": "2025-01-14T05:47:29.336130",
      "hash": "d4bb4ae99a57f4de5d48df433972be51208833a54ce3f805b579df1e1f0bedb2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["sqlite3", "MIMEText", "email.mime.multipart"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\monitor_pinned_files.py",
      "size": 7381,
      "created": "2025-01-10T16:59:21.377534",
      "modified": "2025-01-10T17:00:17.377445",
      "hash": "1808b47dff7c94154b797e06345221134424da5c98a0703b5f6476593551f61a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\optimize_images.py",
      "size": 4748,
      "created": "2025-01-10T15:37:28.303375",
      "modified": "2025-01-12T15:10:37.239672",
      "hash": "2eceb0e8ea640e92c1f9e41db151bb7203f2c1b42eb8f056447cc8d6c379bb0a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "piexif", "piexif", "image", "argparse"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\organize_images.py",
      "size": 3825,
      "created": "2025-01-10T14:59:35.817309",
      "modified": "2025-01-10T15:02:44.548401",
      "hash": "e03670313cb14fe09c60a0b8a087614d35daa439412140789371c7512c2d7040",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [18]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\package-lock.json",
      "size": 17009,
      "created": "2025-01-14T05:38:50.515665",
      "modified": "2025-01-14T05:38:50.516665",
      "hash": "05a78314edff23a55e9a7af360892320c39dfedc8c72a0f176026e84a38680c4",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [18, 27, 28, 50, 71, 72, 87, 88, 103, 104, 119, 120, 135, 136, 151, 152, 167, 168, 183, 184, 200, 221, 222, 243, 244, 266, 287, 288, 309, 310, 332, 351, 370, 389, 402, 414, 420, 430, 439, 445, 457, 496, 505]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\package.json",
      "size": 279,
      "created": "2025-01-14T05:38:48.143700",
      "modified": "2025-01-14T05:38:50.490662",
      "hash": "d11d53d27a9b74a76fbea4cba497e2d2d346689c8d2fc6a2640b637faaf474ee",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\process_images.py",
      "size": 3641,
      "created": "2025-01-12T15:34:48.641181",
      "modified": "2025-01-13T03:51:11.606280",
      "hash": "92929a3f76114fb082bc7012e4a7d42b46c09eb42e288f81eb05ff9d9b8d8e25",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [55, 56]"],
      "similar_files": [],
      "dependencies": ["argparse", "ImageProcessor"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\run_performance_scripts.bat",
      "size": 217,
      "created": "2025-01-14T05:47:36.139652",
      "modified": "2025-01-14T05:47:43.140315",
      "hash": "ba3cfbff3e1eee7915915ffe011fcf53bbc6af761d8bf6c9106c266cbf3c8e38",
      "extension": ".bat",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\run_performance_tracking.bat",
      "size": 85,
      "created": "2025-01-14T05:45:12.927314",
      "modified": "2025-01-14T05:45:19.688471",
      "hash": "80e74d0f7b0c066a2b5eafba54b36a71f2cf0be6355b8e86f988b35ad745634e",
      "extension": ".bat",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\seed_db.py",
      "size": 5973,
      "created": "2024-12-17T15:20:10.462432",
      "modified": "2024-12-17T15:20:17.926232",
      "hash": "acb4b437ff44fdadf31dba370666a98bcc7cb76b2c580eac1a1e7a13cc8fef03",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "app", "User"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\setup_core_images.py",
      "size": 1415,
      "created": "2025-01-10T15:00:48.567515",
      "modified": "2025-01-10T15:01:22.155769",
      "hash": "0cec85802e9d4a5b66c37ac59d111a973608d305bce70d0c80e3ea5ffb49da63",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [19]"],
      "similar_files": [],
      "dependencies": ["os", "traceback"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\track_performance.py",
      "size": 6771,
      "created": "2025-01-14T05:44:02.708161",
      "modified": "2025-01-14T05:45:03.793904",
      "hash": "09b2d88b3eae557473f03f82ecccd61c305b01cd295b9e01aa9174c62e10e4fa",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["json"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\update_context.py",
      "size": 8144,
      "created": "2025-01-10T17:16:56.276638",
      "modified": "2025-01-14T04:23:50.341747",
      "hash": "f3b173c36710583e604947993fe5d5a52be4b103b6388b709468d5e418e1dd3c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [133, 143]"],
      "similar_files": [],
      "dependencies": ["os", "pathlib", "YAML"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\update_metrics.py",
      "size": 5478,
      "created": "2025-01-14T05:16:12.638146",
      "modified": "2025-01-14T05:21:50.732008",
      "hash": "003cb853bae3e84405558dbe4bb30c406897e6a75d9368b874e24428e1057496",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [10]"],
      "similar_files": [],
      "dependencies": ["json", "pathlib", "src"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\update_templates_avif.py",
      "size": 3101,
      "created": "2025-01-14T05:27:05.366743",
      "modified": "2025-01-14T05:27:55.294087",
      "hash": "865b631dee9b1f674d842217b104809491c79ad044f350e41ddda3d287683e65",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pathlib"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\scripts\\validate_context.py",
      "size": 6615,
      "created": "2025-01-11T00:36:29.904638",
      "modified": "2025-01-11T00:39:11.826167",
      "hash": "9acc311c50a8447f250b50ee3c3e03162f60a90a2f5f91496fb77a2f6bffe9b8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [150]"],
      "similar_files": [],
      "dependencies": ["os", "pathlib", "markdown", "the"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\achievement_service.py",
      "size": 9534,
      "created": "2024-12-18T04:39:33.812572",
      "modified": "2024-12-24T14:03:34.871523",
      "hash": "fb9d676b9aeef030ea18c86a867ca9a51c2972081157be02bfe92394223850b3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [86, 191]"],
      "similar_files": [],
      "dependencies": ["datetime", "Achievement", "src.core"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\ai_service.py",
      "size": 40918,
      "created": "2024-12-23T12:35:31.318301",
      "modified": "2024-12-23T12:47:30.483438",
      "hash": "8b84cb93e1ec4ee3cd8d0993f1da3e2dfb3e62ca8322542635eac7c9f0f66370",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [502, 503, 659, 660, 687, 878]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "StandardScaler",
        "sklearn.ensemble",
        "User",
        "..models.game",
        "Match",
        "..models.analytics",
        "db",
        "..utils.ml_utils",
        "prediction.",
        "difficult",
        "missed"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\analytics_service.py",
      "size": 13758,
      "created": "2024-12-23T11:06:15.412285",
      "modified": "2024-12-24T11:57:22.920198",
      "hash": "78e4bd15e7e6e21bbcdc51040b059f623493c69545cde05814cae042da4c9f05",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [334, 370]"],
      "similar_files": [],
      "dependencies": ["datetime", "extensions"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\auth_security_service.py",
      "size": 8677,
      "created": "2024-12-23T11:13:14.504249",
      "modified": "2024-12-23T11:19:53.162695",
      "hash": "497c4910fb443401308c94e5952c1fb5447a6352d033b3bc8ecca7ca341fb0cb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "User", "..models.session"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\auto_scaling.py",
      "size": 8506,
      "created": "2024-12-23T13:46:41.080817",
      "modified": "2024-12-23T13:54:20.620524",
      "hash": "966b64ef270c9ed1789dd79905a7885b83fb05acbfce2cf1d7192fac7e1ca1a5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\avatar_service.py",
      "size": 3855,
      "created": "2024-12-23T09:43:36.756438",
      "modified": "2024-12-24T02:39:07.443645",
      "hash": "8efb5ae124836f7788571f3d992122c719ad75a4e1fe0839167894dfc14c6de8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [14]"],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\checkin_service.py",
      "size": 9280,
      "created": "2024-12-23T09:27:19.438159",
      "modified": "2024-12-23T09:27:59.961747",
      "hash": "35e7e01815bbb620c6d9455c07dd3781c89090a402ebf31a460fe87257047306",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "db",
        "dojopool.models.venue",
        "Notification",
        "dojopool.models.user",
        "previous",
        "a"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\event_management_service.py",
      "size": 9049,
      "created": "2024-12-23T11:27:48.514223",
      "modified": "2024-12-24T03:26:57.679809",
      "hash": "126a0bbe54f43f2b4e5f9340dc687f6a1a95b66069da8cc5d19c8a74f351138b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [18, 40]"],
      "similar_files": [],
      "dependencies": ["datetime", "Event", "..models.event_participant", "db"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\event_service.py",
      "size": 11152,
      "created": "2024-12-23T09:36:49.352065",
      "modified": "2024-12-23T09:38:16.846743",
      "hash": "48117a5f5827d2d9468acb7e6a2f3015717d2b7ad08edfc23ea24ca1fc677261",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [248]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "db",
        "dojopool.models.venue",
        "User",
        "dojopool.models.notification"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\forum_service.py",
      "size": 9270,
      "created": "2024-12-23T12:11:31.739961",
      "modified": "2024-12-23T12:12:57.194613",
      "hash": "efa2123b3c77a054b7dcd31840bd58db2046e6d95da83e3ba82a7d684b4160b5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "..extensions", "paginate"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\game_analytics_service.py",
      "size": 8684,
      "created": "2024-12-23T12:55:23.733700",
      "modified": "2024-12-23T13:01:36.379342",
      "hash": "d4d29b3e4bfafecc521a11ab20c916fda5257e95870721bbc2faa284979d5101",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement database query to fetch matches",
        "TODO found: Implement database query to fetch historical data"
      ],
      "similar_files": [],
      "dependencies": [
        "typing",
        "StandardScaler",
        "sklearn.cluster",
        "IsolationForest",
        "models.game_analytics",
        "a",
        "match",
        "match",
        "match",
        "match",
        "match"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\game_service.py",
      "size": 8824,
      "created": "2024-12-23T03:39:05.613384",
      "modified": "2024-12-23T03:41:11.277437",
      "hash": "087769cccbe43728112dc98e06eb1cee7f2c65ef37cb2d404fb0ebc300a148ef",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "GameState",
        "src.utils.adaptive_difficulty",
        "MatchmakingSystem",
        "src.extensions",
        "src.models.game",
        "src.models.game",
        "src.models.game",
        "src.models.game",
        "src.models.game",
        "src.models.game",
        "cache",
        "cache",
        "database",
        "src.models.game"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\image_compression.py",
      "size": 7520,
      "created": "2025-01-14T03:55:16.661187",
      "modified": "2025-01-14T03:57:22.833751",
      "hash": "16d1c11da9a8d3e7c201d2072d89c4d1b7bf4ba23d4ef5e6902fb153dc451ebb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [16, 106, 114, 125, 138]"],
      "similar_files": [],
      "dependencies": [
        "PIL",
        "ThreadPoolExecutor",
        "..config.compression_config"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\leaderboard_service.py",
      "size": 7143,
      "created": "2024-12-18T05:08:51.474399",
      "modified": "2024-12-23T09:33:09.902347",
      "hash": "97740ab38ff8dd3099a8498a71b0ee4eea1742be488703c07c1e5062fc5aa4d6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [201]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "dojopool.models.venue",
        "User",
        "dojopool.models.notification"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\match_stats_service.py",
      "size": 5847,
      "created": "2024-12-23T09:19:01.631541",
      "modified": "2024-12-23T09:20:38.464516",
      "hash": "2dde42be496cf044c98951936c1d602d37c5c41466ba4c5192ae85bcaa931b42",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "TournamentMatch", "dojopool.core.database"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\ml.service.ts",
      "size": 3543,
      "created": "2024-12-23T13:05:45.349029",
      "modified": "2025-01-13T08:01:06.646685",
      "hash": "4775487b7cfaae23c5c5a45003dc5aea99a9b65b4ebc977b0fb7a9456af99da0",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\ml_service.py",
      "size": 6984,
      "created": "2024-12-23T13:02:37.958288",
      "modified": "2024-12-23T13:36:01.028433",
      "hash": "4798bb859f7dba1c7c47ab73f1c9af9c2c775d43b2044444f519b01a52812d8f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [91]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "GameAnalyticsML",
        "models.game_analytics",
        "Session",
        "match",
        "match"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\mobile_auth_service.py",
      "size": 5579,
      "created": "2024-12-23T10:45:47.158279",
      "modified": "2024-12-24T14:32:13.436054",
      "hash": "ff03b9bb32bfa59ad5df06e78968c040d952e067432a215c39b28b0c1647c2c0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "User",
        "src.models.device",
        "validate_request_data"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\narrative_generation_service.py",
      "size": 14229,
      "created": "2024-12-23T10:40:42.537547",
      "modified": "2024-12-23T10:42:44.452079",
      "hash": "3f4735582a05be2bf342ee93f669526d25876eed99517b03bf0d46bfc9fd8e36",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [16]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "Shot",
        "..models.match",
        "Player",
        "..services.shot_analysis_service",
        "PerformanceTrackingService",
        "the"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\notification_service.py",
      "size": 3426,
      "created": "2024-12-19T18:06:17.588281",
      "modified": "2025-01-05T08:20:21.050858",
      "hash": "acaea1325d50c146dee85c75daec36e8163cabb2b4e025db0ec05eea0ccf271f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_socketio", "Notification", "dojopool.extensions"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\offline_sync_service.py",
      "size": 7343,
      "created": "2024-12-23T10:55:10.934562",
      "modified": "2024-12-24T04:08:51.577370",
      "hash": "46d6db41376d65cecda2ef1a6687fd0b1623052a8ecee30c7411e1b1d4aa534d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "Match",
        "models.shot",
        "Venue",
        "models.user",
        "validate_offline_sync_data",
        "services.shot_analysis_service",
        "PerformanceTrackingService"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\performance_monitor.py",
      "size": 9975,
      "created": "2024-12-23T13:26:47.394288",
      "modified": "2024-12-23T13:28:16.256277",
      "hash": "8b709b2547972f0e4f1fdcbcf75eae5117354422dbb23aa3bff590ac6f9d4b22",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [153]"],
      "similar_files": [],
      "dependencies": ["time", "Session"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\performance_tracking_service.py",
      "size": 15672,
      "created": "2024-12-23T10:32:08.872273",
      "modified": "2024-12-24T11:49:37.258045",
      "hash": "d17d33c828e81fb751642afbb71ac33d03de161fd3fdd2f9b2b2c9bfa6608eef",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "Shot",
        "models.player",
        "ShotAnalysisService",
        "utils.analysis",
        "performance"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\predictive_analytics_service.py",
      "size": 12842,
      "created": "2024-12-23T13:11:17.154097",
      "modified": "2024-12-23T13:12:20.958713",
      "hash": "0147c203274f1dd65d182cf749f0efa46049e98b2ce702066a7f0b72981c720a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "numpy",
        "pandas",
        "typing",
        "RandomForestRegressor",
        "sklearn.preprocessing",
        "train_test_split"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\prize_service.py",
      "size": 9427,
      "created": "2024-12-23T09:23:14.899885",
      "modified": "2024-12-23T09:24:30.305581",
      "hash": "1159046bc3ec69da15c112090ed268d04b0204a814ace051b29741b30d50d373",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "Tournament",
        "dojopool.core.database",
        "Notification"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\push_notification_service.py",
      "size": 14721,
      "created": "2024-12-23T10:58:57.823275",
      "modified": "2024-12-25T03:24:11.591054",
      "hash": "6860c72d819d624120cbb76f096bc332cf0eb99a00d9141f63422c246b64618b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [48, 53]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "Device",
        "models.user",
        "models.notification",
        "a"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\rating_service.py",
      "size": 3370,
      "created": "2024-12-18T04:59:35.835453",
      "modified": "2024-12-18T04:59:55.292881",
      "hash": "ac5d56a3dfb3f80525e09fba06c9ab335c315e34732137e7023d49222acffa02",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "func", "..models", "ValidationError"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\review_service.py",
      "size": 5612,
      "created": "2024-12-18T05:33:24.305046",
      "modified": "2024-12-18T05:33:49.880608",
      "hash": "99c245d7012acab6b6ae007c4de6118f2af3d92ae91a2f91298752ba4ce9f542",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [71, 155]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "db",
        "src.models.review",
        "Rating",
        "src.exceptions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\shot_analysis_service.py",
      "size": 11124,
      "created": "2024-12-23T10:22:01.258764",
      "modified": "2024-12-24T11:45:23.905808",
      "hash": "28da6d15628ce40925ec8bc30f37e2e2424e2d0e2469781b8de0c04ba72a5739",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "Shot",
        "models.player",
        "validate_shot_data",
        "utils.analysis",
        "power",
        "success"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\social_service.py",
      "size": 2839,
      "created": "2024-12-18T04:46:10.445343",
      "modified": "2024-12-18T04:46:33.457397",
      "hash": "45d437da7fca9f7d95e9e7d87bb8f066e1c24176c2e283b1301f080aeeaf81c4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [35]"],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\statistics.py",
      "size": 6278,
      "created": "2024-12-23T08:03:03.935135",
      "modified": "2024-12-23T08:03:20.250850",
      "hash": "6423a4428b24a3f3980dd85073a65abe64301a3ca7d976570972fe7c1c69a2f7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "User",
        "dojopool.models.game",
        "Achievement",
        "dojopool.models.tournament",
        "Rating",
        "dojopool.core.database"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\system_optimization.py",
      "size": 10381,
      "created": "2024-12-23T13:45:57.752784",
      "modified": "2024-12-23T13:54:20.620524",
      "hash": "248ef687690b5f93de8c7ad35aaf36dea84628ccc2b6372af0781c5db0d840fd",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\tournament_service.py",
      "size": 7384,
      "created": "2024-12-23T03:58:11.327730",
      "modified": "2024-12-23T09:20:38.465514",
      "hash": "ae3c0f5fc5930f1f11d39800a0071ebd484ba476e1f23bb46804abaecb3a0bbf",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [78]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "dojopool.core.database",
        "MatchStatsService"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\venue_management.py",
      "size": 6337,
      "created": "2024-12-23T04:26:29.620593",
      "modified": "2024-12-23T04:38:57.366244",
      "hash": "8dc61ba363d428a9844fc6caa9481def2e050ec2f2642becd518e45ce2996c1b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [72, 79, 102]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "Venue",
        "src.models.game",
        "Player",
        "src.core.database",
        "last"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\venue_management_service.py",
      "size": 7632,
      "created": "2024-12-23T11:24:21.503801",
      "modified": "2024-12-24T03:24:49.874841",
      "hash": "f3dab94f5cde13d1f69b27a8aa9a1104bca0d543dc0f37a1d9923f5adccdd8e3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "Venue",
        "..models.event",
        "validate_coordinates",
        "..extensions"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\venue_service.py",
      "size": 8721,
      "created": "2024-12-18T05:13:43.002619",
      "modified": "2024-12-23T08:07:46.465705",
      "hash": "0c321382861e3e2def47549e40224e8fa8d45491f8c91f3c230849c3dd4dc6e5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "dojopool.core.database", "their"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\websocket_service.py",
      "size": 3930,
      "created": "2024-12-24T17:48:31.035433",
      "modified": "2024-12-25T03:39:51.827708",
      "hash": "6c6bd5d9d39603d9d0a5e57984dcd6788e4a0b0edfa438bf05cf6e9028699bef",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "WEBSOCKET_CONFIG"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\__init__.py",
      "size": 658,
      "created": "2025-01-03T21:43:59.901256",
      "modified": "2025-01-03T21:48:06.648489",
      "hash": "59db577c0e73577f9e86d8d943aa23cff3874453ae2efecda3de06d0905dc057",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        ".notification_service",
        "GameService",
        ".tournament_service",
        "VenueService",
        ".auth_security_service",
        "AnalyticsService",
        ".leaderboard_service",
        "AchievementService"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\spectator\\spectator_system.py",
      "size": 211,
      "created": "2024-12-17T09:06:22.478637",
      "modified": "2024-12-17T09:06:22.478637",
      "hash": "b899aad322cbbc77544839b06291b6219a05bde9f09abe259e703b7bcd5ba1dc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\browserconfig.xml",
      "size": 403,
      "created": "2024-12-22T15:37:32.203034",
      "modified": "2024-12-22T15:37:32.203034",
      "hash": "bc513e5e900d361e87167da8b69bf89adb4800ad57b2a7360ad01c39b525ff54",
      "extension": ".xml",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\manifest.json",
      "size": 2577,
      "created": "2024-12-18T03:51:42.016562",
      "modified": "2025-01-10T05:54:21.578248",
      "hash": "d59cb8352e161ab18c571ba1e53e6b480d57d0d49cf864a3ea806dee4f05de87",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tasks\\tournament_tasks.py",
      "size": 4382,
      "created": "2024-12-23T04:03:53.417423",
      "modified": "2024-12-23T04:04:36.756881",
      "hash": "d896214d4781cfd779f4325cee0ac32037ad89a287b3f32e727dca8f2f6b135a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [81]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "src.models.tournament",
        "NotificationService",
        "src.services.tournament_service"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\about.html",
      "size": 2218,
      "created": "2024-12-20T06:52:19.020061",
      "modified": "2025-01-10T16:11:05.617319",
      "hash": "41a6eee1ddcd59815e2e891f53c711510c720bfd16aaccf69c1b80e984f22e4a",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [14, 15, 22, 30, 39, 40, 41]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\analytics_dashboard.html",
      "size": 11207,
      "created": "2025-01-10T04:35:07.149878",
      "modified": "2025-01-10T16:11:05.654023",
      "hash": "94b818ff6da8c182383a89b55e6227d609e3ce9a8499ef3f9b2145de1a83a738",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [8, 100, 130, 200]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\base.html",
      "size": 7139,
      "created": "2024-12-17T09:06:22.486629",
      "modified": "2025-01-12T09:00:49.828793",
      "hash": "e07eb6b0455d3ce86d5c749af16d297b9b4fdffe5fa8ced237ba51e00dc2b061",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [11, 13, 15, 95, 185, 213]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\contact.html",
      "size": 1868,
      "created": "2024-12-20T06:52:35.315960",
      "modified": "2025-01-10T16:11:05.662023",
      "hash": "1b7e5d79c3ac59cf7e2b6fc901a21ed7667b5960180e46cfce0ed1e4a2654b92",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\dashboard.html",
      "size": 5245,
      "created": "2024-12-18T01:16:32.265975",
      "modified": "2025-01-11T06:56:12.243839",
      "hash": "08b57cd9efa125fd0cee9c5853d5f3411b7f5263dbd2827f8f6422319130c8b9",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [161, 166]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\error.html",
      "size": 355,
      "created": "2024-12-17T09:06:22.487629",
      "modified": "2025-01-10T16:11:05.698024",
      "hash": "9c4d1a525e6d890b04a4cdc9962bfb33ac3411d03c30716e7c5345369fdf6c70",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\game.html",
      "size": 8153,
      "created": "2024-12-17T09:06:22.487629",
      "modified": "2025-01-14T05:28:02.435863",
      "hash": "71a363273da15ea6d29e00e4e54c072385e42de35f763db44ee2babdebc443a8",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [14, 15, 16, 17, 21, 22, 23, 24, 25, 28, 29, 30, 31, 33, 36, 49, 56, 57, 66, 67, 76, 77, 78, 87, 88]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\index.html",
      "size": 3347,
      "created": "2024-12-17T09:06:22.487629",
      "modified": "2025-01-10T16:11:05.718024",
      "hash": "95762022ff56cd6b0bc8c7d40683aabc81bb37083b89aa29f71656bcac432844",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [15, 27]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\landing.html",
      "size": 3892,
      "created": "2024-12-20T08:34:01.939406",
      "modified": "2025-01-12T09:14:59.317106",
      "hash": "311522e46a0d6def0e332583147187b8b253829f88e1620dab162b67e83d72bf",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [15, 19, 33, 40, 41, 47, 48, 54, 61, 70, 74, 83]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\layout.html",
      "size": 4564,
      "created": "2024-12-18T01:48:34.692684",
      "modified": "2025-01-10T16:11:05.733023",
      "hash": "96e288f43e8d26d84e14409e1189513c9c9fba5d4cce9e077cfaffe4895b6590",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [9]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\login.html",
      "size": 2709,
      "created": "2024-12-17T09:06:22.488630",
      "modified": "2025-01-10T16:11:05.739025",
      "hash": "4ee0b7e152f0416fbf6f627bcb8cdb4fb5caaf17077eac0b410f00324a34e938",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [15, 23, 30]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\map.html",
      "size": 3850,
      "created": "2025-01-12T07:29:35.627191",
      "modified": "2025-01-14T16:23:19.796196",
      "hash": "07e0d64fed43638dc1386d61c29b74c0b932bb1900be45cc2c9f810bbc333b93",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [97, 137]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\marketplace.html",
      "size": 8425,
      "created": "2025-01-10T04:43:03.734844",
      "modified": "2025-01-14T05:15:48.546204",
      "hash": "03370042bd6b991defdcae2046d4fa4a0802b11267a25263f51050bcacab06f0",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [238, 264, 290]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\notifications.html",
      "size": 3070,
      "created": "2024-12-23T04:10:07.673016",
      "modified": "2025-01-10T16:11:05.788025",
      "hash": "139ea82a3caf11bf9f659efc1487ae2f896c56126879c6c996415915a13b2ef0",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\notification_settings.html",
      "size": 6386,
      "created": "2024-12-23T04:19:29.923485",
      "modified": "2025-01-10T16:11:05.818771",
      "hash": "47b8bebb13677c1debcc8d0ecbaa0294639d1b49838093685ce861b246da6d35",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [153]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\offline.html",
      "size": 4710,
      "created": "2024-12-18T03:52:54.820252",
      "modified": "2025-01-14T05:28:02.467860",
      "hash": "372c65abe0c772ba165d45e35e1030cf84f1c2986f492213abfd71c935aed201",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [12, 112, 114]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\performance_dashboard.html",
      "size": 3396,
      "created": "2025-01-14T05:45:38.759537",
      "modified": "2025-01-14T05:46:02.308334",
      "hash": "7048732bcb308f61c5ee6cd8399cafb213fcf2f93da3ccb0e4600bed226d6032",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\profile.html",
      "size": 3445,
      "created": "2024-12-17T09:06:22.488630",
      "modified": "2025-01-10T16:11:05.866482",
      "hash": "cf70c29a787fab1171d87ab5eb04095dca1e8793dff0f8ba8d5658d83a0bb54d",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [11, 23, 27, 31, 44, 48, 52, 56]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\register.html",
      "size": 1285,
      "created": "2024-12-17T09:06:22.489630",
      "modified": "2025-01-10T16:11:05.871485",
      "hash": "7b93b997636f3a71d619a307be24c0bdb416a461c147ab07a69cd11a2841d214",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\settings.html",
      "size": 4733,
      "created": "2024-12-20T06:53:24.547048",
      "modified": "2025-01-10T16:11:05.878484",
      "hash": "0e256ff0abcd5d2b46ee0555584c19719c95a1669da31d368e8d852e0c93607e",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [18, 26, 41, 47, 53, 71, 77, 89]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\umpire.html",
      "size": 4296,
      "created": "2024-12-17T09:06:22.489630",
      "modified": "2025-01-10T16:11:05.883483",
      "hash": "91f0213a6c333992d92f6a1d142f30e1adc15828958fc00d40cb04af7f9a0ad5",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\venues.html",
      "size": 7200,
      "created": "2025-01-11T06:55:13.846206",
      "modified": "2025-01-14T05:15:48.576200",
      "hash": "34f14af9582a78b47880793b142394a26460c3e250bba47f05ba8015629366d8",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [199, 224, 249]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\venue_detail.html",
      "size": 10488,
      "created": "2024-12-23T04:42:11.121005",
      "modified": "2025-01-10T16:11:05.923483",
      "hash": "ba3fb28add1916cb58a871dbfa09cdbf11e2631f18b5cceff928f70a72b5efba",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [10, 32, 90, 119, 122, 162]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\venue_form.html",
      "size": 10248,
      "created": "2024-12-23T04:43:07.864551",
      "modified": "2025-01-10T16:11:05.954488",
      "hash": "d04e2181565df3c82dedb48201b071b64d5ca79dd651470443ef8ecc50934ae0",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [18, 25, 38, 45, 52, 59, 66, 79, 86, 93, 106, 107, 121, 128, 135, 145, 148, 149, 155, 156, 166]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\venue_list.html",
      "size": 4090,
      "created": "2024-12-23T04:41:34.004534",
      "modified": "2025-01-10T16:11:05.969489",
      "hash": "410c55231f2e4db8264f80e28cacecdf58eea38cfbc111abb7d54be7978ce710",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [10, 20, 24, 25, 26, 27, 28, 29, 34, 48, 61, 66]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.262680",
      "modified": "2024-12-23T07:52:54.262680",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\jest.config.js",
      "size": 986,
      "created": "2024-12-23T13:21:50.761741",
      "modified": "2025-01-10T05:54:22.663805",
      "hash": "0bfe72b4daf207e2fa4854a85e1c3d0d7302ef9ef7f13f11516baa1151507a94",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\runTests.js",
      "size": 1339,
      "created": "2024-12-23T13:22:48.166749",
      "modified": "2025-01-13T08:01:06.774683",
      "hash": "178f222b373bb7859318b1d493bfb88396bc03e27953f945940da518f355743e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["jest", "path"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\setupTests.ts",
      "size": 1675,
      "created": "2024-12-23T13:22:07.396651",
      "modified": "2025-01-10T05:54:22.682803",
      "hash": "0b91a3287edc658654ce49062c3f7531e44f1376cdf379f9e826ba26fa8d38f3",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "@testing-library/jest-dom",
        "jest-canvas-mock",
        "whatwg-fetch"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\test_image_assets.py",
      "size": 11183,
      "created": "2025-01-10T14:55:08.188277",
      "modified": "2025-01-13T06:04:32.474312",
      "hash": "e4fb9bc16184aed9033c193d6e0472fb6ee1dc95fe8a21447c82c968b1e784b5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [30, 165, 174, 178, 182, 186, 198, 243]"
      ],
      "similar_files": [],
      "dependencies": ["os", "50"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\types\\training.ts",
      "size": 1381,
      "created": "2024-12-22T16:45:38.999857",
      "modified": "2025-01-13T08:01:06.802682",
      "hash": "de2ad85684d9a895d58b5b1703722bbb2b0fc59f9c48350a0e48f7327c247fcb",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\types\\user.ts",
      "size": 1080,
      "created": "2024-12-22T16:45:10.674593",
      "modified": "2025-01-10T05:54:22.699569",
      "hash": "b79830e35509383d5ea07b94d54c6f6603a52942d25b5e265c1ddfdb216c19da",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\adaptive_difficulty.py",
      "size": 10553,
      "created": "2024-12-23T03:34:45.060183",
      "modified": "2024-12-23T03:35:58.882201",
      "hash": "77bbcaee1f9f6ab72e17fff3960d665c0991d4d762cdbd6ffaa9cc0049edfa87",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [138]"],
      "similar_files": [],
      "dependencies": ["typing", "cache", "datetime", "src.models.game"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\analysis.py",
      "size": 7836,
      "created": "2024-12-23T10:23:09.745555",
      "modified": "2024-12-23T10:31:01.591786",
      "hash": "7bd63e310be8c4a22762a35af3ccf487156e5141e4869a48c3a52aff7b521bf6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "power", "success"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\auth.py",
      "size": 5010,
      "created": "2024-12-24T02:57:45.708367",
      "modified": "2024-12-24T11:50:53.578498",
      "hash": "c2fa1d21a62c51d1fae3628f92436145b583bf8f55dd62c04fcbc2b82ed9f1a7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "User", "Authorization"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\caching.py",
      "size": 2228,
      "created": "2024-12-23T03:24:15.745467",
      "modified": "2024-12-23T03:26:07.808497",
      "hash": "d45afd67780dba67e5893ff2df5462285aef7208f619bda7b6ae1edf358d5660",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "cache", "cache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\db_optimization.py",
      "size": 3029,
      "created": "2024-12-23T03:24:48.584039",
      "modified": "2024-12-23T03:26:07.809497",
      "hash": "11da910b4b3923976481970c8fd441a333d69bb3919893d8d92af79a3809220c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["sqlalchemy", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\decorators.py",
      "size": 344,
      "created": "2024-12-20T02:41:29.505208",
      "modified": "2024-12-20T02:41:31.771427",
      "hash": "74d589fedb6ea12f2d1668c45fe16c100a81cc2e5938857d24c64cba7c8eb71e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\email.py",
      "size": 3219,
      "created": "2024-12-20T17:20:50.014944",
      "modified": "2024-12-21T03:29:05.031602",
      "hash": "1b0178d0d57c4b8ac8a25acbc03cb2be766086a2b5869d03d23e67015044503a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "mail"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\errors.py",
      "size": 2032,
      "created": "2024-12-29T16:25:55.465121",
      "modified": "2024-12-29T16:26:59.045908",
      "hash": "69a5781a4a221cbae841b1ca5083ab4fdc2a8ce9f753588fe995a8023399874e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\errorTracker.ts",
      "size": 0,
      "created": "2024-12-22T04:22:26.034363",
      "modified": "2024-12-22T04:22:26.034363",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\game_state.py",
      "size": 9315,
      "created": "2024-12-23T03:37:40.508865",
      "modified": "2024-12-23T03:38:17.915900",
      "hash": "9ed8887283127f2b341581ae2d176f3288a89d399d7a0c49a0f88f50810a7efa",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [205]"],
      "similar_files": [],
      "dependencies": ["typing", "dictionary"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\image_cache.py",
      "size": 13719,
      "created": "2025-01-13T04:09:01.757514",
      "modified": "2025-01-13T05:46:17.719002",
      "hash": "c54f103ed3d5659e1b0a3d2cfdb4e9b9fc6129ebbb49d7d4430e0179174dd34b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [54, 70, 132, 240, 244, 245, 314]"
      ],
      "similar_files": [],
      "dependencies": [
        "pathlib",
        "the",
        "the",
        "cache",
        "cache",
        "disk.",
        "the",
        "cache",
        "cache",
        "the"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\image_processor.py",
      "size": 7778,
      "created": "2025-01-12T15:34:33.416767",
      "modified": "2025-01-13T05:40:35.034286",
      "hash": "3815ff561bb9466c56e052eaefd3e671c94eeda26e9cfc9ff285e7f8731d264a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [36, 187]"],
      "similar_files": [],
      "dependencies": ["pathlib", "PIL", "statistics"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\lazy_loading.py",
      "size": 3728,
      "created": "2025-01-13T04:35:27.548050",
      "modified": "2025-01-13T04:36:37.800181",
      "hash": "d82065aaf1a9f3c0d12862215a3f1d863f81c97a5020567293df90c393e313ec",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["bs4"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\matchmaking.py",
      "size": 7088,
      "created": "2024-12-23T03:36:13.629333",
      "modified": "2024-12-23T03:36:57.513561",
      "hash": "a9b7959aac01c30e572a5250cd34ddb89615e2b66f6b30471fccf071c9540370",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [92]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "cache",
        "src.utils.adaptive_difficulty",
        "src.models.player",
        "PlayerStatus",
        "src.models.game",
        "PlayerStatus",
        "src.extensions",
        "src.models.player_status",
        "src.extensions",
        "src.models.player_status",
        "src.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\ml_utils.py",
      "size": 10117,
      "created": "2024-12-23T12:36:03.203629",
      "modified": "2024-12-23T13:36:01.028433",
      "hash": "9cd0416d661b4c32363cb1bb32cfcc0cf85171d34356351386f40d884fa49a86",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [65, 82, 88, 98]"],
      "similar_files": [],
      "dependencies": [
        "numpy",
        "pandas",
        "sklearn.ensemble",
        "StandardScaler",
        "sklearn.model_selection",
        "match",
        "movement"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\monitoring.py",
      "size": 2269,
      "created": "2024-12-23T03:23:45.126858",
      "modified": "2024-12-23T03:26:07.808497",
      "hash": "cd9e11d4783d3cfbab286e4b1594c283261fdfd80896d671f43694f7f377e1f8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["prometheus_client"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\notifications.py",
      "size": 4759,
      "created": "2024-12-23T03:27:30.220980",
      "modified": "2024-12-23T03:35:58.873852",
      "hash": "ccfc39521807d39a57865d2f8994e799ded09f3ef00d2be685609ccd618f9c6e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["src.extensions", "result"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\prompt_templates.py",
      "size": 3680,
      "created": "2024-12-23T12:38:15.878321",
      "modified": "2024-12-23T12:38:36.152377",
      "hash": "b62ea0f66a4312217d748eab9c0386bdfc112c96da07cf5ec74335593e0fb363",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\README.md",
      "size": 3997,
      "created": "2025-01-13T03:51:29.310802",
      "modified": "2025-01-13T03:51:54.835668",
      "hash": "a368e6579281103c8993faf52936fb5f108561d019e0d0b77b611b5583df91db",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\screenshot.py",
      "size": 1017,
      "created": "2024-12-17T09:06:22.490629",
      "modified": "2024-12-17T09:06:22.490629",
      "hash": "33414ea8cfb29ae05778ba852a39971dacb4c593c52b1712461cc4b966e121cc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "selenium", "Options", "datetime"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\security.py",
      "size": 10304,
      "created": "2024-12-20T17:20:31.533757",
      "modified": "2024-12-23T11:19:53.163697",
      "hash": "2b561f830a39003f4b14ddbcfe3f531059f5fbdf8086bc1882194c07f449507f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": ["datetime", "Fernet", "dojopool.core.config"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\validation.py",
      "size": 7724,
      "created": "2024-12-23T10:44:18.966530",
      "modified": "2024-12-29T16:26:59.045908",
      "hash": "0f49935968ca2157e9d6b2fa25748071a8a0a7c7fbbe777257bd0f34758cee67",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\validators.py",
      "size": 12245,
      "created": "2024-12-23T03:22:55.012520",
      "modified": "2024-12-23T04:40:38.299857",
      "hash": "10641369d3930ddbeab7076e3271224b04a4206b4d0c2746a6bc6d79bb1c8d4a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [224, 251, 320]"],
      "similar_files": [],
      "dependencies": ["functools"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\utils\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.263681",
      "modified": "2024-12-23T07:52:54.263681",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\cache\\game_1.json",
      "size": 70,
      "created": "2024-12-18T03:01:18.925180",
      "modified": "2025-01-10T05:54:14.016154",
      "hash": "f5d3868ad70ea125b00bcdd3d0587e6b47aaef04fcbc795344b4837c79e6ec0e",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\cache\\preview_1.json",
      "size": 63,
      "created": "2024-12-18T03:01:18.954083",
      "modified": "2025-01-10T05:54:14.022679",
      "hash": "919cacd6ad1cbf2f22c4d4692d4c38c0defb1dc12731a89389f9723a2c502a8c",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\templates\\game_story.json",
      "size": 370,
      "created": "2024-12-18T02:23:12.773567",
      "modified": "2025-01-10T05:54:14.226402",
      "hash": "17c5136aecae9d54d41dad9492b71fa7f1a8ac90383ea553438817b66b75bd46",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [2]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\templates\\match_preview.json",
      "size": 275,
      "created": "2024-12-18T02:23:12.773567",
      "modified": "2025-01-10T05:54:14.233424",
      "hash": "5eb7d1e76b0621b805e27d8e16a553a89a787778288095daf4840b29d3749eaf",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [2]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\ai\\templates\\player_profile.json",
      "size": 235,
      "created": "2024-12-18T02:23:12.774570",
      "modified": "2025-01-10T05:54:14.240402",
      "hash": "778c7d9ca47699661263414705661f0569df1bbf1fedc28350867918e8545ca2",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [2]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\v1\\__init__.py",
      "size": 1692,
      "created": "2024-12-20T15:00:47.261764",
      "modified": "2024-12-20T15:03:05.755465",
      "hash": "b840eda0dbe26a5e0e40b6253132a95bb1de20797da86de35e6f4af4ceffaf9b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        ".resources.users",
        ".resources.games",
        ".resources.tournaments"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\v1\\resources\\auth.py",
      "size": 5375,
      "created": "2024-12-20T15:01:38.039248",
      "modified": "2025-01-05T08:22:30.673666",
      "hash": "971721a6972d249da4fa43079c44a177c7c396c8e8942134a952dfcaf6e925d8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "TODO found: Implement email sending",
        "TODO found: Implement email sending"
      ],
      "similar_files": [],
      "dependencies": ["flask", "dojopool.core.exceptions", "User", ".base"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\v1\\resources\\base.py",
      "size": 4542,
      "created": "2024-12-20T15:01:07.118053",
      "modified": "2024-12-24T02:02:54.834579",
      "hash": "add0cbbf01b959f612321e5f2a8a3061cc819fcf5b9ba74f736e4398f3ccfa88",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "request."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\v1\\resources\\games.py",
      "size": 10175,
      "created": "2024-12-20T15:03:56.429225",
      "modified": "2024-12-24T02:15:35.357315",
      "hash": "d536b106b2768bd6926eefdac7815129c1d05db7fd728eb464e9f2599e1ba4ae",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "require_auth",
        "src.core.exceptions",
        "Game",
        "src.core.auth.models",
        "BaseResource",
        "query"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\v1\\resources\\tournaments.py",
      "size": 10288,
      "created": "2024-12-20T15:04:33.176117",
      "modified": "2024-12-24T02:17:12.874182",
      "hash": "d2f78b076dbe247b63cf95ea85ed07602fc89e23353a3800a5af8fb9c7c9666e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "require_auth",
        "src.core.exceptions",
        "Tournament",
        "src.core.models.game",
        "User",
        ".base"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\api\\v1\\resources\\users.py",
      "size": 6791,
      "created": "2024-12-20T15:02:03.819254",
      "modified": "2024-12-24T02:15:35.357315",
      "hash": "a7da741ddd494abca6adec098f1f67c6391c4a74017fa71d439d6a98b23d6c36",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "flask",
        "require_auth",
        "src.core.exceptions",
        "User",
        ".base"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ai\\AIMetrics.tsx",
      "size": 8706,
      "created": "2024-12-23T12:50:59.815020",
      "modified": "2025-01-13T08:01:00.292341",
      "hash": "1d3d8dbc972dbf496944c4892e65e75c7607e3ede7800ec8a489c64e3a421a74",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ai\\Dashboard.tsx",
      "size": 5942,
      "created": "2024-12-23T12:47:59.798202",
      "modified": "2025-01-10T05:54:14.424007",
      "hash": "fc8380abbfcd2b6dc8458984f727b257cb62916b1e0732db0dda3f2a41a78e2d",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "your"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ai\\DifficultySettings.tsx",
      "size": 6795,
      "created": "2024-12-23T12:50:23.089888",
      "modified": "2025-01-13T08:01:00.408340",
      "hash": "87f1021789a90deed324179746cd39a7f71e89fe9ff7dd70fef319f8758d93e5",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ai\\MatchAnalysis.tsx",
      "size": 7121,
      "created": "2024-12-23T12:49:53.612590",
      "modified": "2025-01-13T08:01:00.466341",
      "hash": "54e2b75e357073ceed21e1b614ede30e6382f11b9c52b47d1eb8f4ab27be88b0",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ai\\MatchStory.tsx",
      "size": 6472,
      "created": "2024-12-23T12:48:59.860294",
      "modified": "2025-01-13T08:01:00.581914",
      "hash": "df486927b5467b311fca016f515af5b5543de4b4916c4766918a37947b9fd7f8",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ai\\Recommendations.tsx",
      "size": 5462,
      "created": "2024-12-23T12:49:23.774553",
      "modified": "2025-01-13T08:01:00.711917",
      "hash": "5939979ce83745e0fb72e1c51cb2250005d0e8b05e1f4ac833d7cebe046e7d46",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\analytics\\Dashboard.tsx",
      "size": 4272,
      "created": "2024-12-23T12:17:49.842401",
      "modified": "2025-01-13T08:01:00.764913",
      "hash": "e4df1cd489f3da58eee55ffa874a8558f1a075240f4ac9f4dc000b2989ee94e7",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\analytics\\DateRangePicker.tsx",
      "size": 1669,
      "created": "2024-12-23T12:20:17.382101",
      "modified": "2025-01-13T08:01:00.791919",
      "hash": "b075ab14a21a8827b8219daf99589861f6caf626e70d71be143e9f35a549d18f",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\analytics\\FilterPanel.tsx",
      "size": 4569,
      "created": "2024-12-23T12:20:02.418365",
      "modified": "2025-01-10T05:54:14.754953",
      "hash": "4b468b45e3854441708f30c063c09fb3f6a42af27cc134bdf8aaeacb9d0a1adc",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\analytics\\MetricsChart.tsx",
      "size": 3611,
      "created": "2024-12-23T12:18:41.502780",
      "modified": "2025-01-13T08:01:00.876915",
      "hash": "cfc9a0a7e728006dfacca857af80f08c24c3e69a5e100c9b0646c64639329d16",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\analytics\\MetricsSummary.tsx",
      "size": 4426,
      "created": "2024-12-23T12:19:10.444126",
      "modified": "2025-01-13T08:01:00.912919",
      "hash": "44ab31cdf28140ef551acca0b4dd6c0604b558a2128fc01f1bbd7927e22345c5",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\analytics\\MetricsTable.tsx",
      "size": 6013,
      "created": "2024-12-23T12:19:38.501745",
      "modified": "2025-01-13T08:01:00.967911",
      "hash": "9e2a03da3f492f2fb32f53aad68239f1ff7e8aaf838f4817675b1f3380cb12fe",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ml\\AnomalyDetection.tsx",
      "size": 6942,
      "created": "2024-12-23T13:07:37.860473",
      "modified": "2025-01-13T08:01:01.015912",
      "hash": "4a2765f1856ca92e85668d132ad19dbf71cfb6122faaa5067d6feeaf020b56a4",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ml\\MLDashboard.tsx",
      "size": 4146,
      "created": "2024-12-23T13:05:18.560623",
      "modified": "2025-01-13T08:01:01.062914",
      "hash": "79812006952e3c4e7ed8a1c04c5d5eac7c3759fe726ead51683e17254f05a024",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ml\\ModelMetrics.tsx",
      "size": 3576,
      "created": "2024-12-23T13:06:06.752073",
      "modified": "2025-01-13T08:01:01.095912",
      "hash": "aea97ee17baa8dfa3ec5fa0f720e7b906d6c883b6ed6e448a1b8118b526136ec",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ml\\PatternRecognition.tsx",
      "size": 6129,
      "created": "2024-12-23T13:07:04.521804",
      "modified": "2025-01-13T08:01:01.149915",
      "hash": "40dd92e42b1e86c239f0d356f4913c5aed9e55b506d0681432fa53d3e891236f",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ml\\ShotPrediction.tsx",
      "size": 5621,
      "created": "2024-12-23T13:06:34.580319",
      "modified": "2025-01-13T08:01:01.195913",
      "hash": "133f05b600e11848f9ac03b33b626fbe77723b64f76a42026898f551b6003f59",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\ml\\TrainingPlan.tsx",
      "size": 7415,
      "created": "2024-12-23T13:08:11.057735",
      "modified": "2025-01-13T08:01:01.243922",
      "hash": "c37ea4725a62ec9d51b35ef4acf48ab5693ef9f3283e1da211a2d5f10d85529f",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [199]"],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\performance\\MetricsChart.tsx",
      "size": 3112,
      "created": "2024-12-23T13:28:46.504042",
      "modified": "2025-01-13T08:01:01.274451",
      "hash": "3917077bf6a016e543140ac1f721d30f39efc321f9a059f9e0d751fa57f40971",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\performance\\OptimizationRecommendations.tsx",
      "size": 4427,
      "created": "2024-12-23T13:29:12.163969",
      "modified": "2025-01-13T08:01:01.298445",
      "hash": "ed48393061d58eecc08c1bccb2c1b7bd502568265fb9a36d5c7614f99c2eb658",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\performance\\PerformanceDashboard.tsx",
      "size": 1789,
      "created": "2024-12-23T13:27:46.688569",
      "modified": "2025-01-13T08:01:01.314447",
      "hash": "06c7a4ef6a9810a49f6b752a742284179b028bc0481e36d82b2b263db526d39b",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\performance\\SystemStatus.tsx",
      "size": 5506,
      "created": "2024-12-23T13:28:15.699528",
      "modified": "2025-01-13T08:01:01.348445",
      "hash": "33f1716a2f8e546a35ee96245b2199c30d4044338baa7239b6f360dcd1eee5ad",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\components\\predictive\\PredictiveDashboard.tsx",
      "size": 3027,
      "created": "2024-12-23T13:12:11.726154",
      "modified": "2025-01-13T08:01:01.377447",
      "hash": "ae8e865d09cb0cd43586dcf35bb2754515b0baabb44030d001240ae5db540605",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\env\\.env",
      "size": 1392,
      "created": "2024-12-03T10:17:31.911214",
      "modified": "2024-12-13T05:35:29.542969",
      "hash": "d6badeeaa1c517f5ce7d84e6059be1a08e41739d5cc93be5163b03754d505d92",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\env\\.env.example",
      "size": 1125,
      "created": "2024-12-03T10:13:18.056462",
      "modified": "2024-12-09T05:21:39.657902",
      "hash": "9aa43d4635e13d1a324205023229eab95e8b1f441e7fc0fdfe371b42072080f9",
      "extension": ".example",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\env\\.env.production",
      "size": 899,
      "created": "2024-12-04T04:36:01.535292",
      "modified": "2024-12-04T04:43:14.328559",
      "hash": "0414cce45f6d1c4e360dc9a92325c6ad11504edf88030e1a09f12f534f03598c",
      "extension": ".production",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\env\\.env.test",
      "size": 258,
      "created": "2024-12-06T17:00:39.717296",
      "modified": "2024-12-06T17:00:41.490821",
      "hash": "66c10bf4123fff39ab5370ad810963cf2b869dffe92ed0c9ee5a65ee601d04f6",
      "extension": ".test",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\env\\.flaskenv",
      "size": 74,
      "created": "2024-12-13T05:36:59.702727",
      "modified": "2024-12-13T05:37:03.427947",
      "hash": "2635ffd62db14096dbda769601e638360ccbe897502d2581d35d1ed2d67481a0",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\tools\\.eslintrc.js",
      "size": 513,
      "created": "2024-12-06T16:54:09.068501",
      "modified": "2025-01-10T05:54:15.259818",
      "hash": "6c70d690425ce2c0958a255d716dc04c933e005c6c836849d8de26d78794e0d5",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\tools\\.flake8",
      "size": 292,
      "created": "2024-12-17T01:28:46.757481",
      "modified": "2024-12-17T01:28:50.369999",
      "hash": "1817ca8c590c8be97cc6b6178e0a84a21966e60fa9e73e4fa01ae27f41b1e6d7",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\tools\\mypy.ini",
      "size": 539,
      "created": "2024-12-17T01:28:55.698764",
      "modified": "2024-12-17T01:28:59.898672",
      "hash": "1a4d067a5301550110c38a3eadd19d37364e84dfe0f51ec02795cd89ce6b032c",
      "extension": ".ini",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\tools\\package.json",
      "size": 73,
      "created": "2024-12-09T01:01:43.900141",
      "modified": "2025-01-10T05:54:15.268820",
      "hash": "e96a7936a959fecc52c76cbd805d524862daaded4c03a5ffdb3537233a3104cf",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\tools\\redis.conf",
      "size": 461,
      "created": "2024-12-09T04:29:14.642205",
      "modified": "2024-12-09T04:29:16.327092",
      "hash": "e2a84bae0e5cb1f3a498d331d840f7eaf0e87a1c7b20d878d6acf43b897912ba",
      "extension": ".conf",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\config\\tools\\setup.cfg",
      "size": 1109,
      "created": "2024-12-06T16:54:16.246541",
      "modified": "2024-12-17T02:00:13.309302",
      "hash": "62e02ff4406b012c62aae5bd75fcb6d565163c2106aa09a6a7935cc1f148834f",
      "extension": ".cfg",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\achievements\\models.py",
      "size": 12531,
      "created": "2024-12-22T13:06:10.872168",
      "modified": "2024-12-22T13:49:08.211257",
      "hash": "98ee9467e2161772835e35abd72edfd045aa0c014c27787965de1481fad29208",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [168]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "hybrid_property",
        "src.core.database",
        "AchievementValidator",
        "src.core.exceptions",
        "src.core.auth.models",
        "user",
        "user",
        "user"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\achievements\\__init__.py",
      "size": 164,
      "created": "2024-12-22T13:08:48.829478",
      "modified": "2024-12-22T13:14:08.127600",
      "hash": "befc58e6e642c383a0b06c57df922da4b6091273b083be6818379aac29ca574e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\ai\\game_analysis.py",
      "size": 5026,
      "created": "2024-12-17T12:04:54.519450",
      "modified": "2024-12-17T16:57:28.992980",
      "hash": "5cc9c0e2b74211c806f69c1bec3b4c8c885e522971c6f1acd7d867e23ce7ffc1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "BallTracker", "..vision.game_tracker"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\ai\\game_analysis_routes.py",
      "size": 1697,
      "created": "2024-12-17T12:05:21.894839",
      "modified": "2024-12-17T16:57:28.993980",
      "hash": "150f232f5b224f3ccd2a82b46e3617c91babccf469c4e5dddd2eba370492719d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "GameAnalysis", "..auth.decorators"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\ai\\routes.py",
      "size": 2587,
      "created": "2024-12-17T11:52:39.592707",
      "modified": "2024-12-17T16:57:28.995980",
      "hash": "f8ce76310dd799c2df0eae7c8984d2c521540ade819f3160075b2ea0c266b617",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "login_required", ".service", "database"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\ai\\service.py",
      "size": 1305,
      "created": "2024-12-17T11:52:11.831861",
      "modified": "2025-01-12T13:40:54.504088",
      "hash": "db79e0472e0926e9a68399e68ef5446c1f66d1c6c53108d796b00a1288a0f26f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "Config", "Returns"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\decorators.py",
      "size": 5599,
      "created": "2024-12-17T10:37:35.288775",
      "modified": "2024-12-22T16:42:24.126974",
      "hash": "24518416d4c6a1cc0b38195e4b19bf89b98805ed56d1f30ae9d64aee319d7caf",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement admin check",
        "TODO found: Implement rate limiting"
      ],
      "similar_files": [],
      "dependencies": [
        "functools",
        ".service",
        "header",
        "header",
        "header",
        "header",
        "header"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\exceptions.py",
      "size": 5178,
      "created": "2024-12-18T02:32:11.864113",
      "modified": "2024-12-22T16:42:24.125967",
      "hash": "7c04cb9b284d8acf1aac8eb302b33c4d39073bc32eec6190802c2282b133d862",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\jwt.py",
      "size": 2972,
      "created": "2024-12-17T09:37:00.936256",
      "modified": "2024-12-17T16:57:28.998981",
      "hash": "163d5a24926cd4ddc433d71a61609b3141d08252c58336fa2214665df5f10479",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\middleware.py",
      "size": 7398,
      "created": "2024-12-22T16:27:55.087048",
      "modified": "2024-12-22T16:42:24.128972",
      "hash": "5921a9373cefd2df4c0cff61936e55420b7cbd98345292ecb27494023490c090",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [195]"],
      "similar_files": [],
      "dependencies": ["typing", "configured"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\models.py",
      "size": 2449,
      "created": "2024-12-24T01:40:02.844993",
      "modified": "2025-01-11T20:48:02.650792",
      "hash": "daaeaadcc4e6d8bedb06831c5406e761223a2c809a2ebc5874e9cd83247e5cc8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_sqlalchemy"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\oauth.py",
      "size": 4924,
      "created": "2024-12-17T09:35:18.797608",
      "modified": "2024-12-17T16:57:29.000982",
      "hash": "86cf10812fef11ad035e0f1a0978658251ad75f09e14aeff7112f099bba97a83",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": ["typing", "OAuth", ".models", "db", "OAuth", "secrets"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\password.py",
      "size": 4762,
      "created": "2024-12-17T09:37:34.302506",
      "modified": "2024-12-17T16:57:29.001982",
      "hash": "6a38b94bce4a2fd6ff6c0bf53c3aedb9c283f4668df730df2bdeda867e07f62a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["re", "typing", "db", ".models", "jwt_manager"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\routes.py",
      "size": 4657,
      "created": "2024-12-17T10:36:58.074528",
      "modified": "2024-12-17T16:57:29.002979",
      "hash": "db4d7ffbe3c4ecdf358dfaed6025959cf7c169eaaabfddfd365c886b861fc96d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "generate_password_hash",
        "src.core.models",
        "generate_token",
        "datetime"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\security.py",
      "size": 2611,
      "created": "2024-12-18T16:00:28.193892",
      "modified": "2024-12-18T16:52:13.099793",
      "hash": "65114324d2b223d21fb4fb79743868aaed76a7aaa798148350e03663842fc55f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["jwt", "datetime", "generate_password_hash", "token"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\service.py",
      "size": 6109,
      "created": "2024-12-17T09:43:15.700760",
      "modified": "2025-01-05T08:25:22.728928",
      "hash": "9d463c6b168435a3a1a4074d05fb43e032f137134530369ef9e653aae1dd61ed",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "User",
        "dojopool.core.security",
        "dojopool.core.exceptions",
        "token."
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\sessions.py",
      "size": 5383,
      "created": "2024-12-22T16:25:36.244632",
      "modified": "2024-12-22T16:42:24.124976",
      "hash": "226efac05ef814ae9adbc9d756ed716f11b3d8908a357820edd8e1eb8eac9e91",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "generate_session_id"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\tokens.py",
      "size": 5058,
      "created": "2024-12-22T16:24:51.056469",
      "modified": "2024-12-22T16:25:27.152299",
      "hash": "0016e6cb47278ebea291934571fb4fbe2dbc14a144f017a6fb56bdad4eef2a8c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: secret",
        "Long lines found on lines: [78]"
      ],
      "similar_files": [],
      "dependencies": ["jwt", "datetime", "calculate_token_expiry", "refresh"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\totp.py",
      "size": 2284,
      "created": "2024-12-17T09:34:43.941846",
      "modified": "2024-12-17T16:57:29.005984",
      "hash": "bc681fbe86460f5bdad4e8e0be4c83a7fdc697b7422092daeb420d42c6dfddbc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pyotp", "typing", "User", "..extensions"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\utils.py",
      "size": 5375,
      "created": "2024-12-17T10:37:14.654372",
      "modified": "2024-12-22T16:24:02.319372",
      "hash": "232a56297661934b3dc21871b8fb52bbaa676cf6ac7bd48f2943919e264db8d7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": ["re", "each"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\views.py",
      "size": 6727,
      "created": "2024-12-17T09:40:10.671774",
      "modified": "2024-12-22T13:14:08.127600",
      "hash": "2174216f0d94e44bcf61fa16a6295666baf46b401b3597fea0cd0c47c3ddc5a8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [171]"
      ],
      "similar_files": [],
      "dependencies": [
        "flask",
        "flask_login",
        "urllib.parse",
        "db",
        "src.core.auth",
        "TOTPService",
        "src.core.auth.oauth",
        "password_manager",
        "src.core.auth.exceptions",
        "src.core.auth.forms"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\auth\\__init__.py",
      "size": 173,
      "created": "2024-12-18T16:00:18.028419",
      "modified": "2024-12-24T01:42:31.143153",
      "hash": "c0c6cc1f48d22c016985ad62c8375e5c1044d46a10a0575ba6511e65c6290a84",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\animation.py",
      "size": 16665,
      "created": "2024-12-17T10:58:08.026951",
      "modified": "2024-12-17T16:57:29.010536",
      "hash": "f29a13f3b3b1b9fbf95a090e8b3ffcf00a073967a48bbf476014ed19e849637a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "json",
        "JSON",
        "animation.",
        "Lottie",
        "Lottie",
        "cv2",
        "percentage",
        "cv2",
        "alpha",
        "cv2",
        "cv2"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\cache.py",
      "size": 6651,
      "created": "2024-12-17T10:55:17.133623",
      "modified": "2024-12-17T16:57:29.011538",
      "hash": "749149ea688a0611466218d5cf2eed95b3e40471d9aa7d2f523026b2cee2e318",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "redis",
        "cache.",
        "cache",
        "cache.",
        "cache.",
        "cache."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\generator.py",
      "size": 6113,
      "created": "2024-12-17T10:47:45.310163",
      "modified": "2024-12-20T10:45:10.452179",
      "hash": "76f36aac0342bc5396f96b35b96e7a328d2a69fb9a6d3d1040071c1cd6c79ae3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["torch", "PIL", "StableDiffusionModel", "dataclasses"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\model.py",
      "size": 6417,
      "created": "2024-12-17T10:50:59.891655",
      "modified": "2024-12-20T10:45:10.452179",
      "hash": "7fd72eba6898a006e30604652dbb3927964abfa4482948ff5c32b5cf88566795",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [123]"],
      "similar_files": [],
      "dependencies": ["torch", "diffusers", "text"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\routes.py",
      "size": 6209,
      "created": "2024-12-17T10:48:36.528651",
      "modified": "2024-12-17T16:57:29.014538",
      "hash": "33f5b7071d028a7936e302e88aced37c391ed1e441dc4a65dff2193bcd015f5c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "User",
        "src.core.auth.utils",
        "AvatarGenerator",
        ".animation"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\backend\\clean_null_bytes.py",
      "size": 424,
      "created": "2024-12-17T09:03:16.841441",
      "modified": "2024-12-17T16:57:29.016538",
      "hash": "6441f15bde0e801d949ae3295f640ec14d6c88d377dd22eaf44ba457c279c963",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\backend\\conftest.py",
      "size": 166,
      "created": "2024-12-17T09:03:16.841441",
      "modified": "2024-12-17T16:57:29.017537",
      "hash": "c76063811bec6c91a191504ca8a34b3100c060f0d7467f93fabe63f35dbbaa9e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\backend\\Dojo_Pool.py",
      "size": 35386,
      "created": "2024-12-17T09:03:16.839441",
      "modified": "2024-12-17T09:03:16.840440",
      "hash": "ba894b749a23441c4faa7073fef5a0600990748357f8237d1a55622fa84a5a99",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\backend\\Dojo_Pool_cleaned.py",
      "size": 3659,
      "created": "2024-12-17T09:03:16.840440",
      "modified": "2024-12-17T09:03:16.840440",
      "hash": "30e281594f87c3d95262cfa389a37b48bc281c23cf5584a2176e1377d13e2055",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\backend\\setup.py",
      "size": 356,
      "created": "2024-12-17T09:03:16.842440",
      "modified": "2024-12-17T09:03:16.843439",
      "hash": "6ae7f63e687f6c41a3d52053e79552bf58e5d5fc815a375c2ce76508d859c1c3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["setuptools"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\blueprints\\template.py",
      "size": 2472,
      "created": "2024-12-18T16:18:06.729348",
      "modified": "2024-12-18T16:18:10.775202",
      "hash": "6dfd0b95759e7476e0dabdcaa99c665c79b459f0b072545be007ebd0082ed86c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "BaseBlueprint"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\blueprints\\__init__.py",
      "size": 2561,
      "created": "2024-12-18T16:17:52.268548",
      "modified": "2024-12-18T16:17:55.919446",
      "hash": "7240083675c8742705f21679d214c1fd335008140c50545cb24a261f3f6ab635",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\cache\\decorators.py",
      "size": 2182,
      "created": "2024-12-18T16:00:46.196159",
      "modified": "2024-12-18T16:00:49.783873",
      "hash": "cf7e41fbfc81eea30ccc1f75c1fe0755a83dab373cd667145e3814cdacecce41",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "cache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\cache\\__init__.py",
      "size": 4056,
      "created": "2024-12-18T16:00:34.648749",
      "modified": "2025-01-05T08:26:34.337949",
      "hash": "723e9c09ad28bfd185adeca07d12fb990d249f7820fe28ce36cc8f90c9605a3e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "cache.",
        "cache.",
        "cache.",
        "cache.",
        "cache"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\achievements.py",
      "size": 5776,
      "created": "2024-12-23T05:20:46.252632",
      "modified": "2024-12-23T05:22:50.577027",
      "hash": "60cacce2c9dd3216ffde56961ac0b0381c4c657a8b02468a8adcbb99b38f6252",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [68]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\ai.py",
      "size": 4192,
      "created": "2024-12-23T05:04:12.867545",
      "modified": "2024-12-23T05:05:11.299961",
      "hash": "6de70b95e4f2d707886fcafe18466c7ad6fe7c747a9531436a6d223e2dc99342",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\config.py",
      "size": 3905,
      "created": "2024-12-18T15:44:02.217462",
      "modified": "2024-12-18T15:57:30.663352",
      "hash": "eabf1b50473156e07185a3322d3bea20691449ad54a0e302f38dc34a070b3c5b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Potential security issue: secret",
        "Long lines found on lines: [35, 97, 99, 104]"
      ],
      "similar_files": [],
      "dependencies": ["os", "pathlib"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\database.py",
      "size": 3274,
      "created": "2024-12-23T06:15:19.855636",
      "modified": "2024-12-23T06:16:43.241192",
      "hash": "3c9548c3d00b6012dfa60c912564aab09a203ab972ea4ea3e1c15b8661b51ce8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [68]"],
      "similar_files": [],
      "dependencies": ["os", "typing"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\development.py",
      "size": 963,
      "created": "2024-12-18T15:56:44.362237",
      "modified": "2024-12-18T15:56:47.532962",
      "hash": "2034da1841dbaed641531ec43fae786c80d1c0b11c1024ef91e4225997c2430c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".config"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\matchmaking.py",
      "size": 3672,
      "created": "2024-12-23T05:23:55.977800",
      "modified": "2024-12-23T06:03:02.381365",
      "hash": "3c7fc42935e61c29922269031820e8168f3c48f2898ca1d3ae517da5b74c9289",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\production.py",
      "size": 2093,
      "created": "2024-12-18T15:57:05.496738",
      "modified": "2024-12-18T15:57:08.682301",
      "hash": "3fb2e88ee705e298cb4f37cba41f33edf64b6e29c16a3259e28b08965374463a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "os",
        "RotatingFileHandler",
        ".config",
        "werkzeug.middleware.proxy_fix"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\testing.py",
      "size": 973,
      "created": "2024-12-18T15:56:54.434124",
      "modified": "2024-12-18T15:56:57.540186",
      "hash": "c81339d96f82f0c08183c92670fbea1d54363666f562f9cd543ae939272c0a70",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".config"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\validator.py",
      "size": 1518,
      "created": "2024-12-17T09:26:59.945677",
      "modified": "2024-12-17T09:27:14.566020",
      "hash": "fb7818981542d427fa9381293dd3d94d2da5cc3a30b39bf0316afcc94d433a0f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\websocket.py",
      "size": 1589,
      "created": "2024-12-23T06:19:15.279853",
      "modified": "2024-12-25T03:00:56.611489",
      "hash": "6bec9104987067f444b0b434422fa99e47bcb705a3f3b41fc0168bf492245cb1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\config\\__init__.py",
      "size": 1378,
      "created": "2024-12-17T09:25:59.319916",
      "modified": "2024-12-18T15:57:42.455555",
      "hash": "f7bc6bb902150116e8a9c6d060d97ae38eb69998a4e4d4930d78587cccf647a3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "os",
        "typing",
        "Config",
        ".development",
        "TestingConfig",
        ".production"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\init_db.py",
      "size": 6424,
      "created": "2024-12-22T13:36:38.183880",
      "modified": "2024-12-22T13:37:36.295525",
      "hash": "dcf1913f2e1f2735dc40b842592be682ddcbfda834925bc7e3cdafaf4fb1d1f3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [149, 176, 183]"
      ],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "generate_password_hash",
        "src.core.database"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\migrations.py",
      "size": 1406,
      "created": "2024-12-18T16:16:02.866027",
      "modified": "2024-12-22T13:36:23.238945",
      "hash": "56477b11a99321344cce9f73a045e8d21dde39ecf3659d0741e1595dacc1fd98",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "db", "app"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\models.py",
      "size": 215,
      "created": "2024-12-18T16:00:10.926565",
      "modified": "2024-12-19T05:40:05.852460",
      "hash": "2cecf44f2e1aa0d62173807511bdadb8d566dbe2e66e39697ea27650d25cdaec",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_login", "generate_password_hash", ".", "User"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\session.py",
      "size": 2198,
      "created": "2024-12-18T16:02:47.099835",
      "modified": "2024-12-18T16:02:50.520005",
      "hash": "d32d6ada27b9744901be4b2160e907cacc790028067987ca33bdd68da621801c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["contextlib", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\utils.py",
      "size": 4165,
      "created": "2024-12-18T16:16:22.737084",
      "modified": "2024-12-18T16:16:26.357728",
      "hash": "86d1390fbf353559c763ec3a750e175dcddb348015749f2d05f1b775e60232eb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [44, 72, 108]"],
      "similar_files": [],
      "dependencies": [
        "os",
        "typing",
        "db",
        ".session",
        "sqlite3",
        "subprocess",
        "backup.",
        "sqlite3",
        "subprocess"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\__init__.py",
      "size": 1974,
      "created": "2024-12-18T16:00:00.981397",
      "modified": "2025-01-05T07:05:16.161024",
      "hash": "8da754ec403e259e0783a2af6169874f90e217782ea2716f5e48ea80b5147063",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_sqlalchemy", "..models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\db\\manager.py",
      "size": 3406,
      "created": "2024-12-18T15:05:28.306310",
      "modified": "2024-12-18T15:06:11.687733",
      "hash": "3457e81b62ef1c9eafbd701c655247ba455637c1e5ee4aa59c49a83f54ea2639",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [24]"],
      "similar_files": [],
      "dependencies": ["os", "pathlib", "backup."],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\db\\migrations.py",
      "size": 2264,
      "created": "2024-12-18T15:06:22.905650",
      "modified": "2024-12-18T15:07:04.784146",
      "hash": "1f7251b82b1eec1824ab252bd5c5ffcadddfdc7f80d94c0bf25ebc29ad9e6ed1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pathlib", "flask_migrate"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\db\\utils.py",
      "size": 1342,
      "created": "2024-12-18T15:07:11.946530",
      "modified": "2024-12-18T15:07:56.934627",
      "hash": "43eee0ca29e6808d4862d32cb09b94135d76d7641978d975543f4cb9c89c4f50",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [15]"],
      "similar_files": [],
      "dependencies": ["pathlib", ".manager", "backup.", ".manager"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\db\\__init__.py",
      "size": 390,
      "created": "2024-12-18T15:04:32.089643",
      "modified": "2025-01-05T08:22:30.601665",
      "hash": "e1adeba84cbeff2c55405067cf3dc27a180586496376c0d2fd211d08bd7e4a1d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask_sqlalchemy",
        ".manager",
        "MigrationManager",
        ".utils"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\errors\\exceptions.py",
      "size": 3213,
      "created": "2024-12-20T03:19:12.014931",
      "modified": "2024-12-20T03:19:14.670452",
      "hash": "568edfab56e6042cdfa8c4c1e9339630384d6238acc61d7e147798463d822b1b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\errors\\handlers.py",
      "size": 3795,
      "created": "2024-12-18T16:22:20.969295",
      "modified": "2024-12-20T03:19:43.734813",
      "hash": "8a47173151db97ba09406f2b8777edbe4a9f7958fee6136d59b199c496789936",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "HTTPException",
        "sqlalchemy.exc",
        "DojoPoolError",
        "..logging.utils"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\errors\\__init__.py",
      "size": 628,
      "created": "2024-12-18T16:22:02.148066",
      "modified": "2024-12-20T03:19:26.756812",
      "hash": "0d30c66af5ad4788b939088e2dc49ca23362b3765eaa517ad903e4d11b34802c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".exceptions", ".handlers"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\game\\events.py",
      "size": 2094,
      "created": "2024-12-17T13:17:34.207146",
      "modified": "2024-12-19T05:48:49.856292",
      "hash": "5f6d149b5ca4a885b1d4bdb9805c86162e8cb3484fa9835f5aad58a35aec7551",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [38]"],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\game\\physics.py",
      "size": 7123,
      "created": "2024-12-17T10:17:34.367518",
      "modified": "2024-12-18T02:27:23.968225",
      "hash": "3cab2135897c524ec432f487c23939904369b4c04313083b31bda53081396f38",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["math"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\game\\shot.py",
      "size": 4135,
      "created": "2024-12-17T13:18:13.856525",
      "modified": "2024-12-19T05:49:01.511137",
      "hash": "b44ea2071de17cd655fde2400d9a2109c7d69f95855f99d0fba45927d1fac087",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\game\\state.py",
      "size": 5374,
      "created": "2024-12-17T13:13:58.555700",
      "modified": "2024-12-19T05:48:26.024840",
      "hash": "397bd7e50529e5fb6132ac6d1a841db7048d5cea0eab47a9be6175e20348d38c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [42]"],
      "similar_files": [],
      "dependencies": ["datetime", "db", "..models", "pending"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\game\\__init__.py",
      "size": 333,
      "created": "2024-12-17T13:15:28.615062",
      "modified": "2024-12-17T13:15:47.193463",
      "hash": "f41591454eb4f59d493b837c3c8dba15fe9dff72727e28284175e169d99df5f4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".state", "GameEvent", ".shot"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\games\\routes.py",
      "size": 5837,
      "created": "2024-12-17T10:41:56.393996",
      "modified": "2024-12-17T16:58:59.502060",
      "hash": "0351f282e24f8cb002f52764eb114cbfefb0962d7838f56efffb7959617b9783",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "Game", "src.core.auth.utils"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\logging\\utils.py",
      "size": 4541,
      "created": "2024-12-18T16:20:42.836641",
      "modified": "2024-12-18T16:20:46.739461",
      "hash": "8945407323a6a017d1d7f184ba9bc908b63240c91c4f171b9a820732cac6abc6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["logging"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\logging\\__init__.py",
      "size": 2721,
      "created": "2024-12-18T16:20:22.385196",
      "modified": "2024-12-22T13:17:09.396713",
      "hash": "be6fa91fa3bb4c8cb1eb126c3146a5de535aa9444329e29e19630a00b083fc34",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "RotatingFileHandler", "flask"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\main\\views.py",
      "size": 1022,
      "created": "2024-12-20T05:52:33.209645",
      "modified": "2024-12-20T06:09:32.291729",
      "hash": "1a7ae591b903054107db18fed374e899894926c9de5cc46eb18191def90b1dea",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "flask_login"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\api.py",
      "size": 13035,
      "created": "2024-12-23T06:20:34.631037",
      "modified": "2024-12-24T16:52:00.749273",
      "hash": "9c573620e708d2579dd0338db84337199af1d6f02dea522bbe7a821bb819270e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "TODO found: Implement actual token verification",
        "Long lines found on lines: [9]"
      ],
      "similar_files": [],
      "dependencies": [
        "typing",
        "OAuth2PasswordBearer",
        "pydantic",
        "User",
        "..models.game",
        "Venue",
        ".matchmaker",
        "MatchmakingDB",
        "..extensions",
        "..middleware"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\database.py",
      "size": 14957,
      "created": "2024-12-23T06:16:11.079975",
      "modified": "2024-12-23T06:17:08.755797",
      "hash": "4a8b20454a4ef9ea398d7010881a0c846e8181e000cb403e89d2eddab50bf8e1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "DATABASE_CONFIG",
        "..models.user",
        "Game",
        "..models.venue",
        "DatabaseError"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\events.py",
      "size": 7035,
      "created": "2024-12-23T06:05:40.999855",
      "modified": "2024-12-24T16:41:37.670293",
      "hash": "5d1e45e768046ba4e15c88447632fe67bfef04af4762ad1ff8fde52d9a23a981",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "User",
        "...models.game",
        "Venue",
        "..config.matchmaking",
        "an",
        "callback",
        "subscribers"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\exceptions.py",
      "size": 3598,
      "created": "2024-12-23T05:26:28.680493",
      "modified": "2024-12-23T06:03:02.380362",
      "hash": "ffd7fbb056c559bc47c90c274cc2b731d3ccaf0b3ee787a418268e7e25ebba6f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [67, 84]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\matchmaker.py",
      "size": 17337,
      "created": "2024-12-23T05:25:11.499979",
      "modified": "2024-12-24T16:41:37.668146",
      "hash": "1a8d413e50c446fb9a79fa4047b732ae22f4f6ce698a5cb205dfcace2c65e8e0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [498]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "...models.user",
        "Game",
        "...models.venue",
        "cache",
        ".exceptions",
        ".utils",
        "the",
        "the",
        "being"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\notifications.py",
      "size": 10427,
      "created": "2024-12-23T06:07:57.606301",
      "modified": "2024-12-24T17:00:43.813110",
      "hash": "ee4dd922ff6b053571f119411ea51b3edb09118bf42fc3087954725331ff1771",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Implement actual notification sending"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "relationship",
        "...core.database",
        "User",
        "..models.game",
        "Venue",
        "..config.matchmaking"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\utils.py",
      "size": 6263,
      "created": "2024-12-23T05:27:19.957085",
      "modified": "2024-12-24T16:41:37.669287",
      "hash": "063bec90238188d7abe50bd330870cf166258ed6b24b79884cf3abfaeb605d0a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "...models.user",
        "Venue",
        "math",
        "..database"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\__init__.py",
      "size": 2022,
      "created": "2024-12-23T05:26:01.419137",
      "modified": "2024-12-23T06:13:32.318336",
      "hash": "72b35b988945a02e0757f1b05aa964dbb9eef7ae1aa49f954948a60554ecd8c0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".matchmaker", ".notifications", ".utils"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\common.py",
      "size": 6064,
      "created": "2024-12-18T16:25:42.094018",
      "modified": "2024-12-18T16:25:46.866778",
      "hash": "3c293e857edd2cb8a9f50c40949cfb35b804e190258aa7bf35b7f5dc952997ee",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["time", "typing", "Request", ".", "log_error", "uuid"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\csrf.py",
      "size": 2766,
      "created": "2024-12-23T04:53:25.693388",
      "modified": "2024-12-23T05:00:39.958099",
      "hash": "8432cf24f587a7a5f517ba370be1f6bb5f6258fe650dee0230d202b87985dc17",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["hmac", "CSRFError", "CSRF", "CSRF"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\rate_limit.py",
      "size": 2273,
      "created": "2024-12-23T04:52:33.661738",
      "modified": "2024-12-24T03:15:42.605796",
      "hash": "d2eaccd94071b084d5081d713ca301658c58e2ad48ed20deebf68439aa5626b9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [68]"],
      "similar_files": [],
      "dependencies": ["functools", "cache"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\security.py",
      "size": 2658,
      "created": "2024-12-23T04:54:08.971404",
      "modified": "2024-12-23T05:00:39.961098",
      "hash": "c87a6e73a2a9130c1998035cf4f1f357bcb38cdcf5f96d073c6ace0e06956664",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [21, 50]"],
      "similar_files": [],
      "dependencies": ["functools"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\session.py",
      "size": 3809,
      "created": "2024-12-23T08:01:08.002652",
      "modified": "2024-12-23T08:01:35.538745",
      "hash": "f95b32eaa152d7bcbc18741ab8c1d808ee9d7e75a579717ead7dd927b3b85c62",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "functools",
        "SessionManager",
        "dojopool.utils.security",
        "header",
        "datetime"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\validation.py",
      "size": 4194,
      "created": "2024-12-23T04:54:42.827971",
      "modified": "2024-12-23T05:00:40.021459",
      "hash": "c36152947fa40b7d013b3deacd6d165fc8f4728894d31b4e8f39cda6a0c5a280",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [112]"],
      "similar_files": [],
      "dependencies": ["functools"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\middleware\\__init__.py",
      "size": 725,
      "created": "2024-12-18T16:25:16.988913",
      "modified": "2024-12-23T05:00:40.022471",
      "hash": "2170804edf703dff38a55b1e57d42c53af83508d9f853de2321950ce62661d53",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7]"],
      "similar_files": [],
      "dependencies": [
        ".rate_limit",
        "csrf_protect",
        ".security",
        "validate_input"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\env.py",
      "size": 2200,
      "created": "2024-12-17T10:38:59.992040",
      "modified": "2024-12-17T12:28:33.352149",
      "hash": "4ee011a20a53689c7544b0e63c581cd410b26c38b04a9f53e17eb5183a3baa2c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["logging.config", "core.models", "db", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\auth.py",
      "size": 5996,
      "created": "2024-12-22T13:21:05.027725",
      "modified": "2024-12-22T13:33:00.937442",
      "hash": "7571dd6c8a7c18c17298b4e63b1e80ca81bcc5b713f1d8e6f77ecb7583008482",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "generate_password_hash",
        "src.core.database",
        "BaseModel",
        "role."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\base.py",
      "size": 628,
      "created": "2024-12-22T13:19:03.675976",
      "modified": "2024-12-25T03:27:36.867795",
      "hash": "451e96a770258162e6f7fcc63a3b4f561d618a14f5f92a49eabf1d0f5200e905",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "declared_attr", "..database"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\game.py",
      "size": 29503,
      "created": "2024-12-22T13:21:38.658720",
      "modified": "2025-01-05T07:00:14.538146",
      "hash": "20a49b867a670f6acd56e8eac99f6ca1367db677eae14dce4b07c40a7f1476f2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "hybrid_property",
        "...core.database",
        "cache",
        "...core.validation",
        "GameError",
        ".base",
        "pending",
        "type",
        "paused",
        "active",
        "game.",
        "pending",
        "cache",
        "cache"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\notification.py",
      "size": 7171,
      "created": "2024-12-22T13:30:42.766181",
      "modified": "2025-01-05T07:03:04.885490",
      "hash": "51875b58ba64ec65d7282a54c2db3d8861e0f3eefe882534b443725ba1de43de",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [27, 172]"],
      "similar_files": [],
      "dependencies": ["datetime", "db", "...core.events", "BaseModel"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\payment.py",
      "size": 4575,
      "created": "2024-12-22T13:29:17.395835",
      "modified": "2024-12-25T03:39:51.827708",
      "hash": "459ec9ee88553c48cb90e17c46896a03564634f310607d617ada43fdb255392e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..database", "BaseModel"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\reward.py",
      "size": 3687,
      "created": "2024-12-22T13:29:59.011529",
      "modified": "2024-12-25T03:44:52.110583",
      "hash": "e4129cb97ca191b6420dad070bee8e36a3482a441ec442ae68d25b15c5ba73f7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..database", "BaseModel"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\social.py",
      "size": 5530,
      "created": "2024-12-22T13:28:05.498211",
      "modified": "2024-12-25T03:34:20.838826",
      "hash": "ef07b45eba3333234250b3144aa448a56f7921075af32efedfb0753957e40ee5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [24, 25, 60, 61, 119]"],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..database", "BaseModel"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\tournament.py",
      "size": 565,
      "created": "2024-12-22T13:27:15.791928",
      "modified": "2024-12-22T13:53:18.989779",
      "hash": "399bc3b239fdcbfc7a128ae9b26b7f0b13a96a537aaacf12269df5c59282a957",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["src.core.tournaments.models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\venue.py",
      "size": 13961,
      "created": "2024-12-22T13:22:32.120900",
      "modified": "2024-12-25T03:31:38.248320",
      "hash": "a032e345638dde3a06ce8e29869e1829ad954f6cd1e18972f7f0ee5df0482ad3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "relationship",
        "sqlalchemy.ext.hybrid",
        "db",
        "..validation",
        "BaseModel",
        "venue."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\models\\__init__.py",
      "size": 1371,
      "created": "2024-12-22T13:18:37.475567",
      "modified": "2024-12-24T01:43:12.670742",
      "hash": "bc56cce5621d1ee2a915582ded5a8c19c6f954288ccb99406692a222b7e6697c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        ".base",
        "User",
        ".game",
        "Venue",
        ".social",
        "Payment",
        ".reward",
        "Notification",
        "..tournaments.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\narrative\\routes.py",
      "size": 292,
      "created": "2024-12-17T11:08:59.953262",
      "modified": "2024-12-17T17:09:40.121371",
      "hash": "3b5951fa5889d40f24734fd97d074bbbb3710496240996884eaaa274c48338e3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "User", "src.core.auth.utils"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\narrative\\story.py",
      "size": 9205,
      "created": "2024-12-17T11:07:09.663074",
      "modified": "2024-12-17T11:07:19.900176",
      "hash": "e05bec7cebff9b4fe27ea886ca426054acfbf44f909414a902f419f9a7480aaa",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [215, 231]"],
      "similar_files": [],
      "dependencies": ["logging", "typing", "JSON"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\payment\\__init__.py",
      "size": 10017,
      "created": "2025-01-05T08:28:44.242094",
      "modified": "2025-01-05T08:33:03.771831",
      "hash": "afd4e899363ef39e7cc2a06b0588db53fd07f1200b72d305510e60d1a8e31860",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": ["typing", "db", "dojopool.core.exceptions", "customer."],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\payments\\models.py",
      "size": 2319,
      "created": "2024-12-17T11:25:44.900501",
      "modified": "2024-12-17T11:25:56.988234",
      "hash": "e997cc9bc87753b431032c4cf66b03134880bc773e854a7229d8f23ec18a7405",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\payments\\routes.py",
      "size": 4524,
      "created": "2024-12-17T11:26:41.320462",
      "modified": "2024-12-17T11:26:53.775054",
      "hash": "77ad73bb5e42c6605ddb2f369441cf7335e8f391d83d535b4d43fb19415551d1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "login_required",
        ".stripe_service",
        "Payment",
        "..models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\payments\\stripe_service.py",
      "size": 5038,
      "created": "2024-12-17T11:26:13.450499",
      "modified": "2024-12-17T11:26:26.297122",
      "hash": "7d07fd21af7f94b1c3e582e1df0154997e97aecb80ae09718a565eaed6cf6974",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": ["stripe", "flask", "Payment", "..models"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\preferences\\__init__.py",
      "size": 6368,
      "created": "2025-01-05T08:28:03.694117",
      "modified": "2025-01-05T08:33:03.727833",
      "hash": "206649e6242e33c6f32c03b9c9a367c2f24f5fd90aefdf766efc2c363ae70743",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Implement proper validation"],
      "similar_files": [],
      "dependencies": ["typing", "db", "dojopool.core.exceptions"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\ranking\\__init__.py",
      "size": 6980,
      "created": "2024-12-23T07:52:54.257682",
      "modified": "2025-01-05T08:26:47.881929",
      "hash": "66222502ed45541fd451528240a9e052a6f22fb14ea3e47f83489e9369e80f77",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "db", "dojopool.core.cache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\analytics.py",
      "size": 19046,
      "created": "2025-01-10T04:32:29.965532",
      "modified": "2025-01-10T04:34:35.089420",
      "hash": "869cf2c5e24119ba7bc7e7968af9a5aad5ee5e1022dd1c308c970d605d6b6630",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [110, 188]"],
      "similar_files": [],
      "dependencies": ["typing", "MetricTypes", ".log_config", "slope."],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\auth.py",
      "size": 10834,
      "created": "2024-12-20T15:12:37.224108",
      "modified": "2024-12-24T16:25:45.778705",
      "hash": "073556200b0676d7e108c246de44da34781d9673c42b359375ecce91004e3315",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "ErrorCodes", ".utils", "logger", "last"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\client.py",
      "size": 1937,
      "created": "2024-12-20T15:07:40.397796",
      "modified": "2024-12-24T17:25:10.213894",
      "hash": "1bc4355919fda9247424054fbc6036ed13ec3b6e31bf15167429dae273b52812",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "socketio", ".errors", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\config.py",
      "size": 6619,
      "created": "2024-12-20T15:55:03.635783",
      "modified": "2024-12-20T16:21:32.375884",
      "hash": "d5eeddea6b67da5bf41daa2dcab432fa7b24529ffb682c414d686916a41ea43f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "dictionary."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\constants.py",
      "size": 5449,
      "created": "2024-12-20T15:56:38.043065",
      "modified": "2025-01-10T04:26:32.708651",
      "hash": "e9b72fafbef3f882b33259b73fc8580c943f2f6dbd4c2ecb504a2510cde8417e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["enum"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\decorators.py",
      "size": 10892,
      "created": "2024-12-20T15:57:42.724132",
      "modified": "2024-12-22T13:08:12.587645",
      "hash": "8a91df365f441cf0eb6748b9bc22b8438a98df1eac9f5667542627f3a33b40bc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "ErrorCodes", ".utils", ".log_config"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\docs.py",
      "size": 7895,
      "created": "2024-12-20T15:09:25.347726",
      "modified": "2024-12-20T15:11:01.630786",
      "hash": "aa49b1dbcb49b57116b435ed23dc895a5d629771c3f41115d47d619e5127ecf6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "server"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\env_config.py",
      "size": 6633,
      "created": "2024-12-20T15:55:34.211215",
      "modified": "2024-12-20T15:57:56.613313",
      "hash": "28e61a4c8e42a5bd7836a17b6711ac8e5b03dab99c35c81f8a4e57239e96fe45",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "typing", "WebSocketConfig"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\errors.py",
      "size": 4629,
      "created": "2024-12-20T15:09:50.214684",
      "modified": "2024-12-20T15:11:01.630786",
      "hash": "ec817d2c532bd37c84cc577f6c33f9032a7f8b352e5568b4ddce5204977318be",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [17, 37, 42, 115]"],
      "similar_files": [],
      "dependencies": ["typing", ".docs"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\events.py",
      "size": 14642,
      "created": "2024-12-20T15:07:16.964912",
      "modified": "2024-12-24T16:27:38.131371",
      "hash": "d726177ad46343439fdcdffa23c4120a5e47089021c21ef60c939d06796c8f79",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "EventTypes",
        ".utils",
        "logger",
        ".validation",
        "rate_limit",
        ".auth",
        "event_handler"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\log_config.py",
      "size": 5448,
      "created": "2024-12-20T15:56:03.577332",
      "modified": "2024-12-20T16:35:45.356240",
      "hash": "182f77d4b707944159a5dad857e77777daf5db64187c0ecb18eff87102beba24",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["logging", "os", "datetime"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\metrics.py",
      "size": 7049,
      "created": "2024-12-20T15:08:31.429518",
      "modified": "2024-12-20T15:20:01.259813",
      "hash": "8127ca59aa8bf31e8172b93945d8c9bb798b4447c5eefff8f89f08c1535dfb91",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\middleware.py",
      "size": 5195,
      "created": "2024-12-20T15:08:05.944114",
      "modified": "2024-12-20T15:09:08.384127",
      "hash": "fa37433918f854e455cddb4ce9651cd5ee143c1246516b960b854ebf42f05651",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "cache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\notification_handlers.py",
      "size": 2054,
      "created": "2024-12-23T04:07:59.821405",
      "modified": "2024-12-23T04:09:22.881026",
      "hash": "42757c765b7896755a15bf951ecec47d7b2bbacc815cf3eb33abe49e680b8e7e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_socketio", "NotificationService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\rate_limit.py",
      "size": 6850,
      "created": "2024-12-20T15:10:18.363069",
      "modified": "2024-12-20T16:35:45.358243",
      "hash": "ba5bc7a60cc4a8a4764579c4465d5616bbb7aadb3a00ccf7b8abcce550a06d76",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "ErrorCodes", ".utils", "logger"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\rooms.py",
      "size": 12008,
      "created": "2024-12-20T15:10:53.569106",
      "modified": "2024-12-20T16:35:45.362395",
      "hash": "6b874b2a440c1e2c0c84c1de7c0baaea9ab9d1f1caa7792fb212cd5d55fce54d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        "room.",
        "user",
        "room.",
        "Returns",
        "room"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_broadcast.py",
      "size": 9574,
      "created": "2024-12-20T16:28:24.466297",
      "modified": "2024-12-20T16:59:13.006768",
      "hash": "9ba228499ef2866cd97e2f947856dcb3216c9ed6eafed357bc26df7a82762022",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        ".room_state",
        "room_monitor",
        ".rooms"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_cleanup.py",
      "size": 11603,
      "created": "2024-12-20T16:48:20.994707",
      "modified": "2024-12-20T16:59:13.003766",
      "hash": "adb0961e8d81cd3130fc4ecbc9d248c04e574e78c52bfbdbe85a5b2086175100",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        ".room_state",
        "room_persistence",
        ".room_monitor",
        "room_manager",
        "manager"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_config.py",
      "size": 5150,
      "created": "2024-12-20T16:26:16.568039",
      "modified": "2024-12-20T16:35:45.363392",
      "hash": "6e8df3231e4b71132b6835d5fb33a83cb96f69ac9ef18e30aa6eb65d40074895",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "RoomTypes"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_events.py",
      "size": 13547,
      "created": "2024-12-20T16:27:51.148562",
      "modified": "2024-12-20T16:35:45.365563",
      "hash": "e5aba7bd1fa98d22a7f9a5a2cb97482fa436608240e37e50fe2056f27eaf5521",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".room_config",
        ".rooms",
        "format_error_response",
        ".log_config",
        "room"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_init.py",
      "size": 13573,
      "created": "2024-12-20T16:33:05.417818",
      "modified": "2024-12-20T16:59:13.004766",
      "hash": "cf7fe3fb4960457972f1333c2c45d07ef170275c407921df4b6b4c8e632a04b8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        ".room_state",
        "room_persistence",
        ".room_monitor",
        "room_notifications",
        ".room_validation",
        "room_manager"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_logging.py",
      "size": 13588,
      "created": "2024-12-20T16:30:27.139159",
      "modified": "2024-12-20T16:35:45.367565",
      "hash": "110d9c2ba1ee5e838899925cff037e703a2a51d88cfd1cc06189e39451f54cc4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "os",
        "pathlib",
        "EventTypes",
        ".log_config",
        "log."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_monitor.py",
      "size": 13164,
      "created": "2024-12-20T16:28:59.668316",
      "modified": "2024-12-20T16:46:38.029030",
      "hash": "68573da3ea207b2019de78ecde77c0ab219d04f9f5f0c27bd705f21a913b72c8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".rooms",
        "format_error_response",
        ".log_config"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_notifications.py",
      "size": 28602,
      "created": "2024-12-20T16:48:58.248532",
      "modified": "2025-01-10T04:32:01.833660",
      "hash": "16c9451ff744fe59832d1252e09cb4ec1313c2f892fcd52e09c5ed39cc11c0df",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [149, 240, 306]"],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        ".room_state",
        "room_monitor",
        ".room_broadcast",
        "room_manager",
        "event."
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_persistence.py",
      "size": 11249,
      "created": "2024-12-20T16:31:05.316343",
      "modified": "2024-12-20T16:35:45.369565",
      "hash": "ea9b69cefd6147a7b941b98c1f7aa69fc06283eb7f35364d3eb4297fdf4b3118",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "ErrorCodes", ".utils", "logger", ".rooms"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_rate_limit.py",
      "size": 12820,
      "created": "2024-12-20T16:29:44.400789",
      "modified": "2024-12-20T16:35:45.367565",
      "hash": "4ae0257a9edfab4cc3d3a1d283a7b0adc4a73675466cfe71981c31873c9680e9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "ErrorCodes", ".utils", "logger"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_recovery.py",
      "size": 11866,
      "created": "2024-12-20T16:31:40.266310",
      "modified": "2024-12-20T16:59:13.004766",
      "hash": "3db87092afac9bd65fb5081a055e30ba40e3b99e55c21de03fbfa97b4dad9160",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        ".room_state",
        "room_persistence",
        ".room_monitor",
        "room_notifications",
        ".rooms",
        "error",
        "persisted"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_state.py",
      "size": 12931,
      "created": "2024-12-20T16:39:10.399222",
      "modified": "2024-12-20T16:46:38.029030",
      "hash": "7b9025e7f9c73a281cd79e0cd477231d81f7eca3eaa65a9628ea942aade41eb4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "ErrorCodes",
        ".utils",
        "logger",
        ".room_persistence",
        "room",
        "history"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\room_validation.py",
      "size": 16505,
      "created": "2024-12-20T16:27:08.823523",
      "modified": "2024-12-20T16:59:13.010772",
      "hash": "d66734bdf8a24b187e28020828bd66f27dc5c73b01c1596310c10cd6f9b2a1cb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "ErrorCodes", ".utils", "logger"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\schemas.py",
      "size": 9989,
      "created": "2024-12-20T15:19:57.818279",
      "modified": "2024-12-20T16:18:15.218937",
      "hash": "ac1cfbae85861bc6d4d7642312cd7e1adbb67a897406ec5266c5825feb7d5b78",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [275, 276]"],
      "similar_files": [],
      "dependencies": ["typing", "EventTypes", ".errors"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\security.py",
      "size": 10480,
      "created": "2024-12-20T15:58:20.777359",
      "modified": "2024-12-20T16:10:45.669084",
      "hash": "8e560f904963c794e1e2f503d3d1e8b6f6b4b91b2290a743f5619bbf56ec44ac",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: secret",
        "Long lines found on lines: [285]"
      ],
      "similar_files": [],
      "dependencies": [
        "hashlib",
        "ErrorCodes",
        ".utils",
        "logger",
        "blacklist."
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\testing.py",
      "size": 6955,
      "created": "2024-12-20T15:08:56.151833",
      "modified": "2024-12-20T15:20:01.277982",
      "hash": "aebe3373b0998911a0804798fa73ce88e7ed47651832a3d3a8fd2134e577e9cc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "MagicMock",
        "flask_socketio",
        "WebSocketError"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\utils.py",
      "size": 9890,
      "created": "2024-12-20T15:57:11.358209",
      "modified": "2024-12-24T16:24:47.379850",
      "hash": "7a03383a03bbe10945c9adb505746097fbe66cc46ac8b4b5d73df1fad94d7b9b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Load from configuration file",
        "TODO found: Implement proper schema validation"
      ],
      "similar_files": [],
      "dependencies": ["typing", "urlparse", ".constants", "configuration"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\validation.py",
      "size": 10619,
      "created": "2024-12-20T15:54:34.412344",
      "modified": "2024-12-20T16:21:32.376885",
      "hash": "50f7b1ee2c6737caca2fb57f9881398f30deb2e90466749ecbe9deb78c38cf5d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [197]"],
      "similar_files": [],
      "dependencies": ["typing", "EventTypes", ".utils"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\realtime\\__init__.py",
      "size": 6313,
      "created": "2024-12-23T07:52:54.258681",
      "modified": "2024-12-25T03:09:01.669954",
      "hash": "3444b6b9fdc7cc07f81e9f7bbcc47444ecc85dd7838731729f65665b8e1633c2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "..matchmaking.events",
        ".metrics",
        "socketio"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\rewards\\models.py",
      "size": 1973,
      "created": "2024-12-17T11:34:20.229920",
      "modified": "2024-12-17T11:34:32.865010",
      "hash": "a5098e9911e6393c13a3ba1cae8b35ef33b5b8eb54853c89606144d59f13df74",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\rewards\\routes.py",
      "size": 3816,
      "created": "2024-12-17T11:36:22.476073",
      "modified": "2024-12-17T11:36:36.815996",
      "hash": "f2ab7380ed2ff0e9cbe339ed6ec9c7da5ecb6d7bb099d40c9eb93a5cae1b5192",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "login_required", ".service"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\rewards\\service.py",
      "size": 5163,
      "created": "2024-12-17T11:35:19.088080",
      "modified": "2024-12-17T11:36:05.072737",
      "hash": "afae0ccf0432499d4f26a5d39959eb337fe8722827ef5e87b1b707ecd0088080",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "RewardTier", "..models", "user"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\scripts\\check_db.py",
      "size": 1415,
      "created": "2024-12-17T15:27:58.289773",
      "modified": "2024-12-17T15:28:04.115102",
      "hash": "a9321905e02c5a163c9a5cf780068a593bee930ff6b96b4bf8fa044a93c6eed7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [44]"],
      "similar_files": [],
      "dependencies": ["os", "app", "User"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\scripts\\seed_db.py",
      "size": 6146,
      "created": "2024-12-17T15:21:05.024205",
      "modified": "2024-12-17T20:53:16.034225",
      "hash": "648b8a6aa2ee4643959f3d81a470649e5db1f9299f38289fcc77d2d37663aad7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "src.app", "db", "src.core.models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\security\\sanitization.py",
      "size": 3980,
      "created": "2025-01-14T03:18:35.329538",
      "modified": "2025-01-14T03:18:52.427372",
      "hash": "bc2b55d207ed0b3bf3a5bbd434733548828137be8d2641c85be957c335154bc8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\security\\session.py",
      "size": 5709,
      "created": "2024-12-23T08:00:27.951082",
      "modified": "2025-01-06T07:28:42.929166",
      "hash": "8a3a7a5fb15a1a3f80a6cfe696ee5ca02821f74faaa73a179765d4a142dea012",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["time"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\security\\tokens.py",
      "size": 1560,
      "created": "2025-01-14T15:36:06.640824",
      "modified": "2025-01-14T15:36:22.730112",
      "hash": "830faeb2479194cc773fd453a37d07de332d2240af84f6c44a5a125737710ff5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["secrets", "datetime"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\security\\virus_scan.py",
      "size": 3429,
      "created": "2025-01-14T03:18:10.291504",
      "modified": "2025-01-14T03:18:14.465750",
      "hash": "6d3776b09a0e7e7ead58f2c28f614f7d9b456f5a52672ca97e0730568731ddb0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "FileStorage"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\security\\__init__.py",
      "size": 74,
      "created": "2025-01-06T06:59:15.884017",
      "modified": "2025-01-06T07:07:23.386152",
      "hash": "57b5cf8bf481bb9e394f8bbea52a42e6a856e482413e30d26fbf30fdfa9b5891",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".session"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\achievements.py",
      "size": 16874,
      "created": "2024-12-23T05:19:59.013880",
      "modified": "2024-12-23T05:22:50.578026",
      "hash": "e3f530419ad978c67509e57a8673a38d570cbb3ae76a9bee0414edc07bc241c3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [383]"],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "src.core.models",
        "emit_event",
        "src.core.config.achievements",
        "cache",
        "src.core.models",
        "src.core.models"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\ai_recommendations.py",
      "size": 9664,
      "created": "2024-12-23T05:01:43.805661",
      "modified": "2024-12-23T05:05:11.298960",
      "hash": "72354e3be434fe7b9cbaf97dc3ab1cdebc42e581ee4e61ac36460b787421bf9c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "numpy",
        "datetime",
        "StandardScaler",
        "sklearn.metrics.pairwise",
        "db",
        "src.core.models",
        "cache",
        "cache",
        "recent",
        "recent"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\game_analysis.py",
      "size": 28005,
      "created": "2025-01-10T04:46:45.863763",
      "modified": "2025-01-10T04:47:21.813715",
      "hash": "6b4c0c2e54cb48bffc42d3b453b233596ae38651d4e683f0140948fc744ca719",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [55, 243]"],
      "similar_files": [],
      "dependencies": [
        "numpy",
        "tensorflow",
        "tensorflow.keras.models",
        "ResNet50",
        "scipy.stats",
        "cache",
        "src.core.config",
        "ShotAnalyzer",
        "cache",
        "more"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\matchmaking.py",
      "size": 14926,
      "created": "2024-12-23T05:23:00.641835",
      "modified": "2024-12-23T05:24:29.332500",
      "hash": "29f2dc261b45f906ec21e5bbb4200feb6546c371fa3ae066e1d8a610185d4b6d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "datetime",
        "db",
        "src.core.models",
        "RecommendationEngine",
        "cache",
        "src.core.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\narrative.py",
      "size": 15274,
      "created": "2024-12-23T05:05:32.578371",
      "modified": "2024-12-24T03:15:42.604770",
      "hash": "60af54df8182f6253293a6fc77cc631420ba28cda22b47427b85232e58eb3c26",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": [
        "openai",
        "typing",
        "cache",
        "src.core.config",
        "cache",
        "src.core.models",
        "cache",
        "src.core.models",
        "game."
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\performance_prediction.py",
      "size": 25142,
      "created": "2025-01-10T04:48:00.834272",
      "modified": "2025-01-10T04:55:01.188478",
      "hash": "562a054b912877b164c8fbfd0d92356fdc1f66397cce9982fd23d0b6b2c6d9c2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [60, 73, 79, 584]"],
      "similar_files": [],
      "dependencies": [
        "numpy",
        "tensorflow",
        "tensorflow.keras.models",
        "EfficientNetB0",
        "sklearn.preprocessing",
        "cache",
        "src.core.config",
        "ShotAnalyzer",
        "src.core.services.game_analysis",
        "cache"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\services\\shot_analysis.py",
      "size": 25115,
      "created": "2024-12-23T05:03:00.897712",
      "modified": "2025-01-10T04:45:30.231156",
      "hash": "6aa273ad7e7e04914b37de3187bdd7bf02714c61a7fa5dbe22af441de1847724",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [277, 312]"],
      "similar_files": [],
      "dependencies": [
        "cv2",
        "load_model",
        "tensorflow.keras.applications",
        "image",
        "tensorflow.keras.applications.mobilenet_v2",
        "distance",
        "cache",
        "src.core.config",
        "cache"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\social\\models.py",
      "size": 3566,
      "created": "2024-12-17T11:41:29.071806",
      "modified": "2024-12-17T11:42:10.703664",
      "hash": "dc07106c1429c89bf8f7b57e286f784174f5a539251f870e7daa76972e1fa58c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [12, 57]"],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..models"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\social\\routes.py",
      "size": 7196,
      "created": "2024-12-17T11:43:41.210271",
      "modified": "2024-12-17T11:43:55.506241",
      "hash": "31d4174ceb624ef4d220c3620b33d68ba7429d1e149662050aa89ff079155565",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [173]"],
      "similar_files": [],
      "dependencies": [
        "flask",
        "login_required",
        ".service",
        "Friendship",
        "other_user"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\social\\service.py",
      "size": 6514,
      "created": "2024-12-17T11:43:02.481326",
      "modified": "2024-12-17T11:43:16.459557",
      "hash": "eae290f1016ecdce4deaa6907224d56e474673d3ea9869644ec00f4697db0160",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [127, 164]"],
      "similar_files": [],
      "dependencies": ["datetime", "Friendship", "..models", "other_user"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\sponsorships\\models.py",
      "size": 2602,
      "created": "2024-12-17T11:29:18.962948",
      "modified": "2024-12-17T11:29:32.844038",
      "hash": "07b88830959b1936d192204c5685ea5b878a200d2af47db99d13d46a83c6b8b1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [43]"],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..models"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\sponsorships\\routes.py",
      "size": 5370,
      "created": "2024-12-17T11:30:50.958920",
      "modified": "2024-12-17T11:31:03.558597",
      "hash": "f21e14310d80287e80c8634642c37a3d25a14cb30ce45ee6e5db50bfc8d2ebf0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "login_required", ".service", "Sponsor"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\sponsorships\\service.py",
      "size": 5050,
      "created": "2024-12-17T11:30:19.179500",
      "modified": "2024-12-17T11:30:32.306467",
      "hash": "e5843d09fcce12ac88847e1a256bdf0dbe250941407ec579cd65bbd6e89f5202",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "Sponsor", "..models", "StripeService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\tournament\\__init__.py",
      "size": 15744,
      "created": "2024-12-23T07:52:54.257553",
      "modified": "2025-01-05T08:27:55.828907",
      "hash": "f526d6c79caa6cd8a3653e0afb1c613ac0ed244cf088dd75507abe0a38440265",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Implement double elimination bracket creation"],
      "similar_files": [],
      "dependencies": ["typing", "dojopool.core.exceptions"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\tournaments\\models.py",
      "size": 6114,
      "created": "2024-12-17T11:45:13.653846",
      "modified": "2024-12-24T02:17:12.874182",
      "hash": "c56cc7e3233da3fb90a2a57bcec0e65ba6e639721dc7f77e5bb89bd74e8424c2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [71]"],
      "similar_files": [],
      "dependencies": ["datetime", "relationship", "..database", "BaseModel"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\tournaments\\routes.py",
      "size": 10679,
      "created": "2024-12-17T11:47:15.764256",
      "modified": "2024-12-17T16:59:22.159196",
      "hash": "a0ef15a9cc763ba43b97ad621fe26e59bf54f48419992ccd411a589f6c9d240b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "Tournament",
        "src.core.auth.utils",
        "a",
        "tournament",
        "tournament"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\tournaments\\service.py",
      "size": 12745,
      "created": "2024-12-17T11:46:42.221641",
      "modified": "2024-12-17T11:46:56.072131",
      "hash": "b94a8fd7abb30cc98e41a9e3d6034188c0c82227aa4d8c8b8c5a41e63a1f2a73",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [4, 112, 300]"],
      "similar_files": [],
      "dependencies": ["datetime", "Tournament", "..models"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\training\\models.py",
      "size": 2029,
      "created": "2024-12-17T11:59:50.451600",
      "modified": "2024-12-17T12:00:06.020338",
      "hash": "7c44a09ca88acab9a9ce40dab2d4ebc3a30e1cd201e3076c39beca698cde3db4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["sqlalchemy", "relationship", "..models"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\training\\routes.py",
      "size": 4250,
      "created": "2024-12-17T12:01:02.625745",
      "modified": "2024-12-17T12:01:16.853899",
      "hash": "a9661e003bf4f34b3e313e5d52c444d5b53bfcfb473cbe193137f7005af92f14",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "login_required",
        ".service",
        "TrainingProgram"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\training\\service.py",
      "size": 6559,
      "created": "2024-12-17T12:00:30.116594",
      "modified": "2024-12-17T12:00:45.603266",
      "hash": "c3e9cf0bd12616745dddd125d86a9c5a46ee6a44d45360a6103dedfbe5b111d3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [118, 123, 125, 128, 132, 134, 137]"
      ],
      "similar_files": [],
      "dependencies": ["datetime", "db", ".models", "AIService"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation\\base.py",
      "size": 1393,
      "created": "2024-12-22T13:05:45.617701",
      "modified": "2025-01-05T08:18:01.705423",
      "hash": "fbf60eb197a95adc211a766141f8dcb008a27abfdb775b33d47bc0ca97b50d53",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation\\decorators.py",
      "size": 2825,
      "created": "2025-01-05T08:18:53.817135",
      "modified": "2025-01-05T08:18:58.576890",
      "hash": "be27e276f588c6301da42abc363d6d0c07c078612d9e559b8607f2c697b21685",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["functools", "BaseValidator"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation\\schemas.py",
      "size": 6332,
      "created": "2024-12-18T16:27:21.026551",
      "modified": "2025-01-05T08:19:36.513730",
      "hash": "9d2e98989c448aab6449cd474ed5ca8d72aab2333f491d3add7a8f32a813682e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["marshmallow"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation\\utils.py",
      "size": 7518,
      "created": "2024-12-18T16:27:47.331652",
      "modified": "2025-01-05T08:18:52.957781",
      "hash": "1e1eaf477d126d15c95b3f47f34a2a0fb9876770b361ad0eb4c28f48a05a28f7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["re", "typing", "ValidationResult"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation\\validators.py",
      "size": 12052,
      "created": "2024-12-22T13:16:03.488362",
      "modified": "2025-01-05T08:17:24.196743",
      "hash": "a83e241699aae6a8c62ded96e2ca5c24b753af34e559682a6950d75b2e13d78f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["typing", "BaseValidator"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\validation\\__init__.py",
      "size": 1651,
      "created": "2024-12-18T16:26:52.281722",
      "modified": "2025-01-05T08:18:01.698423",
      "hash": "132d6bb5df541df6f2b784fb3427ca3b0ff6c70d21ccb8c95492762303b418ab",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [".base", ".decorators", ".utils"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\venues\\geo_routes.py",
      "size": 3400,
      "created": "2024-12-17T11:22:47.911714",
      "modified": "2024-12-17T11:23:00.506056",
      "hash": "9a3e2eff172b24ba26a4e9a75b5c470be8ac6882b47b2160a1ebb27436b63d76",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "GeoService", "..auth.decorators"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\venues\\geo_service.py",
      "size": 2977,
      "created": "2024-12-17T11:22:23.420250",
      "modified": "2024-12-17T11:22:35.597467",
      "hash": "39380c860388292d4507d0ddf7d8520a38e1c50263e03d0bc9d1c987804da66e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement actual visit tracking",
        "TODO found: Implement regional leaderboard",
        "TODO found: Implement challenge generation logic",
        "Long lines found on lines: [12, 47]"
      ],
      "similar_files": [],
      "dependencies": ["typing", "geodesic", "sqlalchemy", "Venue", "..models"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\venues\\qr.py",
      "size": 6059,
      "created": "2024-12-17T11:15:51.363575",
      "modified": "2024-12-17T11:16:02.684271",
      "hash": "bbb4b2ec0b85c4d0a73b55c82c271c50dead49b1031a367bb49efb4f08705219",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["qrcode", "PoolTable", "core.models", "QR"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\venues\\qr_routes.py",
      "size": 5665,
      "created": "2024-12-17T11:16:52.287243",
      "modified": "2024-12-17T11:17:03.261469",
      "hash": "b5d37608d3d81a54d37b8e47982e160356243331ac1f1aa40a7d585efc481862",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: secret"],
      "similar_files": [],
      "dependencies": ["flask", "QRCodeManager"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\venues\\routes.py",
      "size": 5971,
      "created": "2024-12-17T10:41:14.735126",
      "modified": "2024-12-17T20:46:38.901253",
      "hash": "d8e87ec89810fee945ec0e6a3010e344d4cd1f1574884a608f8147eea31f3829",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "Venue", "src.core.auth.utils"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\venues\\service.py",
      "size": 10387,
      "created": "2024-12-17T11:12:45.186021",
      "modified": "2024-12-17T11:12:56.676160",
      "hash": "726d9025637a5a42e1c742f9003e12be80fa52e1d21c1b7b6a712526d3f59fe2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [19]"],
      "similar_files": [],
      "dependencies": ["logging", "typing", "Venue", "core.models", "Google"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\vision\\ball_tracker.py",
      "size": 4781,
      "created": "2024-12-17T10:44:10.639332",
      "modified": "2024-12-17T17:10:53.693568",
      "hash": "09cf687e692ea821b21fa9590705903646b3872beb1316e2e2c84497e1e8be56",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["cv2"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\vision\\camera.py",
      "size": 6118,
      "created": "2024-12-17T10:43:31.379627",
      "modified": "2024-12-17T10:43:39.187995",
      "hash": "5bae3901426d035cd8d62de24faf0488758ed90c6fcb9c44f32d259f7cc38879",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["cv2", "corner", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\vision\\game_tracker.py",
      "size": 4410,
      "created": "2024-12-17T10:45:05.427953",
      "modified": "2024-12-17T17:11:58.385356",
      "hash": "aea8595fa52c5eaef1944b9ac6fb23d6c27ea84ca21f1c2bbad45569425b7d50",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["cv2", "BallTracker"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\vision\\monitor.py",
      "size": 6314,
      "created": "2024-12-17T10:45:44.856679",
      "modified": "2024-12-17T17:08:35.751090",
      "hash": "70e27520f1704ab844e92ec4dd0da6b4f1260ef11da8b0db02c3203fa65a4b50",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "cv2",
        "Game",
        "src.core.vision.camera",
        "BallTracker",
        "src.core.vision.game_tracker",
        "active",
        "the",
        "camera"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\vision\\routes.py",
      "size": 5107,
      "created": "2024-12-17T10:46:14.269913",
      "modified": "2024-12-17T17:07:25.478465",
      "hash": "c5459db8bd113fecce1f62a3c336cc539b9a212feb0cc04dea5a4fdf58a1f96b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "Game",
        "src.core.auth.utils",
        "PoolCamera",
        "src.core.vision.ball_tracker",
        "GameTracker",
        "src.core.vision.monitor"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\websocket\\__init__.py",
      "size": 5108,
      "created": "2025-01-05T08:22:19.577794",
      "modified": "2025-01-05T08:25:51.204333",
      "hash": "32580451e1aad8cf947a9a458c40f182580640de75a0bacd0bc522ab4c49ee20",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "typing",
        "User",
        "dojopool.core.exceptions",
        "WebSocket.",
        "room"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\animations\\pulse.json",
      "size": 1099,
      "created": "2024-12-17T11:01:25.318278",
      "modified": "2025-01-10T05:54:15.289815",
      "hash": "58f721be950eaf13d26bd5c416d90db786f9c26cd15c0d442326b0b8c64b23b8",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\animations\\sparkle.json",
      "size": 1835,
      "created": "2024-12-17T11:01:45.699192",
      "modified": "2025-01-10T05:54:15.304814",
      "hash": "449e946e7290a435502f4d6030140ffa723c0dc487a8281e4f7d6b86ac4d7f4e",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\animations\\victory.json",
      "size": 2725,
      "created": "2024-12-17T11:02:31.169238",
      "modified": "2025-01-10T05:54:15.318816",
      "hash": "d8dbcdc893b0fe1879cdc5c6547133c04426e542ad442d8d536298478443df1b",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\avatars\\animations\\wave.json",
      "size": 2153,
      "created": "2024-12-17T11:02:06.736659",
      "modified": "2025-01-10T05:54:15.330813",
      "hash": "e19adeb408481089e57afdc2c25455b2255b9a8397c86acc6d9acd74001abbb8",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\migrations\\env.py",
      "size": 2413,
      "created": "2024-12-22T13:55:09.124316",
      "modified": "2024-12-22T14:04:14.960900",
      "hash": "15a35daf34987e0b9e6cd77d5ba3375e0543b4984ed6fecae47c82fcd571ee72",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["logging.config", "declarative_base", "alembic", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\migrations\\script.py.mako",
      "size": 534,
      "created": "2024-12-22T13:55:54.835619",
      "modified": "2024-12-22T13:56:17.571328",
      "hash": "2ca4e8780429bf9d3f0542948b6f811aec5943523f685c7f3f079e148487ac9b",
      "extension": ".mako",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\migrations\\versions\\001_tournament_consolidation.py",
      "size": 6449,
      "created": "2024-12-22T13:53:36.836212",
      "modified": "2024-12-22T13:55:07.538167",
      "hash": "fdb8cd7f3f3f4043d5f22df7be46d7a98ddb689c3045d72ef9ffc4bfcd8f6585",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [97]"],
      "similar_files": [],
      "dependencies": [
        "alembic",
        "tournaments",
        "tournament_matches",
        "tournament_prizes"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\database\\migrations\\versions\\f8caf39c2c4f_tournament_consolidation.py",
      "size": 6404,
      "created": "2024-12-22T14:00:39.772207",
      "modified": "2024-12-22T14:04:14.960900",
      "hash": "4e690b18746037f98bb62cf1e016237e266aac125a0413ca1861b4b0ea505192",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [100]"],
      "similar_files": [],
      "dependencies": [
        "alembic",
        "tournaments",
        "tournament_matches",
        "tournament_prizes"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\conftest.py",
      "size": 3949,
      "created": "2024-12-23T06:04:48.225160",
      "modified": "2024-12-23T06:05:52.946082",
      "hash": "d1a8181842a1458f56a8b07b284df6c0dad1931cd48d75eed83d51362329c3a4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "unittest.mock",
        "Matchmaker",
        "...models.user",
        "Game",
        "...models.venue"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\run_tests.py",
      "size": 1277,
      "created": "2024-12-23T05:32:02.822644",
      "modified": "2024-12-23T06:03:02.381365",
      "hash": "b8b18c7195b2638d2360918c41645a012e9aea282a1567950e906aa2f2db9bb8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_api.py",
      "size": 10149,
      "created": "2024-12-23T06:21:30.116013",
      "modified": "2024-12-23T06:22:23.080489",
      "hash": "7e2fd2fc8662f568d4df7dd969794a5f0673d17a817a573f83315a601562ebc1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Mock",
        "fastapi",
        "TestClient",
        "httpx",
        "..matchmaker",
        "MatchmakingDB",
        "..websocket",
        "TEST_USERS"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_config.py",
      "size": 3870,
      "created": "2024-12-23T05:32:38.243266",
      "modified": "2024-12-23T06:03:02.380362",
      "hash": "3536186902a01c63aefca555197bc3e35755d049afd788e1b3e36fd6d2fe165c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_database.py",
      "size": 10136,
      "created": "2024-12-23T06:17:32.590690",
      "modified": "2024-12-23T06:19:12.929334",
      "hash": "fbe92f26310e119117a9ac102bc0ecb3983150b9ff764275754cf4dcdf716353",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Mock",
        "..database",
        "DatabaseError",
        ".test_config"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_events.py",
      "size": 9060,
      "created": "2024-12-23T06:06:46.452940",
      "modified": "2024-12-23T06:07:55.533747",
      "hash": "e5a8c16bff44647bb0595d9434a7f50a3c63d8f6daaeffd28301c2bdcfcabf74",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Mock",
        "..events",
        ".test_config",
        "events."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_exceptions.py",
      "size": 8505,
      "created": "2024-12-23T05:31:19.440538",
      "modified": "2024-12-23T05:56:22.610796",
      "hash": "f3967232fe4df64237e8747d09bb1c49b1a0edf75294c2841db46eabfd12a112",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [80, 106]"],
      "similar_files": [],
      "dependencies": ["unittest", ".test_config", "MatchmakingError"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_matchmaker.py",
      "size": 7665,
      "created": "2024-12-23T05:29:10.381633",
      "modified": "2024-12-23T05:37:42.490103",
      "hash": "2006fc53db652468888141db0e825cf5b90f2945acc69718064378d472756dd8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "unittest",
        "Mock",
        "..matchmaker",
        "...models.user",
        "Game",
        "...models.venue",
        ".test_config",
        "the"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_notifications.py",
      "size": 10788,
      "created": "2024-12-23T06:09:07.920950",
      "modified": "2024-12-23T06:13:32.318336",
      "hash": "506225f290cef6f424ec26fd824dceebfe731d4a36b6a96a066ed5eb55fd78e5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Mock",
        "..notifications",
        ".test_config"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_utils.py",
      "size": 7735,
      "created": "2024-12-23T05:30:18.935492",
      "modified": "2024-12-23T05:56:22.610796",
      "hash": "79e9668d78ec630f362ff693600e6b2aefab591c3442a7e48a4f94e95d1c4530",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "unittest",
        "Mock",
        "..utils",
        "...models.user",
        "Venue",
        "...config.matchmaking",
        ".test_config"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\test_websocket.py",
      "size": 9435,
      "created": "2024-12-23T06:19:52.520175",
      "modified": "2024-12-23T06:20:37.865125",
      "hash": "682dc77bd3bece1ccbad0bb95b2acc910c3f0c3ec17e36e8e364aceae17a366f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "Mock",
        "websockets",
        "websockets.server",
        "ConnectionClosed",
        "..websocket",
        "..exceptions",
        "TEST_USERS"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\matchmaking\\tests\\__init__.py",
      "size": 0,
      "created": "2024-12-23T05:29:47.271057",
      "modified": "2024-12-23T05:29:47.271057",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_avatar_support.py",
      "size": 1102,
      "created": "2024-12-17T10:50:01.197580",
      "modified": "2024-12-17T10:50:10.430218",
      "hash": "e73385b048efaa00f6885492832cd11ead9e535e27f9e00d89e9fb77438b760d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [22]"],
      "similar_files": [],
      "dependencies": ["alembic"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_payment_system.py",
      "size": 3552,
      "created": "2024-12-17T11:27:09.287551",
      "modified": "2024-12-17T11:27:21.486833",
      "hash": "f4ff8ecdcf29e1866ccc319beba475379ebb7384b3e81f5dc175250e4909b754",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alembic", "users"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_rewards_system.py",
      "size": 2509,
      "created": "2024-12-17T11:34:45.607719",
      "modified": "2024-12-17T11:34:58.819188",
      "hash": "f1120be464465c6444635a6405dc9fa39ee96f2d7c99d5719f817256b3b46add",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alembic"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_social_features.py",
      "size": 4637,
      "created": "2024-12-17T11:42:26.059230",
      "modified": "2024-12-17T11:42:39.825107",
      "hash": "e5c3461b8676f33b0d38b5540afc6e960ca4f433147a31392e9c7bc344c6f631",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [22, 30, 77]"],
      "similar_files": [],
      "dependencies": ["alembic"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_sponsorship_system.py",
      "size": 3118,
      "created": "2024-12-17T11:29:45.711363",
      "modified": "2024-12-17T11:29:59.722110",
      "hash": "b4159c5dcc299c5a809f657eb448e86d231bd63b377fa6f7be19dfea4f8a0e71",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alembic"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_tournament_system.py",
      "size": 6630,
      "created": "2024-12-17T11:45:49.105415",
      "modified": "2024-12-17T11:46:03.895939",
      "hash": "cd506c772ff064e66d678b86261904bde73c88d0ebb449a61e5af8735edc274b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [19, 20, 22, 39, 56, 57, 84, 114]"
      ],
      "similar_files": [],
      "dependencies": ["alembic"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_training_system.py",
      "size": 3223,
      "created": "2024-12-17T12:03:11.148204",
      "modified": "2024-12-17T12:03:30.927668",
      "hash": "cee9f555c4aee715f02e1e269d5b6f51be414fd7d84e472c4080c640fc50453d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alembic", "postgresql"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\add_venue_system.py",
      "size": 4570,
      "created": "2024-12-17T11:11:59.186136",
      "modified": "2024-12-17T11:12:09.718054",
      "hash": "51848672b1823f14480d515181e17828118c4c9deb049cfc1e7e319e7ca11168",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alembic", "postgresql"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\migrations\\versions\\initial_migration.py",
      "size": 4049,
      "created": "2024-12-17T10:39:53.787629",
      "modified": "2024-12-17T12:27:46.820957",
      "hash": "b2340bdfbe0d857fceb130e686e0909aa665a028651457cadc50b5c00ad47e3b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alembic", "postgresql"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\narrative\\data\\quest_templates.json",
      "size": 6211,
      "created": "2024-12-17T11:08:17.220606",
      "modified": "2025-01-10T05:54:15.348813",
      "hash": "e486a66cd30d23ed1e0596fe65531f639fe6c2790d8f34a75b35a31f1b15fcbc",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\core\\narrative\\data\\story_nodes.json",
      "size": 5713,
      "created": "2024-12-17T11:07:43.299669",
      "modified": "2025-01-10T05:54:15.364812",
      "hash": "a1b49a061cce845abe3557d6bc96af9e2561cda5933178df9ccf596aa1854662",
      "extension": ".json",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [6, 14, 25, 33, 44, 55, 65, 73, 81, 92, 105, 113, 121, 131]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\api\\tournaments.ts",
      "size": 3205,
      "created": "2024-12-23T09:09:10.955508",
      "modified": "2025-01-13T08:01:01.430446",
      "hash": "2cf5a4919bb4ba2edae85e7b9ec5d143ab0ad6b3bd1c596d666952e6f8726c0f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\api\\venues.ts",
      "size": 3520,
      "created": "2024-12-23T08:12:01.261151",
      "modified": "2025-01-13T08:01:01.453446",
      "hash": "5e353b1d27a9d0367b83f1a003227822da7b0d390c9a2115e610c35b4649a2dd",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\asset-manifest.json",
      "size": 218,
      "created": "2025-01-10T07:10:43.683454",
      "modified": "2025-01-10T07:10:43.683454",
      "hash": "fc828f936e853921bf9c1f25c647037758541789feef4510176827ec35312fca",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\favicon.ico",
      "size": 0,
      "created": "2025-01-10T07:09:50.211575",
      "modified": "2025-01-10T06:50:32.826153",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".ico",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\generate_assets.py",
      "size": 5540,
      "created": "2025-01-10T07:09:50.213566",
      "modified": "2025-01-03T21:55:00.128017",
      "hash": "f148232c45dfeeb19ff2b51c6e53493beccc3517560293d8996a1fc9c79b34c2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "PIL", "PNG."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\index.html",
      "size": 587,
      "created": "2025-01-10T07:10:43.682452",
      "modified": "2025-01-10T07:10:43.683454",
      "hash": "1a8d14961cd05f8c908e59bd82a95629bc66e523051b3a973064e8e6f5d005f9",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\logo.svg",
      "size": 902,
      "created": "2025-01-10T07:09:50.215567",
      "modified": "2025-01-03T21:51:41.370246",
      "hash": "350208bd50bfb3c7622cc7cda3909654905946fbef85c41720d95f8a142d6d5d",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7, 14, 17]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\logo192.png",
      "size": 0,
      "created": "2025-01-10T07:09:50.216570",
      "modified": "2025-01-10T06:50:32.833154",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\logo512.png",
      "size": 0,
      "created": "2025-01-10T07:09:50.217566",
      "modified": "2025-01-10T06:50:32.836153",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\manifest.json",
      "size": 534,
      "created": "2025-01-10T07:09:50.218567",
      "modified": "2025-01-10T06:48:31.351857",
      "hash": "2e23251b084d78c389b91b43ba18fc7951f2ed48073dc9696cd82e7ae1928003",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\offline.html",
      "size": 4028,
      "created": "2025-01-10T07:09:50.219565",
      "modified": "2025-01-03T21:55:00.130015",
      "hash": "ad19fc840ed452b706306164748f0e237a4cae2158367a47dd325cc11a830af8",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [17]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\service-worker.js",
      "size": 5323,
      "created": "2025-01-10T07:09:50.225892",
      "modified": "2025-01-10T05:54:17.954242",
      "hash": "1cfa02f0f28b337052368cdc05d6af9611a4de7b1ef78a18ed648f09dcad49f8",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\test-pwa.html",
      "size": 21849,
      "created": "2025-01-10T07:09:50.227893",
      "modified": "2025-01-04T10:23:48.980490",
      "hash": "26527f8ba95bd876ed475d8776efdd8575b2f70f52a1d42eeb6ffc0d7823d6dd",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [162, 220, 235, 305, 357, 362, 437]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\__init__.py",
      "size": 0,
      "created": "2025-01-10T07:09:50.229198",
      "modified": "2024-12-23T07:52:54.259682",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\ABTestResults.tsx",
      "size": 3992,
      "created": "2025-01-14T03:50:46.977296",
      "modified": "2025-01-14T03:51:08.533633",
      "hash": "c608923dd921dd036d6de088e830192ce5215069903880fa45f66a0eeeda2782",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [55, 62]"],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\AnimatedAvatar.tsx",
      "size": 7225,
      "created": "2024-12-17T10:59:44.457799",
      "modified": "2025-01-13T08:01:01.627457",
      "hash": "f4cb6d477a3cb14ef93ece9e2be8d5445057b355717afcd8bb4e98c0d2b32f46",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "lottie"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\AuthCallback.tsx",
      "size": 1572,
      "created": "2025-01-14T03:46:39.856315",
      "modified": "2025-01-14T03:47:12.021192",
      "hash": "d0f1fe13d87f595f7f17a9c258c3da05ecfa58cbc6f68bcc5baffe330cde1c4a",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\ProtectedRoute.tsx",
      "size": 1042,
      "created": "2025-01-14T03:47:07.768125",
      "modified": "2025-01-14T03:47:12.022271",
      "hash": "d3d0fbeaa7ce911f49bc6c45bb08aef5f81febaab331b8936c2d08ff989a09ea",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "auth"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\constants\\index.ts",
      "size": 817,
      "created": "2024-12-21T14:40:14.950703",
      "modified": "2025-01-13T08:01:03.697598",
      "hash": "e256008b70ff94fc60ec66a4c2a6fd2147045c2fc7e6b97454a70f3bedbd2879",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\contexts\\AuthContext.tsx",
      "size": 1670,
      "created": "2024-12-21T14:13:40.911568",
      "modified": "2025-01-14T03:47:12.022271",
      "hash": "769438bd20133b472f5d44d1a6d09a67d5a89ff1e6fbbee7ea20b1c147216859",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\hooks\\useABTest.ts",
      "size": 914,
      "created": "2025-01-14T03:50:25.900491",
      "modified": "2025-01-14T03:51:08.525600",
      "hash": "cbde18aca580ea9023d58e71b4169ac4ea16e4a421f55d6469b9bf4dfab23132",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\hooks\\useLocation.ts",
      "size": 1017,
      "created": "2024-12-21T14:40:42.508593",
      "modified": "2025-01-10T05:54:17.539514",
      "hash": "818a017b93006e2084e6a0a70593d076e42bf5d6a7de03cea40e443001cc2d0d",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\pages\\DojoDiscovery.tsx",
      "size": 6863,
      "created": "2024-12-17T11:24:00.821290",
      "modified": "2025-01-13T08:01:03.803686",
      "hash": "5ab131c3776b2e193a320e24b9419760421befe8aa45a75a613defddb52d4a9e",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "DojoMap"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\pages\\TournamentManagement.tsx",
      "size": 11854,
      "created": "2024-12-17T11:48:59.042843",
      "modified": "2025-01-13T08:01:03.847681",
      "hash": "65cc1272cc8fb53c2102d1fb472be814a97513f81799c35f69ec83162ad19a25",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "TournamentBracket"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\favicon.ico",
      "size": 0,
      "created": "2025-01-03T21:50:48.980081",
      "modified": "2025-01-10T06:50:32.826153",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".ico",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\generate_assets.py",
      "size": 5540,
      "created": "2025-01-03T21:48:51.115977",
      "modified": "2025-01-03T21:55:00.128017",
      "hash": "f148232c45dfeeb19ff2b51c6e53493beccc3517560293d8996a1fc9c79b34c2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["os", "PIL", "PNG."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\index.html",
      "size": 624,
      "created": "2025-01-03T14:12:13.524755",
      "modified": "2025-01-10T06:48:14.271536",
      "hash": "27bc960113ff9331a43b389c3a577a7a56785f04eabf411ea3e625cf633cabbb",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\logo.svg",
      "size": 902,
      "created": "2025-01-03T21:48:33.989441",
      "modified": "2025-01-03T21:51:41.370246",
      "hash": "350208bd50bfb3c7622cc7cda3909654905946fbef85c41720d95f8a142d6d5d",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7, 14, 17]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\logo192.png",
      "size": 0,
      "created": "2025-01-03T21:50:48.860499",
      "modified": "2025-01-10T06:50:32.833154",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\logo512.png",
      "size": 0,
      "created": "2025-01-03T21:50:48.865497",
      "modified": "2025-01-10T06:50:32.836153",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\manifest.json",
      "size": 534,
      "created": "2025-01-03T14:11:23.685598",
      "modified": "2025-01-10T06:48:31.351857",
      "hash": "2e23251b084d78c389b91b43ba18fc7951f2ed48073dc9696cd82e7ae1928003",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\offline.html",
      "size": 4028,
      "created": "2025-01-03T21:54:07.158835",
      "modified": "2025-01-03T21:55:00.130015",
      "hash": "ad19fc840ed452b706306164748f0e237a4cae2158367a47dd325cc11a830af8",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [17]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\service-worker.js",
      "size": 5225,
      "created": "2025-01-03T14:11:50.963267",
      "modified": "2025-01-13T08:01:03.875682",
      "hash": "4eb88d26a41cfead05448a8e38156a25f50610b20d08e5570451e8306a716df4",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\test-pwa.html",
      "size": 21849,
      "created": "2025-01-03T21:55:38.691960",
      "modified": "2025-01-04T10:23:48.980490",
      "hash": "26527f8ba95bd876ed475d8776efdd8575b2f70f52a1d42eeb6ffc0d7823d6dd",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [162, 220, 235, 305, 357, 362, 437]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.259682",
      "modified": "2024-12-23T07:52:54.259682",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\routes\\TournamentRoutes.tsx",
      "size": 945,
      "created": "2024-12-23T09:10:55.545036",
      "modified": "2025-01-10T05:54:17.968241",
      "hash": "c12a76557e0a26f50e0761de1ff578dd4cc13294361348cceeb667e78594fcb8",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "React",
        "TournamentList",
        "TournamentDetail",
        "TournamentForm"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\routes\\VenueRoutes.tsx",
      "size": 471,
      "created": "2024-12-23T08:12:33.013033",
      "modified": "2025-01-10T05:54:17.975632",
      "hash": "bc6ab48ec1040ced5ccdabf76a0ea05d10651655b44b2945ee8ad44faef94968",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "VenueList", "VenueDetail", "PrivateRoute"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\abTesting.ts",
      "size": 7846,
      "created": "2025-01-14T03:50:09.610952",
      "modified": "2025-01-14T03:50:22.319063",
      "hash": "0880373683971d59db7cbfd06b2d1451c0ee77eba98f3b8c688f780d186b8d7b",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [58, 68]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\ai.ts",
      "size": 3419,
      "created": "2024-12-22T16:49:49.841306",
      "modified": "2025-01-13T08:01:03.943680",
      "hash": "8c53b40b2b789119e4542929779db7babbc08a5a496a5ec1e7199d7589127e02",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\analytics.ts",
      "size": 4645,
      "created": "2024-12-23T02:43:42.819084",
      "modified": "2025-01-13T08:01:03.973680",
      "hash": "7c36d7ce08076ab1da1f9ea9b403a493e4eebbc456d60cb703fd444d3312e365",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api.ts",
      "size": 1613,
      "created": "2024-12-22T16:43:13.233384",
      "modified": "2025-01-13T08:01:03.985683",
      "hash": "a09b4be32c769bfe7428ac39c42bbbb7e915c21bd1b3c7fa350e5064534869a2",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\auth.ts",
      "size": 3280,
      "created": "2024-12-22T16:48:31.441553",
      "modified": "2025-01-14T03:45:00.731179",
      "hash": "4882c348d18a89b8d986747928e0571be2f3c90fa3ec26c97bb2bd3d57b16485",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1, 10]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\cache.ts",
      "size": 17674,
      "created": "2024-12-23T03:03:25.970660",
      "modified": "2025-01-14T03:30:19.501681",
      "hash": "7c4c0c780a9f8e84e1254127c2458281d226c56d7b7b916dedacebc3d6b74538",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [263]"],
      "similar_files": [],
      "dependencies": ["analyticsService", "storage"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\dialog.ts",
      "size": 8852,
      "created": "2024-12-23T03:11:56.843694",
      "modified": "2025-01-13T08:01:04.188684",
      "hash": "5264a3960cc314da4924fbced140cc6253351686b536ef56a263e838c63aec57",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "analyticsService", "state"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\form.ts",
      "size": 10761,
      "created": "2024-12-23T03:02:20.833174",
      "modified": "2025-01-13T08:01:04.244682",
      "hash": "db59300020c88081697591793ec368f59e4a1611a72a03a56dad41e5cf6bd4e7",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "validationService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\keyboard.ts",
      "size": 7446,
      "created": "2024-12-23T03:04:24.934525",
      "modified": "2025-01-13T08:01:04.283682",
      "hash": "bfec7ae04a1191bfe4258ff2c383d3b0e957999106fe69f229e906449a84c86d",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\leaderboard.ts",
      "size": 2700,
      "created": "2024-12-22T16:50:31.481835",
      "modified": "2025-01-13T08:01:04.307683",
      "hash": "ad5a31070ff62fa1efa1f99ee7ceb0f696e39a6d8ceb82aabb6d8d4293b54bb8",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\loading.ts",
      "size": 6339,
      "created": "2024-12-23T03:01:36.383101",
      "modified": "2025-01-13T08:01:04.337683",
      "hash": "4ea4a9792eb713f955ff8be8ebdf6f01306e0f6211d5d38c1b30f64d99c29d1f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\marketplace.ts",
      "size": 3913,
      "created": "2024-12-23T10:07:18.776830",
      "modified": "2025-01-13T08:01:04.359680",
      "hash": "e6d9cbb3396a47a57946e7d376914b990a0d4e6e4766ca9850ecc719b18932e2",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\match-updates.ts",
      "size": 3194,
      "created": "2024-12-23T09:59:45.208297",
      "modified": "2025-01-13T08:01:04.377682",
      "hash": "4b5cfd54cdef1d4aca605b0657d77fb17b9c1334538f6cffc0d11972dee0947a",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["wsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\media.ts",
      "size": 11015,
      "created": "2024-12-23T03:05:15.893641",
      "modified": "2025-01-13T08:01:04.437685",
      "hash": "29546cc20b8fd8594a111855e44057d100c3b2e069e030be1f2321836320efcd",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "stateService",
        "analyticsService",
        "apiService",
        "storageService",
        "queue"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\modal.ts",
      "size": 7028,
      "created": "2024-12-23T03:00:01.719032",
      "modified": "2025-01-13T08:01:04.474681",
      "hash": "c3bc5800050b590035ef87e04bb2cfdb4ad441eb177aa290aceb65c52207c366",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\notification.ts",
      "size": 14330,
      "created": "2024-12-23T03:09:30.268121",
      "modified": "2025-01-13T08:01:04.539681",
      "hash": "95a4c3689f6300ea3b3f2d15ebaeba1246cc94cc7df44ef103f783b15d782aec",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "stateService",
        "analyticsService",
        "storageService",
        "websocketService",
        "storage"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\notifications.ts",
      "size": 3207,
      "created": "2024-12-22T16:51:12.967775",
      "modified": "2025-01-13T08:01:04.566681",
      "hash": "6d0156b18f04614282ecc18645c1ceee1b014ebe2c47a7f3b26d578ec674801d",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\performance.ts",
      "size": 5864,
      "created": "2024-12-23T02:53:15.062775",
      "modified": "2025-01-13T08:01:04.608683",
      "hash": "f90b46a0cc9d39b5f025df994bb814319adef1b0ed9339629b8bec385b378660",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\realtime-training.ts",
      "size": 4347,
      "created": "2024-12-22T16:56:41.156023",
      "modified": "2025-01-13T08:01:04.641683",
      "hash": "59a1c71aded7393f6b732ad3925af1d6f8e16cdcec8cfee0d82bab232a666946",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["wsService", "previous"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\router.ts",
      "size": 8720,
      "created": "2024-12-23T02:58:15.248811",
      "modified": "2025-01-13T08:01:04.698681",
      "hash": "7305da20a7fa4c496972e4743af15494f9dc07f310c24e6ba91bf088bff24177",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\state.ts",
      "size": 7258,
      "created": "2024-12-23T02:55:00.099869",
      "modified": "2025-01-13T08:01:04.741680",
      "hash": "c329fe69ea84db004f20411f8fe08a7a222f573d1172ceaca8897fb7dcb06dfb",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["storageService", "analyticsService", "storage"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\storage.ts",
      "size": 5925,
      "created": "2024-12-23T02:44:59.377830",
      "modified": "2025-01-13T08:01:04.781680",
      "hash": "d1fee4e8b6dc87527e11bda9e9c208f3a1f9fb72f9e66214ea0da2fa79269171",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\sync.ts",
      "size": 6161,
      "created": "2024-12-23T02:52:06.917945",
      "modified": "2025-01-13T08:01:04.819687",
      "hash": "42c0aba7bc327e02d0fce3a1bc7164d707b1009b5e33b992313b45612dce5615",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api", "storageService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\theme.ts",
      "size": 10669,
      "created": "2024-12-23T02:59:03.925387",
      "modified": "2025-01-10T05:54:18.725821",
      "hash": "6a3ba0d662a47df73891f5fb36b756edada8291df5b7fb6ee7f9df1a350c52ca",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "storageService", "analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\toast.ts",
      "size": 5260,
      "created": "2024-12-23T03:00:50.994669",
      "modified": "2025-01-13T08:01:04.900681",
      "hash": "c777e17a5609aa934496734c4a82f339ca9ee4753dfe16d000e78caae38f42d8",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["stateService", "analyticsService", "state"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\training.ts",
      "size": 2531,
      "created": "2024-12-22T16:47:19.066538",
      "modified": "2025-01-13T08:01:04.929685",
      "hash": "7f2020c42281555b11dd1f304e24a09606525849b94387b55d56631787dca72a",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\user.ts",
      "size": 2314,
      "created": "2024-12-22T16:47:55.281234",
      "modified": "2025-01-13T08:01:04.958688",
      "hash": "736beaa18a471a18d78ace29fba2a1db5158c333dd22c769e5888c2e739a8ddb",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["api"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\validation.ts",
      "size": 10806,
      "created": "2024-12-23T02:56:08.466252",
      "modified": "2025-01-13T08:01:05.014682",
      "hash": "609eb97589275b40a5611132b691c055b64d71617734cff6a9c328d944313d52",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["analyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\websocket.ts",
      "size": 2809,
      "created": "2024-12-22T16:55:48.318594",
      "modified": "2025-01-10T05:54:18.828917",
      "hash": "dee5e9151cadb51ffca5ed588e96e902c8330db23bfc868df3d69b3f32171802",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\App.tsx",
      "size": 270,
      "created": "2024-12-21T14:09:23.530925",
      "modified": "2025-01-13T08:01:05.135680",
      "hash": "76ab63bc501ade5aeb034f676fe46a44f9142bdac48651ae0cf3772dd76fd944",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "Home"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\constants.ts",
      "size": 2063,
      "created": "2024-12-22T05:34:18.650788",
      "modified": "2025-01-14T03:26:59.013833",
      "hash": "85b1bb97598704cebbbc7728f81e8465913d40b28d689afdde11490535ae81b5",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\index.tsx",
      "size": 694,
      "created": "2024-12-21T14:09:02.156101",
      "modified": "2025-01-13T08:01:05.166682",
      "hash": "75e2ec407112c1936fc49c20f96c5b1e88e750d36045138bded243574832d6e0",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "ReactDOM", "App"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\reportWebVitals.ts",
      "size": 440,
      "created": "2025-01-10T06:49:44.778757",
      "modified": "2025-01-13T08:01:05.177682",
      "hash": "de99fe431972368a2caddeb899a538792356c5ee633de87b33a0fcb31d82230f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["web-vitals"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\theme.ts",
      "size": 2234,
      "created": "2024-12-21T14:09:13.215970",
      "modified": "2025-01-10T05:54:18.995126",
      "hash": "8f925bbe4df57cbe89c15cf2744b644f4c896d95dfc4e039fe37025b7a8fa852",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.258681",
      "modified": "2024-12-23T07:52:54.258681",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\styles\\tournaments.scss",
      "size": 3901,
      "created": "2024-12-23T09:11:10.134910",
      "modified": "2025-01-10T05:54:18.951390",
      "hash": "113820eaed66ad26fb420fb01a010fbe9dcaf3d212920c52128ac308a55b968a",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\styles\\venues.scss",
      "size": 7182,
      "created": "2024-12-23T08:12:48.925277",
      "modified": "2025-01-10T05:54:18.980393",
      "hash": "30480a028adeec3e26164fa9bf13fb46cc2a4252f0bf210e99b764d466268ebc",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\theme\\index.ts",
      "size": 3112,
      "created": "2024-12-22T05:18:14.418726",
      "modified": "2025-01-10T05:54:19.020130",
      "hash": "c41f6470af00b2a88b4b222842f88c5d6144a3288f65e907a2f49d2586434f34",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\types\\auth.ts",
      "size": 459,
      "created": "2024-12-21T14:13:23.828198",
      "modified": "2025-01-10T05:54:19.028125",
      "hash": "06c7d20b2ecea1b61b454f9e2064c0f148ad61279c1493e4a1440af40bad3c3b",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\types\\game.ts",
      "size": 526,
      "created": "2024-12-21T14:10:10.739270",
      "modified": "2025-01-10T05:54:19.035402",
      "hash": "a25e98dfe14dc262fd2275a96d15b4ab8f5920d618d130d83e8846307917f032",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\types\\marketplace.ts",
      "size": 1683,
      "created": "2024-12-23T10:07:36.316157",
      "modified": "2025-01-10T05:54:19.043921",
      "hash": "8877cd5630b0566fe8019d1f395e0d78c5e2efde7d7459ebb9fe64d1583fbf0f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\types\\monitoring.ts",
      "size": 2320,
      "created": "2024-12-21T19:01:09.299306",
      "modified": "2025-01-10T05:54:19.058922",
      "hash": "c1c01a3e36b66243d8e4787fae4bf30872cf51068b3d9ecb0e4f29225c06d37b",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\types\\tournament.ts",
      "size": 2260,
      "created": "2024-12-17T11:49:44.829285",
      "modified": "2025-01-13T08:01:05.282682",
      "hash": "2352812e4191d0c41e4e5726489df754479d28e4d969a350e406a1c854e62dc8",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\types\\venue.ts",
      "size": 1868,
      "created": "2024-12-23T08:12:22.141044",
      "modified": "2025-01-10T05:54:19.078922",
      "hash": "25c9c55d1ef3d1a846d8c94b04da657c37df5be1cf9b04b966f7058114c3d645",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\apiMiddleware.ts",
      "size": 8407,
      "created": "2024-12-22T04:12:03.168967",
      "modified": "2025-01-13T08:01:06.076686",
      "hash": "52ac98bfb2b1dae218212d89570f2d3e146703510234e633131d45028fdfc092",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\auditLogger.ts",
      "size": 5873,
      "created": "2024-12-22T04:00:28.410444",
      "modified": "2025-01-13T08:01:06.101680",
      "hash": "60ef0d5ae190c81a0f9e408b416535573ee7bc9c875e4a18f18930428ad9c541",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\auth.ts",
      "size": 5305,
      "created": "2024-12-22T03:59:36.796362",
      "modified": "2025-01-13T08:01:06.133682",
      "hash": "10789c8e7e122d8b6f50c96b82e1148ec5513c6fce078a3a88329682995b3fcc",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\cache.ts",
      "size": 1733,
      "created": "2024-12-21T14:57:06.406437",
      "modified": "2025-01-10T05:54:19.804871",
      "hash": "feb642da690150bb387683570590c8d11d18418c808d13140184e40a35c8d1d9",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\dataCompression.ts",
      "size": 6999,
      "created": "2024-12-22T04:06:51.476720",
      "modified": "2025-01-13T08:01:06.175688",
      "hash": "ff4bb756d001b25e3d4e0ddb9cecaa6d65e42fb11cc6104fa33b7de5eed53dce",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\errorHandling.ts",
      "size": 2770,
      "created": "2024-12-22T16:43:49.258378",
      "modified": "2025-01-13T08:01:06.187681",
      "hash": "944e7245b6a59cb0ad410fbe3ef5c071bf932503cdeb9bd4a2bc1de3e3f2b4ef",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Implement error tracking service integration"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\errorTracker.ts",
      "size": 7924,
      "created": "2024-12-22T04:24:55.084768",
      "modified": "2025-01-13T08:01:06.226685",
      "hash": "536f88ba8a9d779070ab9986b0d08d6e28d10c07ce591621bb34c624e0b5ef14",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\location.ts",
      "size": 2049,
      "created": "2024-12-21T14:40:30.180857",
      "modified": "2025-01-13T08:01:06.239682",
      "hash": "aa112732272defcbc084789b99e034b979430c65c42b2dc62a3d61a81fac67aa",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\monitoring.ts",
      "size": 6825,
      "created": "2024-12-21T15:21:57.276825",
      "modified": "2025-01-13T08:01:06.278684",
      "hash": "b6ca6fb79ee2c825107febd5fd4b3b9073e81978e6fd905a509dca3d1fcef742",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [176]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\rateLimiter.ts",
      "size": 4837,
      "created": "2024-12-22T04:10:00.721491",
      "modified": "2025-01-13T08:01:06.302681",
      "hash": "46d2eb146225b2ab6bf4725c020f88f270b553bd4372cba02c934a12ab35f7cc",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\retryMechanism.ts",
      "size": 3073,
      "created": "2024-12-22T03:58:55.181533",
      "modified": "2025-01-13T08:01:06.322681",
      "hash": "ccb0877387b164d9ef3d9a184f03efd855a1c39afc9b4fb8a0dc501ce3c6c156",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\throttle.ts",
      "size": 3109,
      "created": "2024-12-21T14:57:25.632756",
      "modified": "2025-01-13T08:01:06.349682",
      "hash": "835ad4e03bcb63c058f60a70672c8305006ac819be1d0633b84404561ef905e0",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["last"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\validation.ts",
      "size": 4718,
      "created": "2024-12-21T15:44:48.171901",
      "modified": "2025-01-13T08:01:06.377685",
      "hash": "d100dc5325d965d735887837e4504fb9bf59862be27b73769cd2f523267382d3",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\screenshots\\game.png",
      "size": 37867,
      "created": "2025-01-10T07:09:50.221891",
      "modified": "2025-01-03T21:54:41.505987",
      "hash": "19d6f0ad789ff644553fc697a2fd421173c3bbedb585d9b9faa0a7c82f4e55c6",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\screenshots\\generate_screenshots.py",
      "size": 5249,
      "created": "2025-01-10T07:09:50.222889",
      "modified": "2025-01-03T21:55:00.129016",
      "hash": "24637efbac8fc53e700f86a7148b4b2dca4c97ac00b743b546a74ad44248b79b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["PIL"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\screenshots\\home.png",
      "size": 55042,
      "created": "2025-01-10T07:09:50.223892",
      "modified": "2025-01-03T21:54:41.383451",
      "hash": "58a4aa45c37b4d59b16f94adb204e4d4f8d8fe1594a5df8be7abb7b364d49484",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\screenshots\\stats.png",
      "size": 21771,
      "created": "2025-01-10T07:09:50.224890",
      "modified": "2025-01-03T21:54:41.621656",
      "hash": "9e5412a10fcbbb2bf3aef3ac1898b78cedf8d770c85b41a00c32923e4bf1758e",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\static\\js\\main.718aac13.js",
      "size": 229227,
      "created": "2025-01-10T07:10:43.687453",
      "modified": "2025-01-10T07:10:43.687453",
      "hash": "ef21473cc854335423916debd742f80384cb9a5c07d33482b7730345967f6f18",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Potential security issue: secret",
        "Long lines found on lines: [2]"
      ],
      "similar_files": [],
      "dependencies": [
        "route",
        ":case B:return e.return=e.return||e.value;case $:return"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\static\\js\\main.718aac13.js.LICENSE.txt",
      "size": 1910,
      "created": "2025-01-10T07:10:43.684455",
      "modified": "2025-01-10T07:10:43.687453",
      "hash": "04c28dc08f8770dc31eb32c208bb08c66523a1e4ab2af835daaf857ba3983a2c",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\build\\static\\js\\main.718aac13.js.map",
      "size": 1122409,
      "created": "2025-01-10T07:10:43.686464",
      "modified": "2025-01-10T07:10:43.687453",
      "hash": "fad72673805d595e02dfdb042882da3b3c9a1897230122ea7774c5cb593c0a90",
      "extension": ".map",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Large file size (>1MB)",
        "Potential security issue: password",
        "Potential security issue: secret",
        "TODO found: v6: remove `lowercaseFirstLetter()` in the next major release\\n        // For more details: https://github.com/mui/material-ui/pull/37908\\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\\n      } = inputOptions,\\n      options = (0, _objectWithoutPropertiesLoose2.default)(inputOptions, _excluded3);\\n\\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\\n    // TODO v6: remove `Root` in the next major release\\n    // For more details: https://github.com/mui/material-ui/pull/37908\\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\\n    const skipSx = inputSkipSx || false;\\n    let label;\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (componentName) {\\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\\n        // For more details: https://github.com/mui/material-ui/pull/37908\\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\\n      }\\n    }\\n    let shouldForwardPropOption = shouldForwardProp;\\n\\n    // TODO v6: remove `Root` in the next major release\\n    // For more details: https://github.com/mui/material-ui/pull/37908\\n    if (componentSlot === 'Root' || componentSlot === 'root') {\\n      shouldForwardPropOption = rootShouldForwardProp;\\n    } else if (componentSlot) {\\n      // any other slot specified\\n      shouldForwardPropOption = slotShouldForwardProp;\\n    } else if (isStringTag(tag)) {\\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\\n      shouldForwardPropOption = undefined;\\n    }\\n    const defaultStyledResolver = (0, _styledEngine.default)(tag, (0, _extends2.default)({\\n      shouldForwardProp: shouldForwardPropOption,\\n      label\\n    }, options));\\n    const transformStyleArg = stylesArg => {\\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\\n      // component stays as a function. This condition makes sure that we do not interpolate functions\\n      // which are basically components used as a selectors.\\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || (0, _deepmerge.isPlainObject)(stylesArg)) {\\n        return props => processStyleArg(stylesArg, (0, _extends2.default)({}, props, {\\n          theme: resolveTheme({\\n            theme: props.theme,\\n            defaultTheme,\\n            themeId\\n          })\\n        }));\\n      }\\n      return stylesArg;\\n    };\\n    const muiStyledResolver = (styleArg, ...expressions) => {\\n      let transformedStyleArg = transformStyleArg(styleArg);\\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\\n      if (componentName && overridesResolver) {\\n        expressionsWithDefaultTheme.push(props => {\\n          const theme = resolveTheme((0, _extends2.default)({}, props, {\\n            defaultTheme,\\n            themeId\\n          }));\\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\\n            return null;\\n          }\\n          const styleOverrides = theme.components[componentName].styleOverrides;\\n          const resolvedStyleOverrides = {};\\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, (0, _extends2.default)({}, props, {\\n              theme\\n            }));\\n          });\\n          return overridesResolver(props, resolvedStyleOverrides);\\n        });\\n      }\\n      if (componentName && !skipVariantsResolver) {\\n        expressionsWithDefaultTheme.push(props => {\\n          var _theme$components;\\n          const theme = resolveTheme((0, _extends2.default)({}, props, {\\n            defaultTheme,\\n            themeId\\n          }));\\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\\n          return processStyleArg({\\n            variants: themeVariants\\n          }, (0, _extends2.default)({}, props, {\\n            theme\\n          }));\\n        });\\n      }\\n      if (!skipSx) {\\n        expressionsWithDefaultTheme.push(systemSx);\\n      }\\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\\n        transformedStyleArg = [...styleArg, ...placeholders];\\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\\n      }\\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\\n      if (process.env.NODE_ENV !== 'production') {\\n        let displayName;\\n        if (componentName) {\\n          displayName = `${componentName}${(0, _capitalize.default)(componentSlot || '')}`;\\n        }\\n        if (displayName === undefined) {\\n          displayName = `Styled(${(0, _getDisplayName.default)(tag)})`;\\n        }\\n        Component.displayName = displayName;\\n      }\\n      if (tag.muiName) {\\n        Component.muiName = tag.muiName;\\n      }\\n      return Component;\\n    };\\n    if (defaultStyledResolver.withConfig) {\\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\\n    }\\n    return muiStyledResolver;\\n  };\\n}\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport PropTypes from 'prop-types';\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport merge from './merge';\\n\\n// The breakpoint **start** at this value.\\n// For instance with the first breakpoint xs: [xs, sm[.\\nexport const values = {\\n  xs: 0,\\n  // phone\\n  sm: 600,\\n  // tablet\\n  md: 900,\\n  // small laptop\\n  lg: 1200,\\n  // desktop\\n  xl: 1536 // large screen\\n};\\nconst defaultBreakpoints = {\\n  // Sorted ASC by size. That's important.\\n  // It can't be configured as it's used statically for propTypes.\\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\\n  up: key => `@media (min-width:${values[key]}px)`\\n};\\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\\n  const theme = props.theme || {};\\n  if (Array.isArray(propValue)) {\\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\\n    return propValue.reduce((acc, item, index) => {\\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\\n      return acc;\\n    }, {});\\n  }\\n  if (typeof propValue === 'object') {\\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\\n      // key is breakpoint\\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\\n        const mediaKey = themeBreakpoints.up(breakpoint);\\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\\n      } else {\\n        const cssKey = breakpoint;\\n        acc[cssKey] = propValue[cssKey];\\n      }\\n      return acc;\\n    }, {});\\n  }\\n  const output = styleFromPropValue(propValue);\\n  return output;\\n}\\nfunction breakpoints(styleFunction) {\\n  // false positive\\n  // eslint-disable-next-line react/function-component-definition\\n  const newStyleFunction = props => {\\n    const theme = props.theme || {};\\n    const base = styleFunction(props);\\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\\n      if (props[key]) {\\n        acc = acc || {};\\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\\n          theme\\n        }, props[key]));\\n      }\\n      return acc;\\n    }, null);\\n    return merge(base, extended);\\n  };\\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\\n    xs: PropTypes.object,\\n    sm: PropTypes.object,\\n    md: PropTypes.object,\\n    lg: PropTypes.object,\\n    xl: PropTypes.object\\n  }) : {};\\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\\n  return newStyleFunction;\\n}\\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\\n  var _breakpointsInput$key;\\n  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\\n    const breakpointStyleKey = breakpointsInput.up(key);\\n    acc[breakpointStyleKey] = {};\\n    return acc;\\n  }, {});\\n  return breakpointsInOrder || {};\\n}\\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\\n  return breakpointKeys.reduce((acc, key) => {\\n    const breakpointOutput = acc[key];\\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\\n    if (isBreakpointUnused) {\\n      delete acc[key];\\n    }\\n    return acc;\\n  }, style);\\n}\\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\\n}\\n\\n// compute base for responsive values; e.g.,\\n// [1,2,3] => {xs: true, sm: true, md: true}\\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\\nexport function computeBreakpointsBase(breakpointValues, themeBreakpoints) {\\n  // fixed value\\n  if (typeof breakpointValues !== 'object') {\\n    return {};\\n  }\\n  const base = {};\\n  const breakpointsKeys = Object.keys(themeBreakpoints);\\n  if (Array.isArray(breakpointValues)) {\\n    breakpointsKeys.forEach((breakpoint, i) => {\\n      if (i < breakpointValues.length) {\\n        base[breakpoint] = true;\\n      }\\n    });\\n  } else {\\n    breakpointsKeys.forEach(breakpoint => {\\n      if (breakpointValues[breakpoint] != null) {\\n        base[breakpoint] = true;\\n      }\\n    });\\n  }\\n  return base;\\n}\\nexport function resolveBreakpointValues({\\n  values: breakpointValues,\\n  breakpoints: themeBreakpoints,\\n  base: customBase\\n}) {\\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\\n  const keys = Object.keys(base);\\n  if (keys.length === 0) {\\n    return breakpointValues;\\n  }\\n  let previous;\\n  return keys.reduce((acc, breakpoint, i) => {\\n    if (Array.isArray(breakpointValues)) {\\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\\n      previous = i;\\n    } else if (typeof breakpointValues === 'object') {\\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\\n      previous = breakpoint;\\n    } else {\\n      acc[breakpoint] = breakpointValues;\\n    }\\n    return acc;\\n  }, {});\\n}\\nexport default breakpoints;\",\"/**\\n * A universal utility to style components with multiple color modes. Always use it from the theme object.\\n * It works with:\\n *  - [Basic theme](https://mui.com/material-ui/customization/dark-mode/)\\n *  - [CSS theme variables](https://mui.com/material-ui/experimental-api/css-theme-variables/overview/)\\n *  - Zero-runtime engine\\n *\\n * Tips: Use an array over object spread and place `theme.applyStyles()` last.\\n *\\n * \u2705 [{ background: '#e5e5e5' }, theme.applyStyles('dark', { background: '#1c1c1c' })]\\n *\\n * \ud83d\udeab { background: '#e5e5e5', ...theme.applyStyles('dark', { background: '#1c1c1c' })}\\n *\\n * @example\\n * 1. using with `styled`:\\n * ```jsx\\n *   const Component = styled('div')(({ theme }) => [\\n *     { background: '#e5e5e5' },\\n *     theme.applyStyles('dark', {\\n *       background: '#1c1c1c',\\n *       color: '#fff',\\n *     }),\\n *   ]);\\n * ```\\n *\\n * @example\\n * 2. using with `sx` prop:\\n * ```jsx\\n *   <Box sx={theme => [\\n *     { background: '#e5e5e5' },\\n *     theme.applyStyles('dark', {\\n *        background: '#1c1c1c',\\n *        color: '#fff',\\n *      }),\\n *     ]}\\n *   />\\n * ```\\n *\\n * @example\\n * 3. theming a component:\\n * ```jsx\\n *   extendTheme({\\n *     components: {\\n *       MuiButton: {\\n *         styleOverrides: {\\n *           root: ({ theme }) => [\\n *             { background: '#e5e5e5' },\\n *             theme.applyStyles('dark', {\\n *               background: '#1c1c1c',\\n *               color: '#fff',\\n *             }),\\n *           ],\\n *         },\\n *       }\\n *     }\\n *   })\\n *```\\n */\\nexport default function applyStyles(key, styles) {\\n  // @ts-expect-error this is 'any' type\\n  const theme = this;\\n  if (theme.vars && typeof theme.getColorSchemeSelector === 'function') {\\n    // If CssVarsProvider is used as a provider,\\n    // returns '* :where([data-mui-color-scheme=\\\"light|dark\\\"]) &'\\n    const selector = theme.getColorSchemeSelector(key).replace(/(\\\\[[^\\\\]]+\\\\])/, '*:where($1)');\\n    return {\\n      [selector]: styles\\n    };\\n  }\\n  if (theme.palette.mode === key) {\\n    return styles;\\n  }\\n  return {};\\n}\",\"import _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nimport _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nconst _excluded = [\\\"values\\\", \\\"unit\\\", \\\"step\\\"];\\n// Sorted ASC by size. That's important.\\n// It can't be configured as it's used statically for propTypes.\\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\\nconst sortBreakpointsValues = values => {\\n  const breakpointsAsArray = Object.keys(values).map(key => ({\\n    key,\\n    val: values[key]\\n  })) || [];\\n  // Sort in ascending order\\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\\n  return breakpointsAsArray.reduce((acc, obj) => {\\n    return _extends({}, acc, {\\n      [obj.key]: obj.val\\n    });\\n  }, {});\\n};\\n\\n// Keep in mind that @media is inclusive by the CSS specification.\\nexport default function createBreakpoints(breakpoints) {\\n  const {\\n      // The breakpoint **start** at this value.\\n      // For instance with the first breakpoint xs: [xs, sm).\\n      values = {\\n        xs: 0,\\n        // phone\\n        sm: 600,\\n        // tablet\\n        md: 900,\\n        // small laptop\\n        lg: 1200,\\n        // desktop\\n        xl: 1536 // large screen\\n      },\\n      unit = 'px',\\n      step = 5\\n    } = breakpoints,\\n    other = _objectWithoutPropertiesLoose(breakpoints, _excluded);\\n  const sortedValues = sortBreakpointsValues(values);\\n  const keys = Object.keys(sortedValues);\\n  function up(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (min-width:${value}${unit})`;\\n  }\\n  function down(key) {\\n    const value = typeof values[key] === 'number' ? values[key] : key;\\n    return `@media (max-width:${value - step / 100}${unit})`;\\n  }\\n  function between(start, end) {\\n    const endIndex = keys.indexOf(end);\\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\\n  }\\n  function only(key) {\\n    if (keys.indexOf(key) + 1 < keys.length) {\\n      return between(key, keys[keys.indexOf(key) + 1]);\\n    }\\n    return up(key);\\n  }\\n  function not(key) {\\n    // handle first and last key separately, for better readability\\n    const keyIndex = keys.indexOf(key);\\n    if (keyIndex === 0) {\\n      return up(keys[1]);\\n    }\\n    if (keyIndex === keys.length - 1) {\\n      return down(keys[keyIndex]);\\n    }\\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\\n  }\\n  return _extends({\\n    keys,\\n    values: sortedValues,\\n    up,\\n    down,\\n    between,\\n    only,\\n    not,\\n    unit\\n  }, other);\\n}\",\"const shape = {\\n  borderRadius: 4\\n};\\nexport default shape;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nconst _excluded = [\\\"breakpoints\\\", \\\"palette\\\", \\\"spacing\\\", \\\"shape\\\"];\\nimport deepmerge from '@mui/utils/deepmerge';\\nimport createBreakpoints from './createBreakpoints';\\nimport shape from './shape';\\nimport createSpacing from './createSpacing';\\nimport styleFunctionSx from '../styleFunctionSx/styleFunctionSx';\\nimport defaultSxConfig from '../styleFunctionSx/defaultSxConfig';\\nimport applyStyles from './applyStyles';\\nfunction createTheme(options = {}, ...args) {\\n  const {\\n      breakpoints: breakpointsInput = {},\\n      palette: paletteInput = {},\\n      spacing: spacingInput,\\n      shape: shapeInput = {}\\n    } = options,\\n    other = _objectWithoutPropertiesLoose(options, _excluded);\\n  const breakpoints = createBreakpoints(breakpointsInput);\\n  const spacing = createSpacing(spacingInput);\\n  let muiTheme = deepmerge({\\n    breakpoints,\\n    direction: 'ltr',\\n    components: {},\\n    // Inject component definitions.\\n    palette: _extends({\\n      mode: 'light'\\n    }, paletteInput),\\n    spacing,\\n    shape: _extends({}, shape, shapeInput)\\n  }, other);\\n  muiTheme.applyStyles = applyStyles;\\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\\n  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig, other == null ? void 0 : other.unstable_sxConfig);\\n  muiTheme.unstable_sx = function sx(props) {\\n    return styleFunctionSx({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  return muiTheme;\\n}\\nexport default createTheme;\",\"import { createUnarySpacing } from '../spacing';\\n\\n// The different signatures imply different meaning for their arguments that can't be expressed structurally.\\n// We express the difference with variable names.\\n\\nexport default function createSpacing(spacingInput = 8) {\\n  // Already transformed.\\n  if (spacingInput.mui) {\\n    return spacingInput;\\n  }\\n\\n  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\\n  // Smaller components, such as icons, can align to a 4dp grid.\\n  // https://m2.material.io/design/layout/understanding-layout.html\\n  const transform = createUnarySpacing({\\n    spacing: spacingInput\\n  });\\n  const spacing = (...argsInput) => {\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (!(argsInput.length <= 4)) {\\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\\n      }\\n    }\\n    const args = argsInput.length === 0 ? [1] : argsInput;\\n    return args.map(argument => {\\n      const output = transform(argument);\\n      return typeof output === 'number' ? `${output}px` : output;\\n    }).join(' ');\\n  };\\n  spacing.mui = true;\\n  return spacing;\\n}\",\"import deepmerge from '@mui/utils/deepmerge';\\nfunction merge(acc, item) {\\n  if (!item) {\\n    return acc;\\n  }\\n  return deepmerge(acc, item, {\\n    clone: false // No need to clone deep, it's way faster.\\n  });\\n}\\nexport default merge;\",\"import responsivePropType from './responsivePropType';\\nimport { handleBreakpoints } from './breakpoints';\\nimport { getPath } from './style';\\nimport merge from './merge';\\nimport memoize from './memoize';\\nconst properties = {\\n  m: 'margin',\\n  p: 'padding'\\n};\\nconst directions = {\\n  t: 'Top',\\n  r: 'Right',\\n  b: 'Bottom',\\n  l: 'Left',\\n  x: ['Left', 'Right'],\\n  y: ['Top', 'Bottom']\\n};\\nconst aliases = {\\n  marginX: 'mx',\\n  marginY: 'my',\\n  paddingX: 'px',\\n  paddingY: 'py'\\n};\\n\\n// memoize() impact:\\n// From 300,000 ops/sec\\n// To 350,000 ops/sec\\nconst getCssProperties = memoize(prop => {\\n  // It's not a shorthand notation.\\n  if (prop.length > 2) {\\n    if (aliases[prop]) {\\n      prop = aliases[prop];\\n    } else {\\n      return [prop];\\n    }\\n  }\\n  const [a, b] = prop.split('');\\n  const property = properties[a];\\n  const direction = directions[b] || '';\\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\\n});\\nexport const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\\nexport const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\\nconst spacingKeys = [...marginKeys, ...paddingKeys];\\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\\n  var _getPath;\\n  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\\n  if (typeof themeSpacing === 'number') {\\n    return abs => {\\n      if (typeof abs === 'string') {\\n        return abs;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (typeof abs !== 'number') {\\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\\n        }\\n      }\\n      return themeSpacing * abs;\\n    };\\n  }\\n  if (Array.isArray(themeSpacing)) {\\n    return abs => {\\n      if (typeof abs === 'string') {\\n        return abs;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (!Number.isInteger(abs)) {\\n          console.error([`MUI: The \\\\`theme.${themeKey}\\\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\\\`theme.${themeKey}\\\\` as a number.`].join('\\\\n'));\\n        } else if (abs > themeSpacing.length - 1) {\\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\\\n'));\\n        }\\n      }\\n      return themeSpacing[abs];\\n    };\\n  }\\n  if (typeof themeSpacing === 'function') {\\n    return themeSpacing;\\n  }\\n  if (process.env.NODE_ENV !== 'production') {\\n    console.error([`MUI: The \\\\`theme.${themeKey}\\\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\\\n'));\\n  }\\n  return () => undefined;\\n}\\nexport function createUnarySpacing(theme) {\\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\\n}\\nexport function getValue(transformer, propValue) {\\n  if (typeof propValue === 'string' || propValue == null) {\\n    return propValue;\\n  }\\n  const abs = Math.abs(propValue);\\n  const transformed = transformer(abs);\\n  if (propValue >= 0) {\\n    return transformed;\\n  }\\n  if (typeof transformed === 'number') {\\n    return -transformed;\\n  }\\n  return `-${transformed}`;\\n}\\nexport function getStyleFromPropValue(cssProperties, transformer) {\\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\\n    acc[cssProperty] = getValue(transformer, propValue);\\n    return acc;\\n  }, {});\\n}\\nfunction resolveCssProperty(props, keys, prop, transformer) {\\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\\n  // it's doesn't worth the bundle size.\\n  if (keys.indexOf(prop) === -1) {\\n    return null;\\n  }\\n  const cssProperties = getCssProperties(prop);\\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\\n  const propValue = props[prop];\\n  return handleBreakpoints(props, propValue, styleFromPropValue);\\n}\\nfunction style(props, keys) {\\n  const transformer = createUnarySpacing(props.theme);\\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\\n}\\nexport function margin(props) {\\n  return style(props, marginKeys);\\n}\\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\\n  obj[key] = responsivePropType;\\n  return obj;\\n}, {}) : {};\\nmargin.filterProps = marginKeys;\\nexport function padding(props) {\\n  return style(props, paddingKeys);\\n}\\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\\n  obj[key] = responsivePropType;\\n  return obj;\\n}, {}) : {};\\npadding.filterProps = paddingKeys;\\nfunction spacing(props) {\\n  return style(props, spacingKeys);\\n}\\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\\n  obj[key] = responsivePropType;\\n  return obj;\\n}, {}) : {};\\nspacing.filterProps = spacingKeys;\\nexport default spacing;\",\"export default function memoize(fn) {\\n  const cache = {};\\n  return arg => {\\n    if (cache[arg] === undefined) {\\n      cache[arg] = fn(arg);\\n    }\\n    return cache[arg];\\n  };\\n}\",\"import capitalize from '@mui/utils/capitalize';\\nimport responsivePropType from './responsivePropType';\\nimport { handleBreakpoints } from './breakpoints';\\nexport function getPath(obj, path, checkVars = true) {\\n  if (!path || typeof path !== 'string') {\\n    return null;\\n  }\\n\\n  // Check if CSS variables are used\\n  if (obj && obj.vars && checkVars) {\\n    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\\n    if (val != null) {\\n      return val;\\n    }\\n  }\\n  return path.split('.').reduce((acc, item) => {\\n    if (acc && acc[item] != null) {\\n      return acc[item];\\n    }\\n    return null;\\n  }, obj);\\n}\\nexport function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\\n  let value;\\n  if (typeof themeMapping === 'function') {\\n    value = themeMapping(propValueFinal);\\n  } else if (Array.isArray(themeMapping)) {\\n    value = themeMapping[propValueFinal] || userValue;\\n  } else {\\n    value = getPath(themeMapping, propValueFinal) || userValue;\\n  }\\n  if (transform) {\\n    value = transform(value, userValue, themeMapping);\\n  }\\n  return value;\\n}\\nfunction style(options) {\\n  const {\\n    prop,\\n    cssProperty = options.prop,\\n    themeKey,\\n    transform\\n  } = options;\\n\\n  // false positive\\n  // eslint-disable-next-line react/function-component-definition\\n  const fn = props => {\\n    if (props[prop] == null) {\\n      return null;\\n    }\\n    const propValue = props[prop];\\n    const theme = props.theme;\\n    const themeMapping = getPath(theme, themeKey) || {};\\n    const styleFromPropValue = propValueFinal => {\\n      let value = getStyleValue(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return handleBreakpoints(props, propValue, styleFromPropValue);\\n  };\\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\\n    [prop]: responsivePropType\\n  } : {};\\n  fn.filterProps = [prop];\\n  return fn;\\n}\\nexport default style;\",\"import merge from './merge';\\nfunction compose(...styles) {\\n  const handlers = styles.reduce((acc, style) => {\\n    style.filterProps.forEach(prop => {\\n      acc[prop] = style;\\n    });\\n    return acc;\\n  }, {});\\n\\n  // false positive\\n  // eslint-disable-next-line react/function-component-definition\\n  const fn = props => {\\n    return Object.keys(props).reduce((acc, prop) => {\\n      if (handlers[prop]) {\\n        return merge(acc, handlers[prop](props));\\n      }\\n      return acc;\\n    }, {});\\n  };\\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) : {};\\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\\n  return fn;\\n}\\nexport default compose;\",\"import responsivePropType from './responsivePropType';\\nimport style from './style';\\nimport compose from './compose';\\nimport { createUnaryUnit, getValue } from './spacing';\\nimport { handleBreakpoints } from './breakpoints';\\nexport function borderTransform(value) {\\n  if (typeof value !== 'number') {\\n    return value;\\n  }\\n  return `${value}px solid`;\\n}\\nfunction createBorderStyle(prop, transform) {\\n  return style({\\n    prop,\\n    themeKey: 'borders',\\n    transform\\n  });\\n}\\nexport const border = createBorderStyle('border', borderTransform);\\nexport const borderTop = createBorderStyle('borderTop', borderTransform);\\nexport const borderRight = createBorderStyle('borderRight', borderTransform);\\nexport const borderBottom = createBorderStyle('borderBottom', borderTransform);\\nexport const borderLeft = createBorderStyle('borderLeft', borderTransform);\\nexport const borderColor = createBorderStyle('borderColor');\\nexport const borderTopColor = createBorderStyle('borderTopColor');\\nexport const borderRightColor = createBorderStyle('borderRightColor');\\nexport const borderBottomColor = createBorderStyle('borderBottomColor');\\nexport const borderLeftColor = createBorderStyle('borderLeftColor');\\nexport const outline = createBorderStyle('outline', borderTransform);\\nexport const outlineColor = createBorderStyle('outlineColor');\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const borderRadius = props => {\\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\\n    const styleFromPropValue = propValue => ({\\n      borderRadius: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\\n  }\\n  return null;\\n};\\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  borderRadius: responsivePropType\\n} : {};\\nborderRadius.filterProps = ['borderRadius'];\\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius, outline, outlineColor);\\nexport default borders;\",\"import style from './style';\\nimport compose from './compose';\\nimport { createUnaryUnit, getValue } from './spacing';\\nimport { handleBreakpoints } from './breakpoints';\\nimport responsivePropType from './responsivePropType';\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const gap = props => {\\n  if (props.gap !== undefined && props.gap !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');\\n    const styleFromPropValue = propValue => ({\\n      gap: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.gap, styleFromPropValue);\\n  }\\n  return null;\\n};\\ngap.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  gap: responsivePropType\\n} : {};\\ngap.filterProps = ['gap'];\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const columnGap = props => {\\n  if (props.columnGap !== undefined && props.columnGap !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');\\n    const styleFromPropValue = propValue => ({\\n      columnGap: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.columnGap, styleFromPropValue);\\n  }\\n  return null;\\n};\\ncolumnGap.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  columnGap: responsivePropType\\n} : {};\\ncolumnGap.filterProps = ['columnGap'];\\n\\n// false positive\\n// eslint-disable-next-line react/function-component-definition\\nexport const rowGap = props => {\\n  if (props.rowGap !== undefined && props.rowGap !== null) {\\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');\\n    const styleFromPropValue = propValue => ({\\n      rowGap: getValue(transformer, propValue)\\n    });\\n    return handleBreakpoints(props, props.rowGap, styleFromPropValue);\\n  }\\n  return null;\\n};\\nrowGap.propTypes = process.env.NODE_ENV !== 'production' ? {\\n  rowGap: responsivePropType\\n} : {};\\nrowGap.filterProps = ['rowGap'];\\nexport const gridColumn = style({\\n  prop: 'gridColumn'\\n});\\nexport const gridRow = style({\\n  prop: 'gridRow'\\n});\\nexport const gridAutoFlow = style({\\n  prop: 'gridAutoFlow'\\n});\\nexport const gridAutoColumns = style({\\n  prop: 'gridAutoColumns'\\n});\\nexport const gridAutoRows = style({\\n  prop: 'gridAutoRows'\\n});\\nexport const gridTemplateColumns = style({\\n  prop: 'gridTemplateColumns'\\n});\\nexport const gridTemplateRows = style({\\n  prop: 'gridTemplateRows'\\n});\\nexport const gridTemplateAreas = style({\\n  prop: 'gridTemplateAreas'\\n});\\nexport const gridArea = style({\\n  prop: 'gridArea'\\n});\\nconst grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\\nexport default grid;\",\"import style from './style';\\nimport compose from './compose';\\nexport function paletteTransform(value, userValue) {\\n  if (userValue === 'grey') {\\n    return userValue;\\n  }\\n  return value;\\n}\\nexport const color = style({\\n  prop: 'color',\\n  themeKey: 'palette',\\n  transform: paletteTransform\\n});\\nexport const bgcolor = style({\\n  prop: 'bgcolor',\\n  cssProperty: 'backgroundColor',\\n  themeKey: 'palette',\\n  transform: paletteTransform\\n});\\nexport const backgroundColor = style({\\n  prop: 'backgroundColor',\\n  themeKey: 'palette',\\n  transform: paletteTransform\\n});\\nconst palette = compose(color, bgcolor, backgroundColor);\\nexport default palette;\",\"import style from './style';\\nimport compose from './compose';\\nimport { handleBreakpoints, values as breakpointsValues } from './breakpoints';\\nexport function sizingTransform(value) {\\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\\n}\\nexport const width = style({\\n  prop: 'width',\\n  transform: sizingTransform\\n});\\nexport const maxWidth = props => {\\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\\n    const styleFromPropValue = propValue => {\\n      var _props$theme, _props$theme2;\\n      const breakpoint = ((_props$theme = props.theme) == null || (_props$theme = _props$theme.breakpoints) == null || (_props$theme = _props$theme.values) == null ? void 0 : _props$theme[propValue]) || breakpointsValues[propValue];\\n      if (!breakpoint) {\\n        return {\\n          maxWidth: sizingTransform(propValue)\\n        };\\n      }\\n      if (((_props$theme2 = props.theme) == null || (_props$theme2 = _props$theme2.breakpoints) == null ? void 0 : _props$theme2.unit) !== 'px') {\\n        return {\\n          maxWidth: `${breakpoint}${props.theme.breakpoints.unit}`\\n        };\\n      }\\n      return {\\n        maxWidth: breakpoint\\n      };\\n    };\\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\\n  }\\n  return null;\\n};\\nmaxWidth.filterProps = ['maxWidth'];\\nexport const minWidth = style({\\n  prop: 'minWidth',\\n  transform: sizingTransform\\n});\\nexport const height = style({\\n  prop: 'height',\\n  transform: sizingTransform\\n});\\nexport const maxHeight = style({\\n  prop: 'maxHeight',\\n  transform: sizingTransform\\n});\\nexport const minHeight = style({\\n  prop: 'minHeight',\\n  transform: sizingTransform\\n});\\nexport const sizeWidth = style({\\n  prop: 'size',\\n  cssProperty: 'width',\\n  transform: sizingTransform\\n});\\nexport const sizeHeight = style({\\n  prop: 'size',\\n  cssProperty: 'height',\\n  transform: sizingTransform\\n});\\nexport const boxSizing = style({\\n  prop: 'boxSizing'\\n});\\nconst sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\\nexport default sizing;\",\"import { padding, margin } from '../spacing';\\nimport { borderRadius, borderTransform } from '../borders';\\nimport { gap, rowGap, columnGap } from '../cssGrid';\\nimport { paletteTransform } from '../palette';\\nimport { maxWidth, sizingTransform } from '../sizing';\\nconst defaultSxConfig = {\\n  // borders\\n  border: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderTop: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderRight: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderBottom: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderLeft: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  borderColor: {\\n    themeKey: 'palette'\\n  },\\n  borderTopColor: {\\n    themeKey: 'palette'\\n  },\\n  borderRightColor: {\\n    themeKey: 'palette'\\n  },\\n  borderBottomColor: {\\n    themeKey: 'palette'\\n  },\\n  borderLeftColor: {\\n    themeKey: 'palette'\\n  },\\n  outline: {\\n    themeKey: 'borders',\\n    transform: borderTransform\\n  },\\n  outlineColor: {\\n    themeKey: 'palette'\\n  },\\n  borderRadius: {\\n    themeKey: 'shape.borderRadius',\\n    style: borderRadius\\n  },\\n  // palette\\n  color: {\\n    themeKey: 'palette',\\n    transform: paletteTransform\\n  },\\n  bgcolor: {\\n    themeKey: 'palette',\\n    cssProperty: 'backgroundColor',\\n    transform: paletteTransform\\n  },\\n  backgroundColor: {\\n    themeKey: 'palette',\\n    transform: paletteTransform\\n  },\\n  // spacing\\n  p: {\\n    style: padding\\n  },\\n  pt: {\\n    style: padding\\n  },\\n  pr: {\\n    style: padding\\n  },\\n  pb: {\\n    style: padding\\n  },\\n  pl: {\\n    style: padding\\n  },\\n  px: {\\n    style: padding\\n  },\\n  py: {\\n    style: padding\\n  },\\n  padding: {\\n    style: padding\\n  },\\n  paddingTop: {\\n    style: padding\\n  },\\n  paddingRight: {\\n    style: padding\\n  },\\n  paddingBottom: {\\n    style: padding\\n  },\\n  paddingLeft: {\\n    style: padding\\n  },\\n  paddingX: {\\n    style: padding\\n  },\\n  paddingY: {\\n    style: padding\\n  },\\n  paddingInline: {\\n    style: padding\\n  },\\n  paddingInlineStart: {\\n    style: padding\\n  },\\n  paddingInlineEnd: {\\n    style: padding\\n  },\\n  paddingBlock: {\\n    style: padding\\n  },\\n  paddingBlockStart: {\\n    style: padding\\n  },\\n  paddingBlockEnd: {\\n    style: padding\\n  },\\n  m: {\\n    style: margin\\n  },\\n  mt: {\\n    style: margin\\n  },\\n  mr: {\\n    style: margin\\n  },\\n  mb: {\\n    style: margin\\n  },\\n  ml: {\\n    style: margin\\n  },\\n  mx: {\\n    style: margin\\n  },\\n  my: {\\n    style: margin\\n  },\\n  margin: {\\n    style: margin\\n  },\\n  marginTop: {\\n    style: margin\\n  },\\n  marginRight: {\\n    style: margin\\n  },\\n  marginBottom: {\\n    style: margin\\n  },\\n  marginLeft: {\\n    style: margin\\n  },\\n  marginX: {\\n    style: margin\\n  },\\n  marginY: {\\n    style: margin\\n  },\\n  marginInline: {\\n    style: margin\\n  },\\n  marginInlineStart: {\\n    style: margin\\n  },\\n  marginInlineEnd: {\\n    style: margin\\n  },\\n  marginBlock: {\\n    style: margin\\n  },\\n  marginBlockStart: {\\n    style: margin\\n  },\\n  marginBlockEnd: {\\n    style: margin\\n  },\\n  // display\\n  displayPrint: {\\n    cssProperty: false,\\n    transform: value => ({\\n      '@media print': {\\n        display: value\\n      }\\n    })\\n  },\\n  display: {},\\n  overflow: {},\\n  textOverflow: {},\\n  visibility: {},\\n  whiteSpace: {},\\n  // flexbox\\n  flexBasis: {},\\n  flexDirection: {},\\n  flexWrap: {},\\n  justifyContent: {},\\n  alignItems: {},\\n  alignContent: {},\\n  order: {},\\n  flex: {},\\n  flexGrow: {},\\n  flexShrink: {},\\n  alignSelf: {},\\n  justifyItems: {},\\n  justifySelf: {},\\n  // grid\\n  gap: {\\n    style: gap\\n  },\\n  rowGap: {\\n    style: rowGap\\n  },\\n  columnGap: {\\n    style: columnGap\\n  },\\n  gridColumn: {},\\n  gridRow: {},\\n  gridAutoFlow: {},\\n  gridAutoColumns: {},\\n  gridAutoRows: {},\\n  gridTemplateColumns: {},\\n  gridTemplateRows: {},\\n  gridTemplateAreas: {},\\n  gridArea: {},\\n  // positions\\n  position: {},\\n  zIndex: {\\n    themeKey: 'zIndex'\\n  },\\n  top: {},\\n  right: {},\\n  bottom: {},\\n  left: {},\\n  // shadows\\n  boxShadow: {\\n    themeKey: 'shadows'\\n  },\\n  // sizing\\n  width: {\\n    transform: sizingTransform\\n  },\\n  maxWidth: {\\n    style: maxWidth\\n  },\\n  minWidth: {\\n    transform: sizingTransform\\n  },\\n  height: {\\n    transform: sizingTransform\\n  },\\n  maxHeight: {\\n    transform: sizingTransform\\n  },\\n  minHeight: {\\n    transform: sizingTransform\\n  },\\n  boxSizing: {},\\n  // typography\\n  fontFamily: {\\n    themeKey: 'typography'\\n  },\\n  fontSize: {\\n    themeKey: 'typography'\\n  },\\n  fontStyle: {\\n    themeKey: 'typography'\\n  },\\n  fontWeight: {\\n    themeKey: 'typography'\\n  },\\n  letterSpacing: {},\\n  textTransform: {},\\n  lineHeight: {},\\n  textAlign: {},\\n  typography: {\\n    cssProperty: false,\\n    themeKey: 'typography'\\n  }\\n};\\nexport default defaultSxConfig;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport _objectWithoutPropertiesLoose from \\\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\\\";\\nconst _excluded = [\\\"sx\\\"];\\nimport { isPlainObject } from '@mui/utils/deepmerge';\\nimport defaultSxConfig from './defaultSxConfig';\\nconst splitProps = props => {\\n  var _props$theme$unstable, _props$theme;\\n  const result = {\\n    systemProps: {},\\n    otherProps: {}\\n  };\\n  const config = (_props$theme$unstable = props == null || (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\\n  Object.keys(props).forEach(prop => {\\n    if (config[prop]) {\\n      result.systemProps[prop] = props[prop];\\n    } else {\\n      result.otherProps[prop] = props[prop];\\n    }\\n  });\\n  return result;\\n};\\nexport default function extendSxProp(props) {\\n  const {\\n      sx: inSx\\n    } = props,\\n    other = _objectWithoutPropertiesLoose(props, _excluded);\\n  const {\\n    systemProps,\\n    otherProps\\n  } = splitProps(other);\\n  let finalSx;\\n  if (Array.isArray(inSx)) {\\n    finalSx = [systemProps, ...inSx];\\n  } else if (typeof inSx === 'function') {\\n    finalSx = (...args) => {\\n      const result = inSx(...args);\\n      if (!isPlainObject(result)) {\\n        return systemProps;\\n      }\\n      return _extends({}, systemProps, result);\\n    };\\n  } else {\\n    finalSx = _extends({}, systemProps, inSx);\\n  }\\n  return _extends({}, otherProps, {\\n    sx: finalSx\\n  });\\n}\",\"import capitalize from '@mui/utils/capitalize';\\nimport merge from '../merge';\\nimport { getPath, getStyleValue as getValue } from '../style';\\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from '../breakpoints';\\nimport defaultSxConfig from './defaultSxConfig';\\nfunction objectsHaveSameKeys(...objects) {\\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\\n  const union = new Set(allKeys);\\n  return objects.every(object => union.size === Object.keys(object).length);\\n}\\nfunction callIfFn(maybeFn, arg) {\\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\\n}\\n\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\nexport function unstable_createStyleFunctionSx() {\\n  function getThemeValue(prop, val, theme, config) {\\n    const props = {\\n      [prop]: val,\\n      theme\\n    };\\n    const options = config[prop];\\n    if (!options) {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const {\\n      cssProperty = prop,\\n      themeKey,\\n      transform,\\n      style\\n    } = options;\\n    if (val == null) {\\n      return null;\\n    }\\n\\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\\n    if (themeKey === 'typography' && val === 'inherit') {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const themeMapping = getPath(theme, themeKey) || {};\\n    if (style) {\\n      return style(props);\\n    }\\n    const styleFromPropValue = propValueFinal => {\\n      let value = getValue(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return handleBreakpoints(props, val, styleFromPropValue);\\n  }\\n  function styleFunctionSx(props) {\\n    var _theme$unstable_sxCon;\\n    const {\\n      sx,\\n      theme = {}\\n    } = props || {};\\n    if (!sx) {\\n      return null; // Emotion & styled-components will neglect null\\n    }\\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig;\\n\\n    /*\\n     * Receive `sxInput` as object or callback\\n     * and then recursively check keys & values to create media query object styles.\\n     * (the result will be used in `styled`)\\n     */\\n    function traverse(sxInput) {\\n      let sxObject = sxInput;\\n      if (typeof sxInput === 'function') {\\n        sxObject = sxInput(theme);\\n      } else if (typeof sxInput !== 'object') {\\n        // value\\n        return sxInput;\\n      }\\n      if (!sxObject) {\\n        return null;\\n      }\\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\\n      let css = emptyBreakpoints;\\n      Object.keys(sxObject).forEach(styleKey => {\\n        const value = callIfFn(sxObject[styleKey], theme);\\n        if (value !== null && value !== undefined) {\\n          if (typeof value === 'object') {\\n            if (config[styleKey]) {\\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\\n            } else {\\n              const breakpointsValues = handleBreakpoints({\\n                theme\\n              }, value, x => ({\\n                [styleKey]: x\\n              }));\\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\\n                css[styleKey] = styleFunctionSx({\\n                  sx: value,\\n                  theme\\n                });\\n              } else {\\n                css = merge(css, breakpointsValues);\\n              }\\n            }\\n          } else {\\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\\n          }\\n        }\\n      });\\n      return removeUnusedBreakpoints(breakpointsKeys, css);\\n    }\\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\\n  }\\n  return styleFunctionSx;\\n}\\nconst styleFunctionSx = unstable_createStyleFunctionSx();\\nstyleFunctionSx.filterProps = ['sx'];\\nexport default styleFunctionSx;\",\"import _formatMuiErrorMessage from \\\"@mui/utils/formatMuiErrorMessage\\\";\\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\\n//\\n// A strict capitalization should uppercase the first letter of each word in the sentence.\\n// We only handle the first word.\\nexport default function capitalize(string) {\\n  if (typeof string !== 'string') {\\n    throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? `MUI: \\\\`capitalize(string)\\\\` expects a string argument.` : _formatMuiErrorMessage(7));\\n  }\\n  return string.charAt(0).toUpperCase() + string.slice(1);\\n}\",\"function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {\\n  return Math.max(min, Math.min(val, max));\\n}\\nexport default clamp;\",\"import _extends from \\\"@babel/runtime/helpers/esm/extends\\\";\\nimport * as React from 'react';\\n\\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\\nexport function isPlainObject(item) {\\n  if (typeof item !== 'object' || item === null) {\\n    return false;\\n  }\\n  const prototype = Object.getPrototypeOf(item);\\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\\n}\\nfunction deepClone(source) {\\n  if ( /*#__PURE__*/React.isValidElement(source) || !isPlainObject(source)) {\\n    return source;\\n  }\\n  const output = {};\\n  Object.keys(source).forEach(key => {\\n    output[key] = deepClone(source[key]);\\n  });\\n  return output;\\n}\\nexport default function deepmerge(target, source, options = {\\n  clone: true\\n}) {\\n  const output = options.clone ? _extends({}, target) : target;\\n  if (isPlainObject(target) && isPlainObject(source)) {\\n    Object.keys(source).forEach(key => {\\n      if ( /*#__PURE__*/React.isValidElement(source[key])) {\\n        output[key] = source[key];\\n      } else if (isPlainObject(source[key]) &&\\n      // Avoid prototype pollution\\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\\n        output[key] = deepmerge(target[key], source[key], options);\\n      } else if (options.clone) {\\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\\n      } else {\\n        output[key] = source[key];\\n      }\\n    });\\n  }\\n  return output;\\n}\",\"/**\\n * WARNING: Don't import this directly.\\n * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.\\n * @param {number} code\\n */\\nexport default function formatMuiErrorMessage(code) {\\n  // Apply babel-plugin-transform-template-literals in loose mode\\n  // loose mode is safe if we're concatenating primitives\\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\\n  /* eslint-disable prefer-template */\\n  let url = 'https://mui.com/production-error/?code=' + code;\\n  for (let i = 1; i < arguments.length; i += 1) {\\n    // rest params over-transpile for this case\\n    // eslint-disable-next-line prefer-rest-params\\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\\n  }\\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\\n  /* eslint-enable prefer-template */\\n}\",\"import { ForwardRef, Memo } from 'react-is';\\n\\n// Simplified polyfill for IE11 support\\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\\nconst fnNameMatchRegex = /^\\\\s*function(?:\\\\s|\\\\s*\\\\/\\\\*.*\\\\*\\\\/\\\\s*)+([^(\\\\s/]*)\\\\s*/;\\nexport function getFunctionName(fn) {\\n  const match = `${fn}`.match(fnNameMatchRegex);\\n  const name = match && match[1];\\n  return name || '';\\n}\\nfunction getFunctionComponentName(Component, fallback = '') {\\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\\n}\\nfunction getWrappedName(outerType, innerType, wrapperName) {\\n  const functionName = getFunctionComponentName(innerType);\\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\\n}\\n\\n/**\\n * cherry-pick from\\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\\n * originally forked from recompose/getDisplayName with added IE11 support\\n */\\nexport default function getDisplayName(Component) {\\n  if (Component == null) {\\n    return undefined;\\n  }\\n  if (typeof Component === 'string') {\\n    return Component;\\n  }\\n  if (typeof Component === 'function') {\\n    return getFunctionComponentName(Component, 'Component');\\n  }\\n\\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\\n  if (typeof Component === 'object') {\\n    switch (Component.$$typeof) {\\n      case ForwardRef:\\n        return getWrappedName(Component, Component.render, 'ForwardRef');\\n      case Memo:\\n        return getWrappedName(Component, Component.type, 'memo');\\n      default:\\n        return undefined;\\n    }\\n  }\\n  return undefined;\\n}\",\"'use strict';\\n\\nvar reactIs = require('react-is');\\n\\n/**\\n * Copyright 2015, Yahoo! Inc.\\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\\n */\\nvar REACT_STATICS = {\\n  childContextTypes: true,\\n  contextType: true,\\n  contextTypes: true,\\n  defaultProps: true,\\n  displayName: true,\\n  getDefaultProps: true,\\n  getDerivedStateFromError: true,\\n  getDerivedStateFromProps: true,\\n  mixins: true,\\n  propTypes: true,\\n  type: true\\n};\\nvar KNOWN_STATICS = {\\n  name: true,\\n  length: true,\\n  prototype: true,\\n  caller: true,\\n  callee: true,\\n  arguments: true,\\n  arity: true\\n};\\nvar FORWARD_REF_STATICS = {\\n  '$$typeof': true,\\n  render: true,\\n  defaultProps: true,\\n  displayName: true,\\n  propTypes: true\\n};\\nvar MEMO_STATICS = {\\n  '$$typeof': true,\\n  compare: true,\\n  defaultProps: true,\\n  displayName: true,\\n  propTypes: true,\\n  type: true\\n};\\nvar TYPE_STATICS = {};\\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\\n\\nfunction getStatics(component) {\\n  // React v16.11 and below\\n  if (reactIs.isMemo(component)) {\\n    return MEMO_STATICS;\\n  } // React v16.12 and above\\n\\n\\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\\n}\\n\\nvar defineProperty = Object.defineProperty;\\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\nvar getPrototypeOf = Object.getPrototypeOf;\\nvar objectPrototype = Object.prototype;\\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\\n  if (typeof sourceComponent !== 'string') {\\n    // don't hoist over string (html) components\\n    if (objectPrototype) {\\n      var inheritedComponent = getPrototypeOf(sourceComponent);\\n\\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\\n      }\\n    }\\n\\n    var keys = getOwnPropertyNames(sourceComponent);\\n\\n    if (getOwnPropertySymbols) {\\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\\n    }\\n\\n    var targetStatics = getStatics(targetComponent);\\n    var sourceStatics = getStatics(sourceComponent);\\n\\n    for (var i = 0; i < keys.length; ++i) {\\n      var key = keys[i];\\n\\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\\n\\n        try {\\n          // Avoid failures from read-only properties\\n          defineProperty(targetComponent, key, descriptor);\\n        } catch (e) {}\\n      }\\n    }\\n  }\\n\\n  return targetComponent;\\n}\\n\\nmodule.exports = hoistNonReactStatics;\\n\",\"/** @license React v16.13.1\\n * react-is.production.min.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';var b=\\\"function\\\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\\\"react.element\\\"):60103,d=b?Symbol.for(\\\"react.portal\\\"):60106,e=b?Symbol.for(\\\"react.fragment\\\"):60107,f=b?Symbol.for(\\\"react.strict_mode\\\"):60108,g=b?Symbol.for(\\\"react.profiler\\\"):60114,h=b?Symbol.for(\\\"react.provider\\\"):60109,k=b?Symbol.for(\\\"react.context\\\"):60110,l=b?Symbol.for(\\\"react.async_mode\\\"):60111,m=b?Symbol.for(\\\"react.concurrent_mode\\\"):60111,n=b?Symbol.for(\\\"react.forward_ref\\\"):60112,p=b?Symbol.for(\\\"react.suspense\\\"):60113,q=b?\\nSymbol.for(\\\"react.suspense_list\\\"):60120,r=b?Symbol.for(\\\"react.memo\\\"):60115,t=b?Symbol.for(\\\"react.lazy\\\"):60116,v=b?Symbol.for(\\\"react.block\\\"):60121,w=b?Symbol.for(\\\"react.fundamental\\\"):60117,x=b?Symbol.for(\\\"react.responder\\\"):60118,y=b?Symbol.for(\\\"react.scope\\\"):60119;\\nfunction z(a){if(\\\"object\\\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\\\"object\\\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\\nexports.isValidElementType=function(a){return\\\"string\\\"===typeof a||\\\"function\\\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\\\"object\\\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\\n\",\"'use strict';\\n\\nif (process.env.NODE_ENV === 'production') {\\n  module.exports = require('./cjs/react-is.production.min.js');\\n} else {\\n  module.exports = require('./cjs/react-is.development.js');\\n}\\n\",\"/**\\n * @license React\\n * react-dom.production.min.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n/*\\n Modernizr 3.0.0pre (Custom Build) | MIT\\n*/\\n'use strict';var aa=require(\\\"react\\\"),ca=require(\\\"scheduler\\\");function p(a){for(var b=\\\"https://reactjs.org/docs/error-decoder.html?invariant=\\\"+a,c=1;c<arguments.length;c++)b+=\\\"&args[]=\\\"+encodeURIComponent(arguments[c]);return\\\"Minified React error #\\\"+a+\\\"; visit \\\"+b+\\\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\\\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\\\"Capture\\\",b)}\\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\\nvar ia=!(\\\"undefined\\\"===typeof window||\\\"undefined\\\"===typeof window.document||\\\"undefined\\\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$/,la=\\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \\\"function\\\":case \\\"symbol\\\":return!0;case \\\"boolean\\\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\\\"data-\\\"!==a&&\\\"aria-\\\"!==a;default:return!1}}\\nfunction qa(a,b,c,d){if(null===b||\\\"undefined\\\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\\n\\\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\\\".split(\\\" \\\").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\\\"acceptCharset\\\",\\\"accept-charset\\\"],[\\\"className\\\",\\\"class\\\"],[\\\"htmlFor\\\",\\\"for\\\"],[\\\"httpEquiv\\\",\\\"http-equiv\\\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\\\"contentEditable\\\",\\\"draggable\\\",\\\"spellCheck\\\",\\\"value\\\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\\n[\\\"autoReverse\\\",\\\"externalResourcesRequired\\\",\\\"focusable\\\",\\\"preserveAlpha\\\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\\\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\\\".split(\\\" \\\").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\\n[\\\"checked\\\",\\\"multiple\\\",\\\"muted\\\",\\\"selected\\\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\\\"capture\\\",\\\"download\\\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\\\"cols\\\",\\\"rows\\\",\\\"size\\\",\\\"span\\\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\\\"rowSpan\\\",\\\"start\\\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\\n\\\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\\\".split(\\\" \\\").forEach(function(a){var b=a.replace(ra,\\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\\\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\\\".split(\\\" \\\").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\\\"http://www.w3.org/1999/xlink\\\",!1,!1)});[\\\"xml:base\\\",\\\"xml:lang\\\",\\\"xml:space\\\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\\\"http://www.w3.org/XML/1998/namespace\\\",!1,!1)});[\\\"tabIndex\\\",\\\"crossOrigin\\\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\\nz.xlinkHref=new v(\\\"xlinkHref\\\",1,!1,\\\"xlink:href\\\",\\\"http://www.w3.org/1999/xlink\\\",!0,!1);[\\\"src\\\",\\\"href\\\",\\\"action\\\",\\\"formAction\\\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\\\"o\\\"!==b[0]&&\\\"O\\\"!==b[0]||\\\"n\\\"!==b[1]&&\\\"N\\\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\\\"\\\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\\\"\\\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\\\"\\\":\\\"\\\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\\\"react.element\\\"),wa=Symbol.for(\\\"react.portal\\\"),ya=Symbol.for(\\\"react.fragment\\\"),za=Symbol.for(\\\"react.strict_mode\\\"),Aa=Symbol.for(\\\"react.profiler\\\"),Ba=Symbol.for(\\\"react.provider\\\"),Ca=Symbol.for(\\\"react.context\\\"),Da=Symbol.for(\\\"react.forward_ref\\\"),Ea=Symbol.for(\\\"react.suspense\\\"),Fa=Symbol.for(\\\"react.suspense_list\\\"),Ga=Symbol.for(\\\"react.memo\\\"),Ha=Symbol.for(\\\"react.lazy\\\");Symbol.for(\\\"react.scope\\\");Symbol.for(\\\"react.debug_trace_mode\\\");\\nvar Ia=Symbol.for(\\\"react.offscreen\\\");Symbol.for(\\\"react.legacy_hidden\\\");Symbol.for(\\\"react.cache\\\");Symbol.for(\\\"react.tracing_marker\\\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\\\"object\\\"!==typeof a)return null;a=Ja&&a[Ja]||a[\\\"@@iterator\\\"];return\\\"function\\\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\\\n( *(at )?)/);La=b&&b[1]||\\\"\\\"}return\\\"\\\\n\\\"+La+a}var Na=!1;\\nfunction Oa(a,b){if(!a||Na)return\\\"\\\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\\\"props\\\",{set:function(){throw Error();}}),\\\"object\\\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\\\"string\\\"===typeof l.stack){for(var e=l.stack.split(\\\"\\\\n\\\"),\\nf=d.stack.split(\\\"\\\\n\\\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\\\"\\\\n\\\"+e[g].replace(\\\" at new \\\",\\\" at \\\");a.displayName&&k.includes(\\\"<anonymous>\\\")&&(k=k.replace(\\\"<anonymous>\\\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\\\"\\\")?Ma(a):\\\"\\\"}\\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\\\"Lazy\\\");case 13:return Ma(\\\"Suspense\\\");case 19:return Ma(\\\"SuspenseList\\\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\\\"\\\"}}\\nfunction Qa(a){if(null==a)return null;if(\\\"function\\\"===typeof a)return a.displayName||a.name||null;if(\\\"string\\\"===typeof a)return a;switch(a){case ya:return\\\"Fragment\\\";case wa:return\\\"Portal\\\";case Aa:return\\\"Profiler\\\";case za:return\\\"StrictMode\\\";case Ea:return\\\"Suspense\\\";case Fa:return\\\"SuspenseList\\\"}if(\\\"object\\\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\\\"Context\\\")+\\\".Consumer\\\";case Ba:return(a._context.displayName||\\\"Context\\\")+\\\".Provider\\\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\\nb.name||\\\"\\\",a=\\\"\\\"!==a?\\\"ForwardRef(\\\"+a+\\\")\\\":\\\"ForwardRef\\\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\\\"Memo\\\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\\\"Cache\\\";case 9:return(b.displayName||\\\"Context\\\")+\\\".Consumer\\\";case 10:return(b._context.displayName||\\\"Context\\\")+\\\".Provider\\\";case 18:return\\\"DehydratedFragment\\\";case 11:return a=b.render,a=a.displayName||a.name||\\\"\\\",b.displayName||(\\\"\\\"!==a?\\\"ForwardRef(\\\"+a+\\\")\\\":\\\"ForwardRef\\\");case 7:return\\\"Fragment\\\";case 5:return b;case 4:return\\\"Portal\\\";case 3:return\\\"Root\\\";case 6:return\\\"Text\\\";case 16:return Qa(b);case 8:return b===za?\\\"StrictMode\\\":\\\"Mode\\\";case 22:return\\\"Offscreen\\\";\\ncase 12:return\\\"Profiler\\\";case 21:return\\\"Scope\\\";case 13:return\\\"Suspense\\\";case 19:return\\\"SuspenseList\\\";case 25:return\\\"TracingMarker\\\";case 1:case 0:case 17:case 2:case 14:case 15:if(\\\"function\\\"===typeof b)return b.displayName||b.name||null;if(\\\"string\\\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \\\"boolean\\\":case \\\"number\\\":case \\\"string\\\":case \\\"undefined\\\":return a;case \\\"object\\\":return a;default:return\\\"\\\"}}\\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\\\"input\\\"===a.toLowerCase()&&(\\\"checkbox\\\"===b||\\\"radio\\\"===b)}\\nfunction Ua(a){var b=Ta(a)?\\\"checked\\\":\\\"value\\\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\\\"\\\"+a[b];if(!a.hasOwnProperty(b)&&\\\"undefined\\\"!==typeof c&&\\\"function\\\"===typeof c.get&&\\\"function\\\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\\\"\\\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\\\"\\\"+a},stopTracking:function(){a._valueTracker=\\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\\\"\\\";a&&(d=Ta(a)?a.checked?\\\"true\\\":\\\"false\\\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\\\"undefined\\\"!==typeof document?document:void 0);if(\\\"undefined\\\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\\\"\\\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\\\"checkbox\\\"===b.type||\\\"radio\\\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\\\"checked\\\",b,!1)}\\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\\\"number\\\"===d){if(0===c&&\\\"\\\"===a.value||a.value!=c)a.value=\\\"\\\"+c}else a.value!==\\\"\\\"+c&&(a.value=\\\"\\\"+c);else if(\\\"submit\\\"===d||\\\"reset\\\"===d){a.removeAttribute(\\\"value\\\");return}b.hasOwnProperty(\\\"value\\\")?cb(a,b.type,c):b.hasOwnProperty(\\\"defaultValue\\\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\\nfunction db(a,b,c){if(b.hasOwnProperty(\\\"value\\\")||b.hasOwnProperty(\\\"defaultValue\\\")){var d=b.type;if(!(\\\"submit\\\"!==d&&\\\"reset\\\"!==d||void 0!==b.value&&null!==b.value))return;b=\\\"\\\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\\\"\\\"!==c&&(a.name=\\\"\\\");a.defaultChecked=!!a._wrapperState.initialChecked;\\\"\\\"!==c&&(a.name=c)}\\nfunction cb(a,b,c){if(\\\"number\\\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\\\"\\\"+a._wrapperState.initialValue:a.defaultValue!==\\\"\\\"+c&&(a.defaultValue=\\\"\\\"+c)}var eb=Array.isArray;\\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\\\"$\\\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\\\"$\\\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\\\"\\\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\\\"\\\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\\\"\\\");c=b}a._wrapperState={initialValue:Sa(c)}}\\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\\\"\\\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\\\"\\\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\\\"\\\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \\\"svg\\\":return\\\"http://www.w3.org/2000/svg\\\";case \\\"math\\\":return\\\"http://www.w3.org/1998/Math/MathML\\\";default:return\\\"http://www.w3.org/1999/xhtml\\\"}}\\nfunction lb(a,b){return null==a||\\\"http://www.w3.org/1999/xhtml\\\"===a?kb(b):\\\"http://www.w3.org/2000/svg\\\"===a&&\\\"foreignObject\\\"===b?\\\"http://www.w3.org/1999/xhtml\\\":a}\\nvar mb,nb=function(a){return\\\"undefined\\\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\\\"http://www.w3.org/2000/svg\\\"!==a.namespaceURI||\\\"innerHTML\\\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\\\"div\\\");mb.innerHTML=\\\"<svg>\\\"+b.valueOf().toString()+\\\"</svg>\\\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\\\"Webkit\\\",\\\"ms\\\",\\\"Moz\\\",\\\"O\\\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\\\"boolean\\\"===typeof b||\\\"\\\"===b?\\\"\\\":c||\\\"number\\\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\\\"\\\"+b).trim():b+\\\"px\\\"}\\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\\\"--\\\"),e=rb(c,b[c],d);\\\"float\\\"===c&&(c=\\\"cssFloat\\\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\\\"object\\\"!==typeof b.dangerouslySetInnerHTML||!(\\\"__html\\\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\\\"object\\\"!==typeof b.style)throw Error(p(62));}}\\nfunction vb(a,b){if(-1===a.indexOf(\\\"-\\\"))return\\\"string\\\"===typeof b.is;switch(a){case \\\"annotation-xml\\\":case \\\"color-profile\\\":case \\\"font-face\\\":case \\\"font-face-src\\\":case \\\"font-face-uri\\\":case \\\"font-face-format\\\":case \\\"font-face-name\\\":case \\\"missing-glyph\\\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\\nfunction Bb(a){if(a=Cb(a)){if(\\\"function\\\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \\\"onClick\\\":case \\\"onClickCapture\\\":case \\\"onDoubleClick\\\":case \\\"onDoubleClickCapture\\\":case \\\"onMouseDown\\\":case \\\"onMouseDownCapture\\\":case \\\"onMouseMove\\\":case \\\"onMouseMoveCapture\\\":case \\\"onMouseUp\\\":case \\\"onMouseUpCapture\\\":case \\\"onMouseEnter\\\":(d=!d.disabled)||(a=a.type,d=!(\\\"button\\\"===a||\\\"input\\\"===a||\\\"select\\\"===a||\\\"textarea\\\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\\\"function\\\"!==\\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\\\"passive\\\",{get:function(){Lb=!0}});window.addEventListener(\\\"test\\\",Mb,Mb);window.removeEventListener(\\\"test\\\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\\\"function\\\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\\\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\\\".split(\\\" \\\");\\nfunction Sc(a,b){switch(a){case \\\"focusin\\\":case \\\"focusout\\\":Lc=null;break;case \\\"dragenter\\\":case \\\"dragleave\\\":Mc=null;break;case \\\"mouseover\\\":case \\\"mouseout\\\":Nc=null;break;case \\\"pointerover\\\":case \\\"pointerout\\\":Oc.delete(b.pointerId);break;case \\\"gotpointercapture\\\":case \\\"lostpointercapture\\\":Pc.delete(b.pointerId)}}\\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\\nfunction Uc(a,b,c,d,e){switch(b){case \\\"focusin\\\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \\\"dragenter\\\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \\\"mouseover\\\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \\\"pointerover\\\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \\\"gotpointercapture\\\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\\nfunction jd(a){switch(a){case \\\"cancel\\\":case \\\"click\\\":case \\\"close\\\":case \\\"contextmenu\\\":case \\\"copy\\\":case \\\"cut\\\":case \\\"auxclick\\\":case \\\"dblclick\\\":case \\\"dragend\\\":case \\\"dragstart\\\":case \\\"drop\\\":case \\\"focusin\\\":case \\\"focusout\\\":case \\\"input\\\":case \\\"invalid\\\":case \\\"keydown\\\":case \\\"keypress\\\":case \\\"keyup\\\":case \\\"mousedown\\\":case \\\"mouseup\\\":case \\\"paste\\\":case \\\"pause\\\":case \\\"play\\\":case \\\"pointercancel\\\":case \\\"pointerdown\\\":case \\\"pointerup\\\":case \\\"ratechange\\\":case \\\"reset\\\":case \\\"resize\\\":case \\\"seeked\\\":case \\\"submit\\\":case \\\"touchcancel\\\":case \\\"touchend\\\":case \\\"touchstart\\\":case \\\"volumechange\\\":case \\\"change\\\":case \\\"selectionchange\\\":case \\\"textInput\\\":case \\\"compositionstart\\\":case \\\"compositionend\\\":case \\\"compositionupdate\\\":case \\\"beforeblur\\\":case \\\"afterblur\\\":case \\\"beforeinput\\\":case \\\"blur\\\":case \\\"fullscreenchange\\\":case \\\"focus\\\":case \\\"hashchange\\\":case \\\"popstate\\\":case \\\"select\\\":case \\\"selectstart\\\":return 1;case \\\"drag\\\":case \\\"dragenter\\\":case \\\"dragexit\\\":case \\\"dragleave\\\":case \\\"dragover\\\":case \\\"mousemove\\\":case \\\"mouseout\\\":case \\\"mouseover\\\":case \\\"pointermove\\\":case \\\"pointerout\\\":case \\\"pointerover\\\":case \\\"scroll\\\":case \\\"toggle\\\":case \\\"touchmove\\\":case \\\"wheel\\\":case \\\"mouseenter\\\":case \\\"mouseleave\\\":case \\\"pointerenter\\\":case \\\"pointerleave\\\":return 4;\\ncase \\\"message\\\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\\\"value\\\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\\nfunction od(a){var b=a.keyCode;\\\"charCode\\\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\\\"unknown\\\"!==typeof a.returnValue&&\\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\\\"unknown\\\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\\\"movementX\\\"in\\na)return a.movementX;a!==yd&&(yd&&\\\"mousemove\\\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\\\"movementY\\\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\\\"clipboardData\\\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\\\"Escape\\\",\\nSpacebar:\\\" \\\",Left:\\\"ArrowLeft\\\",Up:\\\"ArrowUp\\\",Right:\\\"ArrowRight\\\",Down:\\\"ArrowDown\\\",Del:\\\"Delete\\\",Win:\\\"OS\\\",Menu:\\\"ContextMenu\\\",Apps:\\\"ContextMenu\\\",Scroll:\\\"ScrollLock\\\",MozPrintableKey:\\\"Unidentified\\\"},Nd={8:\\\"Backspace\\\",9:\\\"Tab\\\",12:\\\"Clear\\\",13:\\\"Enter\\\",16:\\\"Shift\\\",17:\\\"Control\\\",18:\\\"Alt\\\",19:\\\"Pause\\\",20:\\\"CapsLock\\\",27:\\\"Escape\\\",32:\\\" \\\",33:\\\"PageUp\\\",34:\\\"PageDown\\\",35:\\\"End\\\",36:\\\"Home\\\",37:\\\"ArrowLeft\\\",38:\\\"ArrowUp\\\",39:\\\"ArrowRight\\\",40:\\\"ArrowDown\\\",45:\\\"Insert\\\",46:\\\"Delete\\\",112:\\\"F1\\\",113:\\\"F2\\\",114:\\\"F3\\\",115:\\\"F4\\\",116:\\\"F5\\\",117:\\\"F6\\\",118:\\\"F7\\\",\\n119:\\\"F8\\\",120:\\\"F9\\\",121:\\\"F10\\\",122:\\\"F11\\\",123:\\\"F12\\\",144:\\\"NumLock\\\",145:\\\"ScrollLock\\\",224:\\\"Meta\\\"},Od={Alt:\\\"altKey\\\",Control:\\\"ctrlKey\\\",Meta:\\\"metaKey\\\",Shift:\\\"shiftKey\\\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\\\"Unidentified\\\"!==b)return b}return\\\"keypress\\\"===a.type?(a=od(a),13===a?\\\"Enter\\\":String.fromCharCode(a)):\\\"keydown\\\"===a.type||\\\"keyup\\\"===a.type?Nd[a.keyCode]||\\\"Unidentified\\\":\\\"\\\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\\\"keypress\\\"===a.type?od(a):0},keyCode:function(a){return\\\"keydown\\\"===a.type||\\\"keyup\\\"===a.type?a.keyCode:0},which:function(a){return\\\"keypress\\\"===\\na.type?od(a):\\\"keydown\\\"===a.type||\\\"keyup\\\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\\\"deltaX\\\"in a?a.deltaX:\\\"wheelDeltaX\\\"in a?-a.wheelDeltaX:0},\\ndeltaY:function(a){return\\\"deltaY\\\"in a?a.deltaY:\\\"wheelDeltaY\\\"in a?-a.wheelDeltaY:\\\"wheelDelta\\\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\\\"CompositionEvent\\\"in window,be=null;ia&&\\\"documentMode\\\"in document&&(be=document.documentMode);var ce=ia&&\\\"TextEvent\\\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\\nfunction ge(a,b){switch(a){case \\\"keyup\\\":return-1!==$d.indexOf(b.keyCode);case \\\"keydown\\\":return 229!==b.keyCode;case \\\"keypress\\\":case \\\"mousedown\\\":case \\\"focusout\\\":return!0;default:return!1}}function he(a){a=a.detail;return\\\"object\\\"===typeof a&&\\\"data\\\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \\\"compositionend\\\":return he(b);case \\\"keypress\\\":if(32!==b.which)return null;fe=!0;return ee;case \\\"textInput\\\":return a=b.data,a===ee&&fe?null:a;default:return null}}\\nfunction ke(a,b){if(ie)return\\\"compositionend\\\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \\\"paste\\\":return null;case \\\"keypress\\\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \\\"compositionend\\\":return de&&\\\"ko\\\"!==b.locale?null:b.data;default:return null}}\\nvar le={color:!0,date:!0,datetime:!0,\\\"datetime-local\\\":!0,email:!0,month:!0,number:!0,${PASSWORD_11};\\r\\nimport App from './App.tsx';\\r\\n\\r\\nconst theme = createTheme({\\r\\n    palette: {\\r\\n        mode: 'dark',\\r\\n        primary: {\\r\\n            main: '#00e5ff',\\r\\n        },\\r\\n        secondary: {\\r\\n            main: '#ff00e5',\\r\\n        },\\r\\n    },\\r\\n});\\r\\n\\r\\nconst root = ReactDOM.createRoot(\\r\\n    document.getElementById('root') as HTMLElement\\r\\n);\\r\\n\\r\\nroot.render(\\r\\n    <React.StrictMode>\\r\\n        <BrowserRouter>\\r\\n            <ThemeProvider theme={theme}>\\r\\n                <CssBaseline />\\r\\n                <App />\\r\\n            </ThemeProvider>\\r\\n        </BrowserRouter>\\r\\n    </React.StrictMode>\\r\\n);\\r\\n\"],\"names\":[\"StyleSheet\",\"options\",\"_this\",\"this\",\"_insertTag\",\"tag\",\"before\",\"tags\",\"length\",\"insertionPoint\",\"nextSibling\",\"prepend\",\"container\",\"firstChild\",\"insertBefore\",\"push\",\"isSpeedy\",\"undefined\",\"speedy\",\"ctr\",\"nonce\",\"key\",\"_proto\",\"prototype\",\"hydrate\",\"nodes\",\"forEach\",\"insert\",\"rule\",\"document\",\"createElement\",\"setAttribute\",\"appendChild\",\"createTextNode\",\"createStyleElement\",\"sheet\",\"i\",\"styleSheets\",\"ownerNode\",\"sheetForTag\",\"insertRule\",\"cssRules\",\"e\",\"flush\",\"_tag$parentNode\",\"parentNode\",\"removeChild\",\"abs\",\"Math\",\"from\",\"String\",\"fromCharCode\",\"assign\",\"Object\",\"trim\",\"value\",\"replace\",\"pattern\",\"replacement\",\"indexof\",\"search\",\"indexOf\",\"charat\",\"index\",\"charCodeAt\",\"substr\",\"begin\",\"end\",\"slice\",\"strlen\",\"sizeof\",\"append\",\"array\",\"line\",\"column\",\"position\",\"character\",\"characters\",\"node\",\"root\",\"parent\",\"type\",\"props\",\"children\",\"return\",\"copy\",\"prev\",\"next\",\"peek\",\"caret\",\"token\",\"alloc\",\"dealloc\",\"delimit\",\"delimiter\",\"whitespace\",\"escaping\",\"count\",\"commenter\",\"identifier\",\"MS\",\"MOZ\",\"WEBKIT\",\"COMMENT\",\"RULESET\",\"DECLARATION\",\"KEYFRAMES\",\"serialize\",\"callback\",\"output\",\"stringify\",\"element\",\"join\",\"compile\",\"parse\",\"rules\",\"rulesets\",\"pseudo\",\"points\",\"declarations\",\"offset\",\"atrule\",\"property\",\"previous\",\"variable\",\"scanning\",\"ampersand\",\"reference\",\"comment\",\"declaration\",\"ruleset\",\"post\",\"size\",\"j\",\"k\",\"x\",\"y\",\"z\",\"identifierWithPointTracking\",\"getRules\",\"parsed\",\"toRules\",\"fixedElements\",\"WeakMap\",\"compat\",\"isImplicitRule\",\"get\",\"set\",\"parentRules\",\"removeLabel\",\"prefix\",\"hash\",\"defaultStylisPlugins\",\"map\",\"combine\",\"exec\",\"match\",\"createCache\",\"ssrStyles\",\"querySelectorAll\",\"Array\",\"call\",\"getAttribute\",\"head\",\"_insert\",\"stylisPlugins\",\"inserted\",\"nodesToHydrate\",\"attrib\",\"split\",\"currentSheet\",\"finalizingPlugins\",\"serializer\",\"collection\",\"middleware\",\"concat\",\"selector\",\"serialized\",\"shouldCache\",\"styles\",\"cache\",\"name\",\"registered\",\"memoize\",\"fn\",\"create\",\"arg\",\"EmotionCacheContext\",\"React\",\"HTMLElement\",\"CacheProvider\",\"Provider\",\"withEmotionCache\",\"func\",\"forwardRef\",\"ref\",\"useContext\",\"ThemeContext\",\"hasOwn\",\"hasOwnProperty\",\"typePropName\",\"createEmotionProps\",\"newProps\",\"_key\",\"Insertion\",\"_ref\",\"isStringTag\",\"registerStyles\",\"useInsertionEffectAlwaysWithSyncFallback\",\"insertStyles\",\"Emotion$1\",\"cssProp\",\"css\",\"WrappedComponent\",\"registeredStyles\",\"className\",\"getRegisteredStyles\",\"serializeStyles\",\"_key2\",\"jsx\",\"args\",\"arguments\",\"apply\",\"argsLength\",\"createElementArgArray\",\"Emotion\",\"_jsx\",\"JSX\",\"Global\",\"sheetRef\",\"useInsertionEffectWithLayoutFallback\",\"constructor\",\"rehydrating\",\"querySelector\",\"current\",\"sheetRefCurrent\",\"nextElementSibling\",\"_len\",\"keyframes\",\"insertable\",\"anim\",\"toString\",\"unitlessKeys\",\"animationIterationCount\",\"aspectRatio\",\"borderImageOutset\",\"borderImageSlice\",\"borderImageWidth\",\"boxFlex\",\"boxFlexGroup\",\"boxOrdinalGroup\",\"columnCount\",\"columns\",\"flex\",\"flexGrow\",\"flexPositive\",\"flexShrink\",\"flexNegative\",\"flexOrder\",\"gridRow\",\"gridRowEnd\",\"gridRowSpan\",\"gridRowStart\",\"gridColumn\",\"gridColumnEnd\",\"gridColumnSpan\",\"gridColumnStart\",\"msGridRow\",\"msGridRowSpan\",\"msGridColumn\",\"msGridColumnSpan\",\"fontWeight\",\"lineHeight\",\"opacity\",\"order\",\"orphans\",\"scale\",\"tabSize\",\"widows\",\"zIndex\",\"zoom\",\"WebkitLineClamp\",\"fillOpacity\",\"floodOpacity\",\"stopOpacity\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"isDevelopment\",\"hyphenateRegex\",\"animationRegex\",\"isCustomProperty\",\"isProcessableValue\",\"processStyleName\",\"styleName\",\"toLowerCase\",\"processStyleValue\",\"p1\",\"p2\",\"cursor\",\"unitless\",\"noComponentSelectorMessage\",\"handleInterpolation\",\"mergedProps\",\"interpolation\",\"componentSelector\",\"__emotion_styles\",\"serializedStyles\",\"obj\",\"string\",\"isArray\",\"asString\",\"Error\",\"interpolated\",\"_i\",\"createStringFromObject\",\"previousCursor\",\"result\",\"cached\",\"labelPattern\",\"stringMode\",\"strings\",\"raw\",\"lastIndex\",\"identifierName\",\"str\",\"h\",\"len\",\"hashString\",\"useInsertionEffect\",\"classNames\",\"rawClassName\",\"GlobalStyles\",\"defaultTheme\",\"globalStyles\",\"themeInput\",\"keys\",\"reactPropsRegex\",\"testOmitPropsOnStringTag\",\"prop\",\"test\",\"testOmitPropsOnComponent\",\"getDefaultShouldForwardProp\",\"composeShouldForwardProps\",\"isReal\",\"shouldForwardProp\",\"optionsShouldForwardProp\",\"__emotion_forwardProp\",\"propName\",\"newStyled\",\"createStyled\",\"targetClassName\",\"__emotion_real\",\"baseTag\",\"__emotion_base\",\"label\",\"target\",\"defaultShouldForwardProp\",\"shouldUseAs\",\"templateStringsArr\",\"Styled\",\"FinalTag\",\"as\",\"classInterpolations\",\"theme\",\"finalShouldForwardProp\",\"displayName\",\"defaultProps\",\"defineProperty\",\"withComponent\",\"nextTag\",\"nextOptions\",\"_extends\",\"bind\",\"tagName\",\"StyledEngineProvider\",\"injectFirst\",\"styled\",\"emStyled\",\"internal_processStyles\",\"processor\",\"_interopRequireDefault\",\"require\",\"exports\",\"darken\",\"foreground\",\"background\",\"lumA\",\"getLuminance\",\"lumB\",\"max\",\"min\",\"lighten\",\"_formatMuiErrorMessage2\",\"_clamp\",\"clampWrapper\",\"default\",\"hexToRgb\",\"color\",\"re\",\"RegExp\",\"colors\",\"n\",\"parseInt\",\"round\",\"decomposeColor\",\"charAt\",\"marker\",\"substring\",\"colorSpace\",\"values\",\"shift\",\"parseFloat\",\"colorChannel\",\"decomposedColor\",\"val\",\"idx\",\"recomposeColor\",\"hslToRgb\",\"s\",\"l\",\"a\",\"f\",\"rgb\",\"Number\",\"toFixed\",\"alpha\",\"coefficient\",\"emphasize\",\"input\",\"themeId\",\"systemDefaultTheme\",\"rootShouldForwardProp\",\"slotShouldForwardProp\",\"systemSx\",\"_styleFunctionSx\",\"_extends2\",\"resolveTheme\",\"__mui_systemSx\",\"inputOptions\",\"_styledEngine\",\"filter\",\"style\",\"componentName\",\"slot\",\"componentSlot\",\"skipVariantsResolver\",\"inputSkipVariantsResolver\",\"skipSx\",\"inputSkipSx\",\"overridesResolver\",\"defaultOverridesResolver\",\"lowercaseFirstLetter\",\"_objectWithoutPropertiesLoose2\",\"_excluded3\",\"shouldForwardPropOption\",\"defaultStyledResolver\",\"transformStyleArg\",\"stylesArg\",\"_deepmerge\",\"isPlainObject\",\"processStyleArg\",\"muiStyledResolver\",\"styleArg\",\"transformedStyleArg\",\"expressions\",\"expressionsWithDefaultTheme\",\"components\",\"styleOverrides\",\"resolvedStyleOverrides\",\"entries\",\"_ref3\",\"slotKey\",\"slotStyle\",\"_theme$components\",\"variants\",\"numOfCustomFnsApplied\",\"placeholders\",\"fill\",\"Component\",\"muiName\",\"withConfig\",\"r\",\"__esModule\",\"t\",\"_getRequireWildcardCache\",\"has\",\"__proto__\",\"getOwnPropertyDescriptor\",\"u\",\"_interopRequireWildcard\",\"_createTheme\",\"_excluded\",\"_excluded2\",\"_ref2\",\"callableStyle\",\"ownerState\",\"resolvedStylesArg\",\"flatMap\",\"resolvedStyle\",\"variant\",\"isMatch\",\"xs\",\"sm\",\"md\",\"lg\",\"xl\",\"defaultBreakpoints\",\"up\",\"handleBreakpoints\",\"propValue\",\"styleFromPropValue\",\"themeBreakpoints\",\"breakpoints\",\"reduce\",\"acc\",\"item\",\"breakpoint\",\"cssKey\",\"createEmptyBreakpointObject\",\"breakpointsInput\",\"_breakpointsInput$key\",\"removeUnusedBreakpoints\",\"breakpointKeys\",\"breakpointOutput\",\"applyStyles\",\"vars\",\"getColorSchemeSelector\",\"palette\",\"mode\",\"sortBreakpointsValues\",\"breakpointsAsArray\",\"sort\",\"breakpoint1\",\"breakpoint2\",\"createBreakpoints\",\"unit\",\"step\",\"other\",\"_objectWithoutPropertiesLoose\",\"sortedValues\",\"down\",\"between\",\"start\",\"endIndex\",\"only\",\"not\",\"keyIndex\",\"borderRadius\",\"paletteInput\",\"spacing\",\"spacingInput\",\"shape\",\"shapeInput\",\"mui\",\"transform\",\"createUnarySpacing\",\"argsInput\",\"argument\",\"createSpacing\",\"muiTheme\",\"deepmerge\",\"direction\",\"unstable_sxConfig\",\"defaultSxConfig\",\"unstable_sx\",\"styleFunctionSx\",\"sx\",\"clone\",\"properties\",\"m\",\"p\",\"directions\",\"b\",\"aliases\",\"marginX\",\"marginY\",\"paddingX\",\"paddingY\",\"getCssProperties\",\"dir\",\"marginKeys\",\"paddingKeys\",\"spacingKeys\",\"createUnaryUnit\",\"themeKey\",\"defaultValue\",\"_getPath\",\"themeSpacing\",\"getPath\",\"getValue\",\"transformer\",\"transformed\",\"resolveCssProperty\",\"cssProperties\",\"cssProperty\",\"getStyleFromPropValue\",\"merge\",\"margin\",\"padding\",\"propTypes\",\"filterProps\",\"path\",\"checkVars\",\"getStyleValue\",\"themeMapping\",\"propValueFinal\",\"userValue\",\"capitalize\",\"handlers\",\"borderTransform\",\"createBorderStyle\",\"border\",\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\",\"borderColor\",\"borderTopColor\",\"borderRightColor\",\"borderBottomColor\",\"borderLeftColor\",\"outline\",\"outlineColor\",\"compose\",\"gap\",\"columnGap\",\"rowGap\",\"paletteTransform\",\"sizingTransform\",\"width\",\"maxWidth\",\"_props$theme\",\"_props$theme2\",\"breakpointsValues\",\"minWidth\",\"height\",\"maxHeight\",\"minHeight\",\"bgcolor\",\"backgroundColor\",\"pt\",\"pr\",\"pb\",\"pl\",\"px\",\"py\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"paddingInline\",\"paddingInlineStart\",\"paddingInlineEnd\",\"paddingBlock\",\"paddingBlockStart\",\"paddingBlockEnd\",\"mt\",\"mr\",\"mb\",\"ml\",\"mx\",\"my\",\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\",\"marginInline\",\"marginInlineStart\",\"marginInlineEnd\",\"marginBlock\",\"marginBlockStart\",\"marginBlockEnd\",\"displayPrint\",\"display\",\"overflow\",\"textOverflow\",\"visibility\",\"whiteSpace\",\"flexBasis\",\"flexDirection\",\"flexWrap\",\"justifyContent\",\"alignItems\",\"alignContent\",\"alignSelf\",\"justifyItems\",\"justifySelf\",\"gridAutoFlow\",\"gridAutoColumns\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"gridTemplateAreas\",\"gridArea\",\"top\",\"right\",\"bottom\",\"left\",\"boxShadow\",\"boxSizing\",\"fontFamily\",\"fontSize\",\"fontStyle\",\"letterSpacing\",\"textTransform\",\"textAlign\",\"typography\",\"splitProps\",\"_props$theme$unstable\",\"systemProps\",\"otherProps\",\"config\",\"extendSxProp\",\"inSx\",\"finalSx\",\"unstable_createStyleFunctionSx\",\"getThemeValue\",\"_theme$unstable_sxCon\",\"traverse\",\"sxInput\",\"sxObject\",\"emptyBreakpoints\",\"breakpointsKeys\",\"styleKey\",\"maybeFn\",\"objects\",\"allKeys\",\"object\",\"union\",\"Set\",\"every\",\"objectsHaveSameKeys\",\"_formatMuiErrorMessage\",\"toUpperCase\",\"MIN_SAFE_INTEGER\",\"MAX_SAFE_INTEGER\",\"getPrototypeOf\",\"Symbol\",\"toStringTag\",\"iterator\",\"deepClone\",\"source\",\"formatMuiErrorMessage\",\"code\",\"url\",\"encodeURIComponent\",\"fnNameMatchRegex\",\"getFunctionName\",\"getFunctionComponentName\",\"fallback\",\"getWrappedName\",\"outerType\",\"innerType\",\"wrapperName\",\"functionName\",\"getDisplayName\",\"$$typeof\",\"ForwardRef\",\"render\",\"Memo\",\"reactIs\",\"REACT_STATICS\",\"childContextTypes\",\"contextType\",\"contextTypes\",\"getDefaultProps\",\"getDerivedStateFromError\",\"getDerivedStateFromProps\",\"mixins\",\"KNOWN_STATICS\",\"caller\",\"callee\",\"arity\",\"MEMO_STATICS\",\"compare\",\"TYPE_STATICS\",\"getStatics\",\"component\",\"isMemo\",\"getOwnPropertyNames\",\"getOwnPropertySymbols\",\"objectPrototype\",\"module\",\"hoistNonReactStatics\",\"targetComponent\",\"sourceComponent\",\"blacklist\",\"inheritedComponent\",\"targetStatics\",\"sourceStatics\",\"descriptor\",\"for\",\"c\",\"d\",\"g\",\"q\",\"v\",\"w\",\"A\",\"AsyncMode\",\"ConcurrentMode\",\"ContextConsumer\",\"ContextProvider\",\"Element\",\"Fragment\",\"Lazy\",\"Portal\",\"Profiler\",\"StrictMode\",\"Suspense\",\"isAsyncMode\",\"isConcurrentMode\",\"isContextConsumer\",\"isContextProvider\",\"isElement\",\"isForwardRef\",\"isFragment\",\"isLazy\",\"isPortal\",\"isProfiler\",\"isStrictMode\",\"isSuspense\",\"isValidElementType\",\"typeOf\",\"aa\",\"ca\",\"da\",\"ea\",\"fa\",\"ha\",\"add\",\"ia\",\"window\",\"ja\",\"ka\",\"la\",\"ma\",\"acceptsBooleans\",\"attributeName\",\"attributeNamespace\",\"mustUseProperty\",\"propertyName\",\"sanitizeURL\",\"removeEmptyString\",\"ra\",\"sa\",\"ta\",\"pa\",\"isNaN\",\"qa\",\"oa\",\"removeAttribute\",\"setAttributeNS\",\"xlinkHref\",\"ua\",\"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\",\"va\",\"wa\",\"ya\",\"za\",\"Aa\",\"Ba\",\"Ca\",\"Da\",\"Ea\",\"Fa\",\"Ga\",\"Ha\",\"Ia\",\"Ja\",\"Ka\",\"La\",\"Ma\",\"stack\",\"Na\",\"Oa\",\"prepareStackTrace\",\"Reflect\",\"construct\",\"includes\",\"Pa\",\"Qa\",\"_context\",\"_payload\",\"_init\",\"Ra\",\"Sa\",\"Ta\",\"nodeName\",\"Va\",\"_valueTracker\",\"configurable\",\"enumerable\",\"setValue\",\"stopTracking\",\"Ua\",\"Wa\",\"checked\",\"Xa\",\"activeElement\",\"body\",\"Ya\",\"defaultChecked\",\"_wrapperState\",\"initialChecked\",\"Za\",\"initialValue\",\"controlled\",\"ab\",\"bb\",\"cb\",\"db\",\"ownerDocument\",\"eb\",\"fb\",\"selected\",\"defaultSelected\",\"disabled\",\"gb\",\"dangerouslySetInnerHTML\",\"hb\",\"ib\",\"jb\",\"textContent\",\"kb\",\"lb\",\"nb\",\"namespaceURI\",\"innerHTML\",\"valueOf\",\"MSApp\",\"execUnsafeLocalFunction\",\"ob\",\"lastChild\",\"nodeType\",\"nodeValue\",\"lineClamp\",\"qb\",\"rb\",\"sb\",\"setProperty\",\"tb\",\"menuitem\",\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"keygen\",\"link\",\"meta\",\"param\",\"track\",\"wbr\",\"ub\",\"vb\",\"is\",\"wb\",\"xb\",\"srcElement\",\"correspondingUseElement\",\"yb\",\"zb\",\"Ab\",\"Bb\",\"Cb\",\"stateNode\",\"Db\",\"Eb\",\"Fb\",\"Gb\",\"Hb\",\"Ib\",\"Jb\",\"Kb\",\"Lb\",\"Mb\",\"addEventListener\",\"removeEventListener\",\"Nb\",\"onError\",\"Ob\",\"Pb\",\"Qb\",\"Rb\",\"Sb\",\"Tb\",\"Vb\",\"alternate\",\"flags\",\"Wb\",\"memoizedState\",\"dehydrated\",\"Xb\",\"Zb\",\"child\",\"sibling\",\"Yb\",\"$b\",\"ac\",\"unstable_scheduleCallback\",\"bc\",\"unstable_cancelCallback\",\"cc\",\"unstable_shouldYield\",\"dc\",\"unstable_requestPaint\",\"B\",\"unstable_now\",\"ec\",\"unstable_getCurrentPriorityLevel\",\"fc\",\"unstable_ImmediatePriority\",\"gc\",\"unstable_UserBlockingPriority\",\"hc\",\"unstable_NormalPriority\",\"ic\",\"unstable_LowPriority\",\"jc\",\"unstable_IdlePriority\",\"kc\",\"lc\",\"oc\",\"clz32\",\"pc\",\"qc\",\"log\",\"LN2\",\"rc\",\"sc\",\"tc\",\"uc\",\"pendingLanes\",\"suspendedLanes\",\"pingedLanes\",\"entangledLanes\",\"entanglements\",\"vc\",\"xc\",\"yc\",\"zc\",\"Ac\",\"eventTimes\",\"Cc\",\"C\",\"Dc\",\"Ec\",\"Fc\",\"Gc\",\"Hc\",\"Ic\",\"Jc\",\"Kc\",\"Lc\",\"Mc\",\"Nc\",\"Oc\",\"Map\",\"Pc\",\"Qc\",\"Rc\",\"Sc\",\"delete\",\"pointerId\",\"Tc\",\"nativeEvent\",\"blockedOn\",\"domEventName\",\"eventSystemFlags\",\"targetContainers\",\"Vc\",\"Wc\",\"priority\",\"isDehydrated\",\"containerInfo\",\"Xc\",\"Yc\",\"dispatchEvent\",\"Zc\",\"$c\",\"ad\",\"bd\",\"cd\",\"ReactCurrentBatchConfig\",\"dd\",\"ed\",\"transition\",\"fd\",\"gd\",\"hd\",\"id\",\"Uc\",\"stopPropagation\",\"jd\",\"kd\",\"ld\",\"nd\",\"od\",\"keyCode\",\"charCode\",\"pd\",\"qd\",\"rd\",\"_reactName\",\"_targetInst\",\"currentTarget\",\"isDefaultPrevented\",\"defaultPrevented\",\"returnValue\",\"isPropagationStopped\",\"preventDefault\",\"cancelBubble\",\"persist\",\"isPersistent\",\"wd\",\"xd\",\"yd\",\"sd\",\"eventPhase\",\"bubbles\",\"cancelable\",\"timeStamp\",\"Date\",\"now\",\"isTrusted\",\"td\",\"ud\",\"view\",\"detail\",\"vd\",\"Ad\",\"screenX\",\"screenY\",\"clientX\",\"clientY\",\"pageX\",\"pageY\",\"ctrlKey\",\"shiftKey\",\"altKey\",\"metaKey\",\"getModifierState\",\"zd\",\"button\",\"buttons\",\"relatedTarget\",\"fromElement\",\"toElement\",\"movementX\",\"movementY\",\"Bd\",\"Dd\",\"dataTransfer\",\"Fd\",\"Hd\",\"animationName\",\"elapsedTime\",\"pseudoElement\",\"Id\",\"clipboardData\",\"Jd\",\"Ld\",\"data\",\"Md\",\"Esc\",\"Spacebar\",\"Left\",\"Up\",\"Right\",\"Down\",\"Del\",\"Win\",\"Menu\",\"Apps\",\"Scroll\",\"MozPrintableKey\",\"Nd\",\"Od\",\"Alt\",\"Control\",\"Meta\",\"Shift\",\"Pd\",\"Qd\",\"location\",\"repeat\",\"locale\",\"which\",\"Rd\",\"Td\",\"pressure\",\"tangentialPressure\",\"tiltX\",\"tiltY\",\"twist\",\"pointerType\",\"isPrimary\",\"Vd\",\"touches\",\"targetTouches\",\"changedTouches\",\"Xd\",\"Yd\",\"deltaX\",\"wheelDeltaX\",\"deltaY\",\"wheelDeltaY\",\"wheelDelta\",\"deltaZ\",\"deltaMode\",\"Zd\",\"$d\",\"ae\",\"be\",\"documentMode\",\"ce\",\"de\",\"ee\",\"fe\",\"ge\",\"he\",\"ie\",\"le\",\"date\",\"datetime\",\"email\",\"month\",\"number\",\"password\",\"range\",\"tel\",\"text\",\"time\",\"week\",\"me\",\"ne\",\"oe\",\"event\",\"listeners\",\"pe\",\"qe\",\"se\",\"te\",\"ue\",\"ve\",\"we\",\"xe\",\"ye\",\"ze\",\"oninput\",\"Ae\",\"detachEvent\",\"Be\",\"Ce\",\"attachEvent\",\"De\",\"Ee\",\"Fe\",\"He\",\"Ie\",\"Je\",\"Ke\",\"Le\",\"contains\",\"compareDocumentPosition\",\"Me\",\"HTMLIFrameElement\",\"contentWindow\",\"href\",\"Ne\",\"contentEditable\",\"Oe\",\"focusedElem\",\"selectionRange\",\"documentElement\",\"selectionStart\",\"selectionEnd\",\"defaultView\",\"getSelection\",\"extend\",\"rangeCount\",\"anchorNode\",\"anchorOffset\",\"focusNode\",\"focusOffset\",\"createRange\",\"setStart\",\"removeAllRanges\",\"addRange\",\"setEnd\",\"scrollLeft\",\"scrollTop\",\"focus\",\"Pe\",\"Qe\",\"Re\",\"Se\",\"Te\",\"Ue\",\"Ve\",\"We\",\"animationend\",\"animationiteration\",\"animationstart\",\"transitionend\",\"Xe\",\"Ye\",\"Ze\",\"animation\",\"$e\",\"af\",\"bf\",\"cf\",\"df\",\"ef\",\"ff\",\"gf\",\"hf\",\"lf\",\"mf\",\"nf\",\"Ub\",\"instance\",\"listener\",\"D\",\"of\",\"pf\",\"qf\",\"rf\",\"random\",\"sf\",\"capture\",\"passive\",\"J\",\"F\",\"tf\",\"uf\",\"parentWindow\",\"vf\",\"wf\",\"na\",\"xa\",\"$a\",\"ba\",\"je\",\"char\",\"ke\",\"unshift\",\"xf\",\"yf\",\"zf\",\"Af\",\"Bf\",\"Cf\",\"Df\",\"Ef\",\"__html\",\"Ff\",\"setTimeout\",\"Gf\",\"clearTimeout\",\"Hf\",\"Promise\",\"Jf\",\"queueMicrotask\",\"resolve\",\"then\",\"catch\",\"If\",\"Kf\",\"Lf\",\"Mf\",\"previousSibling\",\"Nf\",\"Of\",\"Pf\",\"Qf\",\"Rf\",\"Sf\",\"Tf\",\"Uf\",\"E\",\"G\",\"Vf\",\"H\",\"Wf\",\"Xf\",\"Yf\",\"__reactInternalMemoizedUnmaskedChildContext\",\"__reactInternalMemoizedMaskedChildContext\",\"Zf\",\"$f\",\"ag\",\"bg\",\"getChildContext\",\"cg\",\"__reactInternalMemoizedMergedChildContext\",\"dg\",\"eg\",\"fg\",\"gg\",\"hg\",\"jg\",\"kg\",\"mg\",\"ng\",\"og\",\"pg\",\"qg\",\"rg\",\"sg\",\"tg\",\"ug\",\"vg\",\"wg\",\"xg\",\"yg\",\"I\",\"zg\",\"Ag\",\"Bg\",\"elementType\",\"deletions\",\"Cg\",\"pendingProps\",\"treeContext\",\"retryLane\",\"Dg\",\"Eg\",\"Fg\",\"Gg\",\"memoizedProps\",\"Hg\",\"Ig\",\"Jg\",\"Kg\",\"Lg\",\"_owner\",\"_stringRef\",\"refs\",\"Mg\",\"Ng\",\"Og\",\"Pg\",\"Qg\",\"Rg\",\"implementation\",\"Sg\",\"Tg\",\"done\",\"Ug\",\"Vg\",\"Wg\",\"Xg\",\"Yg\",\"Zg\",\"$g\",\"ah\",\"_currentValue\",\"bh\",\"childLanes\",\"ch\",\"dependencies\",\"firstContext\",\"lanes\",\"dh\",\"eh\",\"context\",\"memoizedValue\",\"fh\",\"gh\",\"hh\",\"interleaved\",\"ih\",\"jh\",\"kh\",\"updateQueue\",\"baseState\",\"firstBaseUpdate\",\"lastBaseUpdate\",\"shared\",\"pending\",\"effects\",\"lh\",\"mh\",\"eventTime\",\"lane\",\"payload\",\"nh\",\"K\",\"oh\",\"ph\",\"qh\",\"rh\",\"sh\",\"th\",\"uh\",\"vh\",\"wh\",\"xh\",\"yh\",\"zh\",\"Ah\",\"Bh\",\"L\",\"Ch\",\"revealOrder\",\"Dh\",\"Eh\",\"_workInProgressVersionPrimary\",\"Fh\",\"ReactCurrentDispatcher\",\"Gh\",\"Hh\",\"M\",\"N\",\"O\",\"Ih\",\"Jh\",\"Kh\",\"Lh\",\"P\",\"Mh\",\"Nh\",\"Oh\",\"Ph\",\"Qh\",\"Rh\",\"Sh\",\"Th\",\"baseQueue\",\"queue\",\"Uh\",\"Vh\",\"Wh\",\"lastRenderedReducer\",\"action\",\"hasEagerState\",\"eagerState\",\"lastRenderedState\",\"dispatch\",\"Xh\",\"Yh\",\"Zh\",\"$h\",\"ai\",\"getSnapshot\",\"bi\",\"ci\",\"Q\",\"di\",\"lastEffect\",\"stores\",\"ei\",\"fi\",\"gi\",\"hi\",\"ii\",\"destroy\",\"deps\",\"ji\",\"ki\",\"li\",\"mi\",\"ni\",\"oi\",\"pi\",\"qi\",\"ri\",\"si\",\"ti\",\"ui\",\"vi\",\"wi\",\"xi\",\"yi\",\"zi\",\"Ai\",\"R\",\"Bi\",\"readContext\",\"useCallback\",\"useEffect\",\"useImperativeHandle\",\"useLayoutEffect\",\"useMemo\",\"useReducer\",\"useRef\",\"useState\",\"useDebugValue\",\"useDeferredValue\",\"useTransition\",\"useMutableSource\",\"useSyncExternalStore\",\"useId\",\"unstable_isNewReconciler\",\"identifierPrefix\",\"Ci\",\"Di\",\"Ei\",\"isMounted\",\"_reactInternals\",\"enqueueSetState\",\"enqueueReplaceState\",\"enqueueForceUpdate\",\"Fi\",\"shouldComponentUpdate\",\"isPureReactComponent\",\"Gi\",\"state\",\"updater\",\"Hi\",\"componentWillReceiveProps\",\"UNSAFE_componentWillReceiveProps\",\"Ii\",\"getSnapshotBeforeUpdate\",\"UNSAFE_componentWillMount\",\"componentWillMount\",\"componentDidMount\",\"Ji\",\"message\",\"digest\",\"Ki\",\"Li\",\"console\",\"error\",\"Mi\",\"Ni\",\"Oi\",\"Pi\",\"Qi\",\"componentDidCatch\",\"Ri\",\"componentStack\",\"Si\",\"pingCache\",\"Ti\",\"Ui\",\"Vi\",\"Wi\",\"ReactCurrentOwner\",\"Xi\",\"Yi\",\"Zi\",\"$i\",\"aj\",\"bj\",\"cj\",\"dj\",\"baseLanes\",\"cachePool\",\"transitions\",\"ej\",\"fj\",\"gj\",\"hj\",\"ij\",\"UNSAFE_componentWillUpdate\",\"componentWillUpdate\",\"componentDidUpdate\",\"jj\",\"kj\",\"pendingContext\",\"lj\",\"zj\",\"Aj\",\"Bj\",\"Cj\",\"mj\",\"nj\",\"oj\",\"pj\",\"qj\",\"sj\",\"dataset\",\"dgst\",\"tj\",\"uj\",\"_reactRetry\",\"rj\",\"subtreeFlags\",\"vj\",\"wj\",\"isBackwards\",\"rendering\",\"renderingStartTime\",\"last\",\"tail\",\"tailMode\",\"xj\",\"Dj\",\"S\",\"Ej\",\"Fj\",\"wasMultiple\",\"multiple\",\"suppressHydrationWarning\",\"onClick\",\"onclick\",\"createElementNS\",\"autoFocus\",\"T\",\"Gj\",\"Hj\",\"Ij\",\"Jj\",\"U\",\"Kj\",\"WeakSet\",\"V\",\"Lj\",\"W\",\"Mj\",\"Nj\",\"Pj\",\"Qj\",\"Rj\",\"Sj\",\"Tj\",\"Uj\",\"Vj\",\"_reactRootContainer\",\"Wj\",\"X\",\"Xj\",\"Yj\",\"Zj\",\"onCommitFiberUnmount\",\"componentWillUnmount\",\"ak\",\"bk\",\"ck\",\"dk\",\"ek\",\"isHidden\",\"fk\",\"gk\",\"hk\",\"ik\",\"jk\",\"kk\",\"__reactInternalSnapshotBeforeUpdate\",\"src\",\"Vk\",\"lk\",\"ceil\",\"mk\",\"nk\",\"ok\",\"Y\",\"Z\",\"pk\",\"qk\",\"rk\",\"sk\",\"tk\",\"Infinity\",\"uk\",\"vk\",\"wk\",\"xk\",\"yk\",\"zk\",\"Ak\",\"Bk\",\"Ck\",\"Dk\",\"callbackNode\",\"expirationTimes\",\"expiredLanes\",\"wc\",\"callbackPriority\",\"ig\",\"Ek\",\"Fk\",\"Gk\",\"Hk\",\"Ik\",\"Jk\",\"Kk\",\"Lk\",\"Mk\",\"Nk\",\"Ok\",\"finishedWork\",\"finishedLanes\",\"Pk\",\"timeoutHandle\",\"Qk\",\"Rk\",\"Sk\",\"Tk\",\"Uk\",\"mutableReadLanes\",\"Bc\",\"Oj\",\"onCommitFiberRoot\",\"mc\",\"onRecoverableError\",\"Wk\",\"onPostCommitFiberRoot\",\"Xk\",\"Yk\",\"$k\",\"isReactComponent\",\"pendingChildren\",\"al\",\"mutableSourceEagerHydrationData\",\"bl\",\"pendingSuspenseBoundaries\",\"dl\",\"el\",\"fl\",\"gl\",\"hl\",\"il\",\"yj\",\"Zk\",\"kl\",\"reportError\",\"ll\",\"_internalRoot\",\"nl\",\"ol\",\"rl\",\"ql\",\"unmount\",\"unstable_scheduleHydration\",\"splice\",\"JSON\",\"form\",\"sl\",\"usingClientEntryPoint\",\"Events\",\"tl\",\"findFiberByHostInstance\",\"bundleType\",\"version\",\"rendererPackageName\",\"ul\",\"rendererConfig\",\"overrideHookState\",\"overrideHookStateDeletePath\",\"overrideHookStateRenamePath\",\"overrideProps\",\"overridePropsDeletePath\",\"overridePropsRenamePath\",\"setErrorHandler\",\"setSuspenseHandler\",\"scheduleUpdate\",\"currentDispatcherRef\",\"findHostInstanceByFiber\",\"findHostInstancesForRefresh\",\"scheduleRefresh\",\"scheduleRoot\",\"setRefreshHandler\",\"getCurrentFiber\",\"reconcilerVersion\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"vl\",\"isDisabled\",\"supportsFiber\",\"inject\",\"createPortal\",\"cl\",\"createRoot\",\"unstable_strictMode\",\"findDOMNode\",\"flushSync\",\"hydrateRoot\",\"hydratedSources\",\"_getVersion\",\"_source\",\"unmountComponentAtNode\",\"unstable_batchedUpdates\",\"unstable_renderSubtreeIntoContainer\",\"checkDCE\",\"err\",\"REACT_ELEMENT_TYPE\",\"REACT_PORTAL_TYPE\",\"REACT_FRAGMENT_TYPE\",\"REACT_STRICT_MODE_TYPE\",\"REACT_PROFILER_TYPE\",\"REACT_CONSUMER_TYPE\",\"REACT_CONTEXT_TYPE\",\"REACT_FORWARD_REF_TYPE\",\"REACT_SUSPENSE_TYPE\",\"REACT_SUSPENSE_LIST_TYPE\",\"REACT_MEMO_TYPE\",\"REACT_LAZY_TYPE\",\"REACT_OFFSCREEN_TYPE\",\"REACT_CLIENT_REFERENCE\",\"__self\",\"__source\",\"jsxs\",\"setState\",\"forceUpdate\",\"escape\",\"_status\",\"_result\",\"Children\",\"toArray\",\"PureComponent\",\"act\",\"cloneElement\",\"createContext\",\"_currentValue2\",\"_threadCount\",\"Consumer\",\"_defaultValue\",\"_globalName\",\"createFactory\",\"createRef\",\"isValidElement\",\"lazy\",\"memo\",\"startTransition\",\"unstable_act\",\"pop\",\"sortIndex\",\"performance\",\"setImmediate\",\"startTime\",\"expirationTime\",\"priorityLevel\",\"navigator\",\"scheduling\",\"isInputPending\",\"MessageChannel\",\"port2\",\"port1\",\"onmessage\",\"postMessage\",\"unstable_Profiling\",\"unstable_continueExecution\",\"unstable_forceFrameRate\",\"floor\",\"unstable_getFirstCallbackNode\",\"unstable_next\",\"unstable_pauseExecution\",\"unstable_runWithPriority\",\"delay\",\"unstable_wrapCallback\",\"__webpack_module_cache__\",\"__webpack_require__\",\"moduleId\",\"cachedModule\",\"__webpack_modules__\",\"getter\",\"leafPrototypes\",\"getProto\",\"ns\",\"def\",\"definition\",\"o\",\"black\",\"white\",\"A100\",\"A200\",\"A400\",\"A700\",\"light\",\"primary\",\"secondary\",\"divider\",\"paper\",\"common\",\"active\",\"hover\",\"hoverOpacity\",\"selectedOpacity\",\"disabledBackground\",\"disabledOpacity\",\"focusOpacity\",\"activatedOpacity\",\"dark\",\"icon\",\"addLightOrDark\",\"intent\",\"shade\",\"tonalOffset\",\"tonalOffsetLight\",\"tonalOffsetDark\",\"main\",\"createPalette\",\"contrastThreshold\",\"blue\",\"getDefaultPrimary\",\"purple\",\"getDefaultSecondary\",\"red\",\"getDefaultError\",\"info\",\"lightBlue\",\"getDefaultInfo\",\"success\",\"green\",\"getDefaultSuccess\",\"warning\",\"orange\",\"getDefaultWarning\",\"getContrastText\",\"getContrastRatio\",\"augmentColor\",\"mainShade\",\"lightShade\",\"darkShade\",\"contrastText\",\"modes\",\"grey\",\"caseAllCaps\",\"defaultFontFamily\",\"createTypography\",\"fontWeightLight\",\"fontWeightRegular\",\"fontWeightMedium\",\"fontWeightBold\",\"htmlFontSize\",\"allVariants\",\"pxToRem\",\"pxToRem2\",\"coef\",\"buildVariant\",\"casing\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"overline\",\"inherit\",\"createShadow\",\"easing\",\"easeInOut\",\"easeOut\",\"easeIn\",\"sharp\",\"duration\",\"shortest\",\"shorter\",\"short\",\"standard\",\"complex\",\"enteringScreen\",\"leavingScreen\",\"formatMs\",\"milliseconds\",\"getAutoHeightDuration\",\"constant\",\"createTransitions\",\"inputTransitions\",\"mergedEasing\",\"mergedDuration\",\"durationOption\",\"easingOption\",\"animatedProp\",\"mobileStepper\",\"fab\",\"speedDial\",\"appBar\",\"drawer\",\"modal\",\"snackbar\",\"tooltip\",\"createTheme\",\"mixinsInput\",\"transitionsInput\",\"typographyInput\",\"systemTheme\",\"systemCreateTheme\",\"toolbar\",\"shadows\",\"useTheme\",\"localTheme\",\"outerTheme\",\"mergeOuterLocalTheme\",\"nested\",\"contextTheme\",\"RtlContext\",\"resolveProps\",\"defaultSlotProps\",\"slotProps\",\"slotPropName\",\"PropsContext\",\"useDefaultProps\",\"params\",\"getThemeProps\",\"EMPTY_THEME\",\"useThemeScoping\",\"upperTheme\",\"isPrivate\",\"resolvedTheme\",\"mergedTheme\",\"useThemeWithoutDefault\",\"upperPrivateTheme\",\"usePrivateTheme\",\"engineTheme\",\"privateTheme\",\"rtlValue\",\"MuiThemeProvider\",\"StyledEngineThemeContext\",\"RtlProvider\",\"DefaultPropsProvider\",\"ThemeProvider\",\"scopedTheme\",\"THEME_ID\",\"SystemThemeProvider\",\"useSystemDefaultProps\",\"MuiGlobalStyles\",\"SystemGlobalStyles\",\"html\",\"enableColorScheme\",\"WebkitFontSmoothing\",\"MozOsxFontSmoothing\",\"WebkitTextSizeAdjust\",\"colorScheme\",\"inProps\",\"_jsxs\",\"colorSchemeStyles\",\"colorSchemes\",\"scheme\",\"_scheme$palette\",\"defaultStyles\",\"themeOverrides\",\"MuiCssBaseline\",\"Action\",\"PopStateEventType\",\"invariant\",\"cond\",\"warn\",\"getHistoryState\",\"usr\",\"createLocation\",\"to\",\"pathname\",\"parsePath\",\"createPath\",\"parsedPath\",\"hashIndex\",\"searchIndex\",\"getUrlBasedHistory\",\"getLocation\",\"createHref\",\"validateLocation\",\"v5Compat\",\"globalHistory\",\"history\",\"Pop\",\"getIndex\",\"handlePop\",\"nextIndex\",\"delta\",\"createURL\",\"origin\",\"URL\",\"replaceState\",\"listen\",\"encodeLocation\",\"Push\",\"historyState\",\"pushState\",\"DOMException\",\"Replace\",\"go\",\"ResultType\",\"matchRoutes\",\"routes\",\"locationArg\",\"basename\",\"matchRoutesImpl\",\"allowPartial\",\"stripBasename\",\"branches\",\"flattenRoutes\",\"score\",\"siblings\",\"compareIndexes\",\"routesMeta\",\"childrenIndex\",\"rankRouteBranches\",\"matches\",\"decoded\",\"decodePath\",\"matchRouteBranch\",\"parentsMeta\",\"parentPath\",\"flattenRoute\",\"route\",\"relativePath\",\"caseSensitive\",\"startsWith\",\"joinPaths\",\"computeScore\",\"_route$path\",\"exploded\",\"explodeOptionalSegments\",\"segments\",\"first\",\"rest\",\"isOptional\",\"endsWith\",\"required\",\"restExploded\",\"subpath\",\"paramRe\",\"dynamicSegmentValue\",\"indexRouteValue\",\"emptySegmentValue\",\"staticSegmentValue\",\"splatPenalty\",\"isSplat\",\"initialScore\",\"some\",\"segment\",\"branch\",\"matchedParams\",\"matchedPathname\",\"remainingPathname\",\"matchPath\",\"pathnameBase\",\"normalizePathname\",\"matcher\",\"compiledParams\",\"regexpSource\",\"_\",\"paramName\",\"compilePath\",\"captureGroups\",\"splatValue\",\"decodeURIComponent\",\"startIndex\",\"nextChar\",\"paths\",\"isRouteErrorResponse\",\"status\",\"statusText\",\"internal\",\"validMutationMethodsArr\",\"validRequestMethodsArr\",\"DataRouterContext\",\"DataRouterStateContext\",\"NavigationContext\",\"LocationContext\",\"RouteContext\",\"outlet\",\"isDataRoute\",\"RouteErrorContext\",\"useInRouterContext\",\"useLocation\",\"UNSAFE_invariant\",\"useRoutesImpl\",\"dataRouterState\",\"future\",\"parentMatches\",\"routeMatch\",\"parentParams\",\"parentPathnameBase\",\"locationFromContext\",\"_parsedLocationArg$pa\",\"parsedLocationArg\",\"parentSegments\",\"renderedMatches\",\"_renderMatches\",\"navigationType\",\"DefaultErrorComponent\",\"_state$errors\",\"useDataRouterState\",\"DataRouterStateHook\",\"UseRouteError\",\"routeId\",\"useCurrentRouteId\",\"errors\",\"useRouteError\",\"lightgrey\",\"preStyles\",\"defaultErrorElement\",\"RenderErrorBoundary\",\"super\",\"revalidation\",\"errorInfo\",\"routeContext\",\"RenderedRoute\",\"dataRouterContext\",\"static\",\"staticContext\",\"errorElement\",\"ErrorBoundary\",\"_deepestRenderedBoundaryId\",\"_dataRouterState\",\"_future\",\"v7_partialHydration\",\"initialized\",\"errorIndex\",\"findIndex\",\"renderFallback\",\"fallbackIndex\",\"HydrateFallback\",\"hydrateFallbackElement\",\"loaderData\",\"needsToRunLoader\",\"loader\",\"reduceRight\",\"shouldRenderHydrateFallback\",\"alreadyWarned$1\",\"getChildren\",\"hookName\",\"useRouteContext\",\"thisRoute\",\"alreadyWarned\",\"logDeprecation\",\"flag\",\"msg\",\"logV6DeprecationWarnings\",\"renderFuture\",\"routerFuture\",\"v7_startTransition\",\"v7_relativeSplatPath\",\"v7_fetcherPersist\",\"v7_normalizeFormMethod\",\"v7_skipActionErrorRevalidation\",\"Route\",\"_props\",\"Router\",\"_ref5\",\"basenameProp\",\"locationProp\",\"staticProp\",\"navigationContext\",\"locationContext\",\"trailingPathname\",\"Routes\",\"_ref6\",\"createRoutesFromChildren\",\"treePath\",\"hasErrorBoundary\",\"shouldRevalidate\",\"handle\",\"__reactRouterVersion\",\"startTransitionImpl\",\"ReactDOM\",\"BrowserRouter\",\"_ref4\",\"historyRef\",\"setStateImpl\",\"newState\",\"UNSAFE_logV6DeprecationWarnings\",\"DataRouterHook\",\"defaultGenerator\",\"createClassNameGenerator\",\"generate\",\"configure\",\"generator\",\"reset\",\"globalStateClasses\",\"completed\",\"expanded\",\"focused\",\"focusVisible\",\"open\",\"readOnly\",\"generateUtilityClass\",\"globalStateClass\",\"ClassNameGenerator\",\"generateUtilityClasses\",\"slots\",\"globalStatePrefix\",\"defaultClassName\",\"generateClassName\",\"BoxRoot\",\"_extendSxProp\",\"clsx\",\"createBox\",\"boxClasses\",\"getTypographyUtilityClass\",\"useUtilityClasses\",\"align\",\"gutterBottom\",\"noWrap\",\"paragraph\",\"classes\",\"getUtilityClass\",\"utilityClass\",\"composeClasses\",\"TypographyRoot\",\"font\",\"defaultVariantMapping\",\"colorTransformations\",\"textPrimary\",\"textSecondary\",\"themeProps\",\"transformDeprecatedColors\",\"variantMapping\",\"Home\",\"Box\",\"Typography\",\"App\",\"getElementById\",\"CssBaseline\"],\"sourceRoot\":\"\"}",
        "Long lines found on lines: [1]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\AI\\PerformancePredictor.tsx",
      "size": 5432,
      "created": "2024-12-17T11:53:54.923178",
      "modified": "2025-01-13T08:01:01.534445",
      "hash": "06b8dffca8d33c255de7f157449d2041f01e3ae40f08447e1489c5c17509d17e",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\AI\\PlayerRecommender.tsx",
      "size": 5368,
      "created": "2024-12-17T11:54:34.027975",
      "modified": "2025-01-13T08:01:01.564445",
      "hash": "77caf6bdb663ae2c042cf9579176f179ce6be8fb6e5dccfd121cb3d576a5f496",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\AI\\ShotAnalyzer.tsx",
      "size": 4810,
      "created": "2024-12-17T11:53:15.758417",
      "modified": "2025-01-13T08:01:01.590444",
      "hash": "909d48894a6309445279d288d2558b70e1e0f75d5a0c7daf35f841b48f26fe06",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Auth\\Login.tsx",
      "size": 4000,
      "created": "2024-12-21T14:13:59.529234",
      "modified": "2025-01-13T08:01:01.655447",
      "hash": "6910fbe24b1ad06e10eb56d9154445aece4d8ad437d9ab35c2ed151e1fe22afd",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Auth\\PrivateRoute.tsx",
      "size": 626,
      "created": "2024-12-21T14:14:32.990940",
      "modified": "2025-01-10T05:54:15.711951",
      "hash": "2cf28543c8cb2e807b754c39e58cf432eda19eff5364d2351088227f0aec89b5",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Auth\\Register.tsx",
      "size": 5587,
      "created": "2024-12-21T14:14:21.456543",
      "modified": "2025-01-13T08:01:01.689445",
      "hash": "b2e273a15e7b6bdd170b29478365c09dd46cbc3adf031a94be05a4a0f2dd34e7",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Avatar\\AvatarDisplay.tsx",
      "size": 3233,
      "created": "2024-12-17T10:53:44.861458",
      "modified": "2025-01-10T05:54:15.864594",
      "hash": "3ce74fe1fe4ad38ff2e6f3bc052b051d5749369ed867119774bb54bd15fb1e2e",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "EditIcon"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Avatar\\AvatarEditDialog.tsx",
      "size": 1816,
      "created": "2024-12-17T10:54:04.391475",
      "modified": "2025-01-13T08:01:01.746447",
      "hash": "4eee71cfd6e549fd031ff1467ada8bccce72b988e9e30d49fa3801634338d94a",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "CloseIcon", "AvatarGenerator"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Avatar\\AvatarGenerator.tsx",
      "size": 7525,
      "created": "2024-12-17T10:53:19.865914",
      "modified": "2025-01-13T08:01:01.777454",
      "hash": "b1bad4d0754ed03cf9eac0e84a7bc799e387f391a37e67ba82aeb5f6f43741d7",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Avatar\\index.ts",
      "size": 376,
      "created": "2024-12-17T10:54:20.775375",
      "modified": "2025-01-10T05:54:15.942594",
      "hash": "6fdb12d197e2732db4706c9fcec904b5646606eaea830597fe4fb4ed10a6fa28",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\DojoMap\\DojoMap.tsx",
      "size": 5251,
      "created": "2024-12-17T11:23:21.750370",
      "modified": "2025-01-13T08:01:01.824445",
      "hash": "e9e72e0471f832bfd276a5dec206d2d9aa2d5733dab0fa492889ecfa0ea5b5d3",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\events\\EventList.tsx",
      "size": 7938,
      "created": "2024-12-23T08:11:42.523808",
      "modified": "2025-01-13T08:01:01.868445",
      "hash": "657a7b613d2539e2907485f3f73a55b56305d2e3ca906cf087c9de77e2e343d9",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\GameAnalysis\\GameAnalyzer.tsx",
      "size": 2729,
      "created": "2024-12-17T12:05:51.008200",
      "modified": "2025-01-13T08:01:01.895451",
      "hash": "23029709a84e6f173b745a134bae142f93cb0c0bf0bbcb326b85d781001255c5",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\GameAnalysis\\GamePatterns.tsx",
      "size": 5193,
      "created": "2024-12-17T12:07:03.959548",
      "modified": "2025-01-13T08:01:01.925448",
      "hash": "cc1de4e1191286d5cd65c4751adff7b91a7aa3e932fb59069922cb902f0be4ee",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\GameAnalysis\\GameStatistics.tsx",
      "size": 5480,
      "created": "2024-12-17T12:07:41.302532",
      "modified": "2025-01-13T08:01:01.956445",
      "hash": "2824f4990579c7b6e8023d9c031be93bcd00195a7208586e701f913281097967",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\GameAnalysis\\ShotAnalysis.tsx",
      "size": 4677,
      "created": "2024-12-17T12:06:27.752129",
      "modified": "2025-01-13T08:01:01.980451",
      "hash": "81e05fa40af4ea515798958eae7402fc6f59814f51e89266339c3a0e9558ae71",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "different"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Layout\\Navbar.tsx",
      "size": 7778,
      "created": "2024-12-21T14:09:43.476500",
      "modified": "2025-01-13T08:01:02.013449",
      "hash": "59bbb978fa365999d62fac30f672b6924d2779d0630d46da0933fcf8e4449f55",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "MenuIcon",
        "LogoutIcon",
        "NotificationCenter",
        "notificationService"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Layout\\NotificationCenter.tsx",
      "size": 9671,
      "created": "2025-01-03T15:27:30.527782",
      "modified": "2025-01-13T08:01:02.051444",
      "hash": "dff3346600e6f1ce1a227960e41d97451c48cf2823f13d99201d37f8f6a5cf68",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["notificationService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Map\\GameMap.tsx",
      "size": 5770,
      "created": "2024-12-21T14:30:04.543197",
      "modified": "2025-01-13T08:01:02.107444",
      "hash": "872852a742509b5396ad4c973dd7a608161b7d304f00923be3bded6ae0614d5d",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\marketplace\\MarketplaceGrid.css",
      "size": 2460,
      "created": "2024-12-23T10:05:42.102093",
      "modified": "2025-01-10T05:54:16.367870",
      "hash": "eba2ad5ed4ee100b4890047c27f67ce1818438eb4e34254339ae260d1eeccc67",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\marketplace\\MarketplaceGrid.tsx",
      "size": 2214,
      "created": "2024-12-23T10:05:21.274613",
      "modified": "2025-01-13T08:01:02.125447",
      "hash": "dad9819999aa9809af57e8ad37ced484fa7942cbb7b93d00599fe00ea26bc7e5",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "./MarketplaceGrid.css"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\marketplace\\MarketplaceLayout.css",
      "size": 4294,
      "created": "2024-12-23T10:05:02.978028",
      "modified": "2025-01-10T05:54:16.405464",
      "hash": "b07d0a467538df9dd139ce0725f264f691c0fd774baaf4c46fcccca1535af51b",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\marketplace\\MarketplaceLayout.tsx",
      "size": 5742,
      "created": "2024-12-23T10:04:33.969411",
      "modified": "2025-01-13T08:01:02.155455",
      "hash": "c467b19740a9e3d3cac1dec70d7157f52d480eee73b157531e456511648cffee",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement search functionality",
        "TODO found: Implement sorting functionality"
      ],
      "similar_files": [],
      "dependencies": ["React", "./MarketplaceLayout.css"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\matches\\LiveMatch.css",
      "size": 2367,
      "created": "2024-12-23T10:00:24.089846",
      "modified": "2025-01-10T05:54:16.482054",
      "hash": "e386d7f6978266d4d6da6266ca44ae9fee72639604b2b727efa8aa2261614720",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\matches\\LiveMatch.tsx",
      "size": 2846,
      "created": "2024-12-23T10:00:05.182839",
      "modified": "2025-01-13T08:01:02.201446",
      "hash": "06cf1972af6ce2dc59474ca625003d228bc3edd5f67b500a6cfaea1c11ab23ac",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "matchUpdateService", "./LiveMatch.css"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\AlertPanel.tsx",
      "size": 6926,
      "created": "2024-12-21T19:02:17.948220",
      "modified": "2025-01-13T08:01:02.318446",
      "hash": "9d6c0fe6ab2a6edbf23fd8a153e4b054f542061ac8d821dd707bc5e5d7f7f32d",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\Dashboard.tsx",
      "size": 90872,
      "created": "2024-12-21T15:24:44.200424",
      "modified": "2025-01-13T08:01:02.815446",
      "hash": "d5d73c95994b14c0b9235d5a8a37c9e83ff9eebe1656a160f9e2421b4d898a5a",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [810, 2353, 2385]"],
      "similar_files": [],
      "dependencies": ["html2canvas", "jsPDF", "React", "buffer"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\ErrorBoundary.tsx",
      "size": 3648,
      "created": "2024-12-22T03:58:07.052671",
      "modified": "2025-01-13T08:01:02.849449",
      "hash": "6dbe7e4e1cbe41e5e9ad0f08b19129f37def864879562abc449ed44502747337",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\ErrorReport.tsx",
      "size": 6764,
      "created": "2024-12-21T19:00:19.900359",
      "modified": "2025-01-13T08:01:02.888446",
      "hash": "d05c2bfbd0db27ad9caf4c1969c65e6e5cddaabf0b26d55102dfdead4d883313",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\MetricsChart.tsx",
      "size": 7556,
      "created": "2024-12-21T19:01:42.024165",
      "modified": "2025-01-13T08:01:02.926446",
      "hash": "538a226f4d255f6e372d061fd861e20e26c33982c213612ea51b3434b9ad0a68",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Pages\\Game.tsx",
      "size": 9413,
      "created": "2024-12-21T14:11:06.281158",
      "modified": "2025-01-13T08:01:03.012023",
      "hash": "53a8fd681bb574c3e0a04b1b8fd39223ade4680484bd8453f21b1051dcab84b4",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["GameMap", "saved"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Pages\\Home.tsx",
      "size": 14322,
      "created": "2024-12-21T14:10:00.998211",
      "modified": "2025-01-13T08:01:03.060550",
      "hash": "87406edee28534f7c197f47a089281e58508c7d487349071f8e4f17e996053e6",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [31]"],
      "similar_files": [],
      "dependencies": [
        "AccessTimeIcon",
        "AssessmentIcon",
        "GroupIcon",
        "GroupsIcon",
        "SchoolIcon",
        "ShoppingCartIcon",
        "SportsEsportsIcon"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Pages\\Leaderboard.tsx",
      "size": 9765,
      "created": "2024-12-21T14:11:31.564032",
      "modified": "2025-01-13T08:01:03.124548",
      "hash": "8a200552320feee4ea5a26b9afd6c48829797ad89426cb1041f75a357521cd71",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Replace with actual API call"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Pages\\NotFound.tsx",
      "size": 1228,
      "created": "2024-12-21T14:10:23.809777",
      "modified": "2025-01-13T08:01:03.138553",
      "hash": "c4e69cd7f962735f8b3bc50d7473ebf76e1ca64e086ee7620d943732cb62554d",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["ExploreOffIcon"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Pages\\Profile.tsx",
      "size": 14183,
      "created": "2024-12-21T14:12:05.359647",
      "modified": "2025-01-13T08:01:03.193549",
      "hash": "72145164cfe9b98ada363bb340f64e1f4e7d9ae7b018e2710a868e39718184e3",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Replace with actual API call"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\QRCode\\index.ts",
      "size": 656,
      "created": "2024-12-17T11:19:59.848174",
      "modified": "2025-01-10T05:54:17.009761",
      "hash": "478d6bc66833367520fc3bae7f3d15c2ca7c3152e18bd8c4c2aeaebb493d9b21",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\QRCode\\QRDialog.tsx",
      "size": 2410,
      "created": "2024-12-17T11:19:42.889484",
      "modified": "2025-01-13T08:01:03.220550",
      "hash": "5e56e63229d879945a4274001a866fc16153157c4f4c9360f89e6e4ab959056d",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "QRScanner", "QRDisplay"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\QRCode\\QRDisplay.tsx",
      "size": 1766,
      "created": "2024-12-17T11:19:15.414319",
      "modified": "2025-01-13T08:01:03.236552",
      "hash": "a4a118d45b5816df9e32622665caec2ffcde834fa3c382ea4b4a6f475ea3455a",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "DownloadIcon"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\QRCode\\QRScanner.tsx",
      "size": 4037,
      "created": "2024-12-17T11:18:27.086043",
      "modified": "2025-01-13T08:01:03.257550",
      "hash": "a204cc24293a962f8fc298338d30d968266fdaf642d3d6e878984df86ff0e898",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "QrScanner"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Tournament\\TournamentBracket.tsx",
      "size": 4400,
      "created": "2024-12-17T11:47:50.028684",
      "modified": "2025-01-13T08:01:03.284550",
      "hash": "0e1f7af83c5756aa7d430898a7c7dbdec431bedef4252e35b10dab4d638b8e8c",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\tournaments\\MatchStats.tsx",
      "size": 5037,
      "created": "2024-12-23T09:20:07.096627",
      "modified": "2025-01-13T08:01:03.310549",
      "hash": "b971c88a0532b01e833a9503afab15d257bb82644b7df8276f0c359ecd50b4a3",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\tournaments\\PrizeManagement.tsx",
      "size": 5467,
      "created": "2024-12-23T09:23:47.185858",
      "modified": "2025-01-13T08:01:03.331084",
      "hash": "ff93d8e22bafcf49fdd7f39432a3c3fccefca5f387a946bfb60d99329e008bf0",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\tournaments\\TournamentBracket.tsx",
      "size": 3504,
      "created": "2024-12-23T09:15:57.882677",
      "modified": "2025-01-13T08:01:03.348607",
      "hash": "ec05893779223db3f7854531e9ad800a4a94c92dbb0be64520de265a43a9a803",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\tournaments\\TournamentDetail.tsx",
      "size": 10026,
      "created": "2024-12-23T09:10:11.635753",
      "modified": "2025-01-13T08:01:03.395599",
      "hash": "5710efd13e5ec7638fe5bed1995b30360671303f71e62d34439bed6159c48a16",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment", "TournamentBracket", "MatchStats"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\tournaments\\TournamentForm.tsx",
      "size": 7007,
      "created": "2024-12-23T09:10:42.534157",
      "modified": "2025-01-13T08:01:03.428602",
      "hash": "733c1f89288a869c6c635c4b449b84cd08af9b01ba0bab48fb3b5fb31ae0e993",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Add venue options */}"],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\tournaments\\TournamentList.tsx",
      "size": 5341,
      "created": "2024-12-23T09:09:36.067627",
      "modified": "2025-01-13T08:01:03.459598",
      "hash": "fa432e78c0c2b107eae1426ccebb21e81ac45bac9a3b8ea2c8fabcd0f9f86c04",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Training\\ExerciseList.tsx",
      "size": 3880,
      "created": "2024-12-17T12:02:40.293571",
      "modified": "2025-01-13T08:01:03.493600",
      "hash": "eded172aeb166a0553bc9a00554ee28599fc771375d595b1b678e1157f30e0b7",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Training\\ProgressChart.tsx",
      "size": 2408,
      "created": "2024-12-17T12:02:08.263854",
      "modified": "2025-01-10T05:54:17.303797",
      "hash": "026fe889582b7ad10af37546f50d487814c02690bae05565847190dd336d9909",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Training\\TrainingDashboard.tsx",
      "size": 6778,
      "created": "2024-12-17T12:01:42.419918",
      "modified": "2025-01-13T08:01:03.539602",
      "hash": "e5de210de97694072a1443fb8b7cbecfd701dbc11bf3ac83f9bc7123c0d04a03",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\venues\\CheckInSystem.tsx",
      "size": 8736,
      "created": "2024-12-23T09:28:48.024255",
      "modified": "2025-01-13T08:01:03.573597",
      "hash": "57ef649167fbbff48e922e3bf3a982c5add1d9b177a07aacf4a65e224fef4e5a",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\venues\\EventManagement.tsx",
      "size": 12332,
      "created": "2024-12-23T09:37:49.921360",
      "modified": "2025-01-13T08:01:03.618603",
      "hash": "e783ac910180e57906f53df679fc64d4c35d489eb2ccfb8cef2d88b723dd09c9",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\venues\\LeaderboardList.tsx",
      "size": 6302,
      "created": "2024-12-23T09:33:04.398935",
      "modified": "2025-01-13T08:01:03.651603",
      "hash": "c1d8bc17c56929891e197fbca13a2f65ff94eb73bc39b95c74b5a9d60e7bbb08",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "moment"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\venues\\VenueDetail.tsx",
      "size": 4001,
      "created": "2024-12-23T08:11:06.990316",
      "modified": "2025-01-10T05:54:17.455509",
      "hash": "a65fa9e0b164815dccd77715c232c418130412ec88be89d2c82471571ac59609",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "React",
        "CheckInSystem",
        "LeaderboardList",
        "EventList",
        "LoadingSpinner"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\venues\\VenueList.tsx",
      "size": 4750,
      "created": "2024-12-23T08:10:31.895715",
      "modified": "2025-01-10T05:54:17.474510",
      "hash": "10e93ce171bc7e5bd7e5cf6e0bff96ab2c52a583b588cab86466baa89b232c53",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Map\\__tests__\\GameMap.test.tsx",
      "size": 3025,
      "created": "2024-12-21T14:43:10.175707",
      "modified": "2025-01-13T08:01:02.076448",
      "hash": "c6c121229603f54c0c976dc98d4691b7b306c08b7a7fd3594cc239f403d0edd2",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["GameMap", "map"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\matches\\__tests__\\LiveMatch.test.tsx",
      "size": 4081,
      "created": "2024-12-23T10:03:00.580751",
      "modified": "2025-01-13T08:01:02.185447",
      "hash": "966ad4887a1f8e0d004aa3b30c819bf232575721b3b6f4ca8312cec79886ddb4",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "matchUpdateService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\__tests__\\Dashboard.test.tsx",
      "size": 5192,
      "created": "2024-12-22T04:30:21.973875",
      "modified": "2025-01-13T08:01:02.237446",
      "hash": "e6e11247c6249c927cb0c75eb2bb6ce7c5b728f69bb1ea8708dc5b7ca438744a",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "MonitoringDashboard"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\__tests__\\ErrorBoundary.test.tsx",
      "size": 3576,
      "created": "2024-12-22T04:05:54.211350",
      "modified": "2024-12-22T09:15:01.524164",
      "hash": "ebc798117a5acc8cbc88c75f8575803b1e4603f08c20fcf0c757cc810e063482",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Monitoring\\__tests__\\integration.test.tsx",
      "size": 7189,
      "created": "2024-12-22T04:33:27.070994",
      "modified": "2025-01-13T08:01:02.288445",
      "hash": "978357c3b87b987b42b929e8edd11a759635165e8394dc4f853d86f25e5717ca",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "MonitoringDashboard", "error"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\Pages\\__tests__\\Game.test.tsx",
      "size": 5325,
      "created": "2024-12-21T14:47:01.139720",
      "modified": "2025-01-13T08:01:02.966450",
      "hash": "d3e46db693f56c87c1ff430f381ed0b622acdada2b4ac0b7690467cb27ad49c6",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["Game"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\components\\__tests__\\marketplace\\MarketplaceE2E.test.tsx",
      "size": 7466,
      "created": "2024-12-23T10:19:18.440840",
      "modified": "2025-01-13T08:01:01.502444",
      "hash": "a5653e915aaeb689c1faf26db0978c215972efad2584b1f5f456a78ea8ecaba5",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["userEvent"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\hooks\\__tests__\\useLocation.test.tsx",
      "size": 2699,
      "created": "2024-12-21T14:42:50.593014",
      "modified": "2025-01-10T05:54:17.530512",
      "hash": "0184bc981e1c486648802ac271f54da09c1dac990a38ee73c7a50d6000eda658",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\screenshots\\game.png",
      "size": 37867,
      "created": "2025-01-03T21:50:49.271273",
      "modified": "2025-01-03T21:54:41.505987",
      "hash": "19d6f0ad789ff644553fc697a2fd421173c3bbedb585d9b9faa0a7c82f4e55c6",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\screenshots\\generate_screenshots.py",
      "size": 5249,
      "created": "2025-01-03T21:49:10.506724",
      "modified": "2025-01-03T21:55:00.129016",
      "hash": "24637efbac8fc53e700f86a7148b4b2dca4c97ac00b743b546a74ad44248b79b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["PIL"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\screenshots\\home.png",
      "size": 55042,
      "created": "2025-01-03T21:50:49.248268",
      "modified": "2025-01-03T21:54:41.383451",
      "hash": "58a4aa45c37b4d59b16f94adb204e4d4f8d8fe1594a5df8be7abb7b364d49484",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\public\\screenshots\\stats.png",
      "size": 21771,
      "created": "2025-01-03T21:50:49.291071",
      "modified": "2025-01-03T21:54:41.621656",
      "hash": "9e5412a10fcbbb2bf3aef3ac1898b78cedf8d770c85b41a00c32923e4bf1758e",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api\\auth.ts",
      "size": 1607,
      "created": "2024-12-21T14:16:11.276081",
      "modified": "2025-01-13T08:01:03.999682",
      "hash": "0535a2b619d6d8163a1f17dfee83c092c1d2ac779c51cac490c66d59a59da6ee",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["apiClient"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api\\client.ts",
      "size": 1625,
      "created": "2024-12-21T14:15:57.341008",
      "modified": "2025-01-13T08:01:04.012680",
      "hash": "5329de9443fe49da61be18c36c6755df3d10b8ba1f93c6131c7f26d7a8d833fe",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": true,
      "issues": ["TODO found: Implement refresh token logic"],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api\\game.ts",
      "size": 2584,
      "created": "2024-12-21T14:16:27.859988",
      "modified": "2025-01-13T08:01:04.034687",
      "hash": "9ab8c4db1b72347fb827512228cf09da68998e0e8f3d55615581b2a490ea368c",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["apiClient"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api\\index.ts",
      "size": 481,
      "created": "2024-12-21T14:17:07.543954",
      "modified": "2025-01-13T08:01:04.045679",
      "hash": "09b4943bbf689ade9738c00b7fd3f007f18959d30584dc0dcc4873edc42a1820",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api\\leaderboard.ts",
      "size": 1292,
      "created": "2024-12-21T14:16:41.327908",
      "modified": "2025-01-13T08:01:04.058683",
      "hash": "ca891caccdd51190f6bc6fd6393eac6cae42e7fac19b9f6d9ce9eafd4ebe8404",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["apiClient"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\api\\profile.ts",
      "size": 2324,
      "created": "2024-12-21T14:16:55.756823",
      "modified": "2025-01-13T08:01:04.074681",
      "hash": "bde59ec7a43c9f3e5993bcc8b5c7022608e549d1409870b16c4fa0955957e067",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["apiClient"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\websocket\\gameSocket.ts",
      "size": 7941,
      "created": "2024-12-21T14:31:34.835881",
      "modified": "2025-01-13T08:01:05.114681",
      "hash": "7503cb3635b2cb87b1ce23f7942e2874dbfd31661c1e72afc356d074d7ac7a91",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["game", "other"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\__tests__\\match-updates.test.ts",
      "size": 4385,
      "created": "2024-12-23T10:02:37.799030",
      "modified": "2025-01-13T08:01:03.919684",
      "hash": "e8dc62a1e53562e47b542f5d2a37f1746c93a525ae6396f7306a2d26d8fd1fb3",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["wsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\services\\websocket\\__tests__\\gameSocket.test.ts",
      "size": 3905,
      "created": "2024-12-21T14:47:20.520627",
      "modified": "2025-01-13T08:01:05.071689",
      "hash": "163b998ef2d206f3568dc91fd15c480619cb0e36f84a3f8780e7bd5d907de9e8",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\tests\\setupTests.ts",
      "size": 1444,
      "created": "2024-12-22T05:22:38.690857",
      "modified": "2025-01-10T05:54:18.926388",
      "hash": "5041aeba16e1bafe7504acd8e768d87966f67c4f22bd8159d58429db9f813259",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["@testing-library/jest-dom"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\src\\components\\Pages\\Home.tsx",
      "size": 2720,
      "created": "2025-01-10T06:49:19.520977",
      "modified": "2025-01-13T08:01:05.150682",
      "hash": "d7ec5f722d8421835f127eb41efdf97fbefc2849271756fd3fb476eb49ef9f5d",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\apiMiddleware.test.ts",
      "size": 7746,
      "created": "2024-12-22T04:14:42.056936",
      "modified": "2025-01-13T08:01:05.339691",
      "hash": "6d8d7e72a960f7765f8ef3f1ba7ab3eebf371d734929d324622dcc4256789729",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\auditLogger.test.ts",
      "size": 6907,
      "created": "2024-12-22T04:03:45.965344",
      "modified": "2025-01-13T08:01:05.377683",
      "hash": "ffd9093a85891aa893d1ad22c4e4ef2d40e06995f0dc96274193b40ec22543af",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\auth.test.ts",
      "size": 6451,
      "created": "2024-12-22T04:02:17.990069",
      "modified": "2025-01-13T08:01:05.405684",
      "hash": "b58c1a57e7c8104785eefde1eec6bc485f3d2b887490b4af1206a8e86d36e54f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\cache.test.ts",
      "size": 4049,
      "created": "2024-12-21T15:04:31.969213",
      "modified": "2025-01-10T05:54:19.168924",
      "hash": "4edde83cb9c434a4a0dcbf23c731a781b19899c6772aac4daea193848c740948",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\dataCompression.test.ts",
      "size": 5978,
      "created": "2024-12-22T04:07:51.480089",
      "modified": "2025-01-13T08:01:05.453681",
      "hash": "e8fdab47f21836779a88e130888e0d823976b4a695e93caad4dd5911dc9368ca",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\errorTracker.test.ts",
      "size": 8350,
      "created": "2024-12-22T04:27:58.004043",
      "modified": "2025-01-13T08:01:05.529681",
      "hash": "7bf76901d502de89b229eb37895cebbf0ebb3af62c1c2a221dc9e2976181276f",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\error_handling.test.ts",
      "size": 10164,
      "created": "2024-12-21T18:12:38.165592",
      "modified": "2025-01-13T08:01:05.500679",
      "hash": "5a44d37683b021eb5e5c793379fe66a4e4f7396dd0ee0f24c5eee7e248602e83",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["boundary", "temporary"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\gameMetricsMonitor.test.ts",
      "size": 14352,
      "created": "2024-12-22T04:04:54.884891",
      "modified": "2025-01-13T08:01:05.586683",
      "hash": "75a4ee830aa01aa24cf1384ea949968f71f3c3d4ab339d388df382cf02a593ef",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\integration.test.ts",
      "size": 14241,
      "created": "2024-12-21T15:11:16.572655",
      "modified": "2025-01-13T08:01:05.672684",
      "hash": "d17d2f969ce5d992f6c9165b736cea9d53c34f0ec2afa567e1c32caee364f34a",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\load.test.ts",
      "size": 5540,
      "created": "2024-12-21T15:17:56.815658",
      "modified": "2025-01-13T08:01:05.702682",
      "hash": "43ed0119d86463783d2ca59b7da7a1ae67fe1e339aee07087825eba37043b34a",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\location.test.ts",
      "size": 1821,
      "created": "2024-12-21T14:42:32.824481",
      "modified": "2025-01-10T05:54:19.410760",
      "hash": "8a786774afed6705313ad1f5cb14e37159a94e8837bc7b6c87e5d8a2335fb3ee",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\monitoring.test.ts",
      "size": 5149,
      "created": "2024-12-21T15:22:40.321031",
      "modified": "2025-01-13T08:01:05.736681",
      "hash": "7ff5e22301df65d7e721d838630f7c5755ebcf76745aaeb4ec7bd8554a864906",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\network.test.ts",
      "size": 7456,
      "created": "2024-12-21T15:18:28.945468",
      "modified": "2025-01-13T08:01:05.776685",
      "hash": "3d2eff2a7381efdd61582e5765ddd425518beaa2ad7c5e7ec51e7d1edc184008",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\performance.test.ts",
      "size": 12687,
      "created": "2024-12-21T15:15:11.106342",
      "modified": "2025-01-13T08:01:05.845681",
      "hash": "7c1f3f2cefe381f05090dfcbbd925d752bb6653b1dd33b29d9568abbe42d387e",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["cache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\rateLimiter.test.ts",
      "size": 6171,
      "created": "2024-12-22T04:10:56.588286",
      "modified": "2025-01-10T05:54:19.585207",
      "hash": "b3b065fac9fe53a9e5adf37996692b7058d4b045c780b1d78c391fbd06c60569",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\retryMechanism.test.ts",
      "size": 4717,
      "created": "2024-12-22T04:01:20.592859",
      "modified": "2025-01-13T08:01:05.900681",
      "hash": "a500309e3cd092d83bb274d60ae75ecd3af175fe0d4226e0caba7431b55cdbdb",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\scenarios.test.ts",
      "size": 10074,
      "created": "2024-12-21T15:19:13.591980",
      "modified": "2025-01-13T08:01:05.943690",
      "hash": "bedb6f3fee910f97b5728b3693a9e86bfb9ef87a068b6c9a031cd1cb5486f53d",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\stress.test.ts",
      "size": 9048,
      "created": "2024-12-21T15:19:50.450056",
      "modified": "2025-01-13T08:01:05.996679",
      "hash": "bdf9c0611a6bd1415d02fed14d1d815326e63f9a75de7fe4c297fe9a48b79d0e",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\throttle.test.ts",
      "size": 4340,
      "created": "2024-12-21T15:04:55.484493",
      "modified": "2025-01-10T05:54:19.695913",
      "hash": "48e8238b7da3a074791a81c2c1a68088f716b5d56cf1eb0dc9ea6638d96cdd98",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\frontend\\utils\\__tests__\\validation.test.ts",
      "size": 7908,
      "created": "2024-12-21T16:51:03.956555",
      "modified": "2025-01-13T08:01:06.040686",
      "hash": "2d06ce10de2bd46efd32af655af4dbd75d944631dbd5822e42fc9b81f20ecbb0",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\templates\\email_verification.html",
      "size": 539,
      "created": "2025-01-05T08:23:38.095583",
      "modified": "2025-01-05T08:23:41.378879",
      "hash": "44438a851c71f247ce06018b2d8fd57c2a9a12db79ac3698ae6de59728b496ae",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [12]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\templates\\email_verification.txt",
      "size": 311,
      "created": "2025-01-05T08:23:49.574369",
      "modified": "2025-01-05T08:24:03.570303",
      "hash": "5a2a5a7e0a3998abc3673b1bb6c8f4454b15b5851ae0ed2c61237948c309c752",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\templates\\password_reset.html",
      "size": 578,
      "created": "2025-01-05T08:23:22.157321",
      "modified": "2025-01-05T08:23:25.874489",
      "hash": "ca9a805139c77c438e9357ba0937ff34c4c14950cb4f04f9619b00188972361d",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [13]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\templates\\password_reset.txt",
      "size": 334,
      "created": "2025-01-05T08:23:30.796374",
      "modified": "2025-01-05T08:23:33.970854",
      "hash": "adbc831fc0de4dd627a63f912fb39476769c75035a9d8a2452308dedd079ad02",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\templates\\welcome.html",
      "size": 675,
      "created": "2025-01-05T08:23:02.375807",
      "modified": "2025-01-05T08:23:06.716469",
      "hash": "cd43c0884b73d2d2a162908a0731714398fa16c99671b7e9ccd47e3aa5f168e5",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mail_service\\templates\\welcome.txt",
      "size": 398,
      "created": "2025-01-05T08:23:12.670784",
      "modified": "2025-01-05T08:23:16.547347",
      "hash": "2367a7775285c42f07d19cc3096210a8e9a440ef37769a3131670180b40ea382",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\navigation\\RootNavigator.tsx",
      "size": 2320,
      "created": "2024-12-17T12:12:04.190491",
      "modified": "2025-01-13T08:01:06.495681",
      "hash": "51a4fe3e478a38c0ece729613f4f732ee978ced8987e6cee22ea683223f41343",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "React",
        "Icon",
        "LoginScreen",
        "GameTrackingScreen",
        "GameSummaryScreen",
        "ProfileScreen",
        "LeaderboardScreen"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\utils\\camera.ts",
      "size": 2319,
      "created": "2024-12-17T13:48:19.715135",
      "modified": "2025-01-10T05:54:20.186613",
      "hash": "a4de3ce36298616bcb551ce5f26c8e3a09a39684290baeda60ed74f5060a3c29",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\utils\\storage.ts",
      "size": 2633,
      "created": "2024-12-17T13:51:59.065556",
      "modified": "2025-01-13T08:01:06.601681",
      "hash": "ac43ad1bba650a76bf758c83cbb6d0fe3b016ae182dd79bd9be3d7fcbca6e898",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "AsyncStorage",
        "storage",
        "storage",
        "storage",
        "storage",
        "storage"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\utils\\sync.ts",
      "size": 2678,
      "created": "2024-12-17T13:51:26.134770",
      "modified": "2025-01-10T05:54:20.216614",
      "hash": "1ac48acee19b9520e7e2ed859c779c00dcfa0feb8d33bdddbc7114d4954356f0",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["AsyncStorage", "NetInfo"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\utils\\theme.ts",
      "size": 1568,
      "created": "2024-12-17T12:10:37.389246",
      "modified": "2025-01-10T05:54:20.226614",
      "hash": "3863c95c5c1a1455fd07782f20573c525032838ebd5f8564ffae6fe346a2c9ee",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\screens\\auth\\LoginScreen.tsx",
      "size": 3615,
      "created": "2024-12-17T12:12:38.891169",
      "modified": "2025-01-13T08:01:06.517683",
      "hash": "3c8df287a9c6f9b5fb4fda74c1a7cc5913b56fb5806981cfdf39fe7149129e16",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement actual login logic",
        "TODO found: Handle successful login"
      ],
      "similar_files": [],
      "dependencies": ["React", "Icon"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\screens\\game\\GameSummaryScreen.tsx",
      "size": 6250,
      "created": "2024-12-17T13:46:10.637876",
      "modified": "2025-01-13T08:01:06.551680",
      "hash": "7f796e0f0c0a04d2607419be373f7d3ce8c0df7ba4b3fe17f67044eb24bee8b1",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [56]"],
      "similar_files": [],
      "dependencies": ["React", "Share", "SyncManager", "StorageManager"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\mobile\\screens\\game\\GameTrackingScreen.tsx",
      "size": 4799,
      "created": "2024-12-17T13:45:33.946388",
      "modified": "2025-01-13T08:01:06.570681",
      "hash": "063c03615b1961610d4d498abfa371027ae5b3543ce100c439fde47aa3dfc9dc",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React", "axios", "SyncManager", "StorageManager"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\achievements.py",
      "size": 863,
      "created": "2024-12-23T11:22:00.596847",
      "modified": "2024-12-24T17:07:20.009106",
      "hash": "abd9e173fa005f3ef244ea6358e86649c8cddf7db2ecb536d076d021c43d3c29",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement achievement retrieval",
        "TODO found: Implement progress retrieval",
        "TODO found: Implement achievement claiming"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\ai.py",
      "size": 5465,
      "created": "2024-12-23T12:44:00.162421",
      "modified": "2024-12-23T12:47:30.483438",
      "hash": "bd2b7dd5ccd3d17b4049bbdc209c9fe424e66e3c0d2ceac47a9cb393f62b4cfb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "AIService", "...utils.decorators", "cache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\analytics.py",
      "size": 809,
      "created": "2024-12-23T11:06:40.525330",
      "modified": "2024-12-24T17:07:20.009106",
      "hash": "531469f972f35ae4ede4455f1778744db6b4d8a66e9aec2da7ef41e738136952",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement stats retrieval",
        "TODO found: Implement history retrieval",
        "TODO found: Implement leaderboard retrieval"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\avatar.py",
      "size": 779,
      "created": "2024-12-23T09:43:50.424075",
      "modified": "2024-12-24T17:07:20.009106",
      "hash": "8d4e5ac4db5d12dba05fbadcdf8fb8cff01e32e3babf5efad67f242b1841aab0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement avatar retrieval",
        "TODO found: Implement avatar update",
        "TODO found: Implement avatar items retrieval"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\event_management.py",
      "size": 1081,
      "created": "2024-12-23T11:28:24.263950",
      "modified": "2024-12-24T17:07:20.015109",
      "hash": "9360f4bae4bb919d35312da235fc2e996f617fa20ed4d27a0665f07e461694f5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement event retrieval",
        "TODO found: Implement event creation",
        "TODO found: Implement event update",
        "TODO found: Implement event deletion"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\forum.py",
      "size": 6494,
      "created": "2024-12-23T12:12:00.046259",
      "modified": "2024-12-23T12:12:57.194613",
      "hash": "3ff8541f19c23b4736543749f8241f4fd007e6d3f836b19b898049b5a619dd6d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "ForumService",
        "...utils.auth",
        "validate_request_data",
        "...core.middleware"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\game_analytics.py",
      "size": 7685,
      "created": "2024-12-23T12:55:55.780712",
      "modified": "2024-12-23T13:01:36.379342",
      "hash": "ff34251447a05f35eed15d95fc154cb447259174711dbddc1718a8759fb93ec9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement database query",
        "TODO found: Implement metric averaging",
        "TODO found: Implement trend calculation",
        "TODO found: Implement highlight identification",
        "Long lines found on lines: [78, 120]"
      ],
      "similar_files": [],
      "dependencies": [
        "fastapi",
        "GameAnalytics",
        "services.game_analytics_service",
        "get_current_user",
        "utils.rate_limit",
        "the",
        "a"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\maps.py",
      "size": 724,
      "created": "2024-12-23T09:42:33.172789",
      "modified": "2024-12-24T17:07:20.015109",
      "hash": "7d76d23fed13c2e23e7a5c030e11cb09474c06d9da00906527f3a33fb3c106df",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement venue retrieval",
        "TODO found: Implement venue details retrieval",
        "TODO found: Implement venue search"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\marketplace.py",
      "size": 6513,
      "created": "2024-12-23T10:12:49.861938",
      "modified": "2024-12-23T10:17:14.804984",
      "hash": "f93c6d7b41af94f7829fafe6415983e026cc680be81c264d34e31dc026afcf36",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "MarketplaceItem",
        "...services.auth",
        "validate_marketplace_item"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\ml.py",
      "size": 6715,
      "created": "2024-12-23T13:03:10.721270",
      "modified": "2024-12-23T13:03:43.490036",
      "hash": "e7fa0bf9cfadb6d0ba5fcc170e09b3864ced210ef94968ef01f76cc1608cca42",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["fastapi", "MLService", "utils.auth", "rate_limiter"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\mobile.py",
      "size": 780,
      "created": "2024-12-23T10:43:51.444795",
      "modified": "2024-12-24T17:07:20.015109",
      "hash": "a68126628beb04ca0bc1e41ec8289cae4c7a4aa5743f30d068d76780865b46e1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement mobile authentication",
        "TODO found: Implement data synchronization",
        "TODO found: Implement config retrieval"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\mobile_auth.py",
      "size": 3505,
      "created": "2024-12-23T10:46:39.583666",
      "modified": "2024-12-24T03:59:20.459452",
      "hash": "1fc7af3905133433bb293a46b80a6013c5336e5bda489d64f53205afa44cd996",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "MobileAuthService", "utils.validation"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\notifications.py",
      "size": 1098,
      "created": "2024-12-24T17:03:23.151102",
      "modified": "2024-12-24T17:07:20.009106",
      "hash": "7ff8a7bafb1315c1bda7848f53675874d596a646806b50ef1a05b3f936eb1904",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement notification retrieval",
        "TODO found: Implement marking notifications as read",
        "TODO found: Implement getting notification settings",
        "TODO found: Implement updating notification settings"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\offline.py",
      "size": 803,
      "created": "2024-12-24T17:05:03.013924",
      "modified": "2024-12-24T17:07:20.015109",
      "hash": "00b8105d2655e25798bd2a8cbfab830e696f3b3cd7cc3762d87c22cdb03ef433",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement offline data synchronization",
        "TODO found: Implement cache retrieval",
        "TODO found: Implement cache update"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\offline_sync.py",
      "size": 2872,
      "created": "2024-12-23T10:55:36.339548",
      "modified": "2024-12-24T14:29:58.367401",
      "hash": "ac84b71e999b6e24c5cefcd0860ecc043c9bb8c0515f5234299ea36e0a63e210",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "OfflineSyncService",
        "src.utils.auth",
        "validate_request_data"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\performance.py",
      "size": 4408,
      "created": "2024-12-23T13:27:15.737321",
      "modified": "2024-12-23T13:28:16.256277",
      "hash": "cb287da1094883644a20fc1a460b9cf4bc1bb6cf2cfd2968129751f27a94f069",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "fastapi",
        "PerformanceMonitor",
        "utils.auth",
        "get_db",
        "utils.redis"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\predictive_analytics.py",
      "size": 4694,
      "created": "2024-12-23T13:11:46.084836",
      "modified": "2024-12-23T13:12:20.958713",
      "hash": "50aa8e44dd098a6d79eed3d1db3818ad3a7fd84d19006d1f13750b5446d22aa3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "fastapi",
        "PredictiveAnalyticsService",
        "utils.auth",
        "rate_limiter"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\push_notifications.py",
      "size": 4518,
      "created": "2024-12-23T10:59:29.279571",
      "modified": "2024-12-24T14:29:58.367401",
      "hash": "930d341bc0a36cffd9393065d95a1537068646238ce2af53a0d900b3d1726c0c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "login_required",
        "src.services.push_notification_service",
        "NotificationSettings",
        "src.models.device",
        "push"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\system.py",
      "size": 3675,
      "created": "2024-12-23T13:47:08.592918",
      "modified": "2024-12-23T13:54:20.630519",
      "hash": "ec5e9e4467d1c3184d902c5327cd19643941080cc0e9fa3df28d9339fe8c8af0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "fastapi",
        "SystemOptimizationService",
        "services.auto_scaling",
        "get_current_admin_user",
        "utils.rate_limiter"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\venues.py",
      "size": 748,
      "created": "2024-12-23T09:47:10.039001",
      "modified": "2024-12-24T17:07:20.015109",
      "hash": "bc1854b64e7b2db8b290b50ea998745b4a649653fecae1888da46bac7f402453",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "TODO found: Implement venue retrieval",
        "TODO found: Implement venue details retrieval",
        "TODO found: Implement table retrieval"
      ],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\venue_management.py",
      "size": 3988,
      "created": "2024-12-23T11:24:47.340401",
      "modified": "2024-12-24T14:29:58.372401",
      "hash": "d5b93213804af5777a90a75670d3affc07bad1a83830bea7561dc3127fd27d99",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "flask",
        "VenueManagementService",
        "src.utils.auth",
        "validate_request_data",
        "src.extensions",
        "venue."
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\views.py",
      "size": 186,
      "created": "2025-01-03T16:07:43.447483",
      "modified": "2025-01-03T16:11:04.351237",
      "hash": "80ef159b9eab8b553c7d5aaeb18ebd826bbb4c318a88cdd5300a7ce105b326a7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "api_bp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\api\\__init__.py",
      "size": 117,
      "created": "2024-12-24T17:02:08.211302",
      "modified": "2025-01-03T16:06:16.368940",
      "hash": "560f6f5ddf2c77051207a1ad9cede64b14dbfae10e7dd88d743ad81fa4a0cae9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\auth\\views.py",
      "size": 4215,
      "created": "2025-01-03T16:07:25.696334",
      "modified": "2025-01-14T15:42:52.108141",
      "hash": "52cf143e5e0c748a9842dd85eebb6f77b76d115a82351deb992c6df5103445f6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "TODO found: Add OAuth provider initialization",
        "TODO found: Send confirmation email",
        "Long lines found on lines: [83]"
      ],
      "similar_files": [],
      "dependencies": [
        "flask",
        "generate_confirmation_token",
        "dojopool.models.user",
        "db"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\auth\\__init__.py",
      "size": 169,
      "created": "2024-12-24T17:02:19.406367",
      "modified": "2025-01-06T08:09:58.611968",
      "hash": "659106a420269dd2ffaf212699f34d3f54907e9dd35ae038e41d54e8448ed8cb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", ".views", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\game\\views.py",
      "size": 189,
      "created": "2025-01-03T16:08:15.789613",
      "modified": "2025-01-03T16:11:04.358237",
      "hash": "bcd9a5a39200735358ddf35b8048ba03f9b09b0895e441f5dad218b517f09807",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "game_bp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\game\\__init__.py",
      "size": 120,
      "created": "2025-01-03T16:06:26.522817",
      "modified": "2025-01-03T16:11:04.345234",
      "hash": "6fc782b51e33f2aa1da4155b010fe1b632ee9b91ab5169a5f1d56c36bfebce3e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\main\\views.py",
      "size": 189,
      "created": "2025-01-03T16:07:59.125760",
      "modified": "2025-01-03T16:11:04.358237",
      "hash": "b44793e7897097f3ba515ed1281a581fb210b8fb8c1cd4b89ceeee4708fd2989",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "main_bp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\main\\__init__.py",
      "size": 120,
      "created": "2024-12-24T17:02:31.153263",
      "modified": "2025-01-03T16:06:24.545252",
      "hash": "3ed93ee8ed1df7166c54cddcdaf1437bce3c0d4656abace9a2395e41645ae5d3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\media\\views.py",
      "size": 8211,
      "created": "2025-01-14T03:17:49.058501",
      "modified": "2025-01-14T03:17:54.301441",
      "hash": "7ea06ae87d26dd161f8c2be16cc87e7051e5f4eefb82306951989900afe647c0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [57]"],
      "similar_files": [],
      "dependencies": [
        "os",
        "secure_filename",
        "marshmallow",
        "login_required",
        "dojopool.core.models",
        "db",
        "dojopool.core.storage",
        "sanitize_filename",
        "dojopool.core.security.virus_scan",
        "generate_thumbnails",
        "storage"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\mobile\\__init__.py",
      "size": 394,
      "created": "2024-12-24T17:02:41.890685",
      "modified": "2024-12-24T17:07:20.005107",
      "hash": "3f9295718a113d7fa08f2a0937657c99d24e5fbfe08e12192fc95a43c18644f5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\narrative\\views.py",
      "size": 204,
      "created": "2025-01-03T16:09:06.146866",
      "modified": "2025-01-03T16:11:04.365360",
      "hash": "323a6301a81a2a9ac25af95ea70a187e6f955d0164d4645de445704cc06645e9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "narrative_bp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\narrative\\__init__.py",
      "size": 135,
      "created": "2025-01-03T16:07:07.484644",
      "modified": "2025-01-03T16:11:04.351237",
      "hash": "6079a8005e7cd49c991d782e34d971653dcd3e9eb01c1264fb89722878b0a7c2",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\ranking\\views.py",
      "size": 198,
      "created": "2025-01-03T16:08:31.226244",
      "modified": "2025-01-03T16:11:04.358237",
      "hash": "ccbb14cec5a412860942bf896c4061837f1973637a9a0d1d88c7ba0e2fb881a7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "ranking_bp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\ranking\\__init__.py",
      "size": 129,
      "created": "2025-01-03T16:06:40.843071",
      "modified": "2025-01-03T16:11:04.347238",
      "hash": "a3ed3762c784fd5806e3fc99151632f31180bdd40a05983213adf9da40a3367f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\spectator\\views.py",
      "size": 204,
      "created": "2025-01-03T16:08:50.456994",
      "modified": "2025-01-03T16:11:04.358237",
      "hash": "6baf82e1aea1e398a263f83dfc3cbe1c8adc2aa6461981b97a97063f5f269455",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "spectator_bp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\routes\\spectator\\__init__.py",
      "size": 135,
      "created": "2024-12-24T17:02:55.445518",
      "modified": "2025-01-03T16:11:04.347238",
      "hash": "147144c222cc6a3aa0403956d03acb4e5bf910a7eb39289274339fb51e7c0d03",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask", "."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\email\\service.py",
      "size": 11843,
      "created": "2024-12-22T12:51:40.642551",
      "modified": "2024-12-18T02:50:16.378699",
      "hash": "883703a37a2ce56c2c2a8f840f0fbc7fe6e7bf6d42fe1d27ca65c5c93a127350",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: api_key",
        "Potential security issue: password",
        "Long lines found on lines: [137]"
      ],
      "similar_files": [],
      "dependencies": ["time", "typing", "Mail", "re"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\email\\__init__.py",
      "size": 2056,
      "created": "2024-12-23T07:52:54.260679",
      "modified": "2024-12-18T02:20:51.126082",
      "hash": "c000ad0e867f8865c8810c7fc617ca786eeedf9692cf9a11ecf607aba0e38566",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["flask_mail", "EmailService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\services\\notification\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.260679",
      "modified": "2024-12-23T07:52:54.260679",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\audio\\2024-09-18_02-11-27 - JR_audio.mp3",
      "size": 40547487,
      "created": "2024-12-17T09:06:22.316307",
      "modified": "2024-12-17T09:06:22.334270",
      "hash": "f86d8baae648471a906de17086678321da59fac5904639cb4f22dccf490f3dce",
      "extension": ".mp3",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\audio\\checkingoutdojopool.mp3",
      "size": 7813130,
      "created": "2024-12-17T09:06:22.412020",
      "modified": "2024-12-17T09:06:22.416017",
      "hash": "7a59c51e80632cd3f82a401f8f0073f399f14bcc9927e522a635ffd21c0cfd5a",
      "extension": ".mp3",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\avatars\\avatar_None_1734655074.png",
      "size": 66807,
      "created": "2024-12-20T10:37:54.014032",
      "modified": "2024-12-20T10:37:54.015030",
      "hash": "3f39f464f2c9be8c39f58257050f2f39629f2d6eecff1b24dd117649ab391afe",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\avatars\\avatar_None_1734656040.png",
      "size": 199528,
      "created": "2024-12-20T10:54:00.880259",
      "modified": "2024-12-20T10:54:00.943693",
      "hash": "f076098eb8124f039e61e9e4176a4c8a7c180815d96098f01aa38ea03f877812",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\achievements.css",
      "size": 3714,
      "created": "2024-12-18T04:42:19.325369",
      "modified": "2025-01-10T05:54:20.275432",
      "hash": "041535bd50744a10e9bbde93867ac94a1e431125067fe6f9196a31d3ac904791",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\alert-config.css",
      "size": 5466,
      "created": "2025-01-13T02:54:12.883161",
      "modified": "2025-01-13T02:54:56.174039",
      "hash": "c4537d0accfed3aa13171f7b425eb6a61addba3d6920ef059e979cbe7bf15db6",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\base.css",
      "size": 1598,
      "created": "2024-12-18T01:47:00.187297",
      "modified": "2025-01-11T04:20:23.040776",
      "hash": "5d37291d6983f0d4e938a87e38f3b069e089714d39daa2c4913d37c2b5457909",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\chat.css",
      "size": 4166,
      "created": "2024-12-18T04:20:25.200042",
      "modified": "2025-01-10T05:54:20.310430",
      "hash": "157cd71b97d4fefc973c20cc14256b0f0ada7871716f38266fd0cf963d09411c",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\components.css",
      "size": 3691,
      "created": "2024-12-18T01:48:11.486324",
      "modified": "2025-01-10T05:54:20.330429",
      "hash": "b55d809f959cddd7e8d8e1a1d66a726e0815bdfeb0872695aaf4a88bf412ecaa",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\dashboard.css",
      "size": 3873,
      "created": "2024-12-23T08:04:31.983228",
      "modified": "2025-01-10T05:54:20.354429",
      "hash": "bfdc690e67b542ab4372c12058f0b54ba8bccb267a08dd712acf14c6dbef3c44",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\debug-panel.css",
      "size": 3454,
      "created": "2025-01-13T01:59:21.148595",
      "modified": "2025-01-13T02:00:43.437436",
      "hash": "d2c77e5ca50198a06d29d8626ac5dc8354ff34a345ec6b54e8ac1eb3c06d7f06",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\home.css",
      "size": 2378,
      "created": "2024-12-20T05:12:17.361347",
      "modified": "2025-01-10T05:54:20.371429",
      "hash": "6021b08222ad9a69d86c45b21a30d04c89c99f29bb953e366ff027245c216a32",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\landing.css",
      "size": 11862,
      "created": "2025-01-06T04:00:55.106642",
      "modified": "2025-01-13T01:47:15.828453",
      "hash": "0a77603a421c137287076d6432c2838cb7140c24c58d9066bd1f819b67be032c",
      "extension": ".css",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [129, 541]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\layout.css",
      "size": 2929,
      "created": "2024-12-18T01:48:55.390373",
      "modified": "2025-01-10T05:54:20.421873",
      "hash": "b2427294860af74d4758e04f8d6e67145c09d89352a78ef733cc3a388f1f67a7",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\marketplace.css",
      "size": 3531,
      "created": "2025-01-11T06:47:15.099252",
      "modified": "2025-01-11T06:49:51.880758",
      "hash": "a6dc187e28bd726934db6e22d842a952787f6ce0a1fe9b4fe9ae60aa585b3324",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\metrics-dashboard.css",
      "size": 2828,
      "created": "2025-01-13T02:50:54.516556",
      "modified": "2025-01-13T02:50:59.270260",
      "hash": "5f91ca4d7d5b7c4912ea5db81be0b0f01df3a8e72aae346882649591c721e69f",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\mobile.css",
      "size": 4800,
      "created": "2024-12-18T03:57:23.876471",
      "modified": "2025-01-10T05:54:20.444530",
      "hash": "9022781b1a3905f892a7e020b82adaa67807b6c0a95c59a6949b74d8300d73ee",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\notifications.css",
      "size": 5481,
      "created": "2024-12-18T03:45:41.236130",
      "modified": "2025-01-10T05:54:20.471995",
      "hash": "bac62fd4434dcdf082176efb77e09c5ef7243e9db930a271a7f92edafe23b867",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\pwa.css",
      "size": 3454,
      "created": "2024-12-18T03:55:05.955747",
      "modified": "2025-01-10T05:54:20.488686",
      "hash": "0bcafd6efeb95a9514ec8d8a62ce078dc0a022ac482e79acc8f879d7f14c3f06",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\rating.css",
      "size": 1282,
      "created": "2024-12-18T05:01:29.282440",
      "modified": "2025-01-10T05:54:20.501398",
      "hash": "8acec6b65f89ec82f71d80f2ec52db133d2d753a6b837b29b48312758c4b6835",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\README.md",
      "size": 2282,
      "created": "2025-01-10T17:00:06.205693",
      "modified": "2025-01-10T17:00:17.377445",
      "hash": "a4c68008ef1ab96394c6e214a1c3391e33cb591645c664428e4abc3cfb1395e1",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\responsive.css",
      "size": 4950,
      "created": "2024-12-23T03:32:40.298644",
      "modified": "2025-01-10T05:54:20.526709",
      "hash": "558591c1a66e7dbee26b048bcd3fbe2c31f6a275a941fc917ceedcfa5570caef",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\review.css",
      "size": 2993,
      "created": "2024-12-18T05:35:46.270534",
      "modified": "2025-01-10T05:54:20.550409",
      "hash": "fc3036bc40c26275486c0d488113d427e075cc7b65542621672ca9cd5205c449",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\style.css",
      "size": 9150,
      "created": "2024-12-18T01:07:24.687094",
      "modified": "2025-01-10T05:54:20.608412",
      "hash": "7a9349b64b1e90911a89c9402a305324c2ee7c36d70c46d2fd9ada035dca6d41",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\styles.css",
      "size": 14239,
      "created": "2024-12-17T09:06:22.480628",
      "modified": "2025-01-10T05:54:20.691930",
      "hash": "6ea8c6492b934ab9a934a7ed9fb1f6b8ef154cd65617763172f27f7f2b362861",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\tournament_bracket.css",
      "size": 3403,
      "created": "2024-12-18T04:35:55.697585",
      "modified": "2025-01-10T05:54:20.711221",
      "hash": "6af47d727e9e6a497e2c9ce68ebe072a1ebc922c3e6aeb493d638f46fc63ae09",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\trend-visualization.css",
      "size": 3633,
      "created": "2025-01-13T02:57:07.558015",
      "modified": "2025-01-13T02:57:27.460097",
      "hash": "228319053e6f93dba9d4444dfa85caf7be3ea4dcded72785b732042529096859",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\venues.css",
      "size": 5375,
      "created": "2024-12-18T05:23:09.490705",
      "modified": "2025-01-10T05:54:20.746062",
      "hash": "c0df3cc03311277d188b6677f56d2914d6d1793846e858d25ce1644508cb7916",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\css\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.261681",
      "modified": "2024-12-23T07:52:54.261681",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\icons\\logo.svg",
      "size": 405,
      "created": "2024-12-20T05:14:31.676049",
      "modified": "2024-12-20T05:14:35.990817",
      "hash": "860af014ed48c95c338d4874491315370b633409f1fbc5ea55a4c664589e4d31",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [6]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\image_metadata.json",
      "size": 8521,
      "created": "2025-01-10T15:46:26.153530",
      "modified": "2025-01-10T16:08:24.758152",
      "hash": "d7386d0a9a5f19eec6d67022fd81357a7d0e3da3a46572f71376a7793631cf09",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\PosterDojoPool.avif",
      "size": 165648,
      "created": "2025-01-14T05:38:56.020000",
      "modified": "2025-01-14T05:38:56.020000",
      "hash": "177804f8996ce8fa277e55445f371222e40b857bdfe746ad7bb5db980071773c",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\PosterDojoPool.jpg",
      "size": 187967,
      "created": "2024-12-17T22:16:50.375617",
      "modified": "2025-01-14T05:38:57.759474",
      "hash": "bdf422a7faaf301b267d5f3664a1908b4a4233bf9e9e07e8900e5d25302f4bcd",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\PosterDojoPool.webp",
      "size": 121852,
      "created": "2025-01-10T16:10:55.560723",
      "modified": "2025-01-14T05:38:57.742474",
      "hash": "e0827141fd16dfeb8a9aa7970bd75a20bfb9a38326eb98e59a799476dcb7a7e5",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\PosterDojoPool_optimized.avif",
      "size": 188601,
      "created": "2025-01-14T05:38:58.028000",
      "modified": "2025-01-14T05:38:58.028000",
      "hash": "b7cfed8c52148586070e7a0f11d084179cadbd5a6758e627459c6e780cb5a5a4",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\PosterDojoPool_optimized.jpg",
      "size": 208390,
      "created": "2025-01-10T16:10:55.474720",
      "modified": "2025-01-14T05:38:59.677987",
      "hash": "df69d41df2531a5965d2bbc4991be211978acd5a9bfd56772d9bfca881454b85",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\PosterDojoPool_optimized.webp",
      "size": 138026,
      "created": "2025-01-14T05:24:08.546499",
      "modified": "2025-01-14T05:38:59.661981",
      "hash": "18e5bc5f30b6da09cdf2276bb3cac574aeaeddf0714ac286a30eca41b0ff87b3",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\README.md",
      "size": 1011,
      "created": "2025-01-10T14:44:55.865730",
      "modified": "2025-01-10T14:45:03.370994",
      "hash": "da9b9ccacb6fae5e7d8caffdadadf4b072f0ff974cfa8d862d55091403d68a9e",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.262680",
      "modified": "2024-12-23T07:52:54.262680",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\achievements.js",
      "size": 8727,
      "created": "2024-12-18T04:41:39.542860",
      "modified": "2025-01-10T05:54:20.793851",
      "hash": "c6364b17b8d94224b403dbd4c2bbf556e9665ac367bc1bbaed385d30c3ede661",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [123, 127]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\alertConfig.js",
      "size": 8284,
      "created": "2025-01-13T02:53:36.558013",
      "modified": "2025-01-13T02:53:43.785543",
      "hash": "79a4e38c4bf368cd53e65b2a39cad3b2b75a3e3b2b9854a00d49ed9706020e43",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["alertSystem"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\alertSystem.js",
      "size": 7424,
      "created": "2025-01-13T02:53:03.982937",
      "modified": "2025-01-13T02:53:43.781543",
      "hash": "ad9b58255638837df2b1cc29e4f95558dfea24738ededffbf203de052675f48a",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [78, 81, 91, 94, 104, 107]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\bandwidthTracker.js",
      "size": 4456,
      "created": "2025-01-13T01:48:41.046597",
      "modified": "2025-01-13T01:50:10.456029",
      "hash": "1798c028e9fa9011c7599fc9f4eed262dbe0c8e4fc8f01a43300ddf27637479b",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [101]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\chat.js",
      "size": 10404,
      "created": "2024-12-18T04:21:13.813065",
      "modified": "2025-01-10T05:54:20.920259",
      "hash": "fc184ea4f816e484a220728f128b9883efbeb461747a0734b41355431f85f3a6",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [287]"],
      "similar_files": [],
      "dependencies": ["WebSocket"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components.js",
      "size": 5699,
      "created": "2024-12-18T01:47:45.341873",
      "modified": "2025-01-10T05:54:20.948116",
      "hash": "39800b8c2fec11f27965812269d3e5f0da71dd477258aaf3705cc50bd80f49ac",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\config.ts",
      "size": 2614,
      "created": "2024-12-21T03:25:14.272923",
      "modified": "2025-01-10T05:54:21.067023",
      "hash": "e152c031439964972966083c2754350befa59ed878e09c6e9257bc547a7d7d58",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\connectionManager.js",
      "size": 3652,
      "created": "2025-01-13T03:49:25.501795",
      "modified": "2025-01-13T03:49:51.679185",
      "hash": "808c6b9bfeb36874cb210f362be6e61cae86d93a296d78b8c64907c9301a7b8e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\db.js",
      "size": 5587,
      "created": "2024-12-23T03:29:25.421106",
      "modified": "2025-01-10T05:54:21.095965",
      "hash": "986550af1cd5ad99d2a67f85c0cc08a36643f52e4f69070679692f6c160dd811",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\debugPanel.js",
      "size": 6461,
      "created": "2025-01-13T01:58:55.406406",
      "modified": "2025-01-13T02:00:43.465487",
      "hash": "3ce873f2df35ee63664bba3c72879eb6c7cdf2865219922c25e977b2d3207419",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [117]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\game.js",
      "size": 4979,
      "created": "2024-12-17T09:06:22.482628",
      "modified": "2025-01-10T05:54:21.113965",
      "hash": "c4d3cac3ea36061853626bbcb327d390904206ac02702e04ab9a21df1d6a6c4f",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [21]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\imageLoader.js",
      "size": 9400,
      "created": "2025-01-12T15:22:06.758272",
      "modified": "2025-01-13T01:50:10.466028",
      "hash": "ed193f4d47a311169a1b8201ccb26a10987f9ed0e57c2e9a30b9b2c3c67df25f",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [24, 234]"],
      "similar_files": [],
      "dependencies": ["bandwidthTracker", "smallest"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\leaderboard.js",
      "size": 2760,
      "created": "2024-12-18T05:10:33.351179",
      "modified": "2025-01-10T05:54:21.129598",
      "hash": "d7591e8afe6862e0e34cb462a4f9925679551fb131cddc00918d0e7fbb0dd847",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [42, 46, 47, 71]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\main.js",
      "size": 3939,
      "created": "2024-12-18T01:07:47.345906",
      "modified": "2025-01-10T05:54:21.142803",
      "hash": "274a5e3e7d8f28794cb705f9fb2eb6f83f23d8ec0f720dc0569d12fe434ce1fe",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["automatically"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\map.js",
      "size": 49863,
      "created": "2024-12-17T09:06:22.482628",
      "modified": "2025-01-12T08:37:58.136344",
      "hash": "3d06ff7a0088ae7082f5f4ef02a875a932f50d4d155e5d224c39091c340c45ee",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [226, 233, 236, 237, 238, 241, 242, 243, 274, 279, 328, 330, 332, 334, 336, 349, 382, 636, 697, 707, 727, 1328, 1346]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\maps.js",
      "size": 5828,
      "created": "2025-01-14T16:22:01.221256",
      "modified": "2025-01-14T16:25:24.433260",
      "hash": "6e1dc939ff1b2eedc2643899fdcd2106dd16dac4052f60fc9f043d8e41e03457",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["VenueInfoWindow", "the", "the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\mapThemes.js",
      "size": 3111,
      "created": "2025-01-11T21:43:07.625802",
      "modified": "2025-01-11T21:49:15.320755",
      "hash": "c61618fda7c24f8c4c0f732b3c82d1095ea32207bb141b2c20c690508c8eb50b",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\metricsDashboard.js",
      "size": 8089,
      "created": "2025-01-13T02:50:31.870691",
      "modified": "2025-01-13T02:50:38.128648",
      "hash": "7b434fb96537cdbe1310f14768afcfbab40aad102bdd85e1671d6f771be6d857",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["performanceMetrics"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\multiplayer.js",
      "size": 10661,
      "created": "2024-12-17T09:06:22.483631",
      "modified": "2025-01-10T05:54:21.206414",
      "hash": "785abc94e22fc96fbbed36ab5975fba04c074cb38b824525269d879be96c16d5",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [198, 200, 201, 320]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\navigation.js",
      "size": 1623,
      "created": "2024-12-18T01:49:09.252126",
      "modified": "2025-01-10T05:54:21.216413",
      "hash": "1076fa87489b10e66394e5576a28fbb07241319dadf58c6a143725228bf67836",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\networkStatus.js",
      "size": 8864,
      "created": "2025-01-12T16:10:48.348994",
      "modified": "2025-01-13T02:46:14.135575",
      "hash": "6c1da86ba4c9894bb657a41a921399eb7e461b187a9ad779da1fc40da4c2867d",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\notifications.js",
      "size": 13356,
      "created": "2024-12-18T03:45:09.949663",
      "modified": "2025-01-10T05:54:21.251158",
      "hash": "d479dfdd8c135a83435f9a10168f141906bf4763f5bed8f779470fbaac80abce",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [279, 289, 295, 317, 377, 407]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\performanceMetrics.js",
      "size": 5370,
      "created": "2025-01-13T02:49:02.136652",
      "modified": "2025-01-13T02:49:26.190631",
      "hash": "40d29251738b538aa3409fb11f4ab2b28f3fc24f4935abeeffbb141058fd29f9",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["resource"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\pwa.js",
      "size": 12021,
      "created": "2024-12-18T03:53:32.628727",
      "modified": "2025-01-10T05:54:21.292159",
      "hash": "3101fed11eaeb7a36013d4fe03d9b979bee0d62dd7e6e3792580b1e7297b5bc4",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["the"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\responsive.js",
      "size": 6401,
      "created": "2024-12-23T03:33:36.917041",
      "modified": "2025-01-10T05:54:21.317157",
      "hash": "333eb213b907616176cccfcb1ab26abacf441ea20c30e035c665ef7b5847743e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\service-worker.js",
      "size": 5908,
      "created": "2024-12-18T03:52:21.706253",
      "modified": "2025-01-10T05:54:21.336165",
      "hash": "c67c87e1f68d7db4e7408b13f89d1667470c11b1d0f6195dfb95242cc930c82c",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["IndexedDB", "IndexedDB"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\socket_manager.js",
      "size": 14972,
      "created": "2024-12-17T09:06:22.484628",
      "modified": "2025-01-10T05:54:21.371156",
      "hash": "a0be2e21df3f1e975123fee712cabcce494f6729f3a54492bc422e3ad7569e2e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [153]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\sync-manager.js",
      "size": 4628,
      "created": "2024-12-23T03:30:26.870080",
      "modified": "2025-01-10T05:54:21.413936",
      "hash": "019cf9b1b923a7ea2597aeb6d0d66b1956bed055d61c97e7f8383c69f8bd2529",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["different"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\theme.js",
      "size": 1660,
      "created": "2024-12-21T03:48:49.489069",
      "modified": "2025-01-10T05:54:21.426931",
      "hash": "a5e70ec509d41accc6c2d0bc4715437850942a5bcd2712ff76c1e7d14d439d4e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\tournaments.js",
      "size": 5188,
      "created": "2024-12-18T04:34:34.409134",
      "modified": "2025-01-10T05:54:21.459652",
      "hash": "310257f2e9eb87b6b1a6ff8ada5353166e70aa7d9b75f3afbbef92bc7ed8c622",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [104, 108]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\tournament_bracket.js",
      "size": 6961,
      "created": "2024-12-18T04:35:18.324455",
      "modified": "2025-01-10T05:54:21.444653",
      "hash": "d41aae4a0aa6d2f036c4a9c8a66dd0e50e95264f4a9b01c61a33346ea93d26ad",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [75, 89, 107]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\trendAnalysis.js",
      "size": 8102,
      "created": "2025-01-13T02:55:56.900271",
      "modified": "2025-01-13T02:56:49.513175",
      "hash": "14376ee95417918d7eaa81884f1c7eb76d14c7ae4a7ec15d9c8fb4818bbba833",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [194]"],
      "similar_files": [],
      "dependencies": ["alertSystem", "baseline"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\trendVisualization.js",
      "size": 6053,
      "created": "2025-01-13T02:56:34.633307",
      "modified": "2025-01-13T03:39:14.312716",
      "hash": "7d7291a820cd78e634cb95e2d6d9ed15dac94682383404c4a6dc531c30a7a58a",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\umpire.js",
      "size": 13207,
      "created": "2024-12-17T09:06:22.484628",
      "modified": "2025-01-10T05:54:21.493652",
      "hash": "aa648e0f1ea3709b45751a3f970a9a05138b90260d53cc91de41593b03c90876",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [289, 298, 334, 356]"],
      "similar_files": [],
      "dependencies": ["video"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\utils.js",
      "size": 3429,
      "created": "2024-12-18T01:47:18.749773",
      "modified": "2025-01-10T05:54:21.506657",
      "hash": "e6b94d491a42241595abf9d7c6c0056fcba8f74b8b7717c76437dde47d3c5677",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["localStorage", "localStorage"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\venues.js",
      "size": 8686,
      "created": "2024-12-18T05:20:16.077537",
      "modified": "2025-01-10T05:54:21.555653",
      "hash": "7372257310f89cc78aca1429b7f1918654064c1ea93b059a1aacfdb84c138fcc",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [88, 106]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\websocket_manager.js",
      "size": 4893,
      "created": "2024-12-23T09:45:39.936360",
      "modified": "2025-01-10T05:54:21.571248",
      "hash": "952d2b971acbb1183474bf5af9a08c4292eb681154ae73aea325a28fc0bdd12a",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["local", "the", "a"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\__init__.py",
      "size": 0,
      "created": "2024-12-23T07:52:54.261681",
      "modified": "2024-12-23T07:52:54.261681",
      "hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\screenshots\\error_page_20241103_055135.png",
      "size": 20622,
      "created": "2024-12-17T09:06:22.485629",
      "modified": "2024-12-17T09:06:22.485629",
      "hash": "8c6c281b270accaebab6842dcd181efa6076c4f6c5aef943288b75c1de48aa7f",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\main.scss",
      "size": 927,
      "created": "2024-12-21T03:31:36.467874",
      "modified": "2025-01-10T05:54:22.064173",
      "hash": "ab40252361200d13c963ca4a038ca64293b1d43f66189d8b054a5f102c62737e",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\dragon.webp",
      "size": 416828,
      "created": "2025-01-10T15:02:23.369459",
      "modified": "2024-10-22T06:32:44.250244",
      "hash": "7a2e20d8e843cbb2d1fd417ccd202fa3b7cb0ed8d45df32f3ea00884a4ca6c8b",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\fox.webp",
      "size": 229360,
      "created": "2025-01-10T15:02:23.359458",
      "modified": "2024-10-22T06:35:24.418344",
      "hash": "a1fe7d31ab57611a7752a1701eeda980ab46f0372caac9648349a6ed53cc8518",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\hero-bg.avif",
      "size": 165648,
      "created": "2025-01-14T05:38:59.868000",
      "modified": "2025-01-14T05:38:59.868000",
      "hash": "177804f8996ce8fa277e55445f371222e40b857bdfe746ad7bb5db980071773c",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\hero-bg.jpg",
      "size": 187967,
      "created": "2025-01-12T04:53:40.650273",
      "modified": "2025-01-14T05:39:01.589036",
      "hash": "bdf422a7faaf301b267d5f3664a1908b4a4233bf9e9e07e8900e5d25302f4bcd",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\hero-bg.webp",
      "size": 121852,
      "created": "2025-01-14T05:24:10.078557",
      "modified": "2025-01-14T05:39:01.573239",
      "hash": "e0827141fd16dfeb8a9aa7970bd75a20bfb9a38326eb98e59a799476dcb7a7e5",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\hero-vs.avif",
      "size": 179686,
      "created": "2025-01-14T05:39:01.826000",
      "modified": "2025-01-14T05:39:01.826000",
      "hash": "df72a755610ad434ee3b0cbe3ce96119c72c1faf5394158c2d5efcf8f8a22049",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\hero-vs.jpg",
      "size": 193161,
      "created": "2025-01-12T04:53:40.641255",
      "modified": "2025-01-14T05:39:03.554415",
      "hash": "b5501b07de4e50eab25fad902edd048058c27dd243d1b6d9a72bdb583280b038",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\hero-vs.webp",
      "size": 146422,
      "created": "2025-01-14T05:24:11.550088",
      "modified": "2025-01-14T05:39:03.539083",
      "hash": "fb2218240cc2aa23a96c9c54a43456dfb129e7beda54063354443c0e9b472f3a",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\infinity.webp",
      "size": 171676,
      "created": "2025-01-10T15:02:23.353460",
      "modified": "2024-10-22T06:33:58.545875",
      "hash": "fb3ac8e7868e88c54fdb86066bed3bef9ad9a6ee4113edd9299330baeb973a05",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\logo.avif",
      "size": 110790,
      "created": "2025-01-14T05:39:03.749000",
      "modified": "2025-01-14T05:39:03.749000",
      "hash": "083f7f519d66f6bf363136638f0c2bb2683fb39a17ebedaf6133378535d38ada",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\logo.jpg",
      "size": 146018,
      "created": "2025-01-12T04:53:40.645257",
      "modified": "2025-01-14T05:39:05.492361",
      "hash": "b23ba5326456474932f90513eaffccf075f7b509f07e04b558494ea5a6eefa0b",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\logo.webp",
      "size": 73164,
      "created": "2025-01-14T05:24:12.788244",
      "modified": "2025-01-14T05:39:05.478112",
      "hash": "bd8d171713145534f8bcad5bd829f7430b103540c45138215a5a3f304952dcc0",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\mask.webp",
      "size": 184826,
      "created": "2025-01-10T15:02:23.361459",
      "modified": "2024-10-22T06:33:11.604194",
      "hash": "be8d429ea0f99f51c059336cd8d8c53dde11e54d27281a11178d390aba5afa23",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\microchipball.webp",
      "size": 325022,
      "created": "2025-01-10T15:02:23.363459",
      "modified": "2024-10-22T06:34:35.289777",
      "hash": "efe3e2e2f19ff4d129bac024123e2e1b0355e4ea26501bb58c5a00de7ad9b46f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\octopus.webp",
      "size": 391580,
      "created": "2025-01-10T15:02:23.356460",
      "modified": "2024-10-22T06:36:48.777201",
      "hash": "6a5c47887282beda81a76a518b79895aa56e623ab5eb145f407a39ad33bc1b1e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\portalball.webp",
      "size": 386606,
      "created": "2025-01-10T15:02:23.372462",
      "modified": "2024-10-22T06:34:44.491203",
      "hash": "24d7bf654cebbd2fd8490b4efbe056166e3fdeab18d0cb6e57c51f48ae49d82e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\spacetable.webp",
      "size": 499274,
      "created": "2025-01-10T15:02:23.351459",
      "modified": "2024-10-22T06:34:20.456783",
      "hash": "3455ad51bd71a972e669087797761b536ebf41720ef3137522fcf975dae9ce17",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\backgrounds\\yinyang.webp",
      "size": 169130,
      "created": "2025-01-10T15:02:23.367458",
      "modified": "2024-10-22T06:35:32.857695",
      "hash": "72a11984a26d990558fff313900fc4212baee4ec05d4da4b5ca12083c2d11602",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool-transparent.avif",
      "size": 80612,
      "created": "2025-01-14T05:39:05.680000",
      "modified": "2025-01-14T05:39:05.680000",
      "hash": "7462072b32cac9a33835900b6c9c33d40eb43f08589c0a052bc8dcb0f1132265",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool-transparent.jpg",
      "size": 105042,
      "created": "2025-01-14T05:24:16.013567",
      "modified": "2025-01-14T05:39:06.757736",
      "hash": "6b0b396702a3127ad5ef87a0d1fe7ef4d31fd46f0bb096556ba2f78f0c0f90a3",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool-transparent.png",
      "size": 636893,
      "created": "2025-01-11T00:54:04.268543",
      "modified": "2025-01-11T00:54:04.501566",
      "hash": "fe165ba370321088fb4cbd1dc25fb91a2ef272f8ffa150ad1957fee77e618d93",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool-transparent.webp",
      "size": 57740,
      "created": "2025-01-11T00:54:04.646567",
      "modified": "2025-01-14T05:39:06.740738",
      "hash": "ba5375f5684466a34b17f38d06cbd7c41913a7c5d90738cf7546af70a0e36fff",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool.avif",
      "size": 81409,
      "created": "2025-01-14T05:39:06.963000",
      "modified": "2025-01-14T05:39:06.963000",
      "hash": "808ca2568c51c7e09aca565291c727908b9c1caaad44be26b2ebbf6d33bd8757",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool.jpg",
      "size": 105269,
      "created": "2025-01-10T15:01:25.455633",
      "modified": "2025-01-14T05:39:08.045174",
      "hash": "f223e7b8b70cada869eb5a9e042bae7ed5b49f5c7ebc09723837508fe3fdb037",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool.webp",
      "size": 58048,
      "created": "2025-01-10T16:10:55.862777",
      "modified": "2025-01-14T05:39:08.031925",
      "hash": "699af5337886085685a8dba3228d923c1c9b29b71dff54341bfc7a66b5fb4491",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool_optimized.avif",
      "size": 81368,
      "created": "2025-01-14T05:39:08.225000",
      "modified": "2025-01-14T05:39:08.225000",
      "hash": "14a84d5d33b2226d7250ab26793cdab5fcffc72b67ddfa3361eab076febe2a92",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool_optimized.jpg",
      "size": 105308,
      "created": "2025-01-10T16:10:55.851780",
      "modified": "2025-01-14T05:39:09.269223",
      "hash": "3ce3cbed3847d5232f4bda93fee5a671ea1aa067ab64d705679260dfd161a963",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\LogoDojoPool_optimized.webp",
      "size": 58204,
      "created": "2025-01-14T05:24:17.520248",
      "modified": "2025-01-14T05:39:09.256199",
      "hash": "09516e6294eb0ab06c98fff3e53eb85261f2e1d2e14a9265fc4756561f07a04f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\PosterDojoPool.avif",
      "size": 188601,
      "created": "2025-01-14T05:39:09.448000",
      "modified": "2025-01-14T05:39:09.448000",
      "hash": "b7cfed8c52148586070e7a0f11d084179cadbd5a6758e627459c6e780cb5a5a4",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\PosterDojoPool.jpg",
      "size": 208390,
      "created": "2025-01-10T15:01:25.457629",
      "modified": "2025-01-14T05:39:10.990358",
      "hash": "df69d41df2531a5965d2bbc4991be211978acd5a9bfd56772d9bfca881454b85",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\PosterDojoPool.webp",
      "size": 138026,
      "created": "2025-01-10T16:10:55.969780",
      "modified": "2025-01-14T05:39:10.973356",
      "hash": "18e5bc5f30b6da09cdf2276bb3cac574aeaeddf0714ac286a30eca41b0ff87b3",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\PosterDojoPool_optimized.avif",
      "size": 187811,
      "created": "2025-01-14T05:39:11.188000",
      "modified": "2025-01-14T05:39:11.188000",
      "hash": "258de086d4f483156e305f458d92dd676ba6aa0739be568e31151fc050281c5c",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\PosterDojoPool_optimized.jpg",
      "size": 208230,
      "created": "2025-01-10T16:10:55.956776",
      "modified": "2025-01-14T05:39:12.947274",
      "hash": "5cffd939a527b31fbe237b3e34ed488148dabf7e57d327d7e841af590e28cfae",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\core\\PosterDojoPool_optimized.webp",
      "size": 137282,
      "created": "2025-01-14T05:24:20.285838",
      "modified": "2025-01-14T05:39:12.931274",
      "hash": "de948fda8c841307c11fea73300fd611eb9938d01eb1ce50098e40be483749c5",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\7ud8ui47tukn3c41qcpg5q.avif",
      "size": 186467,
      "created": "2025-01-14T05:39:13.140000",
      "modified": "2025-01-14T05:39:13.140000",
      "hash": "da0b491c18f9edbaa7cf83c58b6ab85964b0d99a91bf8a9cf74b601e93045b7a",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\7ud8ui47tukn3c41qcpg5q.jpg",
      "size": 206570,
      "created": "2025-01-10T15:02:23.382458",
      "modified": "2025-01-14T05:39:14.280321",
      "hash": "2f8d0e720f826e18de2055d0141655eef98a005319ce70603ed7cd6c33b0fd06",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\7ud8ui47tukn3c41qcpg5q.webp",
      "size": 157358,
      "created": "2025-01-10T16:10:56.107583",
      "modified": "2025-01-14T05:39:14.267303",
      "hash": "9dd935d60a20a8b5148cb2630529e84711b78574e721b02914cd5e7fe2ddf243",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\7ud8ui47tukn3c41qcpg5q_optimized.avif",
      "size": 186377,
      "created": "2025-01-14T05:39:14.462000",
      "modified": "2025-01-14T05:39:14.462000",
      "hash": "503bda5180e345cf5e84fc23381fa41a7302e2b256951944fd664f8a48fb98d2",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\7ud8ui47tukn3c41qcpg5q_optimized.jpg",
      "size": 206517,
      "created": "2025-01-10T16:10:56.095581",
      "modified": "2025-01-14T05:39:15.577335",
      "hash": "911d2a358705d26dd71980e8d46b0fd7f7dfc43f0d3094e2bcd6add38b519d17",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\7ud8ui47tukn3c41qcpg5q_optimized.webp",
      "size": 157332,
      "created": "2025-01-14T05:24:22.358361",
      "modified": "2025-01-14T05:39:15.561581",
      "hash": "a8d6fe0a07ae661e2d05af26bfbcea2d178a394f61639a0be3c28c9f18255571",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\cig5yiwosk6dx0asskjmaq.avif",
      "size": 183048,
      "created": "2025-01-14T05:39:15.763000",
      "modified": "2025-01-14T05:39:15.763000",
      "hash": "2f8198091dbeca0304d9620c5e4670217ac5298e4a1549f63f65ea15975edcc6",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\cig5yiwosk6dx0asskjmaq.jpg",
      "size": 206997,
      "created": "2025-01-10T15:02:23.383459",
      "modified": "2025-01-14T05:39:17.059173",
      "hash": "82771022a1eddf55f7096e3baef51bccb08a6662a919d1f41fd92639dada1fa5",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\cig5yiwosk6dx0asskjmaq.webp",
      "size": 155060,
      "created": "2025-01-10T16:10:56.255795",
      "modified": "2025-01-14T05:39:17.041150",
      "hash": "b80e907b1efbbb81060c863f24f2713809ba3e26c529af97aa1a5dc1070be5b7",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\cig5yiwosk6dx0asskjmaq_optimized.avif",
      "size": 182735,
      "created": "2025-01-14T05:39:17.249000",
      "modified": "2025-01-14T05:39:17.249000",
      "hash": "e647b299b2f889e76defa115d056b61d32b43257541e20c8d5d4271d6660fee6",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\cig5yiwosk6dx0asskjmaq_optimized.jpg",
      "size": 206939,
      "created": "2025-01-10T16:10:56.242791",
      "modified": "2025-01-14T05:39:18.537420",
      "hash": "1845db764a8d109369b05c51514dace4191f878aa65e0854e8b47c9fc8513cc0",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\cig5yiwosk6dx0asskjmaq_optimized.webp",
      "size": 154980,
      "created": "2025-01-14T05:24:24.248777",
      "modified": "2025-01-14T05:39:18.523412",
      "hash": "28826850ad6f53055001ae67e7ead74f0f8e43368f6506620de64197677a9eaf",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\eouo4ouht3skcfcy2j_w2g.avif",
      "size": 216746,
      "created": "2025-01-14T05:39:18.723000",
      "modified": "2025-01-14T05:39:18.723000",
      "hash": "228428091e76a19b44836822f6f567e7d732205b8faa62ad893b1aecc56d574f",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\eouo4ouht3skcfcy2j_w2g.jpg",
      "size": 228283,
      "created": "2025-01-10T15:02:23.384459",
      "modified": "2025-01-14T05:39:19.916009",
      "hash": "54ba71f4d7301b8f6703a550c94334999183b475007c4887745c7a003042e71e",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\eouo4ouht3skcfcy2j_w2g.webp",
      "size": 189426,
      "created": "2025-01-10T16:10:56.392385",
      "modified": "2025-01-14T05:39:19.901557",
      "hash": "6350e7e60520257fdd5e0517f027b16e839233f3483172df2f8076e505db7106",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\eouo4ouht3skcfcy2j_w2g_optimized.avif",
      "size": 216345,
      "created": "2025-01-14T05:39:20.096000",
      "modified": "2025-01-14T05:39:20.096000",
      "hash": "adfd5b6dadee2be4e36e80b4a5f03f54672e493d5e7474acbfa24d9b557ec3a2",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\eouo4ouht3skcfcy2j_w2g_optimized.jpg",
      "size": 228184,
      "created": "2025-01-10T16:10:56.379792",
      "modified": "2025-01-14T05:39:21.328122",
      "hash": "4fdf90dded4c9f19d9cf88ec4cc172951ee6f57df6dfdcdd61f0c05b2b8eb54f",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\eouo4ouht3skcfcy2j_w2g_optimized.webp",
      "size": 189384,
      "created": "2025-01-14T05:24:26.151727",
      "modified": "2025-01-14T05:39:21.312124",
      "hash": "6bc2092c5a7f0293f04fd99c1a9eaefd50a363e805ac01e435c0147b4d1aa7db",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\o56zyuldqairfff7b5rigg.avif",
      "size": 166136,
      "created": "2025-01-14T05:39:21.532000",
      "modified": "2025-01-14T05:39:21.532000",
      "hash": "c96752c6e8fedab569b6c1ae39683cefe3b0873942227d8d557ff24b0c0a501d",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\o56zyuldqairfff7b5rigg.jpg",
      "size": 190391,
      "created": "2025-01-10T15:02:23.385458",
      "modified": "2025-01-14T05:39:22.823543",
      "hash": "5b5b99b7f8abefb112ac7555c2996225d3e99faeef41d65386244114ecc7ca08",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\o56zyuldqairfff7b5rigg.webp",
      "size": 134382,
      "created": "2025-01-10T16:10:56.544447",
      "modified": "2025-01-14T05:39:22.807537",
      "hash": "cd1e3136def949710db07a0ef5c1752395ff65977c1faa9effc3046d996d713d",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\o56zyuldqairfff7b5rigg_optimized.avif",
      "size": 165563,
      "created": "2025-01-14T05:39:23.022000",
      "modified": "2025-01-14T05:39:23.022000",
      "hash": "d28cd4aa731afaf7ba0c803ba2f6552c46fd69a6abf210fd88b0f6d2045c7e08",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\o56zyuldqairfff7b5rigg_optimized.jpg",
      "size": 190252,
      "created": "2025-01-10T16:10:56.531450",
      "modified": "2025-01-14T05:39:24.231189",
      "hash": "4d4a6c3cd3ccf75665e196bb31f494340b2ed334f71f1e70c2300db472aa9ea2",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\o56zyuldqairfff7b5rigg_optimized.webp",
      "size": 134146,
      "created": "2025-01-14T05:24:28.061550",
      "modified": "2025-01-14T05:39:24.218194",
      "hash": "6b7860a63d41c659c1c9691b21ce1d196791d8c0af741e072bb10f8d40b4b389",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.avif",
      "size": 53329,
      "created": "2025-01-14T05:39:24.413000",
      "modified": "2025-01-14T05:39:24.413000",
      "hash": "39cceaefb3d36269b0e900de814c7782aea98f92c25e005d747e2534fcdd9e8f",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.jpg",
      "size": 83143,
      "created": "2025-01-10T15:02:23.387104",
      "modified": "2025-01-14T05:39:25.503143",
      "hash": "ef71f49bb608a1cac763980973573f78eeb070ba6d9aeb44cbe547791d55dd11",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.vbk.avif",
      "size": 79356,
      "created": "2025-01-14T05:39:25.686000",
      "modified": "2025-01-14T05:39:25.686000",
      "hash": "2f74d5cf63378017de13c7b0776d0fce914d0fb32d37395f548854e59c100edb",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.vbk.jpg",
      "size": 118503,
      "created": "2025-01-10T15:02:23.389115",
      "modified": "2025-01-14T05:39:26.919259",
      "hash": "fa3f99b01af78d51aadd1a1a46cf5e9d33f94877293ce4f56ec0b7379d669dba",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.vbk.webp",
      "size": 67144,
      "created": "2025-01-10T16:10:56.805672",
      "modified": "2025-01-14T05:39:26.904258",
      "hash": "1b6655ab0e1da74613dd5ce9b10913ef046a67e6e5f080200ea356c62314ee14",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.vbk_optimized.avif",
      "size": 79609,
      "created": "2025-01-14T05:39:27.139000",
      "modified": "2025-01-14T05:39:27.139000",
      "hash": "51001708b485dcdf05cafa2b92c1ee61d615e42dc1f586caa421e5e4e5c2612d",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.vbk_optimized.jpg",
      "size": 118454,
      "created": "2025-01-10T16:10:56.794672",
      "modified": "2025-01-14T05:39:28.413419",
      "hash": "955ea10d8fb818bf77a4335e9305cd875f444d22b7c44210116d2e5c573a89ef",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.vbk_optimized.webp",
      "size": 67100,
      "created": "2025-01-14T05:24:31.658166",
      "modified": "2025-01-14T05:39:28.397424",
      "hash": "632dd76d29a8382f059b03a688da7a73570ccdb2d077544f2428b5b49431a66f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2.webp",
      "size": 43634,
      "created": "2025-01-10T16:10:56.693948",
      "modified": "2025-01-14T05:39:25.490558",
      "hash": "0cb1b0c034b33e612f966f83c7ba0435f46653ae6474401a3a4222498432b871",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2_optimized.avif",
      "size": 53192,
      "created": "2025-01-14T05:39:28.612000",
      "modified": "2025-01-14T05:39:28.612000",
      "hash": "81347bbf2290901ff67e001bb3ace6a1a390ba5e950b111c6a2407e2d18da5e0",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2_optimized.jpg",
      "size": 83093,
      "created": "2025-01-10T16:10:56.683951",
      "modified": "2025-01-14T05:39:29.781664",
      "hash": "a12d2e2e5aae32af471b8c3a4696069f99481bcf622daee598d55a5ad8d0b648",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig2_optimized.webp",
      "size": 43584,
      "created": "2025-01-14T05:24:32.777343",
      "modified": "2025-01-14T05:39:29.769669",
      "hash": "ae63db67554c608e5d9b481cbe722b46c56a9d828fa1d3e767837fb47c64d5ba",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig3.qo3.6mtq1zxb.avif",
      "size": 212938,
      "created": "2025-01-14T05:39:29.963000",
      "modified": "2025-01-14T05:39:29.963000",
      "hash": "f8d9bcce5aeca19bde4658d649d2282950435e121b4383ab2c596b603cff2cdb",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig3.qo3.6mtq1zxb.jpg",
      "size": 234642,
      "created": "2025-01-10T15:02:23.391115",
      "modified": "2025-01-14T05:39:31.242700",
      "hash": "ea683bd2a6d04e1665acde9dae5d829358ddef989a4dd89af1a57294b8e0de8b",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig3.qo3.6mtq1zxb.webp",
      "size": 177394,
      "created": "2025-01-10T16:10:56.931881",
      "modified": "2025-01-14T05:39:31.227697",
      "hash": "393133c2fdcf066bea22bd0817f9ab69b30808180fc2428679f796e373a706c9",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig3.qo3.6mtq1zxb_optimized.avif",
      "size": 212536,
      "created": "2025-01-14T05:39:31.426000",
      "modified": "2025-01-14T05:39:31.426000",
      "hash": "2d02b909db022108e5d07a12683df36345f58e15aae34477eeffa6438c5bee67",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig3.qo3.6mtq1zxb_optimized.jpg",
      "size": 234698,
      "created": "2025-01-10T16:10:56.914880",
      "modified": "2025-01-14T05:39:32.874745",
      "hash": "e332c4c335ef0b5d62adddbd406aee570f41c662b7068adc8becba4f5f618b05",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oig3.qo3.6mtq1zxb_optimized.webp",
      "size": 177452,
      "created": "2025-01-14T05:24:34.643627",
      "modified": "2025-01-14T05:39:32.855505",
      "hash": "5fc9c24df42618cf5dcf080e6f77733bc4d4bcbacc05906815fb5281bb562526",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oii9klnsrh6tmmfe6upiuq.avif",
      "size": 149298,
      "created": "2025-01-14T05:39:33.066000",
      "modified": "2025-01-14T05:39:33.066000",
      "hash": "dd3e10d7b202bbc3a14fbaee128872b15bf7a279429d4099efe1435af00c37ca",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oii9klnsrh6tmmfe6upiuq.jpg",
      "size": 170096,
      "created": "2025-01-10T15:02:23.392115",
      "modified": "2025-01-14T05:39:34.115778",
      "hash": "ca4ee618125ff0de233705363add21c10b429e0240917f48d1b6004ab296c07d",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oii9klnsrh6tmmfe6upiuq.webp",
      "size": 121588,
      "created": "2025-01-10T16:10:57.090319",
      "modified": "2025-01-14T05:39:34.102778",
      "hash": "1efe759f7cb98dd5492c89bf30e1e1cc97c1a270797b50e83c00e8fca8e0d77e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oii9klnsrh6tmmfe6upiuq_optimized.avif",
      "size": 149271,
      "created": "2025-01-14T05:39:34.297000",
      "modified": "2025-01-14T05:39:34.297000",
      "hash": "d38079dfb8e6f9e7d0d7a0cc95423b9d9b1fa45a2c200eeb9d46f6876fc33953",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oii9klnsrh6tmmfe6upiuq_optimized.jpg",
      "size": 170107,
      "created": "2025-01-10T16:10:57.079309",
      "modified": "2025-01-14T05:39:35.306804",
      "hash": "ddaa1fd14f1f32238d83a5a315a5e0c8a3194bcbfed6f7c0ab0424a4803136e6",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\oii9klnsrh6tmmfe6upiuq_optimized.webp",
      "size": 121520,
      "created": "2025-01-14T05:24:36.313469",
      "modified": "2025-01-14T05:39:35.293795",
      "hash": "52d2bd020721c30eae14b4afdf94a8bb7c7e6bf965ae39ac237470162f5341a2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\q4vo8r4otruixcez12kora.avif",
      "size": 129255,
      "created": "2025-01-14T05:39:35.495000",
      "modified": "2025-01-14T05:39:35.495000",
      "hash": "a8d99958eeed3950b307b575f03b172322165896f2d9b46e81e05257fb869b6b",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\q4vo8r4otruixcez12kora.jpg",
      "size": 152820,
      "created": "2025-01-10T15:02:23.393115",
      "modified": "2025-01-14T05:39:36.673810",
      "hash": "b85697710fc65f36a16b5328a260e5bd8c55ff613dd97b4bd8f6338f0b96a79c",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\q4vo8r4otruixcez12kora.webp",
      "size": 99024,
      "created": "2025-01-10T16:10:57.224596",
      "modified": "2025-01-14T05:39:36.660810",
      "hash": "5699776072458dcd18e8df0dac859b8ddbca817a73046e32ec9f2e01ea177afd",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\q4vo8r4otruixcez12kora_optimized.avif",
      "size": 128400,
      "created": "2025-01-14T05:39:36.856000",
      "modified": "2025-01-14T05:39:36.856000",
      "hash": "75a5dd1a594dca729d92e0882d23d7b432c0f35ef158e818e6266c270ca95c7c",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\q4vo8r4otruixcez12kora_optimized.jpg",
      "size": 152628,
      "created": "2025-01-10T16:10:57.213596",
      "modified": "2025-01-14T05:39:38.223466",
      "hash": "0894c4f46da32df31f1ab39f176f1a1fc32303ba0ec9fa149f575106773642a8",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\q4vo8r4otruixcez12kora_optimized.webp",
      "size": 97914,
      "created": "2025-01-14T05:24:38.215791",
      "modified": "2025-01-14T05:39:38.205534",
      "hash": "d8ee382e88f58cf72d51af3a32d50a929da079f085780c7393b367f389aafd91",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\xv7lyxviqpkpwjpqwvvcwa.avif",
      "size": 177402,
      "created": "2025-01-14T05:39:38.411000",
      "modified": "2025-01-14T05:39:38.411000",
      "hash": "33597b5a03f838631fe4d55ca54123f0b5c561abd913c6b10cad5680f7c4f262",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\xv7lyxviqpkpwjpqwvvcwa.jpg",
      "size": 196428,
      "created": "2025-01-10T15:02:23.395115",
      "modified": "2025-01-14T05:39:39.614926",
      "hash": "ab281808adc0de6669aa7b3ad08c24633ebc22984df87814c6319b848139ceab",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\xv7lyxviqpkpwjpqwvvcwa.webp",
      "size": 145902,
      "created": "2025-01-10T16:10:57.349595",
      "modified": "2025-01-14T05:39:39.600894",
      "hash": "552835340130ce296b913f839009177608950f4cfea60db36c0a8cde27f8fef5",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\xv7lyxviqpkpwjpqwvvcwa_optimized.avif",
      "size": 177291,
      "created": "2025-01-14T05:39:39.801000",
      "modified": "2025-01-14T05:39:39.801000",
      "hash": "6acaa4c5b95b827a0cdf54055d97619fc1fcaa9fb7598b6a46e38a37db712339",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\xv7lyxviqpkpwjpqwvvcwa_optimized.jpg",
      "size": 196429,
      "created": "2025-01-10T16:10:57.337595",
      "modified": "2025-01-14T05:39:40.916897",
      "hash": "422052f10a29dcbc4361bec71510a252931f7dfe6428a5a8422b9495814c5bfe",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\features\\xv7lyxviqpkpwjpqwvvcwa_optimized.webp",
      "size": 145634,
      "created": "2025-01-14T05:24:40.042391",
      "modified": "2025-01-14T05:39:40.903472",
      "hash": "2d897a39a962f6fda9579f9d5ee032bfa113bc760a0940d73ba6b95feea3d8e7",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon.avif",
      "size": 1126,
      "created": "2025-01-14T05:39:41.097000",
      "modified": "2025-01-14T05:39:41.097000",
      "hash": "3df700d23e736c8f604692dbe3393e0026d18c66bf69f29db30bf2bb24d93ba5",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon.jpg",
      "size": 2309,
      "created": "2025-01-14T05:24:40.228516",
      "modified": "2025-01-14T05:39:41.164497",
      "hash": "f6d7716809b04364688581b6c45079bb46b01d844a34c6551a2f02ed54a9f7f1",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon.png",
      "size": 2285,
      "created": "2024-12-22T15:50:31.218376",
      "modified": "2025-01-10T15:46:28.087951",
      "hash": "49233c4405d73c31776cb22448975b968c7d7c25617b54fdd23e17b31e3fab71",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon.svg",
      "size": 200,
      "created": "2024-12-22T15:42:18.546411",
      "modified": "2024-12-22T15:42:18.547413",
      "hash": "120f5fe1064a3b11054a8422446b305e2adeb981dcec13807623ad7ec1e30749",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon.webp",
      "size": 864,
      "created": "2025-01-10T16:10:57.491976",
      "modified": "2025-01-14T05:39:41.162498",
      "hash": "0b05e81d21c106379858dd190aa334fed7ae8b0a8c1cf86a7de75fc1ee6b5ad2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon_optimized.avif",
      "size": 1126,
      "created": "2025-01-14T05:39:41.340000",
      "modified": "2025-01-14T05:39:41.340000",
      "hash": "3df700d23e736c8f604692dbe3393e0026d18c66bf69f29db30bf2bb24d93ba5",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon_optimized.jpg",
      "size": 2309,
      "created": "2025-01-14T05:24:40.274465",
      "modified": "2025-01-14T05:39:41.414903",
      "hash": "f6d7716809b04364688581b6c45079bb46b01d844a34c6551a2f02ed54a9f7f1",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon_optimized.png",
      "size": 2285,
      "created": "2025-01-10T16:10:57.484972",
      "modified": "2025-01-10T16:10:57.490972",
      "hash": "49233c4405d73c31776cb22448975b968c7d7c25617b54fdd23e17b31e3fab71",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\apple-touch-icon_optimized.webp",
      "size": 864,
      "created": "2025-01-14T05:24:40.269884",
      "modified": "2025-01-14T05:39:41.412907",
      "hash": "0b05e81d21c106379858dd190aa334fed7ae8b0a8c1cf86a7de75fc1ee6b5ad2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\base-icon.svg",
      "size": 201,
      "created": "2024-12-22T15:36:22.299302",
      "modified": "2024-12-22T15:36:29.071915",
      "hash": "5cde130807d85e15e321f35a8a2fa63ae142893dcb532c2efaadc39e0bd45af0",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\dojo-marker.svg",
      "size": 401,
      "created": "2025-01-11T16:32:30.783708",
      "modified": "2025-01-11T16:32:48.409718",
      "hash": "432c70a5661802ace83e2ef5e877ffc2c53fdefe5936f8a11d75f01e9302df8a",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3, 4]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16.avif",
      "size": 379,
      "created": "2025-01-14T05:39:41.602000",
      "modified": "2025-01-14T05:39:41.602000",
      "hash": "1d1e0a329725077275c1ebe02224b7949052f5f2cffafe03326e78caf15a8cea",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16.jpg",
      "size": 730,
      "created": "2025-01-14T05:24:40.283310",
      "modified": "2025-01-14T05:39:41.632958",
      "hash": "bded396bf49644a8dd444ad6a0c26fb9a26ad42cc1c3ade8eecc8e99dffa4787",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16.png",
      "size": 227,
      "created": "2024-12-22T15:50:31.198454",
      "modified": "2025-01-10T15:46:28.081944",
      "hash": "4ec3a49f2c210b91149e46bcf6174de4c8671c49ca1abadb1e55d935d062e480",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16.svg",
      "size": 193,
      "created": "2024-12-22T15:42:08.301711",
      "modified": "2024-12-22T15:42:08.301711",
      "hash": "a4b9d08a3da28e97323d1f7bc3638557335441a260ac1fec98cc03dcc2868748",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16.webp",
      "size": 136,
      "created": "2025-01-10T16:10:57.496974",
      "modified": "2025-01-14T05:39:41.631958",
      "hash": "29f705d4d615c3011ee43e3f1d72b9b050c787626ca9b47fd8555072fd7f0c20",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16_optimized.avif",
      "size": 379,
      "created": "2025-01-14T05:39:41.805000",
      "modified": "2025-01-14T05:39:41.805000",
      "hash": "1d1e0a329725077275c1ebe02224b7949052f5f2cffafe03326e78caf15a8cea",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16_optimized.jpg",
      "size": 730,
      "created": "2025-01-14T05:24:40.291309",
      "modified": "2025-01-14T05:39:41.836107",
      "hash": "bded396bf49644a8dd444ad6a0c26fb9a26ad42cc1c3ade8eecc8e99dffa4787",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16_optimized.png",
      "size": 227,
      "created": "2025-01-10T16:10:57.495976",
      "modified": "2025-01-10T16:10:57.495976",
      "hash": "4ec3a49f2c210b91149e46bcf6174de4c8671c49ca1abadb1e55d935d062e480",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-16x16_optimized.webp",
      "size": 136,
      "created": "2025-01-14T05:24:40.289310",
      "modified": "2025-01-14T05:39:41.834095",
      "hash": "29f705d4d615c3011ee43e3f1d72b9b050c787626ca9b47fd8555072fd7f0c20",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32.avif",
      "size": 491,
      "created": "2025-01-14T05:39:42.016000",
      "modified": "2025-01-14T05:39:42.016000",
      "hash": "d07d1c809cc560ae86ec5743e8c8cbd24bfee471c5716da84d002e9f50b5b40e",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32.jpg",
      "size": 790,
      "created": "2025-01-14T05:24:40.302978",
      "modified": "2025-01-14T05:39:42.048934",
      "hash": "b97ffa04a6d98c1210dcc2d5e8faa78b3507e83f3d0afe56d041d909870c5716",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32.png",
      "size": 432,
      "created": "2024-12-22T15:50:31.208921",
      "modified": "2025-01-10T15:46:28.079943",
      "hash": "ab7817d31cc7a7e83eacda29c1615d844aaa94a25b9fb61c5e7c18cd55fd1f4d",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32.svg",
      "size": 193,
      "created": "2024-12-22T15:42:13.226415",
      "modified": "2024-12-22T15:42:13.226415",
      "hash": "5fe2b96a6bfeb3b106079a9f6855e8d7f8f888046473d1c904fe2743dd7311e9",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32.webp",
      "size": 226,
      "created": "2025-01-10T16:10:57.499976",
      "modified": "2025-01-14T05:39:42.046934",
      "hash": "fc7bab759341737373cdaeea0e39071f8aee6b1e536766f10c1f6f861bbf687b",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32_optimized.avif",
      "size": 491,
      "created": "2025-01-14T05:39:42.224000",
      "modified": "2025-01-14T05:39:42.224000",
      "hash": "d07d1c809cc560ae86ec5743e8c8cbd24bfee471c5716da84d002e9f50b5b40e",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32_optimized.jpg",
      "size": 790,
      "created": "2025-01-14T05:24:40.315997",
      "modified": "2025-01-14T05:39:42.258937",
      "hash": "b97ffa04a6d98c1210dcc2d5e8faa78b3507e83f3d0afe56d041d909870c5716",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32_optimized.png",
      "size": 432,
      "created": "2025-01-10T16:10:57.498975",
      "modified": "2025-01-10T16:10:57.498975",
      "hash": "ab7817d31cc7a7e83eacda29c1615d844aaa94a25b9fb61c5e7c18cd55fd1f4d",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\favicon-32x32_optimized.webp",
      "size": 226,
      "created": "2025-01-14T05:24:40.313999",
      "modified": "2025-01-14T05:39:42.257938",
      "hash": "fc7bab759341737373cdaeea0e39071f8aee6b1e536766f10c1f6f861bbf687b",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon.avif",
      "size": 18437,
      "created": "2025-01-14T05:39:42.516000",
      "modified": "2025-01-14T05:39:42.516000",
      "hash": "68be9feb8ffbab67e3ba5add516f04e032bbfc372da79182f83cb6568c457acc",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon.jpg",
      "size": 42391,
      "created": "2025-01-14T05:24:41.260577",
      "modified": "2025-01-14T05:39:43.662554",
      "hash": "6a0c43cca187e6c3e642caccb721ffa9729bec575396f5887650f4d171bb3277",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon.png",
      "size": 738286,
      "created": "2025-01-10T15:02:23.380459",
      "modified": "2025-01-10T15:46:30.864885",
      "hash": "ea3f14d040337c345715cf0824e7312b7a536ba65f19a0c77513946eb4b1da82",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon.webp",
      "size": 14996,
      "created": "2025-01-10T16:11:00.140527",
      "modified": "2025-01-14T05:39:43.648555",
      "hash": "2203ce913e5a49964d33e63c9a1294a2651e87dc67b6556053658648104548e1",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon_optimized.avif",
      "size": 18437,
      "created": "2025-01-14T05:39:43.859000",
      "modified": "2025-01-14T05:39:43.859000",
      "hash": "68be9feb8ffbab67e3ba5add516f04e032bbfc372da79182f83cb6568c457acc",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon_optimized.jpg",
      "size": 42391,
      "created": "2025-01-14T05:24:42.231481",
      "modified": "2025-01-14T05:39:44.878701",
      "hash": "6a0c43cca187e6c3e642caccb721ffa9729bec575396f5887650f4d171bb3277",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon_optimized.png",
      "size": 738286,
      "created": "2025-01-10T16:10:57.520974",
      "modified": "2025-01-10T16:11:00.139530",
      "hash": "ea3f14d040337c345715cf0824e7312b7a536ba65f19a0c77513946eb4b1da82",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\generated-icon_optimized.webp",
      "size": 14996,
      "created": "2025-01-14T05:24:42.124520",
      "modified": "2025-01-14T05:39:44.866994",
      "hash": "2203ce913e5a49964d33e63c9a1294a2651e87dc67b6556053658648104548e1",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128.avif",
      "size": 847,
      "created": "2025-01-14T05:39:45.063000",
      "modified": "2025-01-14T05:39:45.063000",
      "hash": "d1f22c44f7258fa5301be6219ad30fe5ec82568d430ae1e67d7a9a9dfe2f06eb",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128.jpg",
      "size": 1645,
      "created": "2025-01-14T05:24:42.265460",
      "modified": "2025-01-14T05:39:45.115003",
      "hash": "17e48f296f8a26bff44c49bc1eca82471778581f0d803cefc0fa0b070d1cda36",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128.png",
      "size": 1566,
      "created": "2024-12-22T15:50:31.055892",
      "modified": "2025-01-10T15:46:28.085946",
      "hash": "bebf903d20986e721ee8cbc95576c360349f84f0a46f53fe7fdf7f33268b7231",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128.svg",
      "size": 200,
      "created": "2024-12-22T15:40:16.451014",
      "modified": "2024-12-22T15:42:24.200641",
      "hash": "d1d5c6e9e78639dc87cd1b5e23e8ff87478641395c3f0ce8b63fbe764fc0bc8d",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128.webp",
      "size": 574,
      "created": "2025-01-10T16:11:00.235021",
      "modified": "2025-01-14T05:39:45.113992",
      "hash": "9069ccfcb181772b734fca7c24b9cd19249564d60cdcdd2b24f9f2fbc70417b8",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128_optimized.avif",
      "size": 847,
      "created": "2025-01-14T05:39:45.290000",
      "modified": "2025-01-14T05:39:45.290000",
      "hash": "d1f22c44f7258fa5301be6219ad30fe5ec82568d430ae1e67d7a9a9dfe2f06eb",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128_optimized.jpg",
      "size": 1645,
      "created": "2025-01-14T05:24:42.293922",
      "modified": "2025-01-14T05:39:45.341640",
      "hash": "17e48f296f8a26bff44c49bc1eca82471778581f0d803cefc0fa0b070d1cda36",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128_optimized.png",
      "size": 1566,
      "created": "2025-01-10T16:11:00.230020",
      "modified": "2025-01-10T16:11:00.234036",
      "hash": "bebf903d20986e721ee8cbc95576c360349f84f0a46f53fe7fdf7f33268b7231",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-128x128_optimized.webp",
      "size": 574,
      "created": "2025-01-14T05:24:42.291931",
      "modified": "2025-01-14T05:39:45.339634",
      "hash": "9069ccfcb181772b734fca7c24b9cd19249564d60cdcdd2b24f9f2fbc70417b8",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144.avif",
      "size": 929,
      "created": "2025-01-14T05:39:45.524000",
      "modified": "2025-01-14T05:39:45.524000",
      "hash": "abb1ae4ddc166011ac1ec5d245f8b058baf35320e62e84d5761849ba83cb0fd4",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144.jpg",
      "size": 1784,
      "created": "2025-01-14T05:24:42.330966",
      "modified": "2025-01-14T05:39:45.583625",
      "hash": "90e6589f282e7987d746e409bf201c9f6a8507e2cf13c849028869b8634ce711",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144.png",
      "size": 1801,
      "created": "2024-12-22T15:50:31.065793",
      "modified": "2025-01-10T15:46:28.097947",
      "hash": "5337c76fae682bf3d894c712f04c0e2ed7ded946c7c7921c76b4ae8740ea0b1d",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144.svg",
      "size": 200,
      "created": "2024-12-22T15:40:09.499661",
      "modified": "2024-12-22T15:42:24.201641",
      "hash": "6ee6a45dffb04182372f4364c4a27ed7f94d03e6f6f8e37757ae4310fe516869",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144.webp",
      "size": 630,
      "created": "2025-01-10T16:11:00.242021",
      "modified": "2025-01-14T05:39:45.581625",
      "hash": "022d32d540b51d07e1017c70f7e8f0367cdbcce6267843213f40d7538a26d13a",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144_optimized.avif",
      "size": 929,
      "created": "2025-01-14T05:39:45.765000",
      "modified": "2025-01-14T05:39:45.765000",
      "hash": "abb1ae4ddc166011ac1ec5d245f8b058baf35320e62e84d5761849ba83cb0fd4",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144_optimized.jpg",
      "size": 1784,
      "created": "2025-01-14T05:24:42.365505",
      "modified": "2025-01-14T05:39:45.825089",
      "hash": "90e6589f282e7987d746e409bf201c9f6a8507e2cf13c849028869b8634ce711",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144_optimized.png",
      "size": 1801,
      "created": "2025-01-10T16:11:00.238022",
      "modified": "2025-01-10T16:11:00.242021",
      "hash": "5337c76fae682bf3d894c712f04c0e2ed7ded946c7c7921c76b4ae8740ea0b1d",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-144x144_optimized.webp",
      "size": 630,
      "created": "2025-01-14T05:24:42.362506",
      "modified": "2025-01-14T05:39:45.824077",
      "hash": "022d32d540b51d07e1017c70f7e8f0367cdbcce6267843213f40d7538a26d13a",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152.avif",
      "size": 985,
      "created": "2025-01-14T05:39:46.013000",
      "modified": "2025-01-14T05:39:46.013000",
      "hash": "40f3ea9b8585f38ab736980c1ad9ba069806e9b7c583250fc56a6f4964c2c40f",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152.jpg",
      "size": 1871,
      "created": "2025-01-14T05:24:42.402205",
      "modified": "2025-01-14T05:39:46.076023",
      "hash": "ab1c206d86333a2fa39ccfd2242df7373b4ed428ef37dd191103a7021361c50a",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152.png",
      "size": 1864,
      "created": "2024-12-22T15:50:31.076582",
      "modified": "2025-01-10T15:46:28.086945",
      "hash": "e7a3ad95e317a4d7af25822540def9c9b130469b89772da251ff4758e2779f3b",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152.svg",
      "size": 200,
      "created": "2024-12-22T15:40:03.320562",
      "modified": "2024-12-22T15:42:24.202640",
      "hash": "45f7fd71abe6709a22e346c9ba5f0a0051433e8fff41169aef18bfc88ff727d7",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152.webp",
      "size": 728,
      "created": "2025-01-10T16:11:00.250023",
      "modified": "2025-01-14T05:39:46.074760",
      "hash": "23f13b899b15f2eab47baec70f6732b5236d6a8ef8ff38b78cda39455b400bd5",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152_optimized.avif",
      "size": 985,
      "created": "2025-01-14T05:39:46.256000",
      "modified": "2025-01-14T05:39:46.256000",
      "hash": "40f3ea9b8585f38ab736980c1ad9ba069806e9b7c583250fc56a6f4964c2c40f",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152_optimized.jpg",
      "size": 1871,
      "created": "2025-01-14T05:24:42.445630",
      "modified": "2025-01-14T05:39:46.312643",
      "hash": "ab1c206d86333a2fa39ccfd2242df7373b4ed428ef37dd191103a7021361c50a",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152_optimized.png",
      "size": 1864,
      "created": "2025-01-10T16:11:00.245025",
      "modified": "2025-01-10T16:11:00.250023",
      "hash": "e7a3ad95e317a4d7af25822540def9c9b130469b89772da251ff4758e2779f3b",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-152x152_optimized.webp",
      "size": 728,
      "created": "2025-01-14T05:24:42.442629",
      "modified": "2025-01-14T05:39:46.310643",
      "hash": "23f13b899b15f2eab47baec70f6732b5236d6a8ef8ff38b78cda39455b400bd5",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192.avif",
      "size": 1095,
      "created": "2025-01-14T05:39:46.492000",
      "modified": "2025-01-14T05:39:46.492000",
      "hash": "73dcf12bfb981866605d56974ff2b119d662e84be9a401fef74550f72ab52370",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192.jpg",
      "size": 2315,
      "created": "2025-01-14T05:24:42.487714",
      "modified": "2025-01-14T05:39:46.569031",
      "hash": "4d9f416553986ff652e5c06a18994fed25936130b62075dbd012e2143a75850c",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192.png",
      "size": 2438,
      "created": "2024-12-22T15:50:31.088282",
      "modified": "2025-01-10T15:46:28.102947",
      "hash": "4d3aa83683d15229de6ae7212b6cb5ea2c80fae1ef4a1772540abe6b4e856485",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192.svg",
      "size": 200,
      "created": "2024-12-22T15:39:54.375501",
      "modified": "2024-12-22T15:42:24.203643",
      "hash": "7180f39fedfe6a60ea1a8080ecffe81d5ff46cc7667e64931e9405d0f3e08a44",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192.webp",
      "size": 854,
      "created": "2025-01-10T16:11:00.260021",
      "modified": "2025-01-14T05:39:46.567029",
      "hash": "d92e9158ed9ace70f3bfafa275ce8043b8192d828374aed6b4a2adbf1e3cd416",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192_optimized.avif",
      "size": 1095,
      "created": "2025-01-14T05:39:46.745000",
      "modified": "2025-01-14T05:39:46.745000",
      "hash": "73dcf12bfb981866605d56974ff2b119d662e84be9a401fef74550f72ab52370",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192_optimized.jpg",
      "size": 2315,
      "created": "2025-01-14T05:24:42.531243",
      "modified": "2025-01-14T05:39:46.815740",
      "hash": "4d9f416553986ff652e5c06a18994fed25936130b62075dbd012e2143a75850c",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192_optimized.png",
      "size": 2438,
      "created": "2025-01-10T16:11:00.254023",
      "modified": "2025-01-10T16:11:00.260021",
      "hash": "4d3aa83683d15229de6ae7212b6cb5ea2c80fae1ef4a1772540abe6b4e856485",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-192x192_optimized.webp",
      "size": 854,
      "created": "2025-01-14T05:24:42.526543",
      "modified": "2025-01-14T05:39:46.813040",
      "hash": "d92e9158ed9ace70f3bfafa275ce8043b8192d828374aed6b4a2adbf1e3cd416",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384.avif",
      "size": 1861,
      "created": "2025-01-14T05:39:46.995000",
      "modified": "2025-01-14T05:39:46.995000",
      "hash": "350d06f3d43361205f1b48ddfd99591067eae8fb7d7b10bbc4bf714bc89726da",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384.jpg",
      "size": 5219,
      "created": "2025-01-14T05:24:42.620931",
      "modified": "2025-01-14T05:39:47.108358",
      "hash": "2e1b9399a4ef9393e4118baafe7ff2d5bb44b0c745526816896c659755af60dd",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384.png",
      "size": 5125,
      "created": "2024-12-22T15:50:31.101632",
      "modified": "2025-01-10T15:46:28.106947",
      "hash": "2ff6c6b6b4e2a9ed9f0cf25dcaace4c4be48b3194e430a62c8acfde7e4527075",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384.svg",
      "size": 200,
      "created": "2024-12-22T15:39:58.822512",
      "modified": "2024-12-22T15:42:24.204643",
      "hash": "d5aa24223465d9fa50a83ec642b31049a0f07b0e689898c5d78ab6b2b89c0577",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384.webp",
      "size": 1770,
      "created": "2025-01-10T16:11:00.283024",
      "modified": "2025-01-14T05:39:47.105356",
      "hash": "69821eef7c0f78c6167e646314902d21e50e63252b93467f55eb23d0a09ae76c",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384_optimized.avif",
      "size": 1861,
      "created": "2025-01-14T05:39:47.290000",
      "modified": "2025-01-14T05:39:47.290000",
      "hash": "350d06f3d43361205f1b48ddfd99591067eae8fb7d7b10bbc4bf714bc89726da",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384_optimized.jpg",
      "size": 5219,
      "created": "2025-01-14T05:24:42.710898",
      "modified": "2025-01-14T05:39:47.413043",
      "hash": "2e1b9399a4ef9393e4118baafe7ff2d5bb44b0c745526816896c659755af60dd",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384_optimized.png",
      "size": 5125,
      "created": "2025-01-10T16:11:00.266023",
      "modified": "2025-01-10T16:11:00.282022",
      "hash": "2ff6c6b6b4e2a9ed9f0cf25dcaace4c4be48b3194e430a62c8acfde7e4527075",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-384x384_optimized.webp",
      "size": 1770,
      "created": "2025-01-14T05:24:42.700334",
      "modified": "2025-01-14T05:39:47.410043",
      "hash": "69821eef7c0f78c6167e646314902d21e50e63252b93467f55eb23d0a09ae76c",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512.avif",
      "size": 2245,
      "created": "2025-01-14T05:39:47.605000",
      "modified": "2025-01-14T05:39:47.605000",
      "hash": "8da564836068bc887123a70576368f328057df8b1c444e12debf8a8c5f972e0f",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512.jpg",
      "size": 7756,
      "created": "2025-01-14T05:24:42.857986",
      "modified": "2025-01-14T05:39:47.784098",
      "hash": "544289f685d05dcb5e21628773c4d888dbcbd8102af1bd132c8eefb003b5a9c1",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512.png",
      "size": 7040,
      "created": "2024-12-22T15:50:31.114640",
      "modified": "2025-01-10T15:46:28.122946",
      "hash": "896dc3452cb8d51379286d8050e123991bcf0201c2d937925b112a6ce3d66d26",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512.svg",
      "size": 201,
      "created": "2024-12-22T15:39:25.903650",
      "modified": "2024-12-22T15:42:24.206381",
      "hash": "c94438e220c1bdeca6f7f7a1ac2c4c4fdff97af5d4180a2ee59380d93b16273c",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512.webp",
      "size": 2396,
      "created": "2025-01-10T16:11:00.320022",
      "modified": "2025-01-14T05:39:47.777096",
      "hash": "01dcbcad5b0ff03030367dfc25701acbd587a42cda1b7aa08982faa4630b425c",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512_optimized.avif",
      "size": 2245,
      "created": "2025-01-14T05:39:47.984000",
      "modified": "2025-01-14T05:39:47.984000",
      "hash": "8da564836068bc887123a70576368f328057df8b1c444e12debf8a8c5f972e0f",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512_optimized.jpg",
      "size": 7756,
      "created": "2025-01-14T05:24:43.003903",
      "modified": "2025-01-14T05:39:48.182089",
      "hash": "544289f685d05dcb5e21628773c4d888dbcbd8102af1bd132c8eefb003b5a9c1",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512_optimized.png",
      "size": 7040,
      "created": "2025-01-10T16:11:00.297019",
      "modified": "2025-01-10T16:11:00.319021",
      "hash": "896dc3452cb8d51379286d8050e123991bcf0201c2d937925b112a6ce3d66d26",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-512x512_optimized.webp",
      "size": 2396,
      "created": "2025-01-14T05:24:42.982204",
      "modified": "2025-01-14T05:39:48.176088",
      "hash": "01dcbcad5b0ff03030367dfc25701acbd587a42cda1b7aa08982faa4630b425c",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72.avif",
      "size": 652,
      "created": "2025-01-14T05:39:48.391000",
      "modified": "2025-01-14T05:39:48.391000",
      "hash": "984818a23f7f934b8219837c7271620ddb55f6c777acd3e4c27d00c5da96d6da",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72.jpg",
      "size": 1135,
      "created": "2025-01-14T05:24:43.027607",
      "modified": "2025-01-14T05:39:48.435003",
      "hash": "b3299c84d9f4d9f41f6743c05ae764394d31b308890f77dee579e33adb6089df",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72.png",
      "size": 889,
      "created": "2024-12-22T15:50:31.034892",
      "modified": "2025-01-10T15:46:28.092949",
      "hash": "5896692c2adbb48a45105920535b3c6c5b21b374d06d8044c8f8c6a139f851d3",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72.svg",
      "size": 194,
      "created": "2024-12-22T15:40:26.339361",
      "modified": "2024-12-22T15:42:24.198642",
      "hash": "8613402555357002666792f4184e20e50919abc1a85cb244b36c98a334ebbbaf",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72.webp",
      "size": 396,
      "created": "2025-01-10T16:11:00.341021",
      "modified": "2025-01-14T05:39:48.433085",
      "hash": "ae8b7afb3d1633fa3840a36b244daf8218d098a666f225d0f7bff988d03f6bf2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72_optimized.avif",
      "size": 652,
      "created": "2025-01-14T05:39:48.611000",
      "modified": "2025-01-14T05:39:48.611000",
      "hash": "984818a23f7f934b8219837c7271620ddb55f6c777acd3e4c27d00c5da96d6da",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72_optimized.jpg",
      "size": 1135,
      "created": "2025-01-14T05:24:43.046919",
      "modified": "2025-01-14T05:39:48.656092",
      "hash": "b3299c84d9f4d9f41f6743c05ae764394d31b308890f77dee579e33adb6089df",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72_optimized.png",
      "size": 889,
      "created": "2025-01-10T16:11:00.339023",
      "modified": "2025-01-10T16:11:00.341021",
      "hash": "5896692c2adbb48a45105920535b3c6c5b21b374d06d8044c8f8c6a139f851d3",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-72x72_optimized.webp",
      "size": 396,
      "created": "2025-01-14T05:24:43.045920",
      "modified": "2025-01-14T05:39:48.655093",
      "hash": "ae8b7afb3d1633fa3840a36b244daf8218d098a666f225d0f7bff988d03f6bf2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96.avif",
      "size": 756,
      "created": "2025-01-14T05:39:48.840000",
      "modified": "2025-01-14T05:39:48.840000",
      "hash": "67430a0997d7b48d86b40438b0acd054a25cd755b1e9fd573e853747b3eabaaa",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96.jpg",
      "size": 1290,
      "created": "2025-01-14T05:24:43.074683",
      "modified": "2025-01-14T05:39:48.892105",
      "hash": "90009b4f26d47659b2ff72ca811caf1ba56ec469978d2c266062cd4543d63859",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96.png",
      "size": 1196,
      "created": "2024-12-22T15:50:31.043793",
      "modified": "2025-01-10T15:46:28.098953",
      "hash": "14943707c81aedc98721c841d3ecaf2feea486143b02084c9b37a674921b0160",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96.svg",
      "size": 194,
      "created": "2024-12-22T15:40:22.075352",
      "modified": "2024-12-22T15:42:24.199642",
      "hash": "b55b975154864b94778255d679255b19c5960b77caf29cb062b9676e38cfc2ba",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96.webp",
      "size": 442,
      "created": "2025-01-10T16:11:00.349021",
      "modified": "2025-01-14T05:39:48.890106",
      "hash": "8231200645654f6df1efb3a5d9f90b4b0c92114ab1259c08880227035dac07ef",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96_optimized.avif",
      "size": 756,
      "created": "2025-01-14T05:39:49.074000",
      "modified": "2025-01-14T05:39:49.074000",
      "hash": "67430a0997d7b48d86b40438b0acd054a25cd755b1e9fd573e853747b3eabaaa",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96_optimized.jpg",
      "size": 1290,
      "created": "2025-01-14T05:24:43.099701",
      "modified": "2025-01-14T05:39:49.123091",
      "hash": "90009b4f26d47659b2ff72ca811caf1ba56ec469978d2c266062cd4543d63859",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96_optimized.png",
      "size": 1196,
      "created": "2025-01-10T16:11:00.345025",
      "modified": "2025-01-10T16:11:00.349021",
      "hash": "14943707c81aedc98721c841d3ecaf2feea486143b02084c9b37a674921b0160",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\icon-96x96_optimized.webp",
      "size": 442,
      "created": "2025-01-14T05:24:43.097703",
      "modified": "2025-01-14T05:39:49.122091",
      "hash": "8231200645654f6df1efb3a5d9f90b4b0c92114ab1259c08880227035dac07ef",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150.avif",
      "size": 884,
      "created": "2025-01-14T05:39:49.321000",
      "modified": "2025-01-14T05:39:49.321000",
      "hash": "6b5fb8d22ec6466aa3d98fb10864e9c20caeef30ff9be2909c827f5e0eebc39c",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150.jpg",
      "size": 1773,
      "created": "2025-01-14T05:24:43.133953",
      "modified": "2025-01-14T05:39:49.382159",
      "hash": "a297fbcb0d776439a904f2d2b0261978bc65d99578f29d790b36bed3b2ed4de0",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150.png",
      "size": 1617,
      "created": "2024-12-22T15:50:31.152805",
      "modified": "2025-01-10T15:46:28.099945",
      "hash": "16dc5b105e660d480e7ab02013379b5f8c467822d306f28a7a0455b166d0c108",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150.svg",
      "size": 200,
      "created": "2024-12-22T15:41:55.849368",
      "modified": "2024-12-22T15:41:55.850367",
      "hash": "17e338ce9536a6a2fcdbc247e6f9ed77586d6dc9c7da8da11e42e03599eface6",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150.webp",
      "size": 644,
      "created": "2025-01-10T16:11:00.357023",
      "modified": "2025-01-14T05:39:49.381158",
      "hash": "923567863305e38ddc665add58c093cdb856cda2a9d66990afa84096c888407f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150_optimized.avif",
      "size": 884,
      "created": "2025-01-14T05:39:49.567000",
      "modified": "2025-01-14T05:39:49.567000",
      "hash": "6b5fb8d22ec6466aa3d98fb10864e9c20caeef30ff9be2909c827f5e0eebc39c",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150_optimized.jpg",
      "size": 1773,
      "created": "2025-01-14T05:24:43.164923",
      "modified": "2025-01-14T05:39:49.628504",
      "hash": "a297fbcb0d776439a904f2d2b0261978bc65d99578f29d790b36bed3b2ed4de0",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150_optimized.png",
      "size": 1617,
      "created": "2025-01-10T16:11:00.353028",
      "modified": "2025-01-10T16:11:00.357023",
      "hash": "16dc5b105e660d480e7ab02013379b5f8c467822d306f28a7a0455b166d0c108",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-150x150_optimized.webp",
      "size": 644,
      "created": "2025-01-14T05:24:43.161957",
      "modified": "2025-01-14T05:39:49.626506",
      "hash": "923567863305e38ddc665add58c093cdb856cda2a9d66990afa84096c888407f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150.avif",
      "size": 860,
      "created": "2025-01-14T05:39:49.822000",
      "modified": "2025-01-14T05:39:49.822000",
      "hash": "9464c6fd9558e257aa2c8dd69d3d9c814a36fd3fed66dd850f9053a3ffdc2263",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150.jpg",
      "size": 2173,
      "created": "2025-01-14T05:24:43.203899",
      "modified": "2025-01-14T05:39:49.890869",
      "hash": "a700580d4eeb7eaf95fe337095c429bdc5c7c071976ab6ca348a96e88c6c5ede",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150.png",
      "size": 1749,
      "created": "2024-12-22T15:50:31.185341",
      "modified": "2025-01-10T15:46:28.102947",
      "hash": "0fe31c706b6d5524d93ee12fe16a45ee16b1fc3efaeec3885550bcb924ef3ac8",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150.svg",
      "size": 200,
      "created": "2024-12-22T15:42:04.131379",
      "modified": "2024-12-22T15:42:04.132379",
      "hash": "a6fc2032eafc83380dde920893b093a12ebd45cf7d8228c674abe0e47c759b74",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150.webp",
      "size": 692,
      "created": "2025-01-10T16:11:00.366023",
      "modified": "2025-01-14T05:39:49.887865",
      "hash": "6ba1366ef4d4aaa0af4ccc483d2614fcccdc495b2410897850b20a1c37ccf5c2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150_optimized.avif",
      "size": 860,
      "created": "2025-01-14T05:39:50.087000",
      "modified": "2025-01-14T05:39:50.087000",
      "hash": "9464c6fd9558e257aa2c8dd69d3d9c814a36fd3fed66dd850f9053a3ffdc2263",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150_optimized.jpg",
      "size": 2173,
      "created": "2025-01-14T05:24:43.242985",
      "modified": "2025-01-14T05:39:50.154109",
      "hash": "a700580d4eeb7eaf95fe337095c429bdc5c7c071976ab6ca348a96e88c6c5ede",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150_optimized.png",
      "size": 1749,
      "created": "2025-01-10T16:11:00.361025",
      "modified": "2025-01-10T16:11:00.366023",
      "hash": "0fe31c706b6d5524d93ee12fe16a45ee16b1fc3efaeec3885550bcb924ef3ac8",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x150_optimized.webp",
      "size": 692,
      "created": "2025-01-14T05:24:43.236780",
      "modified": "2025-01-14T05:39:50.152108",
      "hash": "6ba1366ef4d4aaa0af4ccc483d2614fcccdc495b2410897850b20a1c37ccf5c2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310.avif",
      "size": 1331,
      "created": "2025-01-14T05:39:50.351000",
      "modified": "2025-01-14T05:39:50.351000",
      "hash": "fad5360affff7560fc1d73cbd195b45c46ca671a7a296b26e0329f46a79712f3",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310.jpg",
      "size": 3779,
      "created": "2025-01-14T05:24:43.308973",
      "modified": "2025-01-14T05:39:50.440701",
      "hash": "f26ad0f3f341e7644095cfb8429d8baad3e383fe00b4afed7c7a401cdd5dd296",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310.png",
      "size": 3433,
      "created": "2024-12-22T15:50:31.165730",
      "modified": "2025-01-10T15:46:28.107945",
      "hash": "1e9fafc3beca503deb86039101aee5c2723a34c067c3d8184dde18f66d2cd77b",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310.svg",
      "size": 200,
      "created": "2024-12-22T15:41:59.910780",
      "modified": "2024-12-22T15:41:59.910780",
      "hash": "79aa3a6249a5a0ceccfaed722715717af486f0ed81033127d3232da7ef3debe5",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310.webp",
      "size": 1256,
      "created": "2025-01-10T16:11:00.382018",
      "modified": "2025-01-14T05:39:50.438701",
      "hash": "fbf8586ed279ed6e36ad36fb3588cddf2731163438b107625527f09d78d3891e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310_optimized.avif",
      "size": 1331,
      "created": "2025-01-14T05:39:50.625000",
      "modified": "2025-01-14T05:39:50.625000",
      "hash": "fad5360affff7560fc1d73cbd195b45c46ca671a7a296b26e0329f46a79712f3",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310_optimized.jpg",
      "size": 3779,
      "created": "2025-01-14T05:24:43.377146",
      "modified": "2025-01-14T05:39:50.721039",
      "hash": "f26ad0f3f341e7644095cfb8429d8baad3e383fe00b4afed7c7a401cdd5dd296",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310_optimized.png",
      "size": 3433,
      "created": "2025-01-10T16:11:00.373021",
      "modified": "2025-01-10T16:11:00.382018",
      "hash": "1e9fafc3beca503deb86039101aee5c2723a34c067c3d8184dde18f66d2cd77b",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-310x310_optimized.webp",
      "size": 1256,
      "created": "2025-01-14T05:24:43.368147",
      "modified": "2025-01-14T05:39:50.718037",
      "hash": "fbf8586ed279ed6e36ad36fb3588cddf2731163438b107625527f09d78d3891e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70.avif",
      "size": 646,
      "created": "2025-01-14T05:39:50.913000",
      "modified": "2025-01-14T05:39:50.913000",
      "hash": "376c2aeeeecc029d9c0c149f027008ed5549bba7d5f58b19c9fa12b172b1dbb2",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70.jpg",
      "size": 1112,
      "created": "2025-01-14T05:24:43.397535",
      "modified": "2025-01-14T05:39:50.957121",
      "hash": "4951e0407a57da11456b20e335833336def1e9c1fa41b3d7fe15875c1d6d8526",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70.png",
      "size": 809,
      "created": "2024-12-22T15:50:31.142320",
      "modified": "2025-01-10T15:46:28.099945",
      "hash": "62b73cf3e692318ae0f677945e02883f749d8f922d3f1b1ec720c5bb9cbac82f",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70.svg",
      "size": 194,
      "created": "2024-12-22T15:41:51.137143",
      "modified": "2024-12-22T15:41:51.137143",
      "hash": "d0f7a8db8f2c64d7f3b153ffe99d5c15ad14d826636ca895646163f428da1f45",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70.webp",
      "size": 360,
      "created": "2025-01-10T16:11:00.392637",
      "modified": "2025-01-14T05:39:50.956111",
      "hash": "d3c35125a52e3ba4693f1f72c576fe0b008622a3f34cd2c3a0a7ba7c7f62f111",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70_optimized.avif",
      "size": 646,
      "created": "2025-01-14T05:39:51.147000",
      "modified": "2025-01-14T05:39:51.147000",
      "hash": "376c2aeeeecc029d9c0c149f027008ed5549bba7d5f58b19c9fa12b172b1dbb2",
      "extension": ".avif",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70_optimized.jpg",
      "size": 1112,
      "created": "2025-01-14T05:24:43.418701",
      "modified": "2025-01-14T05:39:51.193138",
      "hash": "4951e0407a57da11456b20e335833336def1e9c1fa41b3d7fe15875c1d6d8526",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70_optimized.png",
      "size": 809,
      "created": "2025-01-10T16:11:00.390624",
      "modified": "2025-01-10T16:11:00.392637",
      "hash": "62b73cf3e692318ae0f677945e02883f749d8f922d3f1b1ec720c5bb9cbac82f",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\mstile-70x70_optimized.webp",
      "size": 360,
      "created": "2025-01-14T05:24:43.416703",
      "modified": "2025-01-14T05:39:51.192138",
      "hash": "d3c35125a52e3ba4693f1f72c576fe0b008622a3f34cd2c3a0a7ba7c7f62f111",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\icons\\offline-icon.svg",
      "size": 2107,
      "created": "2025-01-10T15:02:23.378458",
      "modified": "2024-12-22T16:42:24.146341",
      "hash": "0eba4f27a73880e5f32cbfab6574394f698d839f4e552daaeb40240dd885e176",
      "extension": ".svg",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [9, 11, 13, 23, 27]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\7ud8ui47tukn3c41qcpg5q.webp",
      "size": 181312,
      "created": "2025-01-10T15:46:26.409127",
      "modified": "2025-01-10T15:46:26.539393",
      "hash": "bf225d0e576d08152959cfc0f3ec63ce6e2f871258e0e7f201e884beaae6273f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\apple-touch-icon.webp",
      "size": 898,
      "created": "2025-01-10T15:46:30.876885",
      "modified": "2025-01-10T15:46:30.879884",
      "hash": "85902c8bf683e40952507a7186f1dc04106d17e5ef7d941a62428f560b15973b",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\cig5yiwosk6dx0asskjmaq.webp",
      "size": 177894,
      "created": "2025-01-10T15:46:26.556116",
      "modified": "2025-01-10T15:46:26.688766",
      "hash": "c25925c78d1c748e99bddcb8da8e945d81ce172be891433d78160cd09432c704",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\eouo4ouht3skcfcy2j_w2g.webp",
      "size": 216368,
      "created": "2025-01-10T15:46:26.705766",
      "modified": "2025-01-10T15:46:26.853115",
      "hash": "bed0fcad77929bff034474d1d870c9217f6f487e38f77d6a555c6168d9daabe2",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\favicon-16x16.webp",
      "size": 122,
      "created": "2025-01-10T15:46:30.887885",
      "modified": "2025-01-10T15:46:30.887885",
      "hash": "1896a4deb402b6c6216a21f5b15179c41f7f100481a17f8c2fe7c7427c489e7e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\favicon-32x32.webp",
      "size": 232,
      "created": "2025-01-10T15:46:30.898886",
      "modified": "2025-01-10T15:46:30.898886",
      "hash": "47e3c0c5d850a1622d7688e4aceda7d73bc0dc00be4a9e996cbabde2dc2e942e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\generated-icon.webp",
      "size": 18094,
      "created": "2025-01-10T15:46:30.926884",
      "modified": "2025-01-10T15:46:31.015092",
      "hash": "2f9f8da9c01b0a676f2c2579276f1840c94afc41a2611ca79560cd06345984ea",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\hero-vs.webp",
      "size": 200370,
      "created": "2025-01-10T15:46:26.204473",
      "modified": "2025-01-10T15:46:26.336471",
      "hash": "41322bd06e57d75ae93c566362cf55584036ffc8856afb86cced2ffaa9867c5d",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-128x128.webp",
      "size": 586,
      "created": "2025-01-10T15:46:31.024097",
      "modified": "2025-01-10T15:46:31.026096",
      "hash": "d0a334865935f45517891906bde211554c16d0e16f48789022ae3d61e9364a7e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-144x144.webp",
      "size": 674,
      "created": "2025-01-10T15:46:31.035096",
      "modified": "2025-01-10T15:46:31.037097",
      "hash": "d2e198e2cd73b2f819b4520b9023fb005a3fa53fe714395a6f1963088f651eb7",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-152x152.webp",
      "size": 758,
      "created": "2025-01-10T15:46:31.045089",
      "modified": "2025-01-10T15:46:31.047089",
      "hash": "e42485f641a411ca63e7e96e54ae8bfab635f2197f29a8cbbd21f3cf2c10cd16",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-192x192.webp",
      "size": 892,
      "created": "2025-01-10T15:46:31.057090",
      "modified": "2025-01-10T15:46:31.059090",
      "hash": "01310cdf3cd552a36e9f6723c7bc29701b5a69501a7887f958dddf80c3a50934",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-384x384.webp",
      "size": 1812,
      "created": "2025-01-10T15:46:31.071094",
      "modified": "2025-01-10T15:46:31.081094",
      "hash": "629d661de72f1a46b2dbbe449f465a5d9dca0039b1c0ebab6ccdac40e0e4c560",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-512x512.webp",
      "size": 2512,
      "created": "2025-01-10T15:46:31.093092",
      "modified": "2025-01-10T15:46:31.111096",
      "hash": "b2766af9bc4e4d657a7c52d77482554fe5a0d21046ade06d325c99303b52e0b9",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-72x72.webp",
      "size": 408,
      "created": "2025-01-10T15:46:31.121096",
      "modified": "2025-01-10T15:46:31.122091",
      "hash": "d2bbec675cf588e17312143dea3e01ba131221683d32f64878f31e8de25cc79c",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\icon-96x96.webp",
      "size": 452,
      "created": "2025-01-10T15:46:31.132107",
      "modified": "2025-01-10T15:46:31.134091",
      "hash": "692c26f95dae7b119c2014426e132b610769358c8db809272af1d532a6adb862",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\LogoDojoPool.webp",
      "size": 64378,
      "created": "2025-01-10T15:46:25.925350",
      "modified": "2025-01-10T15:46:26.011851",
      "hash": "8c7a94216c52d22f8dc8dd951a3696885142325806bf9f50b6d6901ed7fc9a51",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\mstile-150x150.webp",
      "size": 670,
      "created": "2025-01-10T15:46:31.144092",
      "modified": "2025-01-10T15:46:31.147091",
      "hash": "16d5f60f346327ce658593eabe3e1cb3364473002a2bd62434bfef13c034a1c6",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\mstile-310x150.webp",
      "size": 716,
      "created": "2025-01-10T15:46:31.158091",
      "modified": "2025-01-10T15:46:31.162090",
      "hash": "e1dfbb945893e40266a3f1d9af144b178cb7bd4fe1b48b66d13b113d7182ebfb",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\mstile-310x310.webp",
      "size": 1330,
      "created": "2025-01-10T15:46:31.174092",
      "modified": "2025-01-10T15:46:31.180089",
      "hash": "945c7ddd8406b7af29b2c14e4fd443f71530a11912ce77b2eaff0130ebbe730a",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\mstile-70x70.webp",
      "size": 368,
      "created": "2025-01-10T15:46:31.190092",
      "modified": "2025-01-10T15:46:31.191089",
      "hash": "16a6f80a05b680a5d4feaf6113ef57e01909deb42cf3928e0bba83a354dc3f6e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\o56zyuldqairfff7b5rigg.webp",
      "size": 150976,
      "created": "2025-01-10T15:46:26.869112",
      "modified": "2025-01-10T15:46:27.006628",
      "hash": "4d58d983726809e42c51b76155abb6b6716cf0c23ef4aa4193774695bb3c0ee1",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\oig2.vbk.webp",
      "size": 77394,
      "created": "2025-01-10T15:46:27.135701",
      "modified": "2025-01-10T15:46:27.247908",
      "hash": "3b8bff09f3a123f273bf31820a3ae63bca9763988f8f6b378442f08c80d28748",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\oig2.webp",
      "size": 50472,
      "created": "2025-01-10T15:46:27.025628",
      "modified": "2025-01-10T15:46:27.118700",
      "hash": "23671096df7a3b125366891c8ece7ad74735220c97e3ab6334cec6ee8f26408d",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\oig3.qo3.6mtq1zxb.webp",
      "size": 203132,
      "created": "2025-01-10T15:46:27.267913",
      "modified": "2025-01-10T15:46:27.438484",
      "hash": "77cc14107ad449300cd5fdf876ef39d6df22f12c2469e5d9e728ccc81ff5bd6b",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\oii9klnsrh6tmmfe6upiuq.webp",
      "size": 140332,
      "created": "2025-01-10T15:46:27.466482",
      "modified": "2025-01-10T15:46:27.647528",
      "hash": "76cc6f4f6d6ae41cb90b7f47397a982c91c5b0848e0cf3178304a0672e441ae3",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\PosterDojoPool.webp",
      "size": 147832,
      "created": "2025-01-10T15:46:26.028850",
      "modified": "2025-01-10T15:46:26.151520",
      "hash": "a9ad14a77445177c05ddcc5691a13f1012a818ec1d6d1bbefacb323cdd71f2db",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\q4vo8r4otruixcez12kora.webp",
      "size": 113372,
      "created": "2025-01-10T15:46:27.674527",
      "modified": "2025-01-10T15:46:27.852909",
      "hash": "f6d2726e1526cb516fce52fd1daab2ee4dfd97f64f7500c910c8c9cb78f6ebff",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\images\\webp\\xv7lyxviqpkpwjpqwvvcwa.webp",
      "size": 165870,
      "created": "2025-01-10T15:46:27.880906",
      "modified": "2025-01-10T15:46:28.056943",
      "hash": "01e9f53080f1a9892c626ec7a50df9d480b4aca759610f20e2ebc3c4faa0034f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\api\\client.ts",
      "size": 4988,
      "created": "2024-12-21T03:25:40.647440",
      "modified": "2025-01-10T05:54:20.842149",
      "hash": "47d2700e2dfdbb804c9999dbcb631647e0666a8588a84bd39b34146dfacfc0c4",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\api\\socket.ts",
      "size": 4387,
      "created": "2024-12-21T03:26:08.177532",
      "modified": "2025-01-10T05:54:20.869141",
      "hash": "81a57c37cae3aa6d8b9b33dc5fc4981a104370fa62d18304780f19d17c106c9e",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["an", "error"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components\\notification.js",
      "size": 4529,
      "created": "2024-12-23T03:31:13.763819",
      "modified": "2025-01-10T05:54:20.965115",
      "hash": "87edf832e6d32cbd72301e4cb14af9efa7324881ef99e23f2b11743371943958",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components\\rating.js",
      "size": 8734,
      "created": "2024-12-18T05:00:58.105185",
      "modified": "2025-01-10T05:54:21.004117",
      "hash": "53d9690d656d65486254b74102f86c9ac4bcecac58fa553b46c54a233d9ac1fd",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [49, 178, 205, 226, 231, 239]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components\\review.js",
      "size": 10749,
      "created": "2024-12-18T05:35:03.460880",
      "modified": "2025-01-10T05:54:21.032705",
      "hash": "efec209717a7ba36d56e8f69274c74cffaa3f6bd378947dc5ab27e7bb2251b19",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [31, 76, 77, 306]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components\\share_button.js",
      "size": 3989,
      "created": "2024-12-18T04:48:45.317042",
      "modified": "2025-01-10T05:54:21.044430",
      "hash": "14cd1fe12a13eb3234412472ec68649c42bdfbff8149d34856df9106327a697d",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [45, 48, 51, 54]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components\\ThemeToggle.js",
      "size": 2532,
      "created": "2024-12-21T03:49:08.100742",
      "modified": "2025-01-10T05:54:21.053298",
      "hash": "00b96f262b6f89161b6f0262a741bf0f5e427736dbaf814ad28edaf45e3b5288",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [55, 72]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\components\\VenueInfoWindow.js",
      "size": 6536,
      "created": "2025-01-14T16:24:29.202626",
      "modified": "2025-01-14T16:24:34.300126",
      "hash": "4bd834b3d7a5d64fdaae96dc567d7bc34bb11d9d8bfb74cb499db9651ac30645",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [154, 158, 175]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\store\\store.ts",
      "size": 4175,
      "created": "2024-12-21T03:26:32.113037",
      "modified": "2025-01-10T05:54:21.397933",
      "hash": "a386aa8150ae549e403db22fad30caf3cc453119057bfa0ae756045f0da78e3e",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\js\\utils\\ui.ts",
      "size": 5471,
      "created": "2024-12-21T03:26:59.665117",
      "modified": "2025-01-10T05:54:21.531653",
      "hash": "dc5ccb1753f69665be0cd9a73bf2b87c77706d213ab0e628064309e2251a4290",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\abstracts\\_mixins.scss",
      "size": 5306,
      "created": "2024-12-21T03:30:21.241524",
      "modified": "2025-01-10T05:54:21.609249",
      "hash": "d763f23d0b1b6635acf1fc4183681ff7dc4d581a8803ebeeb6e4c5f9f31329b2",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [10, 38]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\abstracts\\_variables.scss",
      "size": 3956,
      "created": "2024-12-21T03:29:52.146846",
      "modified": "2025-01-10T05:54:21.636590",
      "hash": "6c2e71d60f4e17f160d768f0c5542967a750a21ef2623edc53c5768be546427d",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\base\\_accessibility.scss",
      "size": 3775,
      "created": "2024-12-21T10:33:15.818232",
      "modified": "2025-01-10T05:54:21.658590",
      "hash": "ebc344855b15a8900554cf44bb3f1bef1db56a1cbaa95ec0334766d46b3246e4",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\base\\_aria-patterns.scss",
      "size": 5502,
      "created": "2024-12-21T10:35:22.466550",
      "modified": "2025-01-10T05:54:21.685592",
      "hash": "3ce6eaa1da3dac07fc7295262b2a89f660a45ed5943c8bcf036597ae8e6c8f40",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\base\\_reset.scss",
      "size": 3493,
      "created": "2024-12-21T03:30:44.092135",
      "modified": "2025-01-10T05:54:21.710827",
      "hash": "fa4a79647c48e4e4e2e031303b82d99df99c8058bfed2787356d9e330117c14e",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_alerts.scss",
      "size": 4976,
      "created": "2024-12-21T03:44:34.542126",
      "modified": "2025-01-10T05:54:21.744245",
      "hash": "ea789b669652ef9bd557be228ce2e427d2c4681a2d677486080ecb915038db0d",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_avatars.scss",
      "size": 4616,
      "created": "2024-12-21T03:47:39.886589",
      "modified": "2025-01-10T05:54:21.769243",
      "hash": "6ad418a31dbd0cc80723a9d45b46ce28b24261f0f9845c5ee581d2b5eed87a6a",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_badges.scss",
      "size": 5614,
      "created": "2024-12-21T03:47:14.500340",
      "modified": "2025-01-10T05:54:21.796859",
      "hash": "ffc0905181ac71449141291c00a0033dc7c3a5196095015ecd5e95d856ee0274",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_buttons.scss",
      "size": 4647,
      "created": "2024-12-21T03:42:19.049422",
      "modified": "2025-01-10T05:54:21.819858",
      "hash": "2bb74ccb3a35421a8501f0edc603855dc17045cbb5cda88dfc368f6ceeca473e",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_cards.scss",
      "size": 5407,
      "created": "2024-12-21T03:43:37.482032",
      "modified": "2025-01-10T05:54:21.850530",
      "hash": "3d038d14423e146b920659ffe234b70f1ad8251e0d6eb201d353216f5cd4ccf6",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_forms.scss",
      "size": 7873,
      "created": "2024-12-21T03:43:02.224331",
      "modified": "2025-01-10T05:54:21.880530",
      "hash": "2d33eb1caf363c1177fd18b98f88977929e70c5043c6bd928ada5a9dc996666f",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [69, 84, 99, 157, 161, 190, 196, 201]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_loader.scss",
      "size": 5371,
      "created": "2024-12-21T03:46:13.435690",
      "modified": "2025-01-10T05:54:21.906531",
      "hash": "05bfbc9a46e299b5ec8cc3e337282be0a12f7a8842ee087b963d19576354c1bb",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_modals.scss",
      "size": 5012,
      "created": "2024-12-21T03:44:05.238157",
      "modified": "2025-01-10T05:54:21.931532",
      "hash": "9716dc5cb47fe8463d421ccee413f082a9caa94423f2629bddcab6ef029b68b3",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_navigation.scss",
      "size": 7459,
      "created": "2024-12-21T03:45:43.275762",
      "modified": "2025-01-10T05:54:21.967530",
      "hash": "cbfe8517d3143a875e9e4f888dd5a59565f0a37c95e0fb2a60569d3612fabf04",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [309]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_tables.scss",
      "size": 5764,
      "created": "2024-12-21T03:45:05.872120",
      "modified": "2025-01-10T05:54:21.992532",
      "hash": "9bbf34947c2c16965b3d36208c609fa02caa3dc87ecd68cc1452ba9bd9fd628f",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [52]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\components\\_tooltips.scss",
      "size": 4909,
      "created": "2024-12-21T03:46:44.937718",
      "modified": "2025-01-10T05:54:22.018376",
      "hash": "328cad1f2c9eb1d42e1c5bdbf186dba63251a6d834111848bdc66fb2feb90656",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\layout\\_grid.scss",
      "size": 7104,
      "created": "2024-12-21T03:31:23.269813",
      "modified": "2025-01-10T05:54:22.054176",
      "hash": "7fb93a252a7d51dee701d8e69289b82089979db2b43b1213e98a0255dc44da08",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\main.scss",
      "size": 199,
      "created": "2024-12-21T03:55:22.585706",
      "modified": "2025-01-10T05:54:22.389978",
      "hash": "841c814f0b8cd53fbb5b3ceed5b938f8a1871480f99c2bde51c9ca4797600b19",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_auth.scss",
      "size": 4616,
      "created": "2024-12-21T03:52:33.557682",
      "modified": "2025-01-10T05:54:22.097178",
      "hash": "f21e0d0631c56b3456fe6e7b34a9c9892fa6b0f774e82a2910b1cda0afdf0bd0",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_dashboard.scss",
      "size": 5519,
      "created": "2024-12-21T03:53:08.633965",
      "modified": "2025-01-10T05:54:22.128174",
      "hash": "8908dca6aeb8a5c49fa7b393641546ae99f67b8976fe5d7a1430ce9255610f56",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_error.scss",
      "size": 3643,
      "created": "2024-12-21T03:55:12.002324",
      "modified": "2025-01-10T05:54:22.145174",
      "hash": "9f8489386905e4f4b91080a1fd64482bf6933d8511045159116f73bcdd39f4e6",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_game.scss",
      "size": 5145,
      "created": "2024-12-21T03:54:12.155415",
      "modified": "2025-01-10T05:54:22.177174",
      "hash": "bed52f43b8af21b678206d52e9a93f18a527be55439bc5d9e606b3a3aa5dd5c0",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_home.scss",
      "size": 3778,
      "created": "2024-12-21T03:52:06.278432",
      "modified": "2025-01-10T05:54:22.195176",
      "hash": "57e2f11e0e1c697fc2152adc77cb76eefa3f9e963ad589931128edbc148b681c",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_leaderboard.scss",
      "size": 6953,
      "created": "2024-12-21T03:58:54.302040",
      "modified": "2025-01-10T05:54:22.231171",
      "hash": "da9076055e2b1219f44b77c60a5fbe9c8925b8f6fbbc14589c95387667022e4b",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_news.scss",
      "size": 9613,
      "created": "2024-12-21T03:59:51.614919",
      "modified": "2025-01-10T05:54:22.268976",
      "hash": "16d89ebffbe3f234996d9b83d578c44af289e65795d88d5cdcf7cca057bc3e98",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_profile.scss",
      "size": 5469,
      "created": "2024-12-21T03:53:36.931849",
      "modified": "2025-01-10T05:54:22.293978",
      "hash": "e9379c9782d16939c566a5632642a2984e7d9e96039557c542c7805b4217d462",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_search.scss",
      "size": 8490,
      "created": "2024-12-21T04:03:27.520772",
      "modified": "2025-01-10T05:54:22.328976",
      "hash": "31808f84abad5cb177db7dc869d46d9b7c7b29adf21e21ad2e6df558fa23951e",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_settings.scss",
      "size": 6806,
      "created": "2024-12-21T04:01:45.756221",
      "modified": "2025-01-10T05:54:22.356977",
      "hash": "c98ef025129bcbab746db53dcf2cfc340aa64292dd6173989f1482249c27a224",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\pages\\_tournament.scss",
      "size": 6000,
      "created": "2024-12-21T03:54:41.299718",
      "modified": "2025-01-10T05:54:22.382981",
      "hash": "6492c0d191d3b8cc8d06d5f7e94f560ca1d85ee5ecef09c45daf34823c2df136",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\themes\\_dark.scss",
      "size": 2689,
      "created": "2024-12-21T03:48:34.521759",
      "modified": "2025-01-10T05:54:22.409982",
      "hash": "ced3f7a067d62847d57a08231e520872013b3c6ac962a96b187370dc8ea68e6e",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\themes\\_light.scss",
      "size": 4864,
      "created": "2024-12-21T03:48:07.338899",
      "modified": "2025-01-10T05:54:22.433641",
      "hash": "a9a9b8ee0e7dd2fa8d09b1a61114aa5d4315eac632feb04ba307a6dddc2d66f9",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\utilities\\_animations.scss",
      "size": 7255,
      "created": "2024-12-21T03:34:27.654638",
      "modified": "2025-01-10T05:54:22.463652",
      "hash": "87eb49c734c24043789474e6acf40f6da70927fefc9b8c910710aa3064ae1f42",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\utilities\\_colors.scss",
      "size": 6821,
      "created": "2024-12-21T03:32:51.144950",
      "modified": "2025-01-10T05:54:22.486653",
      "hash": "aa6c44e3cf35c976e743d50cc318463b4cfab705836bbc3c0885d32f4de4865f",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\utilities\\_display.scss",
      "size": 5644,
      "created": "2024-12-21T03:33:16.174724",
      "modified": "2025-01-10T05:54:22.505399",
      "hash": "1d682ee7f54c75ad9f18691f039f02695bb69795f1ad377644d21e5c38811b63",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\utilities\\_position.scss",
      "size": 8745,
      "created": "2024-12-21T03:33:52.590837",
      "modified": "2025-01-10T05:54:22.530398",
      "hash": "8066aaf3a60e0a46353e83a646eb455d4756b00c99f62b9eeef7634ff0f394ca",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\utilities\\_spacing.scss",
      "size": 3947,
      "created": "2024-12-21T03:31:58.226111",
      "modified": "2025-01-10T05:54:22.545398",
      "hash": "cbcdb1b37df73fd6fe7fc4ef4d1562e22ec9bd5aabfaf4c7502e67b0295d4108",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\static\\scss\\utilities\\_typography.scss",
      "size": 4491,
      "created": "2024-12-21T03:32:21.354280",
      "modified": "2025-01-10T05:54:22.567399",
      "hash": "91a36b62d49ecb23cc2d6125ec56347e5d1b3275c3699c5e9a8e3dec6cb9ad97",
      "extension": ".scss",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\achievements\\achievements.html",
      "size": 4419,
      "created": "2024-12-18T04:40:52.326384",
      "modified": "2025-01-10T16:11:05.988485",
      "hash": "5494f7037d69535f0868fcf5c2a01c926b4c4e3c25c1d1cd73a0fe03340705c4",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [35]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\auth\\forgot_password.html",
      "size": 5146,
      "created": "2024-12-18T00:39:33.794696",
      "modified": "2025-01-10T16:11:05.992485",
      "hash": "fa481c0fee08f0024f600bc06c7c85c32c13b5ae28855419b966ad40957f88b7",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [162]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\auth\\login.html",
      "size": 6352,
      "created": "2024-12-17T23:17:38.138332",
      "modified": "2025-01-11T17:57:12.575727",
      "hash": "6f0a3f01ee629b9347d7ae45796f23a284a3dcfed0c7b3fd14b1facb0dd388b4",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\auth\\register.html",
      "size": 6304,
      "created": "2024-12-17T23:17:52.696696",
      "modified": "2025-01-11T16:29:14.521340",
      "hash": "4eb2380276ce2cb0c31b3d4cb36c630ae4699118a74c59d64441a8c2cf12284c",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\auth\\reset_password.html",
      "size": 6229,
      "created": "2024-12-18T00:39:48.553499",
      "modified": "2025-01-10T16:11:06.012741",
      "hash": "b976a8d67273811334815eae60361b6257cb8ad393639328f3152e905eac1995",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [219]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\avatar\\create.html",
      "size": 3809,
      "created": "2024-12-20T10:28:11.891553",
      "modified": "2025-01-10T16:11:06.017259",
      "hash": "b2bc1895fe9455959fcfdc69d51e7036f2a80c27451bd8cc03965ec4884d043d",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [9, 15, 46, 58, 90]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\avatar\\edit.html",
      "size": 2003,
      "created": "2024-12-20T10:28:33.070374",
      "modified": "2025-01-10T16:11:06.023260",
      "hash": "bd8a00738adac404ba00c63aae9a67a5b6c67b0d2f038bd2e4bcb43c54148386",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [14, 23, 28, 29, 30, 31, 35]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\chat\\chat.html",
      "size": 2674,
      "created": "2024-12-18T04:19:48.169592",
      "modified": "2025-01-10T16:11:06.028260",
      "hash": "941178641c763a4890233fb396ea9e572b5d8a828eecc0e0401d2820cb8699e5",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [33]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\components\\error_toast.html",
      "size": 973,
      "created": "2024-12-23T04:11:33.353439",
      "modified": "2025-01-10T16:11:06.032167",
      "hash": "990cfeb642057fa66368c1fd1f121ac0dd7807a0a6f625de7be08b232e8303e8",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [3, 9]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\components\\notification_dropdown.html",
      "size": 870,
      "created": "2024-12-23T04:09:37.538650",
      "modified": "2025-01-10T16:11:06.035167",
      "hash": "04cdf2165e503cb1e3ef6048157fe968a424b86b666d16253923772b6dcef5b7",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\email\\reset_password.html",
      "size": 2208,
      "created": "2024-12-17T09:39:27.008693",
      "modified": "2025-01-10T16:11:06.040166",
      "hash": "63de5051ec06be597501971fb7d85b4419bf5ad316d186a8339d72558c771ed5",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [64]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\email\\reset_password.txt",
      "size": 560,
      "created": "2024-12-17T09:37:58.119470",
      "modified": "2025-01-06T03:36:00.809105",
      "hash": "90b581c38863d0813c77317d655f342405b7e2f42e126c32961840e624c62751",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5, 9]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\email\\verify_email.html",
      "size": 6504,
      "created": "2024-12-17T23:32:37.611362",
      "modified": "2025-01-10T16:11:06.060168",
      "hash": "4fd1c0db92389a44770d5c199c1fb56dbbf4690d73b24302841070ada1f8a6e2",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [1, 6, 88, 93, 99, 101, 102, 104, 111, 113, 116, 122, 127, 128, 135, 137, 142, 148]"
      ],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\email\\verify_email.txt",
      "size": 435,
      "created": "2024-12-17T23:32:47.608645",
      "modified": "2024-12-17T23:32:52.214279",
      "hash": "02ccffe19fed85d023134d9b1790da02904677813f5dba4473ebab7b338d3590",
      "extension": ".txt",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\features\\avatar.html",
      "size": 8514,
      "created": "2024-12-20T06:44:46.636759",
      "modified": "2025-01-10T16:11:06.098166",
      "hash": "63d773e0b086da2f61e3b993cdbc8218be14a3b22ea52d01fafb3fa54c3162cb",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [127, 132, 214]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\features\\map.html",
      "size": 4618,
      "created": "2024-12-20T06:44:14.858008",
      "modified": "2025-01-12T06:12:29.900727",
      "hash": "d68f6cc5b8cc7b597f60f9184bcdd7476da224a7348d347d52d23f49de73cc37",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [10, 33, 121]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\includes\\navigation.html",
      "size": 2539,
      "created": "2025-01-11T06:53:50.452931",
      "modified": "2025-01-14T05:28:02.534863",
      "hash": "92e942f6e77afbc9f27b0e5869f099f8084aa7bd99802ac0b8e5e06ff193df11",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [6, 7, 28]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\leaderboard\\leaderboard.html",
      "size": 2599,
      "created": "2024-12-18T05:09:58.753492",
      "modified": "2025-01-10T16:11:06.106169",
      "hash": "98776b87f1809b1198158c4e953fdeaa1cb0c92ac875cfcdd1b79f4778a39b45",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [12, 17, 22]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\modals\\cancel_match.html",
      "size": 3079,
      "created": "2024-12-18T01:18:38.264626",
      "modified": "2025-01-10T16:11:06.112105",
      "hash": "9a950d0be69b3896ecfc34a6efe9596596a03701ac7bc27f013d4266eee70b63",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [28]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\modals\\match_details.html",
      "size": 2631,
      "created": "2024-12-18T01:18:18.410760",
      "modified": "2025-01-10T16:11:06.129340",
      "hash": "3f7f9b742490e8f24c8bc625416483fce32f462d59af0d31d1fd8628df729422",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [13, 20, 63]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\modals\\new_game.html",
      "size": 1998,
      "created": "2024-12-18T01:17:44.269743",
      "modified": "2025-01-10T16:11:06.134342",
      "hash": "e72280b01b03ab4c385ffe899b886bdd669be620f5d88d3b5f2b195c76ec2dcb",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\modals\\schedule_match.html",
      "size": 2519,
      "created": "2024-12-18T01:18:00.843471",
      "modified": "2025-01-10T16:11:06.140341",
      "hash": "1676616cdf08e263fdc445d2c4495300d95a31ecbbcbd9142ad0063de0d0d7f1",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [22, 48]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\partials\\_theme_init.html",
      "size": 873,
      "created": "2024-12-21T03:49:23.232431",
      "modified": "2025-01-10T16:11:06.143341",
      "hash": "cb32e6d53d3f386cf35cdf6bc18063ce7d6d0e802368924d553d5f0a711893d3",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\tournaments\\details.html",
      "size": 2681,
      "created": "2024-12-18T04:32:49.007339",
      "modified": "2025-01-10T16:11:06.176347",
      "hash": "5f917d187d78e716901ebc4abb0c32a436ff6aa19821a23d4ef4e005f757a92d",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [26]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\tournaments\\index.html",
      "size": 1964,
      "created": "2024-12-20T10:39:34.245323",
      "modified": "2025-01-10T16:11:06.181345",
      "hash": "6a672695ce77240f3a074cb15beef924e6edeb755fbe98a653f36f4241ae4d99",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\tournaments\\list.html",
      "size": 2946,
      "created": "2024-12-18T04:32:08.364800",
      "modified": "2025-01-10T16:11:06.188341",
      "hash": "a93894f88dad19f9742b54aebbae8f18e9bde868ee168a77b16130dbbc948a93",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [8, 15, 18, 21, 48, 53, 55]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\users\\profile.html",
      "size": 3499,
      "created": "2024-12-18T05:05:18.076709",
      "modified": "2025-01-10T16:11:06.221097",
      "hash": "000bdcc00cba06283a00e0abc7c17e733e0c9ac414542a7481dc67e5cb66f446",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [9, 86]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\venues\\details.html",
      "size": 5005,
      "created": "2024-12-18T05:04:02.798173",
      "modified": "2025-01-10T16:11:06.242144",
      "hash": "c15a962d0262679739b9e534085df53e8a70f487345ac7e283ef8843a460e584",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [28]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\venues\\list.html",
      "size": 3572,
      "created": "2024-12-18T05:18:23.875833",
      "modified": "2025-01-10T16:11:06.251144",
      "hash": "61da258aa60e512533d50a9a49d5c3b9f9f7058949627a0d91b1de3694bf52be",
      "extension": ".html",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\tournaments\\modals\\create_tournament.html",
      "size": 4033,
      "created": "2024-12-18T04:33:25.153922",
      "modified": "2025-01-10T16:11:06.270145",
      "hash": "5aaa713b38ccb8e7554504ea3368e6d066e6c312b7078c4e86614917648e0b85",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1, 38, 51, 55, 67]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\templates\\tournaments\\modals\\match_result.html",
      "size": 2018,
      "created": "2024-12-18T04:33:55.829972",
      "modified": "2025-01-10T16:11:06.286143",
      "hash": "b348d75d6e9090675e843b657c845c4eefdf3ebbbe85a2e7042e4360cd113e05",
      "extension": ".html",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [1, 4, 26, 30]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\e2e\\marketplace_test.py",
      "size": 6955,
      "created": "2024-12-23T10:18:43.478809",
      "modified": "2024-12-23T10:19:40.938566",
      "hash": "666531e3a97ce6b7c1f8b19fd3cd382ce6dcc5397ede8bdd5b908ae4e315a430",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "MarketplaceItem",
        "...routes.api.marketplace"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\hooks\\usePerformanceMonitor.test.ts",
      "size": 4980,
      "created": "2024-12-23T13:30:26.239419",
      "modified": "2025-01-13T08:01:06.755682",
      "hash": "eb3447a3cb15c4c6e45020d4e8636762a4e80117a72059b1dd3b947cb4406102",
      "extension": ".ts",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["axios"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\routes\\test_predictive_analytics_routes.py",
      "size": 7518,
      "created": "2024-12-23T13:20:57.940727",
      "modified": "2024-12-23T13:25:38.764015",
      "hash": "0fd4069b56e953b433fef6e9e0d2b51d07ea09a6607ccf0d2223bd320769eca4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "fastapi.testclient",
        "PredictiveAnalyticsService",
        "utils.auth"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\services\\test_predictive_analytics.py",
      "size": 8537,
      "created": "2024-12-23T13:20:19.022719",
      "modified": "2024-12-23T13:25:38.764015",
      "hash": "7f1ba7612baf024eab054cbfaf61ebf450f1cfd16390da2d93cb80578ea2abef",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "PredictiveAnalyticsService"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\services\\test_system_services.py",
      "size": 6114,
      "created": "2024-12-23T13:47:39.646150",
      "modified": "2024-12-23T13:54:20.630519",
      "hash": "184234f9818e081305150efd972e6f5f14f5ffd4bd1673087cbf4deed8fc4079",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [126]"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "unittest.mock",
        "SystemOptimizationService",
        "services.auto_scaling"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\__mocks__\\fileMock.js",
      "size": 35,
      "created": "2024-12-23T13:22:18.635373",
      "modified": "2025-01-10T05:54:22.575400",
      "hash": "e3a48bb2614b52adeca63cfd096bce33eb8c465777057cf9d811749d15640ba5",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\components\\performance\\components.test.tsx",
      "size": 4737,
      "created": "2024-12-23T13:31:23.987770",
      "modified": "2025-01-13T08:01:06.686680",
      "hash": "fc28fb3d99435dc12446b525c44c2048d93c631a60fc660e8f53d43358300107",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [5]"],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\components\\performance\\PerformanceDashboard.test.tsx",
      "size": 5322,
      "created": "2024-12-23T13:30:56.276371",
      "modified": "2025-01-13T08:01:06.707681",
      "hash": "6c9395fbc715048b44baa774635bba2f94fded139b7070e9f4bd4c6c2f870f2b",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\dojopool\\tests\\components\\predictive\\test_predictive_dashboard.tsx",
      "size": 6124,
      "created": "2024-12-23T13:21:30.637172",
      "modified": "2025-01-13T08:01:06.735681",
      "hash": "bd3187756096674f196c4b19203aa5483448ff9172fbf6ac36e6f8c351d1f618",
      "extension": ".tsx",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["React"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\css\\base.css",
      "size": 3939,
      "created": "2025-01-10T09:00:21.662342",
      "modified": "2025-01-10T09:19:15.187015",
      "hash": "df10f77edaf4e8f565f24adabec1d0bd95cf3288a3e7340207309fc7c49fa0a3",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\dragon.webp",
      "size": 416828,
      "created": "2025-01-12T04:54:58.101110",
      "modified": "2024-10-22T06:32:44.250244",
      "hash": "7a2e20d8e843cbb2d1fd417ccd202fa3b7cb0ed8d45df32f3ea00884a4ca6c8b",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\fox.webp",
      "size": 229360,
      "created": "2025-01-12T04:54:58.106035",
      "modified": "2024-10-22T06:35:24.418344",
      "hash": "a1fe7d31ab57611a7752a1701eeda980ab46f0372caac9648349a6ed53cc8518",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\hero-bg.jpg",
      "size": 247532,
      "created": "2025-01-05T13:58:45.296582",
      "modified": "2024-10-07T09:32:48.885000",
      "hash": "39a4ecf825d7ab1ffde5e97ec36a0f525b00db8f5139802d794687f331dd60aa",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\hero-vs.jpg",
      "size": 260769,
      "created": "2025-01-05T13:58:53.993571",
      "modified": "2024-10-07T09:31:00.750000",
      "hash": "5d414a16457a0a0f82a567716755c16fb5b65afeddab724a0102d5a89b61d2c3",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\infinity.webp",
      "size": 171676,
      "created": "2025-01-12T04:54:58.058506",
      "modified": "2024-10-22T06:33:58.545875",
      "hash": "fb3ac8e7868e88c54fdb86066bed3bef9ad9a6ee4113edd9299330baeb973a05",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\logo.jpg",
      "size": 157836,
      "created": "2025-01-05T13:58:40.817898",
      "modified": "2024-10-07T09:09:06.792000",
      "hash": "54990d22bab6de68cefd25b3c21ef421394d80c369410483c90cddf59e5ceea6",
      "extension": ".jpg",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\mask.webp",
      "size": 184826,
      "created": "2025-01-12T04:54:58.064033",
      "modified": "2024-10-22T06:33:11.604194",
      "hash": "be8d429ea0f99f51c059336cd8d8c53dde11e54d27281a11178d390aba5afa23",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\microchipball.webp",
      "size": 325022,
      "created": "2025-01-12T04:54:58.071032",
      "modified": "2024-10-22T06:34:35.289777",
      "hash": "efe3e2e2f19ff4d129bac024123e2e1b0355e4ea26501bb58c5a00de7ad9b46f",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\octopus.webp",
      "size": 391580,
      "created": "2025-01-12T04:54:58.077030",
      "modified": "2024-10-22T06:36:48.777201",
      "hash": "6a5c47887282beda81a76a518b79895aa56e623ab5eb145f407a39ad33bc1b1e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\portalball.webp",
      "size": 386606,
      "created": "2025-01-12T04:54:58.082038",
      "modified": "2024-10-22T06:34:44.491203",
      "hash": "24d7bf654cebbd2fd8490b4efbe056166e3fdeab18d0cb6e57c51f48ae49d82e",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\spacetable.webp",
      "size": 499274,
      "created": "2025-01-12T04:54:58.089032",
      "modified": "2024-10-22T06:34:20.456783",
      "hash": "3455ad51bd71a972e669087797761b536ebf41720ef3137522fcf975dae9ce17",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\src\\static\\images\\yinyang.webp",
      "size": 169130,
      "created": "2025-01-12T04:54:58.095032",
      "modified": "2024-10-22T06:35:32.857695",
      "hash": "72a11984a26d990558fff313900fc4212baee4ec05d4da4b5ca12083c2d11602",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\static\\css\\main.css",
      "size": 1200,
      "created": "2025-01-06T13:52:33.849315",
      "modified": "2025-01-06T13:52:38.264627",
      "hash": "641df0e3685ae0a7d4fde46da158806177478cee544080438989ae15c7c40bc0",
      "extension": ".css",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\static\\js\\main.js",
      "size": 2087,
      "created": "2025-01-06T13:52:48.831125",
      "modified": "2025-01-06T13:55:57.085244",
      "hash": "848c93ad40194cd94e9f2f4ac907b06102efcdbe2b319958d633d679bf33b6cd",
      "extension": ".js",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\test\\static\\img\\test.png",
      "size": 66,
      "created": "2024-12-29T05:22:55.322968",
      "modified": "2024-12-29T13:46:05.553558",
      "hash": "90791a0a3878cf1012574351f32f15ef85f00f813daa1ac9612de5778d4e94c2",
      "extension": ".png",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\.pytest_cache\\CACHEDIR.TAG",
      "size": 191,
      "created": "2024-12-22T12:16:07.022631",
      "modified": "2024-12-22T12:16:07.022631",
      "hash": "37dc88ef9a0abeddbe81053a6dd8fdfb13afb613045ea1eb4a5c815a74a3bde4",
      "extension": ".TAG",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\.pytest_cache\\README.md",
      "size": 310,
      "created": "2024-12-22T12:16:07.021637",
      "modified": "2024-12-22T12:16:07.021637",
      "hash": "420e808d79a6c25d3cda0af33bc4782314a14949866682c68ce8149e89b66b70",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\base.py",
      "size": 908,
      "created": "2024-12-19T04:37:08.518370",
      "modified": "2025-01-05T07:40:58.791959",
      "hash": "2ef52209528d4f975e3f27e37def99d263a4614d4e560b6be771e646b90176ac",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.models",
        "db",
        "dojopool.core.auth.service"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\conftest.py",
      "size": 2955,
      "created": "2024-12-17T15:39:36.482539",
      "modified": "2025-01-05T07:12:04.109356",
      "hash": "1f05c44f34e74c447397dfe4cfc5bde6e11548bebebcfcd096a1c1160a9a763f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\test_auth.py",
      "size": 3656,
      "created": "2024-12-17T10:08:35.269943",
      "modified": "2025-01-05T07:40:50.154589",
      "hash": "cb42866d208ff52b279b536d2cefa2c38cb251c650742ca3c98e73a6f00b5653",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.models",
        "db",
        "dojopool.core.auth.service"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\test_game.py",
      "size": 3550,
      "created": "2024-12-17T10:09:24.913779",
      "modified": "2025-01-05T07:40:37.790593",
      "hash": "202b6b14d10e28bdd0a50d1f884a8fa1f840dc10fe9066de6bc7a06a0acdf4bd",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.models",
        "db",
        "dojopool.core.game.state",
        "Shot"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\test_leaderboard.py",
      "size": 2930,
      "created": "2024-12-19T18:41:31.326523",
      "modified": "2025-01-05T07:39:46.419100",
      "hash": "056a70a5bd2aa78061815a59fe1e0badd40bf74fbe3e0cf5c1dd7ab00f9d0cab",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.models", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\test_venues.py",
      "size": 3213,
      "created": "2024-12-17T17:16:25.308648",
      "modified": "2025-01-05T07:39:44.588034",
      "hash": "1c55d2c03191f168c79108f40e8e439e3917e54a992467a6dda66ca62c62394f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.models", "db", "database"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\test_websocket.py",
      "size": 2277,
      "created": "2024-12-17T10:10:14.787555",
      "modified": "2025-01-05T07:39:05.616632",
      "hash": "e56cbcd2aa4bee9cd03cb0972c5618775c6df3395a1772b84358931e01075d24",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.core.websocket",
        "Game",
        "dojopool.core.db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\api\\__init__.py",
      "size": 2092,
      "created": "2024-12-17T10:07:53.953032",
      "modified": "2024-12-17T10:08:14.238903",
      "hash": "d07cb2955890f4394160c871ec9becfe8638e11450ee0c3acbc0a5796e4900cd",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["json", "typing", "FlaskClient"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\data\\sample_game.json",
      "size": 2309,
      "created": "2024-12-17T10:03:32.533621",
      "modified": "2024-12-17T10:03:52.614210",
      "hash": "adff3a106a0cd064e5690537ada20ed5613fbd24c1271ededa11138f42e0e2a6",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\helpers\\auth.py",
      "size": 1151,
      "created": "2024-12-17T15:39:26.951459",
      "modified": "2025-01-05T07:38:43.628489",
      "hash": "8eea554b8c2e9bf147b8eaec70bdc6b1eac3e0eb58d134cfe3b229071e801a32",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "dojopool.core.auth.service",
        "User",
        "dojopool.core.db"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\helpers\\game_state.py",
      "size": 1325,
      "created": "2024-12-18T02:35:34.468941",
      "modified": "2025-01-05T07:38:43.621360",
      "hash": "3d895cf41490edf96746f20c45ba28cdf5eaac281608245fa67a89743f5ad050",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "dojopool.core.game.state",
        "Shot",
        "dojopool.models",
        "db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\helpers\\match_state.py",
      "size": 1332,
      "created": "2024-12-18T02:35:58.117781",
      "modified": "2025-01-05T07:38:43.621360",
      "hash": "f0fb04a13f486cf3c438d0e4af05272557dd8fea2da20ae15f42441408ee9bb0",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "dojopool.core.game.state",
        "Shot",
        "dojopool.models",
        "db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\helpers\\__init__.py",
      "size": 1724,
      "created": "2024-12-17T10:04:58.082884",
      "modified": "2024-12-18T02:31:07.388336",
      "hash": "6e4340656572cebc61e243edcd7c8f5581c1696c088f17fa4a0b9dee9d62d86d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [7]"],
      "similar_files": [],
      "dependencies": ["json", "pathlib", "a"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\conftest.py",
      "size": 2962,
      "created": "2024-12-18T02:10:46.338480",
      "modified": "2025-01-05T07:13:45.597037",
      "hash": "8ce819d908ac51cf78d47ed8f124216d943590cb4bee61ede5f073fb390c910e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\test_api_endpoints.py",
      "size": 1987,
      "created": "2024-12-17T12:58:37.231526",
      "modified": "2025-01-05T07:38:43.619359",
      "hash": "561eb3a6c00b5ae7032eb774f3be4a5a30437ef306416891932c44f0e822049a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.core.game.state",
        "ShotType",
        "dojopool.models",
        "db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\test_email_integration.py",
      "size": 2450,
      "created": "2024-12-18T02:53:33.255258",
      "modified": "2025-01-05T07:36:04.943144",
      "hash": "94962db94f2a731aa52fad01caaf4cddfe011e70f021b2b295a7246918b03daa",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.email.service",
        "User",
        "dojopool.core.db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\test_game_flow.py",
      "size": 2568,
      "created": "2024-12-17T09:55:56.719843",
      "modified": "2025-01-05T07:37:40.811904",
      "hash": "91d96f41f7840d2fa5cfa00b7aeed3256ba8a8dd137b763700b05cc8323c83b8",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.core.auth.service",
        "GameState",
        "dojopool.core.game.events",
        "Shot",
        "dojopool.models",
        "db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\test_integration.py",
      "size": 2323,
      "created": "2024-12-18T02:10:12.558326",
      "modified": "2025-01-05T07:25:15.360926",
      "hash": "d9be50a075ffb013720899d1c7c8786d0ef21609534afd62e07780526395384b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.models", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\test_leaderboard.py",
      "size": 4802,
      "created": "2024-12-19T18:41:57.920731",
      "modified": "2025-01-05T07:36:24.360078",
      "hash": "2c7ce100ccfe01b9df949be1273f5e5208bf9a48585d5c363417035a38319bec",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "dojopool.models",
        "LeaderboardService",
        "dojopool.core.db"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\integration\\test_validation_integration.py",
      "size": 2424,
      "created": "2024-12-18T16:32:56.962661",
      "modified": "2025-01-05T07:36:45.802179",
      "hash": "a6df8d738dd02a80c6ea1afb06c42d688f6844ab821f6d7089f2fb39dd4e0a75",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.core.validation", "UserSchema"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\conftest.py",
      "size": 3103,
      "created": "2024-12-18T02:09:27.489606",
      "modified": "2025-01-05T07:14:18.767665",
      "hash": "be3f6683cffbaaba9a6040fca807dfa88d102e28d34d4c1814aeeb81a90cce6a",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["os", "User", "dojopool.core.extensions"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\locustfile.py",
      "size": 8343,
      "created": "2024-12-18T03:34:40.744773",
      "modified": "2024-12-29T04:18:12.577838",
      "hash": "e91aaba03154d5cb57cd72f9066138d7e32aeed9fbcb30de05ac1293c29bdcf6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["locust", "FastHttpUser", "random", "WebSocket."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\run_load_tests.py",
      "size": 7179,
      "created": "2024-12-29T04:17:01.970611",
      "modified": "2024-12-29T04:18:12.595836",
      "hash": "c08d0633f8491df5104ae7808fb80bd347d3770d4e6d03b8eb690c8c261d4802",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [36, 77, 95]"],
      "similar_files": [],
      "dependencies": ["subprocess", "Prometheus."],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\run_tests.py",
      "size": 4147,
      "created": "2024-12-18T03:35:30.112570",
      "modified": "2024-12-18T03:35:42.983641",
      "hash": "dce33618762954458f3494f88f2bb8e0f9e1a5e00f3afd0607869f34cb48bafa",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [18]"],
      "similar_files": [],
      "dependencies": ["subprocess", "pandas"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\test_api_performance.py",
      "size": 3082,
      "created": "2024-12-17T12:59:14.667147",
      "modified": "2025-01-05T07:36:04.943144",
      "hash": "e0224c61f4a1cd821adc27d6f98e5eb47c53f041db00d1d463a6924253d0c2c4",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "APIHandler", "dojopool.models", "db"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\test_leaderboard.py",
      "size": 4624,
      "created": "2024-12-19T18:42:21.674911",
      "modified": "2025-01-05T07:18:57.612480",
      "hash": "b8d703a95589f1d4308d498f69c716f2d795be5ca90b55788a2ee44b098abe0d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "Leaderboard",
        "dojopool.services.leaderboard_service"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\test_load.py",
      "size": 3453,
      "created": "2024-12-17T09:56:51.392579",
      "modified": "2025-01-05T07:17:50.416913",
      "hash": "a5616ba42ef57a7a4dd0a447128ba950e5f02aa106ad4ef776b2cd2963d78181",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "ThreadPoolExecutor",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\performance\\test_performance.py",
      "size": 2511,
      "created": "2024-12-18T02:08:54.049105",
      "modified": "2025-01-05T07:17:50.416913",
      "hash": "0f09a7cfd5405f9a9fae9b51b3e6ac022271cdc4942301bc058a50a7ce2fe5bc",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["pytest", "User", "dojopool.core.extensions"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\conftest.py",
      "size": 2955,
      "created": "2024-12-17T09:03:16.872164",
      "modified": "2025-01-05T07:15:12.202993",
      "hash": "043885f9cf01666c443e7b24cb51517c740ca8255b5a16401702c5bc9703a5a6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\performance_metrics.test.js",
      "size": 9759,
      "created": "2025-01-13T03:00:13.303980",
      "modified": "2025-01-13T03:39:14.335501",
      "hash": "71be204c052c76e9bbb60397dd1d609b8da15961329c902e529870511e70cb6f",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [49, 228, 231]"],
      "similar_files": [],
      "dependencies": ["trendAnalysis"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_analytics.py",
      "size": 6955,
      "created": "2025-01-10T04:33:01.364402",
      "modified": "2025-01-10T04:33:08.313851",
      "hash": "4ff7f4725b5545884edddae1cfe55cbfe7f1e0e8dc64e5c7e3b4d6100bb451f5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [123]"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Mock",
        "src.dojopool.core.realtime.analytics",
        "src.dojopool.core.realtime.constants"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_api.py",
      "size": 9451,
      "created": "2025-01-03T18:23:32.847975",
      "modified": "2025-01-05T07:18:57.612480",
      "hash": "1771b12adeca7de69f98e2a7487ee49db43c8f26daa23ff7640fe9d1da77b689",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.models.game",
        "Tournament",
        "dojopool.extensions",
        "APIError"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_auth.py",
      "size": 7246,
      "created": "2024-12-17T09:54:42.082180",
      "modified": "2025-01-05T07:18:57.613473",
      "hash": "e073e3ae060d8718fa48afdc339bf0d2a85fbbaed62f705da1318693d19bc609",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "AuthService",
        "dojopool.models.user",
        "jwt",
        "dojopool.exceptions",
        "time"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_background_tasks.py",
      "size": 6144,
      "created": "2025-01-03T17:36:05.288347",
      "modified": "2025-01-05T07:18:57.614481",
      "hash": "231444c4c81871b43b68d6a2a41546307d661a385a8e4952f8a72441b7e33858",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "TaskService",
        "dojopool.models.task",
        "TaskError"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_cache.py",
      "size": 4021,
      "created": "2025-01-03T17:52:38.805482",
      "modified": "2025-01-05T07:19:37.070662",
      "hash": "88c57226c242d5b2c7b3bf6a7abd3a0ebef48714653a5b8c11f3e27cec3c5261",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "cache_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_core_models.py",
      "size": 7688,
      "created": "2024-12-17T12:58:00.228115",
      "modified": "2025-01-05T07:18:57.614481",
      "hash": "225a74062ecfaf650df5875e556c2d3ed3dfff85de31c5624526e413a73458c6",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [167, 168, 169]"
      ],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.game.state",
        "Shot",
        "dojopool.core.game.events",
        "db"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_game_state.py",
      "size": 9429,
      "created": "2025-01-03T17:31:50.832697",
      "modified": "2025-01-05T07:18:57.614481",
      "hash": "cc02f0259f62f38cf52a58de2e69bf892bef9473977d4800ad149aac95c9d6c3",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "GameStateService",
        "dojopool.models.game",
        "User",
        "dojopool.extensions",
        "GameStateError",
        "snapshot"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_image_cache.py",
      "size": 5649,
      "created": "2025-01-13T04:09:32.951403",
      "modified": "2025-01-13T05:46:17.719002",
      "hash": "a6c6c03540ea924617fee345d29720ea4b66318b83a251a7f73258364479c35f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "pathlib", "ImageCache"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_image_processor.py",
      "size": 10052,
      "created": "2025-01-12T15:42:07.217315",
      "modified": "2025-01-13T05:42:07.814330",
      "hash": "73aca2814c5caf2512cf4fcbd31fce0e2d1ff9641d883d2e592281791eb66c07",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [191]"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "pathlib",
        "convert_to_webp",
        "math",
        "random"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_lazy_loading.py",
      "size": 5205,
      "created": "2025-01-13T04:35:06.749516",
      "modified": "2025-01-13T04:43:35.926301",
      "hash": "7c9125d13768d3b413b7d09a797ffb97881760f8f19181c381fb4458e6f4a105",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "bs4", "add_lazy_loading"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_leaderboard.py",
      "size": 4932,
      "created": "2024-12-19T18:41:06.546348",
      "modified": "2025-01-05T07:18:57.617476",
      "hash": "cbaf2d5226454c3622eed816e8274a110ec3cdb654aa46986a8d2c47568781f9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Leaderboard",
        "dojopool.services.leaderboard_service",
        "User",
        "tests.utils"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_marketplace.py",
      "size": 21714,
      "created": "2025-01-10T04:36:54.724361",
      "modified": "2025-01-10T04:41:45.774967",
      "hash": "5096de0d8f561d3104b99341f3c42bcc6a232bc32c28d6fc5b2accc2227ddaa1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Long lines found on lines: [111, 210, 270, 301, 393, 401, 517, 566]"
      ],
      "similar_files": [],
      "dependencies": ["pytest", "datetime", "Mock", "redis"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models.py",
      "size": 7071,
      "created": "2025-01-03T18:20:14.020615",
      "modified": "2025-01-05T07:18:57.617476",
      "hash": "496bcfbe026c2275213b9362863cb7df2763027ef0e74dca1b5cb656548d226e",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.models.game",
        "Tournament",
        "dojopool.models.venue",
        "db",
        "dojopool.exceptions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_network_features.js",
      "size": 13020,
      "created": "2025-01-13T01:48:15.020986",
      "modified": "2025-01-13T02:00:43.531485",
      "hash": "b4b451715c6f661fb488d746fb80975346e4db0e59bf7cf17269c8560b850c6e",
      "extension": ".js",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [239]"],
      "similar_files": [],
      "dependencies": [
        "../../src/dojopool/static/js/networkStatus.js",
        "../../src/dojopool/static/js/imageLoader.js",
        "../../src/dojopool/static/js/bandwidthTracker.js",
        "../../src/dojopool/static/js/debugPanel.js",
        "../../src/dojopool/static/js/bandwidthTracker.js",
        "../../src/dojopool/static/js/imageLoader.js",
        "../../src/dojopool/static/js/imageLoader.js",
        "../../src/dojopool/static/js/bandwidthTracker.js",
        "../../src/dojopool/static/js/networkStatus.js",
        "../../src/dojopool/static/js/debugPanel.js"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_notifications.py",
      "size": 10901,
      "created": "2025-01-03T17:33:27.828922",
      "modified": "2025-01-10T04:31:38.474252",
      "hash": "f5278df61fb7fb35875569b7c4c45025d3d58f8e4a6a929324dc81597f1e880d",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [30, 52, 84, 142, 178]"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "Mock",
        "src.dojopool.core.realtime.room_notifications",
        "NotificationPriority"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_payment.py",
      "size": 5391,
      "created": "2025-01-03T17:32:54.890540",
      "modified": "2025-01-05T07:20:23.198796",
      "hash": "14ab2f1cd5a512e10d15d8a031a6f6a3b0a9edd103cae6da91b0020968f88161",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "payment_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_ranking.py",
      "size": 4609,
      "created": "2025-01-03T18:27:43.171808",
      "modified": "2025-01-05T07:20:52.201232",
      "hash": "bf966d682b2a5d5a37d8b709d0eabb000cb5a5d3d79a658d0b2cf7884ce8a6bf",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "ranking_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_rate_limit.py",
      "size": 4691,
      "created": "2025-01-03T17:53:36.777307",
      "modified": "2025-01-05T07:21:38.777097",
      "hash": "e2b1602e34484f3eb90ed559804700def0f658cf9f4ba4f36633d816cba21188",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "rate_limit_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_spectator.py",
      "size": 8644,
      "created": "2025-01-03T18:28:24.668705",
      "modified": "2025-01-05T07:18:57.619481",
      "hash": "a76ba39a75eee4046595a3a4b2bfae331803c1a975a9069ef50132ecc981718c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "SpectatorService",
        "dojopool.models.user",
        "Game",
        "dojopool.models.spectator",
        "db",
        "dojopool.exceptions"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_tournament.py",
      "size": 7835,
      "created": "2025-01-03T17:32:23.805919",
      "modified": "2025-01-05T07:22:37.546604",
      "hash": "4038c822655379d4d1519cfd402b10b1a7a1171051945ae293102e4543fd67c1",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "tournament_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_user_preferences.py",
      "size": 5989,
      "created": "2025-01-03T17:34:00.537133",
      "modified": "2025-01-05T08:12:30.743464",
      "hash": "ffa7531ca2a48a5770507bbe8818348e23f376ef93cb17933ccd35a48e42ec7f",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "preferences_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_validation.py",
      "size": 16813,
      "created": "2024-12-18T16:32:30.898095",
      "modified": "2025-01-05T07:18:57.620476",
      "hash": "44bf4c3bff9c262f4b6b7581a334b9ba468035afe7fd84aee67f1a93c852c982",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": [
        "Potential security issue: password",
        "Long lines found on lines: [297, 298, 299]"
      ],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "marshmallow",
        "dojopool.core.validation.schemas",
        "dojopool.core.validation.utils",
        "datetime",
        "flask",
        "flask"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_venue.py",
      "size": 8902,
      "created": "2024-12-19T05:18:38.987563",
      "modified": "2025-01-05T07:18:57.620476",
      "hash": "3c40ff61fcca53e857c95455624ddc038fb251ea6da00428ca6fcf4b805b1aca",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "VenueService",
        "dojopool.models.venue",
        "User",
        "dojopool.extensions",
        "VenueError"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_webp_conversion.py",
      "size": 3709,
      "created": "2025-01-13T04:44:05.981258",
      "modified": "2025-01-13T05:03:08.728988",
      "hash": "9305727ac13a3764f55c3d6b2ab8eea056933eca2f09e99d0fd294429dec5a31",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "pathlib", "convert_to_webp"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_websocket.py",
      "size": 5826,
      "created": "2025-01-03T17:35:28.127376",
      "modified": "2025-01-05T07:23:43.834459",
      "hash": "986cda6d53562e7042e51fd86df734f43849cb3aa010624bb94015409f897dfb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "websocket_service",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_websocket_events.py",
      "size": 10025,
      "created": "2025-01-03T18:24:35.078163",
      "modified": "2025-01-05T07:18:57.622477",
      "hash": "961e6d6f42a8341ac49addf447942475670b86358836c18b1e975f175d506cff",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "WebSocketService",
        "dojopool.models.game",
        "User",
        "dojopool.extensions"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\.pytest_cache\\v\\randomly_seed",
      "size": 10,
      "created": "2024-12-22T12:16:07.022631",
      "modified": "2025-01-05T08:24:01.370302",
      "hash": "ab416f575dc8350fcb078e955a7d485dde77a14e2a6157caf7321ae559c7321b",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\.pytest_cache\\v\\cache\\lastfailed",
      "size": 27463,
      "created": "2024-12-22T12:16:07.918243",
      "modified": "2025-01-13T05:48:02.124234",
      "hash": "4cd4fa16a65116bcb99ed5fc8aad9bf2c7b702e42a930a57c6ff78255e8e3823",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\.pytest_cache\\v\\cache\\nodeids",
      "size": 26513,
      "created": "2024-12-22T12:16:07.917243",
      "modified": "2025-01-13T05:48:02.122230",
      "hash": "de7b0556c33737fb427405f24974166e41058ebd2956bee08326272b186fbb97",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\.pytest_cache\\v\\cache\\stepwise",
      "size": 2,
      "created": "2024-12-22T12:16:07.919244",
      "modified": "2025-01-13T05:48:02.125251",
      "hash": "4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945",
      "extension": "",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\helpers\\samples\\game.json",
      "size": 564,
      "created": "2024-12-18T02:31:13.168346",
      "modified": "2024-12-18T02:31:19.675470",
      "hash": "8565e58d9c7d09a96504a10779d18451165bf7cd42da248919ff364afc843939",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\helpers\\samples\\match.json",
      "size": 742,
      "created": "2024-12-18T02:31:24.896162",
      "modified": "2024-12-18T02:31:36.339783",
      "hash": "30690778c0eb2f22252b4e42fb0085e2d055504e46832c9ffa0b5d9d972f221a",
      "extension": ".json",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_ai\\test_prompts.py",
      "size": 2770,
      "created": "2024-12-18T01:55:36.805364",
      "modified": "2025-01-05T07:18:57.622477",
      "hash": "505e28401496592dd787cab0eed873cc2d7d2f73faf177107e5c022b779c29d9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.ai.prompts"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_ai\\test_service.py",
      "size": 5520,
      "created": "2024-12-18T01:55:09.420739",
      "modified": "2025-01-05T07:18:57.622477",
      "hash": "f7d6029fe25ec3ee10a2e89e26ef20bfae2706224ae9c518c11433d52897e664",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": ["pytest", "unittest.mock", "AIService"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_ai\\test_story.py",
      "size": 6254,
      "created": "2024-12-18T01:54:42.516856",
      "modified": "2025-01-05T07:18:57.626474",
      "hash": "ed8376eb109a914e6c5d919f19a1e62c736e22aa7072785d0770329157288a03",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "unittest.mock",
        "StoryGenerator",
        "dojopool.models"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_api\\conftest.py",
      "size": 2961,
      "created": "2024-12-18T02:06:09.212619",
      "modified": "2025-01-05T07:15:43.812910",
      "hash": "e0966716a1749f56732375711908d6337b71a977163bb80bab469269fa052ed9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_api\\test_error_handlers.py",
      "size": 7580,
      "created": "2024-12-18T02:06:42.102845",
      "modified": "2025-01-05T07:18:57.628477",
      "hash": "ae79fff368830b9e3d8af05da2d50765b7a9b6cdaee25e258572561910acb1c5",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "werkzeug.exceptions", "dojopool.api.errors"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_api\\test_routes.py",
      "size": 7026,
      "created": "2024-12-18T02:05:44.235858",
      "modified": "2025-01-05T07:18:57.629483",
      "hash": "c7633df6924e56b1573d9e162e028400a5726d0f038623fa7fbe53c491e7dd3b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "User"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_api\\test_tournaments.py",
      "size": 7618,
      "created": "2024-12-18T03:27:12.731803",
      "modified": "2025-01-05T07:18:57.629483",
      "hash": "80f13d2b06a1edca3cbfce1932a0348ad9d87262f270717695a6515ae7dd411c",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "datetime", "Tournament"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_api\\test_users.py",
      "size": 6522,
      "created": "2024-12-19T02:50:56.200630",
      "modified": "2025-01-05T07:18:57.629483",
      "hash": "e4faefd5863f0814b6a7510847d4bc34d30ef9790d410fcd8b215b55ffb60c51",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "flask",
        "User",
        "dojopool.core.auth.security"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_auth\\conftest.py",
      "size": 2955,
      "created": "2024-12-18T01:02:02.486010",
      "modified": "2025-01-05T07:16:17.618852",
      "hash": "69bc6a58c4fc99e062aee77480482a2464975b44a407fdff20f6879aa2538b17",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_auth\\test_auth.py",
      "size": 12274,
      "created": "2024-12-18T02:07:17.906563",
      "modified": "2025-01-05T07:18:57.631482",
      "hash": "667a9844527ed5670935158042693a87d065c9ca60668b6267f1d7d0c9739a87",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "SQLAlchemyError",
        "dojopool.models",
        "multiple",
        "time"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_auth\\test_auth_routes.py",
      "size": 5845,
      "created": "2024-12-18T01:01:35.784494",
      "modified": "2025-01-05T07:18:57.633484",
      "hash": "36cc23d190484aa5a106211568caabbec18eab00172e212e5e7a10ba31a995d9",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "flask", "User", "dojopool.models.token"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_auth\\test_utils.py",
      "size": 2849,
      "created": "2024-12-18T01:01:50.002757",
      "modified": "2025-01-05T07:18:57.635476",
      "hash": "bd580f37a95d0083335f264a0ad6180fd389541c05859d5c36c376df6c9297eb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "flask", "get_safe_redirect_url"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_email\\test_email_service.py",
      "size": 5662,
      "created": "2024-12-18T02:08:15.595060",
      "modified": "2025-01-05T07:18:57.634478",
      "hash": "49735e84be7748ebcaf500ee15a8082868e2a9a557ba16104d67c4608b60bceb",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: api_key"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "unittest.mock",
        "EmailService",
        "dojopool.models"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\conftest.py",
      "size": 2964,
      "created": "2024-12-18T01:04:04.343191",
      "modified": "2025-01-05T07:16:51.392810",
      "hash": "620dee85f20ae3a7c61b3d045ff6dc72189114786ba731a1859f235accc7f8c7",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "User",
        "dojopool.core.extensions"
      ],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\test_game.py",
      "size": 4012,
      "created": "2024-12-18T02:03:46.072213",
      "modified": "2025-01-05T07:18:57.634478",
      "hash": "849c8bdee30901ac2ba49d47578fda1b43594eb3cd5b8ff17da9400699772d96",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "datetime", "Game", "dojopool.models.user"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\test_location.py",
      "size": 6307,
      "created": "2024-12-18T02:04:41.307069",
      "modified": "2025-01-05T07:18:57.635476",
      "hash": "20f21ecb4f233ac5db4e42eebe5403d68079ca8e7f0abf74b0efe80493f547ab",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "dojopool.models.location"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\test_match.py",
      "size": 6201,
      "created": "2024-12-18T02:04:12.722881",
      "modified": "2025-01-05T07:18:57.637478",
      "hash": "90ff353b95c1a7d84464aacc242d6b33dd0e28d024ed986a1b8c1dda3209ce26",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [
        "pytest",
        "datetime",
        "Match",
        "dojopool.models.location"
      ],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\test_token.py",
      "size": 3076,
      "created": "2024-12-18T01:03:50.894077",
      "modified": "2025-01-05T07:18:57.637478",
      "hash": "c3da5a3957fd80169b110c9abcc210590da94977fdd834c4ef835643837e4e01",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["datetime", "Token"],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\test_tournament.py",
      "size": 5380,
      "created": "2024-12-18T03:26:03.408113",
      "modified": "2025-01-05T07:18:57.637478",
      "hash": "c0d894422b235711816ad607adca2ffdf5a797c68cbe3cce4dcf11c49012f56b",
      "extension": ".py",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": ["pytest", "datetime", "Tournament", "dictionary."],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\tests\\unit\\test_models\\test_user.py",
      "size": 2108,
      "created": "2024-12-18T01:03:32.002555",
      "modified": "2025-01-05T07:18:57.637478",
      "hash": "76032d7f9a058e59d41364aaf94f15e303cb43916aa484d850a6a1eba208dc65",
      "extension": ".py",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Potential security issue: password"],
      "similar_files": [],
      "dependencies": ["datetime", "User"],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\README.md",
      "size": 2105,
      "created": "2025-01-13T05:33:06.938698",
      "modified": "2023-09-13T16:07:10",
      "hash": "9dbca74675c944dd597f13538e3e847a340125215e46b8dd92077c8b5921455d",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\test.webp",
      "size": 4880,
      "created": "2025-01-13T05:33:06.942688",
      "modified": "2017-01-23T21:29:42",
      "hash": "1bf9449d529b491c6eb22ec84d42217e43cf9af0ffe391fa7a30b29b037f098a",
      "extension": ".webp",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\test_ref.ppm",
      "size": 49167,
      "created": "2025-01-13T05:33:06.945689",
      "modified": "2017-01-23T21:29:42",
      "hash": "bf84f754ae60e8924b2a1416d9fd8f95e35d89742a691103ee1d7e013c21a723",
      "extension": ".ppm",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\anim_diff.exe",
      "size": 773120,
      "created": "2025-01-13T05:33:06.790945",
      "modified": "2023-09-13T16:07:06",
      "hash": "09e9bd5f1c0ca344001da000df6a21feb8856b0b3e84bf3c20185dc7708e0cad",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\anim_dump.exe",
      "size": 880640,
      "created": "2025-01-13T05:33:06.800958",
      "modified": "2023-09-13T16:07:08",
      "hash": "1b9f6281c82bdee0282bbd10bf3c18acb257c317e3b392f98d6da64474ce1d65",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\cwebp.exe",
      "size": 726528,
      "created": "2025-01-13T05:33:06.808944",
      "modified": "2023-09-13T15:54:18",
      "hash": "f317c8bc61624db206f5aa254f3bbc46d5cafdcb91862378ce7a0371dbf61b03",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\dwebp.exe",
      "size": 492544,
      "created": "2025-01-13T05:33:06.815949",
      "modified": "2023-09-13T15:54:18",
      "hash": "38b1b6a229e3764626e4aac654a0e4e23d762d5e546e8ba9a79f5904639c1b16",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\freeglut.dll",
      "size": 229376,
      "created": "2025-01-13T05:33:06.822958",
      "modified": "2023-06-08T19:20:44",
      "hash": "cf62555f14d64fac1d650e1a24c86465b70ca410c3d6942fce2e6f25672490c7",
      "extension": ".dll",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\get_disto.exe",
      "size": 722432,
      "created": "2025-01-13T05:33:06.826602",
      "modified": "2023-09-13T15:54:22",
      "hash": "10cbd48c44b1f8b39e60d3ef1da578d51bd1bec9c87b39318458ebc8d3171aa0",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\gif2webp.exe",
      "size": 792576,
      "created": "2025-01-13T05:33:06.833941",
      "modified": "2023-09-13T16:07:02",
      "hash": "57440bdd9b2e55b1745640e4e8602197af70cb2b215991901f54cc0ee69cc5ef",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\img2webp.exe",
      "size": 747520,
      "created": "2025-01-13T05:33:06.841681",
      "modified": "2023-09-13T15:54:22",
      "hash": "d2073e7c27487c2239e64add6c9cb9b3554c0bc19153d35a170efac8fc58dae8",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\vwebp.exe",
      "size": 485376,
      "created": "2025-01-13T05:33:06.849937",
      "modified": "2023-09-13T15:54:20",
      "hash": "e8e0bb7cb3d59f6c8e7361da4c47d89079c1621f6be14c139c8b694681b20f27",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\webpinfo.exe",
      "size": 306688,
      "created": "2025-01-13T05:33:06.856366",
      "modified": "2023-09-13T15:54:24",
      "hash": "ef1317dd8bfa5f1f5e4b0573c2aee513d3363c7894813fe276adcd40e6b24109",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\webpmux.exe",
      "size": 238592,
      "created": "2025-01-13T05:33:06.861377",
      "modified": "2023-09-13T15:54:20",
      "hash": "226756f76af9025f7cc50edaabcdee37bfd563b8b409865d30abd39387867b0a",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\bin\\webp_quality.exe",
      "size": 223232,
      "created": "2025-01-13T05:33:06.865379",
      "modified": "2023-09-13T15:54:22",
      "hash": "1167d55b83f7943e2c4c71af7ccc5da37b4a1648bf19ed79afcdc9832bf81aa2",
      "extension": ".exe",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\doc\\api.md",
      "size": 13839,
      "created": "2025-01-13T05:33:06.873690",
      "modified": "2023-09-13T16:07:10",
      "hash": "974a25fdf6be48e1202ebffe88c043ccda2617fcd5306406165b66011f091aac",
      "extension": ".md",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\doc\\tools.md",
      "size": 18611,
      "created": "2025-01-13T05:33:06.876690",
      "modified": "2023-09-13T16:07:10",
      "hash": "6cfc62b3d210fcf57baa2a5d5a24aaedde9dbf11c4edbfc308fddd5e1ec49ba6",
      "extension": ".md",
      "analyzed": true,
      "has_issues": true,
      "issues": ["Long lines found on lines: [275]"],
      "similar_files": [],
      "dependencies": [],
      "status": "has_issues"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\lib\\libwebp.lib",
      "size": 1708664,
      "created": "2025-01-13T05:33:06.916696",
      "modified": "2023-09-13T15:54:16",
      "hash": "e4a4830d79aabf664514174934cb3f637dfcec0ae5747451e6d05c364504ff94",
      "extension": ".lib",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\lib\\libwebpdemux.lib",
      "size": 41218,
      "created": "2025-01-13T05:33:06.926693",
      "modified": "2023-09-13T15:54:18",
      "hash": "dff61a3dffc7e491911534f0e349678652baf9cbde35f7a938e50e3b904d4345",
      "extension": ".lib",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\lib\\libwebpmux.lib",
      "size": 120828,
      "created": "2025-01-13T05:33:06.929695",
      "modified": "2023-09-13T15:54:20",
      "hash": "180ce5d525b7cc938387021bbac67657d2b248d7ac5070ae0949ddb22f5f1600",
      "extension": ".lib",
      "analyzed": true,
      "has_issues": false,
      "issues": ["Binary file - skipped analysis"],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\include\\webp\\decode.h",
      "size": 24285,
      "created": "2025-01-13T05:33:06.887927",
      "modified": "2023-09-13T16:07:10",
      "hash": "dbcb8d5439aac0cdfe291cec0ad386d7e086c72582da7f42a617460248606217",
      "extension": ".h",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\include\\webp\\demux.h",
      "size": 15966,
      "created": "2025-01-13T05:33:06.891690",
      "modified": "2023-09-13T16:07:10",
      "hash": "ce7ebcda104de0b1a23c8f9fd790ed1b3d183c587b20e25177155b242d12c1ce",
      "extension": ".h",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\include\\webp\\encode.h",
      "size": 28562,
      "created": "2025-01-13T05:33:06.894690",
      "modified": "2023-09-13T16:07:10",
      "hash": "db4cad4a06905829b56b27cafab57242734685aea263b4a09bd5f845e53e6542",
      "extension": ".h",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\include\\webp\\mux.h",
      "size": 23363,
      "created": "2025-01-13T05:33:06.898689",
      "modified": "2023-09-13T16:07:10",
      "hash": "def29519b2bd3ac1f6f2b64492f243f2f0dcd7e6dc6e66077fb668f41297ab56",
      "extension": ".h",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\include\\webp\\mux_types.h",
      "size": 3291,
      "created": "2025-01-13T05:33:06.902694",
      "modified": "2023-09-13T16:07:10",
      "hash": "710a01b7778ca9d16883495b3cf868848e46348dbd35d6d3b0a0005a5188ab6a",
      "extension": ".h",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    },
    {
      "path": "C:\\Users\\JR\\Documents\\DojoPool\\DojoPoolCombined\\webp_libs\\libwebp-1.3.2-windows-x64\\include\\webp\\types.h",
      "size": 2286,
      "created": "2025-01-13T05:33:06.906691",
      "modified": "2023-09-13T16:07:10",
      "hash": "f34a316463faf2cd471b8f723209c268808ee6919d542f58b868fb1fa946c8a8",
      "extension": ".h",
      "analyzed": true,
      "has_issues": false,
      "issues": [],
      "similar_files": [],
      "dependencies": [],
      "status": "analyzed"
    }
  ],
  "statistics": {
    "total_files": 1711,
    "total_size": 117571144,
    "by_extension": {
      ".example": 3,
      ".production": 3,
      ".20241223_143631": 1,
      ".js": 80,
      ".json": 48,
      ".yaml": 21,
      ".sh": 8,
      ".log": 20,
      ".md": 76,
      ".py": 612,
      ".yml": 12,
      ".db": 8,
      ".rules": 2,
      ".ps1": 9,
      ".toml": 2,
      ".ini": 8,
      ".txt": 25,
      ".cfg": 2,
      ".lock": 1,
      ".cache": 1,
      ".TAG": 2,
      ".html": 75,
      ".crt": 6,
      ".key": 6,
      ".docx": 9,
      ".code-workspace": 1,
      ".mako": 2,
      ".conf": 8,
      ".bat": 3,
      ".css": 33,
      ".pem": 2,
      ".zip": 1,
      ".map": 3,
      ".tmp": 1,
      ".backend": 1,
      ".1": 1,
      ".crontab": 1,
      ".ts": 112,
      ".tsx": 100,
      ".xml": 1,
      ".test": 1,
      ".ico": 2,
      ".svg": 21,
      ".png": 47,
      ".scss": 40,
      ".mp3": 2,
      ".avif": 62,
      ".jpg": 65,
      ".webp": 110,
      ".ppm": 1,
      ".exe": 11,
      ".dll": 1,
      ".lib": 3,
      ".h": 6
    },
    "by_status": {
      "pending": 1711,
      "analyzed": 0,
      "has_issues": 0
    }
  }
}
