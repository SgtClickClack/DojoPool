"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["vendors~node_modules_next_dist_client_components_react-dev-overlay_internal_c"],{

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/CallStackFrame.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/CallStackFrame.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"CallStackFrame\", ({\n  enumerable: true,\n  get: function get() {\n    return CallStackFrame;\n  }\n}));\nvar _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar _stackframe = __webpack_require__(/*! ../../helpers/stack-frame */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/stack-frame.js\");\nvar _useopenineditor = __webpack_require__(/*! ../../helpers/use-open-in-editor */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/use-open-in-editor.js\");\nvar _hotlinkedtext = __webpack_require__(/*! ../../components/hot-linked-text */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/components/hot-linked-text/index.js\");\nvar CallStackFrame = function CallStackFrame(param) {\n  var frame = param.frame;\n  var _frame_originalStackFrame;\n  // TODO: ability to expand resolved frames\n  // TODO: render error or external indicator\n  var f = (_frame_originalStackFrame = frame.originalStackFrame) != null ? _frame_originalStackFrame : frame.sourceStackFrame;\n  var hasSource = Boolean(frame.originalCodeFrame);\n  var open = (0, _useopenineditor.useOpenInEditor)(hasSource ? {\n    file: f.file,\n    lineNumber: f.lineNumber,\n    column: f.column\n  } : undefined);\n  return /*#__PURE__*/(0, _jsxruntime.jsxs)(\"div\", {\n    \"data-nextjs-call-stack-frame\": true,\n    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"h3\", {\n      \"data-nextjs-frame-expanded\": Boolean(frame.expanded),\n      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_hotlinkedtext.HotlinkedText, {\n        text: f.methodName\n      })\n    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(\"div\", {\n      \"data-has-source\": hasSource ? \"true\" : undefined,\n      tabIndex: hasSource ? 10 : undefined,\n      role: hasSource ? \"link\" : undefined,\n      onClick: open,\n      title: hasSource ? \"Click to open in your editor\" : undefined,\n      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", {\n        children: (0, _stackframe.getFrameSource)(f)\n      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"path\", {\n          d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"\n        }), /*#__PURE__*/(0, _jsxruntime.jsx)(\"polyline\", {\n          points: \"15 3 21 3 21 9\"\n        }), /*#__PURE__*/(0, _jsxruntime.jsx)(\"line\", {\n          x1: \"10\",\n          y1: \"14\",\n          x2: \"21\",\n          y2: \"3\"\n        })]\n      })]\n    })]\n  });\n};\n_c = CallStackFrame;\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\nvar _c;\n$RefreshReg$(_c, \"CallStackFrame\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/CallStackFrame.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/GroupedStackFrames.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/GroupedStackFrames.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"GroupedStackFrames\", ({\n  enumerable: true,\n  get: function get() {\n    return GroupedStackFrames;\n  }\n}));\nvar _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar _CallStackFrame = __webpack_require__(/*! ./CallStackFrame */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/CallStackFrame.js\");\nvar _CollapseIcon = __webpack_require__(/*! ../../icons/CollapseIcon */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/icons/CollapseIcon.js\");\nvar _FrameworkIcon = __webpack_require__(/*! ../../icons/FrameworkIcon */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/icons/FrameworkIcon.js\");\nfunction FrameworkGroup(param) {\n  var framework = param.framework,\n    stackFrames = param.stackFrames;\n  return /*#__PURE__*/(0, _jsxruntime.jsxs)(\"details\", {\n    \"data-nextjs-collapsed-call-stack-details\": true,\n    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(\"summary\", {\n      tabIndex: 10,\n      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_CollapseIcon.CollapseIcon, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_FrameworkIcon.FrameworkIcon, {\n        framework: framework\n      }), framework === \"react\" ? \"React\" : \"Next.js\"]\n    }), stackFrames.map(function (frame, index) {\n      return /*#__PURE__*/(0, _jsxruntime.jsx)(_CallStackFrame.CallStackFrame, {\n        frame: frame\n      }, \"call-stack-\" + index);\n    })]\n  });\n}\n_c = FrameworkGroup;\nfunction GroupedStackFrames(param) {\n  var groupedStackFrames = param.groupedStackFrames,\n    show = param.show;\n  if (!show) return;\n  return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {\n    children: groupedStackFrames.map(function (stackFramesGroup, groupIndex) {\n      // Collapse React and Next.js frames\n      if (stackFramesGroup.framework) {\n        return /*#__PURE__*/(0, _jsxruntime.jsx)(FrameworkGroup, {\n          framework: stackFramesGroup.framework,\n          stackFrames: stackFramesGroup.stackFrames\n        }, \"call-stack-framework-group-\" + groupIndex);\n      }\n      return (\n        // Don't group non React and Next.js frames\n        stackFramesGroup.stackFrames.map(function (frame, frameIndex) {\n          return /*#__PURE__*/(0, _jsxruntime.jsx)(_CallStackFrame.CallStackFrame, {\n            frame: frame\n          }, \"call-stack-\" + groupIndex + \"-\" + frameIndex);\n        })\n      );\n    })\n  });\n}\n_c2 = GroupedStackFrames;\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"FrameworkGroup\");\n$RefreshReg$(_c2, \"GroupedStackFrames\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L2ludGVybmFsL2NvbnRhaW5lci9SdW50aW1lRXJyb3IvR3JvdXBlZFN0YWNrRnJhbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7RUFDekNHLEtBQUssRUFBRTtBQUNYLENBQUMsRUFBQztBQUNGSCxzREFBcUQ7RUFDakRJLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxHQUFHLEVBQUUsU0FBQUEsSUFBQSxFQUFXO0lBQ1osT0FBT0Msa0JBQWtCO0VBQzdCO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsSUFBTUMsV0FBVyxHQUFHQyxtQkFBTyxDQUFDLDhEQUFtQixDQUFDO0FBQ2hELElBQU1DLGVBQWUsR0FBR0QsbUJBQU8sQ0FBQyx3SUFBa0IsQ0FBQztBQUNuRCxJQUFNRSxhQUFhLEdBQUdGLG1CQUFPLENBQUMsNkhBQTBCLENBQUM7QUFDekQsSUFBTUcsY0FBYyxHQUFHSCxtQkFBTyxDQUFDLCtIQUEyQixDQUFDO0FBQzNELFNBQVNJLGNBQWNBLENBQUNDLEtBQUssRUFBRTtFQUMzQixJQUFNQyxTQUFTLEdBQWtCRCxLQUFLLENBQWhDQyxTQUFTO0lBQUVDLFdBQVcsR0FBS0YsS0FBSyxDQUFyQkUsV0FBVztFQUM1QixPQUFPLGFBQWMsQ0FBQyxDQUFDLEVBQUVSLFdBQVcsQ0FBQ1MsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUNsRCwwQ0FBMEMsRUFBRSxJQUFJO0lBQ2hEQyxRQUFRLEVBQUUsQ0FDTixhQUFjLENBQUMsQ0FBQyxFQUFFVixXQUFXLENBQUNTLElBQUksRUFBRSxTQUFTLEVBQUU7TUFDM0NFLFFBQVEsRUFBRSxFQUFFO01BQ1pELFFBQVEsRUFBRSxDQUNOLGFBQWMsQ0FBQyxDQUFDLEVBQUVWLFdBQVcsQ0FBQ1ksR0FBRyxFQUFFVCxhQUFhLENBQUNVLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUNsRSxhQUFjLENBQUMsQ0FBQyxFQUFFYixXQUFXLENBQUNZLEdBQUcsRUFBRVIsY0FBYyxDQUFDVSxhQUFhLEVBQUU7UUFDN0RQLFNBQVMsRUFBRUE7TUFDZixDQUFDLENBQUMsRUFDRkEsU0FBUyxLQUFLLE9BQU8sR0FBRyxPQUFPLEdBQUcsU0FBUztJQUVuRCxDQUFDLENBQUMsRUFDRkMsV0FBVyxDQUFDTyxHQUFHLENBQUMsVUFBQ0MsS0FBSyxFQUFFQyxLQUFLO01BQUEsT0FBRyxhQUFjLENBQUMsQ0FBQyxFQUFFakIsV0FBVyxDQUFDWSxHQUFHLEVBQUVWLGVBQWUsQ0FBQ2dCLGNBQWMsRUFBRTtRQUMzRkYsS0FBSyxFQUFFQTtNQUNYLENBQUMsRUFBRSxhQUFhLEdBQUdDLEtBQUssQ0FBQztJQUFBLEVBQUM7RUFFdEMsQ0FBQyxDQUFDO0FBQ047QUFBQ0UsRUFBQSxHQXBCUWQsY0FBYztBQXFCdkIsU0FBU04sa0JBQWtCQSxDQUFDTyxLQUFLLEVBQUU7RUFDL0IsSUFBTWMsa0JBQWtCLEdBQVdkLEtBQUssQ0FBbENjLGtCQUFrQjtJQUFFQyxJQUFJLEdBQUtmLEtBQUssQ0FBZGUsSUFBSTtFQUM5QixJQUFJLENBQUNBLElBQUksRUFBRTtFQUNYLE9BQU8sYUFBYyxDQUFDLENBQUMsRUFBRXJCLFdBQVcsQ0FBQ1ksR0FBRyxFQUFFWixXQUFXLENBQUNzQixRQUFRLEVBQUU7SUFDNURaLFFBQVEsRUFBRVUsa0JBQWtCLENBQUNMLEdBQUcsQ0FBQyxVQUFDUSxnQkFBZ0IsRUFBRUMsVUFBVSxFQUFHO01BQzdEO01BQ0EsSUFBSUQsZ0JBQWdCLENBQUNoQixTQUFTLEVBQUU7UUFDNUIsT0FBTyxhQUFjLENBQUMsQ0FBQyxFQUFFUCxXQUFXLENBQUNZLEdBQUcsRUFBRVAsY0FBYyxFQUFFO1VBQ3RERSxTQUFTLEVBQUVnQixnQkFBZ0IsQ0FBQ2hCLFNBQVM7VUFDckNDLFdBQVcsRUFBRWUsZ0JBQWdCLENBQUNmO1FBQ2xDLENBQUMsRUFBRSw2QkFBNkIsR0FBR2dCLFVBQVUsQ0FBQztNQUNsRDtNQUNBO1FBQU87UUFDUEQsZ0JBQWdCLENBQUNmLFdBQVcsQ0FBQ08sR0FBRyxDQUFDLFVBQUNDLEtBQUssRUFBRVMsVUFBVTtVQUFBLE9BQUcsYUFBYyxDQUFDLENBQUMsRUFBRXpCLFdBQVcsQ0FBQ1ksR0FBRyxFQUFFVixlQUFlLENBQUNnQixjQUFjLEVBQUU7WUFDakhGLEtBQUssRUFBRUE7VUFDWCxDQUFDLEVBQUUsYUFBYSxHQUFHUSxVQUFVLEdBQUcsR0FBRyxHQUFHQyxVQUFVLENBQUM7UUFBQTtNQUFDO0lBQzFELENBQUM7RUFDTCxDQUFDLENBQUM7QUFDTjtBQUFDQyxHQUFBLEdBbEJRM0Isa0JBQWtCO0FBb0IzQixJQUFJLENBQUMsT0FBT0osT0FBTyxXQUFRLEtBQUssVUFBVSxJQUFLLE9BQU9BLE9BQU8sV0FBUSxLQUFLLFFBQVEsSUFBSUEsT0FBTyxXQUFRLEtBQUssSUFBSyxLQUFLLE9BQU9BLE9BQU8sV0FBUSxDQUFDZ0MsVUFBVSxLQUFLLFdBQVcsRUFBRTtFQUNyS2xDLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLFdBQVEsRUFBRSxZQUFZLEVBQUU7SUFBRUMsS0FBSyxFQUFFO0VBQUssQ0FBQyxDQUFDO0VBQ3JFSCxNQUFNLENBQUNtQyxNQUFNLENBQUNqQyxPQUFPLFdBQVEsRUFBRUEsT0FBTyxDQUFDO0VBQ3ZDa0MsTUFBTSxDQUFDbEMsT0FBTyxHQUFHQSxPQUFPLFdBQVE7QUFDbEM7QUFBQyxJQUFBd0IsRUFBQSxFQUFBTyxHQUFBO0FBQUFJLFlBQUEsQ0FBQVgsRUFBQTtBQUFBVyxZQUFBLENBQUFKLEdBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9pbnRlcm5hbC9jb250YWluZXIvUnVudGltZUVycm9yL0dyb3VwZWRTdGFja0ZyYW1lcy5qcz85YTk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiR3JvdXBlZFN0YWNrRnJhbWVzXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBHcm91cGVkU3RhY2tGcmFtZXM7XG4gICAgfVxufSk7XG5jb25zdCBfanN4cnVudGltZSA9IHJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKTtcbmNvbnN0IF9DYWxsU3RhY2tGcmFtZSA9IHJlcXVpcmUoXCIuL0NhbGxTdGFja0ZyYW1lXCIpO1xuY29uc3QgX0NvbGxhcHNlSWNvbiA9IHJlcXVpcmUoXCIuLi8uLi9pY29ucy9Db2xsYXBzZUljb25cIik7XG5jb25zdCBfRnJhbWV3b3JrSWNvbiA9IHJlcXVpcmUoXCIuLi8uLi9pY29ucy9GcmFtZXdvcmtJY29uXCIpO1xuZnVuY3Rpb24gRnJhbWV3b3JrR3JvdXAocGFyYW0pIHtcbiAgICBsZXQgeyBmcmFtZXdvcmssIHN0YWNrRnJhbWVzIH0gPSBwYXJhbTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4cykoXCJkZXRhaWxzXCIsIHtcbiAgICAgICAgXCJkYXRhLW5leHRqcy1jb2xsYXBzZWQtY2FsbC1zdGFjay1kZXRhaWxzXCI6IHRydWUsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3hzKShcInN1bW1hcnlcIiwge1xuICAgICAgICAgICAgICAgIHRhYkluZGV4OiAxMCxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9Db2xsYXBzZUljb24uQ29sbGFwc2VJY29uLCB7fSksXG4gICAgICAgICAgICAgICAgICAgIC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoX0ZyYW1ld29ya0ljb24uRnJhbWV3b3JrSWNvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnJhbWV3b3JrOiBmcmFtZXdvcmtcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIGZyYW1ld29yayA9PT0gXCJyZWFjdFwiID8gXCJSZWFjdFwiIDogXCJOZXh0LmpzXCJcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIHN0YWNrRnJhbWVzLm1hcCgoZnJhbWUsIGluZGV4KT0+LyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShfQ2FsbFN0YWNrRnJhbWUuQ2FsbFN0YWNrRnJhbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhbWU6IGZyYW1lXG4gICAgICAgICAgICAgICAgfSwgXCJjYWxsLXN0YWNrLVwiICsgaW5kZXgpKVxuICAgICAgICBdXG4gICAgfSk7XG59XG5mdW5jdGlvbiBHcm91cGVkU3RhY2tGcmFtZXMocGFyYW0pIHtcbiAgICBsZXQgeyBncm91cGVkU3RhY2tGcmFtZXMsIHNob3cgfSA9IHBhcmFtO1xuICAgIGlmICghc2hvdykgcmV0dXJuO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9qc3hydW50aW1lLkZyYWdtZW50LCB7XG4gICAgICAgIGNoaWxkcmVuOiBncm91cGVkU3RhY2tGcmFtZXMubWFwKChzdGFja0ZyYW1lc0dyb3VwLCBncm91cEluZGV4KT0+e1xuICAgICAgICAgICAgLy8gQ29sbGFwc2UgUmVhY3QgYW5kIE5leHQuanMgZnJhbWVzXG4gICAgICAgICAgICBpZiAoc3RhY2tGcmFtZXNHcm91cC5mcmFtZXdvcmspIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShGcmFtZXdvcmtHcm91cCwge1xuICAgICAgICAgICAgICAgICAgICBmcmFtZXdvcms6IHN0YWNrRnJhbWVzR3JvdXAuZnJhbWV3b3JrLFxuICAgICAgICAgICAgICAgICAgICBzdGFja0ZyYW1lczogc3RhY2tGcmFtZXNHcm91cC5zdGFja0ZyYW1lc1xuICAgICAgICAgICAgICAgIH0sIFwiY2FsbC1zdGFjay1mcmFtZXdvcmstZ3JvdXAtXCIgKyBncm91cEluZGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybigvLyBEb24ndCBncm91cCBub24gUmVhY3QgYW5kIE5leHQuanMgZnJhbWVzXG4gICAgICAgICAgICBzdGFja0ZyYW1lc0dyb3VwLnN0YWNrRnJhbWVzLm1hcCgoZnJhbWUsIGZyYW1lSW5kZXgpPT4vKiNfX1BVUkVfXyovICgwLCBfanN4cnVudGltZS5qc3gpKF9DYWxsU3RhY2tGcmFtZS5DYWxsU3RhY2tGcmFtZSwge1xuICAgICAgICAgICAgICAgICAgICBmcmFtZTogZnJhbWVcbiAgICAgICAgICAgICAgICB9LCBcImNhbGwtc3RhY2stXCIgKyBncm91cEluZGV4ICsgXCItXCIgKyBmcmFtZUluZGV4KSkpO1xuICAgICAgICB9KVxuICAgIH0pO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Hcm91cGVkU3RhY2tGcmFtZXMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIkdyb3VwZWRTdGFja0ZyYW1lcyIsIl9qc3hydW50aW1lIiwicmVxdWlyZSIsIl9DYWxsU3RhY2tGcmFtZSIsIl9Db2xsYXBzZUljb24iLCJfRnJhbWV3b3JrSWNvbiIsIkZyYW1ld29ya0dyb3VwIiwicGFyYW0iLCJmcmFtZXdvcmsiLCJzdGFja0ZyYW1lcyIsImpzeHMiLCJjaGlsZHJlbiIsInRhYkluZGV4IiwianN4IiwiQ29sbGFwc2VJY29uIiwiRnJhbWV3b3JrSWNvbiIsIm1hcCIsImZyYW1lIiwiaW5kZXgiLCJDYWxsU3RhY2tGcmFtZSIsIl9jIiwiZ3JvdXBlZFN0YWNrRnJhbWVzIiwic2hvdyIsIkZyYWdtZW50Iiwic3RhY2tGcmFtZXNHcm91cCIsImdyb3VwSW5kZXgiLCJmcmFtZUluZGV4IiwiX2MyIiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSIsIiRSZWZyZXNoUmVnJCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/GroupedStackFrames.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/component-stack-pseudo-html.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/component-stack-pseudo-html.js ***!
  \***********************************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nvar _defineProperty = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js\");\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js\");\nvar _objectWithoutProperties = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/objectWithoutProperties.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/objectWithoutProperties.js\");\nvar _excluded = [\"componentStackFrames\", \"firstContent\", \"secondContent\", \"hydrationMismatchType\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"PseudoHtmlDiff\", ({\n  enumerable: true,\n  get: function get() {\n    return PseudoHtmlDiff;\n  }\n}));\nvar _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _CollapseIcon = __webpack_require__(/*! ../../icons/CollapseIcon */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/icons/CollapseIcon.js\");\nfunction getAdjacentProps(isAdj) {\n  return {\n    \"data-nextjs-container-errors-pseudo-html--tag-adjacent\": isAdj\n  };\n}\nfunction PseudoHtmlDiff(param) {\n  var componentStackFrames = param.componentStackFrames,\n    firstContent = param.firstContent,\n    secondContent = param.secondContent,\n    hydrationMismatchType = param.hydrationMismatchType,\n    props = _objectWithoutProperties(param, _excluded);\n  var isHtmlTagsWarning = hydrationMismatchType === \"tag\";\n  // For text mismatch, mismatched text will take 2 rows, so we display 4 rows of component stack\n  var MAX_NON_COLLAPSED_FRAMES = isHtmlTagsWarning ? 6 : 4;\n  var shouldCollapse = componentStackFrames.length > MAX_NON_COLLAPSED_FRAMES;\n  var _ref = (0, _react.useState)(shouldCollapse),\n    _ref2 = _slicedToArray(_ref, 2),\n    isHtmlCollapsed = _ref2[0],\n    toggleCollapseHtml = _ref2[1];\n  var htmlComponents = (0, _react.useMemo)(function () {\n    var tagNames = isHtmlTagsWarning ? [firstContent.replace(/<|>/g, \"\"), secondContent.replace(/<|>/g, \"\")] : [];\n    var nestedHtmlStack = [];\n    var lastText = \"\";\n    var componentStack = componentStackFrames.map(function (frame) {\n      return frame.component;\n    }).reverse();\n    // [child index, parent index]\n    var matchedIndex = [-1, -1];\n    if (isHtmlTagsWarning) {\n      // Reverse search for the child tag\n      for (var i = componentStack.length - 1; i >= 0; i--) {\n        if (componentStack[i] === tagNames[0]) {\n          matchedIndex[0] = i;\n          break;\n        }\n      }\n      // Start searching parent tag from child tag above\n      for (var _i = matchedIndex[0] - 1; _i >= 0; _i--) {\n        if (componentStack[_i] === tagNames[1]) {\n          matchedIndex[1] = _i;\n          break;\n        }\n      }\n    }\n    componentStack.forEach(function (component, index, componentList) {\n      var spaces = \" \".repeat(nestedHtmlStack.length * 2);\n      // const prevComponent = componentList[index - 1]\n      // const nextComponent = componentList[index + 1]\n      // When component is the server or client tag name, highlight it\n      var isHighlightedTag = isHtmlTagsWarning ? index === matchedIndex[0] || index === matchedIndex[1] : tagNames.includes(component);\n      var isAdjacentTag = isHighlightedTag || Math.abs(index - matchedIndex[0]) <= 1 || Math.abs(index - matchedIndex[1]) <= 1;\n      var isLastFewFrames = !isHtmlTagsWarning && index >= componentList.length - 6;\n      var adjProps = getAdjacentProps(isAdjacentTag);\n      if (isHtmlTagsWarning && isAdjacentTag || isLastFewFrames) {\n        var codeLine = /*#__PURE__*/(0, _jsxruntime.jsxs)(\"span\", {\n          children: [spaces, /*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", _objectSpread(_objectSpread(_objectSpread({}, adjProps), isHighlightedTag ? {\n            \"data-nextjs-container-errors-pseudo-html--tag-error\": true\n          } : undefined), {}, {\n            children: \"<\" + component + \">\\n\"\n          }))]\n        });\n        lastText = component;\n        var wrappedCodeLine = /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {\n          children: [codeLine, isHighlightedTag && /*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", {\n            \"data-nextjs-container-errors-pseudo-html--hint\": true,\n            children: spaces + \"^\".repeat(component.length + 2) + \"\\n\"\n          })]\n        }, nestedHtmlStack.length);\n        nestedHtmlStack.push(wrappedCodeLine);\n      } else {\n        if (nestedHtmlStack.length >= MAX_NON_COLLAPSED_FRAMES && isHtmlCollapsed) {\n          return;\n        }\n        if (!isHtmlCollapsed || isLastFewFrames) {\n          nestedHtmlStack.push( /*#__PURE__*/(0, _react.createElement)(\"span\", _objectSpread(_objectSpread({}, adjProps), {}, {\n            key: nestedHtmlStack.length,\n            children: [spaces, \"<\" + component + \">\\n\"]\n          })));\n        } else if (isHtmlCollapsed && lastText !== \"...\") {\n          lastText = \"...\";\n          nestedHtmlStack.push( /*#__PURE__*/(0, _react.createElement)(\"span\", _objectSpread(_objectSpread({}, adjProps), {}, {\n            key: nestedHtmlStack.length,\n            children: [spaces, \"...\\n\"]\n          })));\n        }\n      }\n    });\n    // Hydration mismatch: text or text-tag\n    if (!isHtmlTagsWarning) {\n      var spaces = \" \".repeat(nestedHtmlStack.length * 2);\n      var wrappedCodeLine;\n      if (hydrationMismatchType === \"text\") {\n        // hydration type is \"text\", represent [server content, client content]\n        wrappedCodeLine = /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {\n          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", {\n            \"data-nextjs-container-errors-pseudo-html--diff-remove\": true,\n            children: spaces + ('\"' + firstContent + '\"\\n')\n          }), /*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", {\n            \"data-nextjs-container-errors-pseudo-html--diff-add\": true,\n            children: spaces + ('\"' + secondContent + '\"\\n')\n          })]\n        }, nestedHtmlStack.length);\n      } else {\n        // hydration type is \"text-in-tag\", represent [parent tag, mismatch content]\n        wrappedCodeLine = /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {\n          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", {\n            \"data-nextjs-container-errors-pseudo-html--tag-adjacent\": true,\n            children: spaces + (\"<\" + secondContent + \">\\n\")\n          }), /*#__PURE__*/(0, _jsxruntime.jsx)(\"span\", {\n            \"data-nextjs-container-errors-pseudo-html--diff-remove\": true,\n            children: spaces + ('  \"' + firstContent + '\"\\n')\n          })]\n        }, nestedHtmlStack.length);\n      }\n      nestedHtmlStack.push(wrappedCodeLine);\n    }\n    return nestedHtmlStack;\n  }, [componentStackFrames, isHtmlCollapsed, firstContent, secondContent, isHtmlTagsWarning, hydrationMismatchType, MAX_NON_COLLAPSED_FRAMES]);\n  return /*#__PURE__*/(0, _jsxruntime.jsxs)(\"div\", {\n    \"data-nextjs-container-errors-pseudo-html\": true,\n    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"button\", {\n      tabIndex: 10,\n      \"data-nextjs-container-errors-pseudo-html-collapse\": true,\n      onClick: function onClick() {\n        return toggleCollapseHtml(!isHtmlCollapsed);\n      },\n      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_CollapseIcon.CollapseIcon, {\n        collapsed: isHtmlCollapsed\n      })\n    }), /*#__PURE__*/(0, _jsxruntime.jsx)(\"pre\", _objectSpread(_objectSpread({}, props), {}, {\n      children: /*#__PURE__*/(0, _jsxruntime.jsx)(\"code\", {\n        children: htmlComponents\n      })\n    }))]\n  });\n}\n_c = PseudoHtmlDiff;\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\nvar _c;\n$RefreshReg$(_c, \"PseudoHtmlDiff\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/component-stack-pseudo-html.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/index.js ***!
  \*************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js\");\nvar _s = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  RuntimeError: function RuntimeError() {\n    return _RuntimeError;\n  },\n  styles: function styles() {\n    return _styles;\n  }\n});\nvar _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nvar _tagged_template_literal_loose = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal_loose */ \"./node_modules/@swc/helpers/esm/_tagged_template_literal_loose.js\");\nvar _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\nvar _react = /*#__PURE__*/_interop_require_wildcard._(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _CodeFrame = __webpack_require__(/*! ../../components/CodeFrame */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/components/CodeFrame/index.js\");\nvar _nooptemplate = __webpack_require__(/*! ../../helpers/noop-template */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/noop-template.js\");\nvar _groupstackframesbyframework = __webpack_require__(/*! ../../helpers/group-stack-frames-by-framework */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/group-stack-frames-by-framework.js\");\nvar _GroupedStackFrames = __webpack_require__(/*! ./GroupedStackFrames */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/GroupedStackFrames.js\");\nfunction _templateObject() {\n  var data = _tagged_template_literal_loose._([\"\\n  button[data-nextjs-data-runtime-error-collapsed-action] {\\n    background: none;\\n    border: none;\\n    padding: 0;\\n    font-size: var(--size-font-small);\\n    line-height: var(--size-font-bigger);\\n    color: var(--color-accents-3);\\n  }\\n\\n  [data-nextjs-call-stack-frame]:not(:last-child),\\n  [data-nextjs-component-stack-frame]:not(:last-child) {\\n    margin-bottom: var(--size-gap-double);\\n  }\\n\\n  [data-nextjs-call-stack-frame] > h3,\\n  [data-nextjs-component-stack-frame] > h3 {\\n    margin-top: 0;\\n    margin-bottom: var(--size-gap);\\n    font-family: var(--font-stack-monospace);\\n    font-size: var(--size-font);\\n    color: #222;\\n  }\\n  [data-nextjs-call-stack-frame] > h3[data-nextjs-frame-expanded='false'] {\\n    color: #666;\\n  }\\n  [data-nextjs-call-stack-frame] > div,\\n  [data-nextjs-component-stack-frame] > div {\\n    display: flex;\\n    align-items: center;\\n    padding-left: calc(var(--size-gap) + var(--size-gap-half));\\n    font-size: var(--size-font-small);\\n    color: #999;\\n  }\\n  [data-nextjs-call-stack-frame] > div > svg,\\n  [data-nextjs-component-stack-frame] > [role='link'] > svg {\\n    width: auto;\\n    height: var(--size-font-small);\\n    margin-left: var(--size-gap);\\n    flex-shrink: 0;\\n\\n    display: none;\\n  }\\n\\n  [data-nextjs-call-stack-frame] > div[data-has-source],\\n  [data-nextjs-component-stack-frame] > [role='link'] {\\n    cursor: pointer;\\n  }\\n  [data-nextjs-call-stack-frame] > div[data-has-source]:hover,\\n  [data-nextjs-component-stack-frame] > [role='link']:hover {\\n    text-decoration: underline dotted;\\n  }\\n  [data-nextjs-call-stack-frame] > div[data-has-source] > svg,\\n  [data-nextjs-component-stack-frame] > [role='link'] > svg {\\n    display: unset;\\n  }\\n\\n  [data-nextjs-call-stack-framework-icon] {\\n    margin-right: var(--size-gap);\\n  }\\n  [data-nextjs-call-stack-framework-icon='next'] > mask {\\n    mask-type: alpha;\\n  }\\n  [data-nextjs-call-stack-framework-icon='react'] {\\n    color: rgb(20, 158, 202);\\n  }\\n  [data-nextjs-collapsed-call-stack-details][open]\\n    [data-nextjs-call-stack-chevron-icon] {\\n    transform: rotate(90deg);\\n  }\\n  [data-nextjs-collapsed-call-stack-details] summary {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: var(--size-gap);\\n    list-style: none;\\n  }\\n  [data-nextjs-collapsed-call-stack-details] summary::-webkit-details-marker {\\n    display: none;\\n  }\\n\\n  [data-nextjs-collapsed-call-stack-details] h3 {\\n    color: #666;\\n  }\\n  [data-nextjs-collapsed-call-stack-details] [data-nextjs-call-stack-frame] {\\n    margin-bottom: var(--size-gap-double);\\n  }\\n\\n  [data-nextjs-container-errors-pseudo-html] {\\n    position: relative;\\n  }\\n  [data-nextjs-container-errors-pseudo-html-collapse] {\\n    position: absolute;\\n    left: 10px;\\n    top: 10px;\\n    color: inherit;\\n    background: none;\\n    border: none;\\n    padding: 0;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff-add] {\\n    color: var(--color-ansi-green);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff-remove] {\\n    color: var(--color-ansi-red);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--tag-error] {\\n    color: var(--color-ansi-red);\\n    font-weight: bold;\\n  }\\n  /* hide but text are still accessible in DOM */\\n  [data-nextjs-container-errors-pseudo-html--hint] {\\n    display: inline-block;\\n    font-size: 0;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--tag-adjacent='false'] {\\n    color: var(--color-accents-1);\\n  }\\n\"]);\n  _templateObject = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nfunction _RuntimeError(param) {\n  _s();\n  var error = param.error;\n  var _react$useMemo = _react.useMemo(function () {\n      var filteredFrames = error.frames.filter(function (f) {\n        var _f_sourceStackFrame_file;\n        return !(f.sourceStackFrame.file === \"<anonymous>\" && [\"stringify\", \"<unknown>\"].includes(f.sourceStackFrame.methodName)) && !((_f_sourceStackFrame_file = f.sourceStackFrame.file) == null ? void 0 : _f_sourceStackFrame_file.startsWith(\"node:internal\"));\n      });\n      var firstFirstPartyFrameIndex = filteredFrames.findIndex(function (entry) {\n        return entry.expanded && Boolean(entry.originalCodeFrame) && Boolean(entry.originalStackFrame);\n      });\n      var _filteredFrames_firstFirstPartyFrameIndex;\n      return {\n        firstFrame: (_filteredFrames_firstFirstPartyFrameIndex = filteredFrames[firstFirstPartyFrameIndex]) != null ? _filteredFrames_firstFirstPartyFrameIndex : null,\n        allLeadingFrames: firstFirstPartyFrameIndex < 0 ? [] : filteredFrames.slice(0, firstFirstPartyFrameIndex),\n        allCallStackFrames: filteredFrames.slice(firstFirstPartyFrameIndex + 1)\n      };\n    }, [error.frames]),\n    firstFrame = _react$useMemo.firstFrame,\n    allLeadingFrames = _react$useMemo.allLeadingFrames,\n    allCallStackFrames = _react$useMemo.allCallStackFrames;\n  var _react$useState = _react.useState(firstFrame == null),\n    _react$useState2 = _slicedToArray(_react$useState, 2),\n    all = _react$useState2[0],\n    setAll = _react$useState2[1];\n  var _react$useMemo2 = _react.useMemo(function () {\n      var leadingFrames = allLeadingFrames.filter(function (f) {\n        return f.expanded || all;\n      });\n      var visibleCallStackFrames = allCallStackFrames.filter(function (f) {\n        return f.expanded || all;\n      });\n      return {\n        canShowMore: allCallStackFrames.length !== visibleCallStackFrames.length || all && firstFrame != null,\n        stackFramesGroupedByFramework: (0, _groupstackframesbyframework.groupStackFramesByFramework)(allCallStackFrames),\n        leadingFramesGroupedByFramework: (0, _groupstackframesbyframework.groupStackFramesByFramework)(leadingFrames)\n      };\n    }, [all, allCallStackFrames, allLeadingFrames, firstFrame]),\n    canShowMore = _react$useMemo2.canShowMore,\n    leadingFramesGroupedByFramework = _react$useMemo2.leadingFramesGroupedByFramework,\n    stackFramesGroupedByFramework = _react$useMemo2.stackFramesGroupedByFramework;\n  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {\n    children: [firstFrame ? /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {\n      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"h2\", {\n        children: \"Source\"\n      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_GroupedStackFrames.GroupedStackFrames, {\n        groupedStackFrames: leadingFramesGroupedByFramework,\n        show: all\n      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_CodeFrame.CodeFrame, {\n        stackFrame: firstFrame.originalStackFrame,\n        codeFrame: firstFrame.originalCodeFrame\n      })]\n    }) : undefined, stackFramesGroupedByFramework.length ? /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {\n      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(\"h2\", {\n        children: \"Call Stack\"\n      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_GroupedStackFrames.GroupedStackFrames, {\n        groupedStackFrames: stackFramesGroupedByFramework,\n        show: all\n      })]\n    }) : undefined, canShowMore ? /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Fragment, {\n      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(\"button\", {\n        tabIndex: 10,\n        \"data-nextjs-data-runtime-error-collapsed-action\": true,\n        type: \"button\",\n        onClick: function onClick() {\n          return setAll(!all);\n        },\n        children: [all ? \"Hide\" : \"Show\", \" collapsed frames\"]\n      })\n    }) : undefined]\n  });\n}\n_s(_RuntimeError, \"IxUV+6sfFf94RV83YAUHBr0cfHM=\");\nvar _styles = (0, _nooptemplate.noop)(_templateObject());\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/internal/container/RuntimeError/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/format-webpack-messages.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/format-webpack-messages.js ***!
  \****************************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\nMIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nvar _defineProperty = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js\");\nvar _toConsumableArray = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray.js\");\nvar _slicedToArray = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/slicedToArray.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n  enumerable: true,\n  get: function get() {\n    return formatWebpackMessages;\n  }\n}));\nvar _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nvar _stripansi = /*#__PURE__*/_interop_require_default._(__webpack_require__(/*! next/dist/compiled/strip-ansi */ \"./node_modules/next/dist/compiled/strip-ansi/index.js\"));\n// This file is based on https://github.com/facebook/create-react-app/blob/7b1a32be6ec9f99a6c9a3c66813f3ac09c4736b9/packages/react-dev-utils/formatWebpackMessages.js\n// It's been edited to remove chalk and CRA-specific logic\nvar friendlySyntaxErrorLabel = \"Syntax error:\";\nvar WEBPACK_BREAKING_CHANGE_POLYFILLS = \"\\n\\nBREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.\";\nfunction isLikelyASyntaxError(message) {\n  return (0, _stripansi[\"default\"])(message).includes(friendlySyntaxErrorLabel);\n}\nvar hadMissingSassError = false;\n// Cleans up webpack error messages.\nfunction formatMessage(message, verbose, importTraceNote) {\n  // TODO: Replace this once webpack 5 is stable\n  if (typeof message === \"object\" && message.message) {\n    var filteredModuleTrace = message.moduleTrace && message.moduleTrace.filter(function (trace) {\n      return !/next-(middleware|client-pages|route|edge-function)-loader\\.js/.test(trace.originName);\n    });\n    var body = message.message;\n    var breakingChangeIndex = body.indexOf(WEBPACK_BREAKING_CHANGE_POLYFILLS);\n    if (breakingChangeIndex >= 0) {\n      body = body.slice(0, breakingChangeIndex);\n    }\n    message = (message.moduleName ? (0, _stripansi[\"default\"])(message.moduleName) + \"\\n\" : \"\") + (message.file ? (0, _stripansi[\"default\"])(message.file) + \"\\n\" : \"\") + body + (message.details && verbose ? \"\\n\" + message.details : \"\") + (filteredModuleTrace && filteredModuleTrace.length ? (importTraceNote || \"\\n\\nImport trace for requested module:\") + filteredModuleTrace.map(function (trace) {\n      return \"\\n\" + trace.moduleName;\n    }).join(\"\") : \"\") + (message.stack && verbose ? \"\\n\" + message.stack : \"\");\n  }\n  var lines = message.split(\"\\n\");\n  // Strip Webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n  lines = lines.filter(function (line) {\n    return !/Module [A-z ]+\\(from/.test(line);\n  });\n  // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n  lines = lines.map(function (line) {\n    var parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);\n    if (!parsingError) {\n      return line;\n    }\n    var _parsingError = _slicedToArray(parsingError, 4),\n      errorLine = _parsingError[1],\n      errorColumn = _parsingError[2],\n      errorMessage = _parsingError[3];\n    return friendlySyntaxErrorLabel + \" \" + errorMessage + \" (\" + errorLine + \":\" + errorColumn + \")\";\n  });\n  message = lines.join(\"\\n\");\n  // Smoosh syntax errors (commonly found in CSS)\n  message = message.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, \"\" + friendlySyntaxErrorLabel + \" $3 ($1:$2)\\n\");\n  // Clean up export errors\n  message = message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm, \"Attempted import error: '$1' is not exported from '$2'.\");\n  message = message.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, \"Attempted import error: '$2' does not contain a default export (imported as '$1').\");\n  message = message.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, \"Attempted import error: '$1' is not exported from '$3' (imported as '$2').\");\n  lines = message.split(\"\\n\");\n  // Remove leading newline\n  if (lines.length > 2 && lines[1].trim() === \"\") {\n    lines.splice(1, 1);\n  }\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1] && lines[1].indexOf(\"Module not found: \") === 0) {\n    lines = [lines[0], lines[1].replace(\"Error: \", \"\").replace(\"Module not found: Cannot find file:\", \"Cannot find file:\")].concat(_toConsumableArray(lines.slice(2)));\n  }\n  // Add helpful message for users trying to use Sass for the first time\n  if (lines[1] && lines[1].match(/Cannot find module.+sass/)) {\n    // ./file.module.scss (<<loader info>>) => ./file.module.scss\n    var firstLine = lines[0].split(\"!\");\n    lines[0] = firstLine[firstLine.length - 1];\n    lines[1] = \"To use Next.js' built-in Sass support, you first need to install `sass`.\\n\";\n    lines[1] += \"Run `npm i sass` or `yarn add sass` inside your workspace.\\n\";\n    lines[1] += \"\\nLearn more: https://nextjs.org/docs/messages/install-sass\";\n    // dispose of unhelpful stack trace\n    lines = lines.slice(0, 2);\n    hadMissingSassError = true;\n  } else if (hadMissingSassError && message.match(/(sass-loader|resolve-url-loader: CSS error)/)) {\n    // dispose of unhelpful stack trace following missing sass module\n    lines = [];\n  }\n  if (!verbose) {\n    message = lines.join(\"\\n\");\n    // Internal stacks are generally useless so we strip them... with the\n    // exception of stacks containing `webpack:` because they're normally\n    // from user code generated by Webpack. For more information see\n    // https://github.com/facebook/create-react-app/pull/1050\n    message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, \"\") // at ... ...:x:y\n    ;\n\n    message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, \"\") // at <anonymous>\n    ;\n\n    message = message.replace(/File was processed with these loaders:\\n(.+[\\\\/](next[\\\\/]dist[\\\\/].+|@next[\\\\/]react-refresh-utils[\\\\/]loader)\\.js\\n)*You may need an additional loader to handle the result of these loaders.\\n/g, \"\");\n    lines = message.split(\"\\n\");\n  }\n  // Remove duplicated newlines\n  lines = lines.filter(function (line, index, arr) {\n    return index === 0 || line.trim() !== \"\" || line.trim() !== arr[index - 1].trim();\n  });\n  // Reassemble the message\n  message = lines.join(\"\\n\");\n  return message.trim();\n}\nfunction formatWebpackMessages(json, verbose) {\n  var formattedErrors = json.errors.map(function (message) {\n    var isUnknownNextFontError = message.message.includes(\"An error occurred in `next/font`.\");\n    return formatMessage(message, isUnknownNextFontError || verbose);\n  });\n  var formattedWarnings = json.warnings.map(function (message) {\n    return formatMessage(message, verbose);\n  });\n  // Reorder errors to put the most relevant ones first.\n  var reactServerComponentsError = -1;\n  for (var i = 0; i < formattedErrors.length; i++) {\n    var error = formattedErrors[i];\n    if (error.includes(\"ReactServerComponentsError\")) {\n      reactServerComponentsError = i;\n      break;\n    }\n  }\n  // Move the reactServerComponentsError to the top if it exists\n  if (reactServerComponentsError !== -1) {\n    var _error = formattedErrors.splice(reactServerComponentsError, 1);\n    formattedErrors.unshift(_error[0]);\n  }\n  var result = _objectSpread(_objectSpread({}, json), {}, {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  });\n  if (!verbose && result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n    result.warnings = [];\n  }\n  return result;\n}\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L2ludGVybmFsL2hlbHBlcnMvZm9ybWF0LXdlYnBhY2stbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFnQjs7QUFBQSxJQUFBQSxlQUFBLEdBQUFDLG1CQUFBO0FBQUEsSUFBQUMsa0JBQUEsR0FBQUQsbUJBQUE7QUFBQSxJQUFBRSxjQUFBLEdBQUFGLG1CQUFBO0FBQUEsU0FBQUcsUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBTixlQUFBLENBQUFLLENBQUEsRUFBQUMsQ0FBQSxF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QUFDO0VBQ3JDO0VBQ0EsSUFBTUUsTUFBTSxHQUFBakUsYUFBQSxDQUFBQSxhQUFBLEtBQ0x1RCxJQUFJO0lBQ1BFLE1BQU0sRUFBRUQsZUFBZTtJQUN2QkksUUFBUSxFQUFFRDtFQUFpQixFQUM5QjtFQUNELElBQUksQ0FBQ3RDLE9BQU8sSUFBSTRDLE1BQU0sQ0FBQ1IsTUFBTSxDQUFDUyxJQUFJLENBQUNsRCxvQkFBb0IsQ0FBQyxFQUFFO0lBQ3REO0lBQ0FpRCxNQUFNLENBQUNSLE1BQU0sR0FBR1EsTUFBTSxDQUFDUixNQUFNLENBQUM5RCxNQUFNLENBQUNxQixvQkFBb0IsQ0FBQztJQUMxRGlELE1BQU0sQ0FBQ0wsUUFBUSxHQUFHLEVBQUU7RUFDeEI7RUFDQSxPQUFPSyxNQUFNO0FBQ2pCO0FBRUEsSUFBSSxDQUFDLE9BQU8xRCxPQUFPLFdBQVEsS0FBSyxVQUFVLElBQUssT0FBT0EsT0FBTyxXQUFRLEtBQUssUUFBUSxJQUFJQSxPQUFPLFdBQVEsS0FBSyxJQUFLLEtBQUssT0FBT0EsT0FBTyxXQUFRLENBQUM0RCxVQUFVLEtBQUssV0FBVyxFQUFFO0VBQ3JLNUUsTUFBTSxDQUFDZSxjQUFjLENBQUNDLE9BQU8sV0FBUSxFQUFFLFlBQVksRUFBRTtJQUFFQyxLQUFLLEVBQUU7RUFBSyxDQUFDLENBQUM7RUFDckVqQixNQUFNLENBQUM2RSxNQUFNLENBQUM3RCxPQUFPLFdBQVEsRUFBRUEsT0FBTyxDQUFDO0VBQ3ZDOEQsTUFBTSxDQUFDOUQsT0FBTyxHQUFHQSxPQUFPLFdBQVE7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9pbnRlcm5hbC9oZWxwZXJzL2Zvcm1hdC13ZWJwYWNrLW1lc3NhZ2VzLmpzP2EwYjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG5NSVQgTGljZW5zZVxuXG5Db3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cblxuUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxub2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xudG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG5mdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG5UaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbmNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcbklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG5BVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG5MSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcblNPRlRXQVJFLlxuKi8gXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBmb3JtYXRXZWJwYWNrTWVzc2FnZXM7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0XCIpO1xuY29uc3QgX3N0cmlwYW5zaSA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0Ll8ocmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9zdHJpcC1hbnNpXCIpKTtcbi8vIFRoaXMgZmlsZSBpcyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svY3JlYXRlLXJlYWN0LWFwcC9ibG9iLzdiMWEzMmJlNmVjOWY5OWE2YzlhM2M2NjgxM2YzYWMwOWM0NzM2YjkvcGFja2FnZXMvcmVhY3QtZGV2LXV0aWxzL2Zvcm1hdFdlYnBhY2tNZXNzYWdlcy5qc1xuLy8gSXQncyBiZWVuIGVkaXRlZCB0byByZW1vdmUgY2hhbGsgYW5kIENSQS1zcGVjaWZpYyBsb2dpY1xuY29uc3QgZnJpZW5kbHlTeW50YXhFcnJvckxhYmVsID0gXCJTeW50YXggZXJyb3I6XCI7XG5jb25zdCBXRUJQQUNLX0JSRUFLSU5HX0NIQU5HRV9QT0xZRklMTFMgPSBcIlxcblxcbkJSRUFLSU5HIENIQU5HRTogd2VicGFjayA8IDUgdXNlZCB0byBpbmNsdWRlIHBvbHlmaWxscyBmb3Igbm9kZS5qcyBjb3JlIG1vZHVsZXMgYnkgZGVmYXVsdC5cIjtcbmZ1bmN0aW9uIGlzTGlrZWx5QVN5bnRheEVycm9yKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gKDAsIF9zdHJpcGFuc2kuZGVmYXVsdCkobWVzc2FnZSkuaW5jbHVkZXMoZnJpZW5kbHlTeW50YXhFcnJvckxhYmVsKTtcbn1cbmxldCBoYWRNaXNzaW5nU2Fzc0Vycm9yID0gZmFsc2U7XG4vLyBDbGVhbnMgdXAgd2VicGFjayBlcnJvciBtZXNzYWdlcy5cbmZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2UobWVzc2FnZSwgdmVyYm9zZSwgaW1wb3J0VHJhY2VOb3RlKSB7XG4gICAgLy8gVE9ETzogUmVwbGFjZSB0aGlzIG9uY2Ugd2VicGFjayA1IGlzIHN0YWJsZVxuICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJvYmplY3RcIiAmJiBtZXNzYWdlLm1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3QgZmlsdGVyZWRNb2R1bGVUcmFjZSA9IG1lc3NhZ2UubW9kdWxlVHJhY2UgJiYgbWVzc2FnZS5tb2R1bGVUcmFjZS5maWx0ZXIoKHRyYWNlKT0+IS9uZXh0LShtaWRkbGV3YXJlfGNsaWVudC1wYWdlc3xyb3V0ZXxlZGdlLWZ1bmN0aW9uKS1sb2FkZXJcXC5qcy8udGVzdCh0cmFjZS5vcmlnaW5OYW1lKSk7XG4gICAgICAgIGxldCBib2R5ID0gbWVzc2FnZS5tZXNzYWdlO1xuICAgICAgICBjb25zdCBicmVha2luZ0NoYW5nZUluZGV4ID0gYm9keS5pbmRleE9mKFdFQlBBQ0tfQlJFQUtJTkdfQ0hBTkdFX1BPTFlGSUxMUyk7XG4gICAgICAgIGlmIChicmVha2luZ0NoYW5nZUluZGV4ID49IDApIHtcbiAgICAgICAgICAgIGJvZHkgPSBib2R5LnNsaWNlKDAsIGJyZWFraW5nQ2hhbmdlSW5kZXgpO1xuICAgICAgICB9XG4gICAgICAgIG1lc3NhZ2UgPSAobWVzc2FnZS5tb2R1bGVOYW1lID8gKDAsIF9zdHJpcGFuc2kuZGVmYXVsdCkobWVzc2FnZS5tb2R1bGVOYW1lKSArIFwiXFxuXCIgOiBcIlwiKSArIChtZXNzYWdlLmZpbGUgPyAoMCwgX3N0cmlwYW5zaS5kZWZhdWx0KShtZXNzYWdlLmZpbGUpICsgXCJcXG5cIiA6IFwiXCIpICsgYm9keSArIChtZXNzYWdlLmRldGFpbHMgJiYgdmVyYm9zZSA/IFwiXFxuXCIgKyBtZXNzYWdlLmRldGFpbHMgOiBcIlwiKSArIChmaWx0ZXJlZE1vZHVsZVRyYWNlICYmIGZpbHRlcmVkTW9kdWxlVHJhY2UubGVuZ3RoID8gKGltcG9ydFRyYWNlTm90ZSB8fCBcIlxcblxcbkltcG9ydCB0cmFjZSBmb3IgcmVxdWVzdGVkIG1vZHVsZTpcIikgKyBmaWx0ZXJlZE1vZHVsZVRyYWNlLm1hcCgodHJhY2UpPT5cIlxcblwiICsgdHJhY2UubW9kdWxlTmFtZSkuam9pbihcIlwiKSA6IFwiXCIpICsgKG1lc3NhZ2Uuc3RhY2sgJiYgdmVyYm9zZSA/IFwiXFxuXCIgKyBtZXNzYWdlLnN0YWNrIDogXCJcIik7XG4gICAgfVxuICAgIGxldCBsaW5lcyA9IG1lc3NhZ2Uuc3BsaXQoXCJcXG5cIik7XG4gICAgLy8gU3RyaXAgV2VicGFjay1hZGRlZCBoZWFkZXJzIG9mZiBlcnJvcnMvd2FybmluZ3NcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay93ZWJwYWNrL2Jsb2IvbWFzdGVyL2xpYi9Nb2R1bGVFcnJvci5qc1xuICAgIGxpbmVzID0gbGluZXMuZmlsdGVyKChsaW5lKT0+IS9Nb2R1bGUgW0EteiBdK1xcKGZyb20vLnRlc3QobGluZSkpO1xuICAgIC8vIFRyYW5zZm9ybSBwYXJzaW5nIGVycm9yIGludG8gc3ludGF4IGVycm9yXG4gICAgLy8gVE9ETzogbW92ZSB0aGlzIHRvIG91ciBFU0xpbnQgZm9ybWF0dGVyP1xuICAgIGxpbmVzID0gbGluZXMubWFwKChsaW5lKT0+e1xuICAgICAgICBjb25zdCBwYXJzaW5nRXJyb3IgPSAvTGluZSAoXFxkKyk6KD86KFxcZCspOik/XFxzKlBhcnNpbmcgZXJyb3I6ICguKykkLy5leGVjKGxpbmUpO1xuICAgICAgICBpZiAoIXBhcnNpbmdFcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGxpbmU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgWywgZXJyb3JMaW5lLCBlcnJvckNvbHVtbiwgZXJyb3JNZXNzYWdlXSA9IHBhcnNpbmdFcnJvcjtcbiAgICAgICAgcmV0dXJuIGZyaWVuZGx5U3ludGF4RXJyb3JMYWJlbCArIFwiIFwiICsgZXJyb3JNZXNzYWdlICsgXCIgKFwiICsgZXJyb3JMaW5lICsgXCI6XCIgKyBlcnJvckNvbHVtbiArIFwiKVwiO1xuICAgIH0pO1xuICAgIG1lc3NhZ2UgPSBsaW5lcy5qb2luKFwiXFxuXCIpO1xuICAgIC8vIFNtb29zaCBzeW50YXggZXJyb3JzIChjb21tb25seSBmb3VuZCBpbiBDU1MpXG4gICAgbWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZSgvU3ludGF4RXJyb3JcXHMrXFwoKFxcZCspOihcXGQrKVxcKVxccyooLis/KVxcbi9nLCBcIlwiICsgZnJpZW5kbHlTeW50YXhFcnJvckxhYmVsICsgXCIgJDMgKCQxOiQyKVxcblwiKTtcbiAgICAvLyBDbGVhbiB1cCBleHBvcnQgZXJyb3JzXG4gICAgbWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZSgvXi4qZXhwb3J0ICcoLis/KScgd2FzIG5vdCBmb3VuZCBpbiAnKC4rPyknLiokL2dtLCBcIkF0dGVtcHRlZCBpbXBvcnQgZXJyb3I6ICckMScgaXMgbm90IGV4cG9ydGVkIGZyb20gJyQyJy5cIik7XG4gICAgbWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZSgvXi4qZXhwb3J0ICdkZWZhdWx0JyBcXChpbXBvcnRlZCBhcyAnKC4rPyknXFwpIHdhcyBub3QgZm91bmQgaW4gJyguKz8pJy4qJC9nbSwgXCJBdHRlbXB0ZWQgaW1wb3J0IGVycm9yOiAnJDInIGRvZXMgbm90IGNvbnRhaW4gYSBkZWZhdWx0IGV4cG9ydCAoaW1wb3J0ZWQgYXMgJyQxJykuXCIpO1xuICAgIG1lc3NhZ2UgPSBtZXNzYWdlLnJlcGxhY2UoL14uKmV4cG9ydCAnKC4rPyknIFxcKGltcG9ydGVkIGFzICcoLis/KSdcXCkgd2FzIG5vdCBmb3VuZCBpbiAnKC4rPyknLiokL2dtLCBcIkF0dGVtcHRlZCBpbXBvcnQgZXJyb3I6ICckMScgaXMgbm90IGV4cG9ydGVkIGZyb20gJyQzJyAoaW1wb3J0ZWQgYXMgJyQyJykuXCIpO1xuICAgIGxpbmVzID0gbWVzc2FnZS5zcGxpdChcIlxcblwiKTtcbiAgICAvLyBSZW1vdmUgbGVhZGluZyBuZXdsaW5lXG4gICAgaWYgKGxpbmVzLmxlbmd0aCA+IDIgJiYgbGluZXNbMV0udHJpbSgpID09PSBcIlwiKSB7XG4gICAgICAgIGxpbmVzLnNwbGljZSgxLCAxKTtcbiAgICB9XG4gICAgLy8gQ2xlYW5zIHVwIHZlcmJvc2UgXCJtb2R1bGUgbm90IGZvdW5kXCIgbWVzc2FnZXMgZm9yIGZpbGVzIGFuZCBwYWNrYWdlcy5cbiAgICBpZiAobGluZXNbMV0gJiYgbGluZXNbMV0uaW5kZXhPZihcIk1vZHVsZSBub3QgZm91bmQ6IFwiKSA9PT0gMCkge1xuICAgICAgICBsaW5lcyA9IFtcbiAgICAgICAgICAgIGxpbmVzWzBdLFxuICAgICAgICAgICAgbGluZXNbMV0ucmVwbGFjZShcIkVycm9yOiBcIiwgXCJcIikucmVwbGFjZShcIk1vZHVsZSBub3QgZm91bmQ6IENhbm5vdCBmaW5kIGZpbGU6XCIsIFwiQ2Fubm90IGZpbmQgZmlsZTpcIiksXG4gICAgICAgICAgICAuLi5saW5lcy5zbGljZSgyKVxuICAgICAgICBdO1xuICAgIH1cbiAgICAvLyBBZGQgaGVscGZ1bCBtZXNzYWdlIGZvciB1c2VycyB0cnlpbmcgdG8gdXNlIFNhc3MgZm9yIHRoZSBmaXJzdCB0aW1lXG4gICAgaWYgKGxpbmVzWzFdICYmIGxpbmVzWzFdLm1hdGNoKC9DYW5ub3QgZmluZCBtb2R1bGUuK3Nhc3MvKSkge1xuICAgICAgICAvLyAuL2ZpbGUubW9kdWxlLnNjc3MgKDw8bG9hZGVyIGluZm8+PikgPT4gLi9maWxlLm1vZHVsZS5zY3NzXG4gICAgICAgIGNvbnN0IGZpcnN0TGluZSA9IGxpbmVzWzBdLnNwbGl0KFwiIVwiKTtcbiAgICAgICAgbGluZXNbMF0gPSBmaXJzdExpbmVbZmlyc3RMaW5lLmxlbmd0aCAtIDFdO1xuICAgICAgICBsaW5lc1sxXSA9IFwiVG8gdXNlIE5leHQuanMnIGJ1aWx0LWluIFNhc3Mgc3VwcG9ydCwgeW91IGZpcnN0IG5lZWQgdG8gaW5zdGFsbCBgc2Fzc2AuXFxuXCI7XG4gICAgICAgIGxpbmVzWzFdICs9IFwiUnVuIGBucG0gaSBzYXNzYCBvciBgeWFybiBhZGQgc2Fzc2AgaW5zaWRlIHlvdXIgd29ya3NwYWNlLlxcblwiO1xuICAgICAgICBsaW5lc1sxXSArPSBcIlxcbkxlYXJuIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2luc3RhbGwtc2Fzc1wiO1xuICAgICAgICAvLyBkaXNwb3NlIG9mIHVuaGVscGZ1bCBzdGFjayB0cmFjZVxuICAgICAgICBsaW5lcyA9IGxpbmVzLnNsaWNlKDAsIDIpO1xuICAgICAgICBoYWRNaXNzaW5nU2Fzc0Vycm9yID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKGhhZE1pc3NpbmdTYXNzRXJyb3IgJiYgbWVzc2FnZS5tYXRjaCgvKHNhc3MtbG9hZGVyfHJlc29sdmUtdXJsLWxvYWRlcjogQ1NTIGVycm9yKS8pKSB7XG4gICAgICAgIC8vIGRpc3Bvc2Ugb2YgdW5oZWxwZnVsIHN0YWNrIHRyYWNlIGZvbGxvd2luZyBtaXNzaW5nIHNhc3MgbW9kdWxlXG4gICAgICAgIGxpbmVzID0gW107XG4gICAgfVxuICAgIGlmICghdmVyYm9zZSkge1xuICAgICAgICBtZXNzYWdlID0gbGluZXMuam9pbihcIlxcblwiKTtcbiAgICAgICAgLy8gSW50ZXJuYWwgc3RhY2tzIGFyZSBnZW5lcmFsbHkgdXNlbGVzcyBzbyB3ZSBzdHJpcCB0aGVtLi4uIHdpdGggdGhlXG4gICAgICAgIC8vIGV4Y2VwdGlvbiBvZiBzdGFja3MgY29udGFpbmluZyBgd2VicGFjazpgIGJlY2F1c2UgdGhleSdyZSBub3JtYWxseVxuICAgICAgICAvLyBmcm9tIHVzZXIgY29kZSBnZW5lcmF0ZWQgYnkgV2VicGFjay4gRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9jcmVhdGUtcmVhY3QtYXBwL3B1bGwvMTA1MFxuICAgICAgICBtZXNzYWdlID0gbWVzc2FnZS5yZXBsYWNlKC9eXFxzKmF0XFxzKCg/IXdlYnBhY2s6KS4pKjpcXGQrOlxcZCtbXFxzKV0qKFxcbnwkKS9nbSwgXCJcIikgLy8gYXQgLi4uIC4uLjp4OnlcbiAgICAgICAgO1xuICAgICAgICBtZXNzYWdlID0gbWVzc2FnZS5yZXBsYWNlKC9eXFxzKmF0XFxzPGFub255bW91cz4oXFxufCQpL2dtLCBcIlwiKSAvLyBhdCA8YW5vbnltb3VzPlxuICAgICAgICA7XG4gICAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlLnJlcGxhY2UoL0ZpbGUgd2FzIHByb2Nlc3NlZCB3aXRoIHRoZXNlIGxvYWRlcnM6XFxuKC4rW1xcXFwvXShuZXh0W1xcXFwvXWRpc3RbXFxcXC9dLit8QG5leHRbXFxcXC9dcmVhY3QtcmVmcmVzaC11dGlsc1tcXFxcL11sb2FkZXIpXFwuanNcXG4pKllvdSBtYXkgbmVlZCBhbiBhZGRpdGlvbmFsIGxvYWRlciB0byBoYW5kbGUgdGhlIHJlc3VsdCBvZiB0aGVzZSBsb2FkZXJzLlxcbi9nLCBcIlwiKTtcbiAgICAgICAgbGluZXMgPSBtZXNzYWdlLnNwbGl0KFwiXFxuXCIpO1xuICAgIH1cbiAgICAvLyBSZW1vdmUgZHVwbGljYXRlZCBuZXdsaW5lc1xuICAgIGxpbmVzID0gbGluZXMuZmlsdGVyKChsaW5lLCBpbmRleCwgYXJyKT0+aW5kZXggPT09IDAgfHwgbGluZS50cmltKCkgIT09IFwiXCIgfHwgbGluZS50cmltKCkgIT09IGFycltpbmRleCAtIDFdLnRyaW0oKSk7XG4gICAgLy8gUmVhc3NlbWJsZSB0aGUgbWVzc2FnZVxuICAgIG1lc3NhZ2UgPSBsaW5lcy5qb2luKFwiXFxuXCIpO1xuICAgIHJldHVybiBtZXNzYWdlLnRyaW0oKTtcbn1cbmZ1bmN0aW9uIGZvcm1hdFdlYnBhY2tNZXNzYWdlcyhqc29uLCB2ZXJib3NlKSB7XG4gICAgY29uc3QgZm9ybWF0dGVkRXJyb3JzID0ganNvbi5lcnJvcnMubWFwKChtZXNzYWdlKT0+e1xuICAgICAgICBjb25zdCBpc1Vua25vd25OZXh0Rm9udEVycm9yID0gbWVzc2FnZS5tZXNzYWdlLmluY2x1ZGVzKFwiQW4gZXJyb3Igb2NjdXJyZWQgaW4gYG5leHQvZm9udGAuXCIpO1xuICAgICAgICByZXR1cm4gZm9ybWF0TWVzc2FnZShtZXNzYWdlLCBpc1Vua25vd25OZXh0Rm9udEVycm9yIHx8IHZlcmJvc2UpO1xuICAgIH0pO1xuICAgIGNvbnN0IGZvcm1hdHRlZFdhcm5pbmdzID0ganNvbi53YXJuaW5ncy5tYXAoKG1lc3NhZ2UpPT57XG4gICAgICAgIHJldHVybiBmb3JtYXRNZXNzYWdlKG1lc3NhZ2UsIHZlcmJvc2UpO1xuICAgIH0pO1xuICAgIC8vIFJlb3JkZXIgZXJyb3JzIHRvIHB1dCB0aGUgbW9zdCByZWxldmFudCBvbmVzIGZpcnN0LlxuICAgIGxldCByZWFjdFNlcnZlckNvbXBvbmVudHNFcnJvciA9IC0xO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBmb3JtYXR0ZWRFcnJvcnMubGVuZ3RoOyBpKyspe1xuICAgICAgICBjb25zdCBlcnJvciA9IGZvcm1hdHRlZEVycm9yc1tpXTtcbiAgICAgICAgaWYgKGVycm9yLmluY2x1ZGVzKFwiUmVhY3RTZXJ2ZXJDb21wb25lbnRzRXJyb3JcIikpIHtcbiAgICAgICAgICAgIHJlYWN0U2VydmVyQ29tcG9uZW50c0Vycm9yID0gaTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIE1vdmUgdGhlIHJlYWN0U2VydmVyQ29tcG9uZW50c0Vycm9yIHRvIHRoZSB0b3AgaWYgaXQgZXhpc3RzXG4gICAgaWYgKHJlYWN0U2VydmVyQ29tcG9uZW50c0Vycm9yICE9PSAtMSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IGZvcm1hdHRlZEVycm9ycy5zcGxpY2UocmVhY3RTZXJ2ZXJDb21wb25lbnRzRXJyb3IsIDEpO1xuICAgICAgICBmb3JtYXR0ZWRFcnJvcnMudW5zaGlmdChlcnJvclswXSk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgLi4uanNvbixcbiAgICAgICAgZXJyb3JzOiBmb3JtYXR0ZWRFcnJvcnMsXG4gICAgICAgIHdhcm5pbmdzOiBmb3JtYXR0ZWRXYXJuaW5nc1xuICAgIH07XG4gICAgaWYgKCF2ZXJib3NlICYmIHJlc3VsdC5lcnJvcnMuc29tZShpc0xpa2VseUFTeW50YXhFcnJvcikpIHtcbiAgICAgICAgLy8gSWYgdGhlcmUgYXJlIGFueSBzeW50YXggZXJyb3JzLCBzaG93IGp1c3QgdGhlbS5cbiAgICAgICAgcmVzdWx0LmVycm9ycyA9IHJlc3VsdC5lcnJvcnMuZmlsdGVyKGlzTGlrZWx5QVN5bnRheEVycm9yKTtcbiAgICAgICAgcmVzdWx0Lndhcm5pbmdzID0gW107XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdC13ZWJwYWNrLW1lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJyZXF1aXJlIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiX3NsaWNlZFRvQXJyYXkiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZvckVhY2giLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0IiwiZm9ybWF0V2VicGFja01lc3NhZ2VzIiwiX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0IiwiX3N0cmlwYW5zaSIsIl8iLCJmcmllbmRseVN5bnRheEVycm9yTGFiZWwiLCJXRUJQQUNLX0JSRUFLSU5HX0NIQU5HRV9QT0xZRklMTFMiLCJpc0xpa2VseUFTeW50YXhFcnJvciIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsImhhZE1pc3NpbmdTYXNzRXJyb3IiLCJmb3JtYXRNZXNzYWdlIiwidmVyYm9zZSIsImltcG9ydFRyYWNlTm90ZSIsImZpbHRlcmVkTW9kdWxlVHJhY2UiLCJtb2R1bGVUcmFjZSIsInRyYWNlIiwidGVzdCIsIm9yaWdpbk5hbWUiLCJib2R5IiwiYnJlYWtpbmdDaGFuZ2VJbmRleCIsImluZGV4T2YiLCJzbGljZSIsIm1vZHVsZU5hbWUiLCJmaWxlIiwiZGV0YWlscyIsIm1hcCIsImpvaW4iLCJzdGFjayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwicGFyc2luZ0Vycm9yIiwiZXhlYyIsIl9wYXJzaW5nRXJyb3IiLCJlcnJvckxpbmUiLCJlcnJvckNvbHVtbiIsImVycm9yTWVzc2FnZSIsInJlcGxhY2UiLCJ0cmltIiwic3BsaWNlIiwiY29uY2F0IiwibWF0Y2giLCJmaXJzdExpbmUiLCJpbmRleCIsImFyciIsImpzb24iLCJmb3JtYXR0ZWRFcnJvcnMiLCJlcnJvcnMiLCJpc1Vua25vd25OZXh0Rm9udEVycm9yIiwiZm9ybWF0dGVkV2FybmluZ3MiLCJ3YXJuaW5ncyIsInJlYWN0U2VydmVyQ29tcG9uZW50c0Vycm9yIiwiaSIsImVycm9yIiwidW5zaGlmdCIsInJlc3VsdCIsInNvbWUiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/format-webpack-messages.js\n"));

/***/ })

}]);