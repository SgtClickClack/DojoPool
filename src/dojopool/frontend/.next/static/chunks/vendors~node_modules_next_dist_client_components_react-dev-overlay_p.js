"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["vendors~node_modules_next_dist_client_components_react-dev-overlay_p"],{

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/pages/bus.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/pages/bus.js ***!
  \*********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nvar _defineProperty = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  emit: function emit() {\n    return _emit;\n  },\n  off: function off() {\n    return _off;\n  },\n  on: function on() {\n    return _on;\n  }\n});\nvar handlers = new Set();\nvar queue = [];\nfunction drain() {\n  // Draining should never happen synchronously in case multiple handlers are\n  // registered.\n  setTimeout(function () {\n    var _loop = function _loop() {\n      var ev = queue.shift();\n      handlers.forEach(function (handler) {\n        return handler(ev);\n      });\n    };\n    while (\n    // Until we are out of events:\n    Boolean(queue.length) &&\n    // Or, if all handlers removed themselves as a result of handling the\n    // event(s)\n    Boolean(handlers.size)) {\n      _loop();\n    }\n  }, 1);\n}\nfunction _emit(ev) {\n  queue.push(Object.freeze(_objectSpread({}, ev)));\n  drain();\n}\nfunction _on(fn) {\n  if (handlers.has(fn)) {\n    return false;\n  }\n  handlers.add(fn);\n  drain();\n  return true;\n}\nfunction _off(fn) {\n  if (handlers.has(fn)) {\n    handlers[\"delete\"](fn);\n    return true;\n  }\n  return false;\n}\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlYWN0LWRldi1vdmVybGF5L3BhZ2VzL2J1cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFBQSxJQUFBQSxlQUFBLEdBQUFDLG1CQUFBO0FBQUEsU0FBQUMsUUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFFBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFKLENBQUEsT0FBQUcsTUFBQSxDQUFBRSxxQkFBQSxRQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQUwsQ0FBQSxHQUFBQyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsV0FBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixDQUFBLEVBQUFDLENBQUEsRUFBQVEsVUFBQSxPQUFBUCxDQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxDQUFBLEVBQUFJLENBQUEsWUFBQUosQ0FBQTtBQUFBLFNBQUFVLGNBQUFaLENBQUEsYUFBQUMsQ0FBQSxNQUFBQSxDQUFBLEdBQUFZLFNBQUEsQ0FBQUMsTUFBQSxFQUFBYixDQUFBLFVBQUFDLENBQUEsV0FBQVcsU0FBQSxDQUFBWixDQUFBLElBQUFZLFNBQUEsQ0FBQVosQ0FBQSxRQUFBQSxDQUFBLE9BQUFGLE9BQUEsQ0FBQUksTUFBQSxDQUFBRCxDQUFBLE9BQUFhLE9BQUEsV0FBQWQsQ0FBQSxJQUFBSixlQUFBLENBQUFHLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLENBQUFELENBQUEsU0FBQUUsTUFBQSxDQUFBYSx5QkFBQSxHQUFBYixNQUFBLENBQUFjLGdCQUFBLENBQUFqQixDQUFBLEVBQUFHLE1BQUEsQ0FBQWEseUJBQUEsQ0FBQWQsQ0FBQSxLQUFBSCxPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxHQUFBYSxPQUFBLFdBQUFkLENBQUEsSUFBQUUsTUFBQSxDQUFBZSxjQUFBLENBQUFsQixDQUFBLEVBQUFDLENBQUEsRUFBQUUsTUFBQSxDQUFBSyx3QkFBQSxDQUFBTixDQUFBLEVBQUFELENBQUEsaUJBQUFELENBQUE7QUFDYkcsOENBQTZDO0VBQ3pDaUIsS0FBSyxFQUFFO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsQ0FBQyxLQUFLQyxDQUlMLENBQUM7QUFDRixTQUFTSSxPQUFPQSxDQUFDQyxNQUFNLEVBQUVDLEdBQUcsRUFBRTtFQUMxQixLQUFJLElBQUlDLElBQUksSUFBSUQsR0FBRyxFQUFDeEIsTUFBTSxDQUFDZSxjQUFjLENBQUNRLE1BQU0sRUFBRUUsSUFBSSxFQUFFO0lBQ3BEbkIsVUFBVSxFQUFFLElBQUk7SUFDaEJvQixHQUFHLEVBQUVGLEdBQUcsQ0FBQ0MsSUFBSTtFQUNqQixDQUFDLENBQUM7QUFDTjtBQUNBSCxPQUFPLENBQUNOLE9BQU8sRUFBRTtFQUNiRyxJQUFJLEVBQUUsU0FBQUEsS0FBQSxFQUFXO0lBQ2IsT0FBT0EsS0FBSTtFQUNmLENBQUM7RUFDREMsR0FBRyxFQUFFLFNBQUFBLElBQUEsRUFBVztJQUNaLE9BQU9BLElBQUc7RUFDZCxDQUFDO0VBQ0RDLEVBQUUsRUFBRSxTQUFBQSxHQUFBLEVBQVc7SUFDWCxPQUFPQSxHQUFFO0VBQ2I7QUFDSixDQUFDLENBQUM7QUFDRixJQUFJTSxRQUFRLEdBQUcsSUFBSUMsR0FBRyxDQUFDLENBQUM7QUFDeEIsSUFBSUMsS0FBSyxHQUFHLEVBQUU7QUFDZCxTQUFTQyxLQUFLQSxDQUFBLEVBQUc7RUFDYjtFQUNBO0VBQ0FDLFVBQVUsQ0FBQyxZQUFXO0lBQUEsSUFBQUMsS0FBQSxZQUFBQSxNQUFBLEVBSUs7TUFDbkIsSUFBTUMsRUFBRSxHQUFHSixLQUFLLENBQUNLLEtBQUssQ0FBQyxDQUFDO01BQ3hCUCxRQUFRLENBQUNmLE9BQU8sQ0FBQyxVQUFDdUIsT0FBTztRQUFBLE9BQUdBLE9BQU8sQ0FBQ0YsRUFBRSxDQUFDO01BQUEsRUFBQztJQUM1QyxDQUFDO0lBTkQ7SUFBTTtJQUNORyxPQUFPLENBQUNQLEtBQUssQ0FBQ2xCLE1BQU0sQ0FBQztJQUFJO0lBQ3pCO0lBQ0F5QixPQUFPLENBQUNULFFBQVEsQ0FBQ1UsSUFBSSxDQUFDO01BQUFMLEtBQUE7SUFBQTtFQUkxQixDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ1Q7QUFDQSxTQUFTYixLQUFJQSxDQUFDYyxFQUFFLEVBQUU7RUFDZEosS0FBSyxDQUFDdEIsSUFBSSxDQUFDUCxNQUFNLENBQUNzQyxNQUFNLENBQUE3QixhQUFBLEtBQ2pCd0IsRUFBRSxDQUNSLENBQUMsQ0FBQztFQUNISCxLQUFLLENBQUMsQ0FBQztBQUNYO0FBQ0EsU0FBU1QsR0FBRUEsQ0FBQ2tCLEVBQUUsRUFBRTtFQUNaLElBQUlaLFFBQVEsQ0FBQ2EsR0FBRyxDQUFDRCxFQUFFLENBQUMsRUFBRTtJQUNsQixPQUFPLEtBQUs7RUFDaEI7RUFDQVosUUFBUSxDQUFDYyxHQUFHLENBQUNGLEVBQUUsQ0FBQztFQUNoQlQsS0FBSyxDQUFDLENBQUM7RUFDUCxPQUFPLElBQUk7QUFDZjtBQUNBLFNBQVNWLElBQUdBLENBQUNtQixFQUFFLEVBQUU7RUFDYixJQUFJWixRQUFRLENBQUNhLEdBQUcsQ0FBQ0QsRUFBRSxDQUFDLEVBQUU7SUFDbEJaLFFBQVEsVUFBTyxDQUFDWSxFQUFFLENBQUM7SUFDbkIsT0FBTyxJQUFJO0VBQ2Y7RUFDQSxPQUFPLEtBQUs7QUFDaEI7QUFFQSxJQUFJLENBQUMsT0FBT3ZCLE9BQU8sV0FBUSxLQUFLLFVBQVUsSUFBSyxPQUFPQSxPQUFPLFdBQVEsS0FBSyxRQUFRLElBQUlBLE9BQU8sV0FBUSxLQUFLLElBQUssS0FBSyxPQUFPQSxPQUFPLFdBQVEsQ0FBQzBCLFVBQVUsS0FBSyxXQUFXLEVBQUU7RUFDcksxQyxNQUFNLENBQUNlLGNBQWMsQ0FBQ0MsT0FBTyxXQUFRLEVBQUUsWUFBWSxFQUFFO0lBQUVDLEtBQUssRUFBRTtFQUFLLENBQUMsQ0FBQztFQUNyRWpCLE1BQU0sQ0FBQzJDLE1BQU0sQ0FBQzNCLE9BQU8sV0FBUSxFQUFFQSxPQUFPLENBQUM7RUFDdkNFLE1BQU0sQ0FBQ0YsT0FBTyxHQUFHQSxPQUFPLFdBQVE7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWFjdC1kZXYtb3ZlcmxheS9wYWdlcy9idXMuanM/Y2QyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGVtaXQ6IG51bGwsXG4gICAgb2ZmOiBudWxsLFxuICAgIG9uOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIGVtaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZW1pdDtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBvZmY7XG4gICAgfSxcbiAgICBvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBvbjtcbiAgICB9XG59KTtcbmxldCBoYW5kbGVycyA9IG5ldyBTZXQoKTtcbmxldCBxdWV1ZSA9IFtdO1xuZnVuY3Rpb24gZHJhaW4oKSB7XG4gICAgLy8gRHJhaW5pbmcgc2hvdWxkIG5ldmVyIGhhcHBlbiBzeW5jaHJvbm91c2x5IGluIGNhc2UgbXVsdGlwbGUgaGFuZGxlcnMgYXJlXG4gICAgLy8gcmVnaXN0ZXJlZC5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICB3aGlsZSgvLyBVbnRpbCB3ZSBhcmUgb3V0IG9mIGV2ZW50czpcbiAgICAgICAgQm9vbGVhbihxdWV1ZS5sZW5ndGgpICYmIC8vIE9yLCBpZiBhbGwgaGFuZGxlcnMgcmVtb3ZlZCB0aGVtc2VsdmVzIGFzIGEgcmVzdWx0IG9mIGhhbmRsaW5nIHRoZVxuICAgICAgICAvLyBldmVudChzKVxuICAgICAgICBCb29sZWFuKGhhbmRsZXJzLnNpemUpKXtcbiAgICAgICAgICAgIGNvbnN0IGV2ID0gcXVldWUuc2hpZnQoKTtcbiAgICAgICAgICAgIGhhbmRsZXJzLmZvckVhY2goKGhhbmRsZXIpPT5oYW5kbGVyKGV2KSk7XG4gICAgICAgIH1cbiAgICB9LCAxKTtcbn1cbmZ1bmN0aW9uIGVtaXQoZXYpIHtcbiAgICBxdWV1ZS5wdXNoKE9iamVjdC5mcmVlemUoe1xuICAgICAgICAuLi5ldlxuICAgIH0pKTtcbiAgICBkcmFpbigpO1xufVxuZnVuY3Rpb24gb24oZm4pIHtcbiAgICBpZiAoaGFuZGxlcnMuaGFzKGZuKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGhhbmRsZXJzLmFkZChmbik7XG4gICAgZHJhaW4oKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIG9mZihmbikge1xuICAgIGlmIChoYW5kbGVycy5oYXMoZm4pKSB7XG4gICAgICAgIGhhbmRsZXJzLmRlbGV0ZShmbik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1cy5qcy5tYXAiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5IiwicmVxdWlyZSIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJlbWl0Iiwib2ZmIiwib24iLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImdldCIsImhhbmRsZXJzIiwiU2V0IiwicXVldWUiLCJkcmFpbiIsInNldFRpbWVvdXQiLCJfbG9vcCIsImV2Iiwic2hpZnQiLCJoYW5kbGVyIiwiQm9vbGVhbiIsInNpemUiLCJmcmVlemUiLCJmbiIsImhhcyIsImFkZCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/pages/bus.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/pages/client.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/pages/client.js ***!
  \************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nvar _defineProperty = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  ReactDevOverlay: function ReactDevOverlay() {\n    return _ReactDevOverlay[\"default\"];\n  },\n  getErrorByType: function getErrorByType() {\n    return _getErrorByType.getErrorByType;\n  },\n  getServerError: function getServerError() {\n    return _nodeStackFrames.getServerError;\n  },\n  onBeforeRefresh: function onBeforeRefresh() {\n    return _onBeforeRefresh;\n  },\n  onBuildError: function onBuildError() {\n    return _onBuildError;\n  },\n  onBuildOk: function onBuildOk() {\n    return _onBuildOk;\n  },\n  onRefresh: function onRefresh() {\n    return _onRefresh;\n  },\n  onVersionInfo: function onVersionInfo() {\n    return _onVersionInfo;\n  },\n  register: function register() {\n    return _register;\n  },\n  unregister: function unregister() {\n    return _unregister;\n  }\n});\nvar _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nvar _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nvar _bus = /*#__PURE__*/_interop_require_wildcard._(__webpack_require__(/*! ./bus */ \"./node_modules/next/dist/client/components/react-dev-overlay/pages/bus.js\"));\nvar _parseStack = __webpack_require__(/*! ../internal/helpers/parseStack */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/parseStack.js\");\nvar _parsecomponentstack = __webpack_require__(/*! ../internal/helpers/parse-component-stack */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/parse-component-stack.js\");\nvar _hydrationerrorinfo = __webpack_require__(/*! ../internal/helpers/hydration-error-info */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/hydration-error-info.js\");\nvar _shared = __webpack_require__(/*! ../shared */ \"./node_modules/next/dist/client/components/react-dev-overlay/shared.js\");\nvar _getErrorByType = __webpack_require__(/*! ../internal/helpers/getErrorByType */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/getErrorByType.js\");\nvar _nodeStackFrames = __webpack_require__(/*! ../internal/helpers/nodeStackFrames */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/nodeStackFrames.js\");\nvar _ReactDevOverlay = /*#__PURE__*/_interop_require_default._(__webpack_require__(/*! ./ReactDevOverlay */ \"./node_modules/next/dist/client/components/react-dev-overlay/pages/ReactDevOverlay.js\"));\n// Patch console.error to collect information about hydration errors\n(0, _hydrationerrorinfo.patchConsoleError)();\nvar isRegistered = false;\nvar stackTraceLimit = undefined;\nfunction onUnhandledError(ev) {\n  var error = ev == null ? void 0 : ev.error;\n  if (!error || !(error instanceof Error) || typeof error.stack !== \"string\") {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return;\n  }\n  if (error.message.match(/(hydration|content does not match|did not match)/i)) {\n    if (_hydrationerrorinfo.hydrationErrorState.warning) {\n      error.details = _objectSpread(_objectSpread({}, error.details), _hydrationerrorinfo.hydrationErrorState);\n    }\n    error.message += \"\\nSee more info here: https://nextjs.org/docs/messages/react-hydration-error\";\n  }\n  var e = error;\n  var componentStackFrames = typeof _hydrationerrorinfo.hydrationErrorState.componentStack === \"string\" ? (0, _parsecomponentstack.parseComponentStack)(_hydrationerrorinfo.hydrationErrorState.componentStack) : undefined;\n  // Skip ModuleBuildError and ModuleNotFoundError, as it will be sent through onBuildError callback.\n  // This is to avoid same error as different type showing up on client to cause flashing.\n  if (e.name !== \"ModuleBuildError\" && e.name !== \"ModuleNotFoundError\") {\n    _bus.emit({\n      type: _shared.ACTION_UNHANDLED_ERROR,\n      reason: error,\n      frames: (0, _parseStack.parseStack)(e.stack),\n      componentStackFrames: componentStackFrames\n    });\n  }\n}\nfunction onUnhandledRejection(ev) {\n  var reason = ev == null ? void 0 : ev.reason;\n  if (!reason || !(reason instanceof Error) || typeof reason.stack !== \"string\") {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return;\n  }\n  var e = reason;\n  _bus.emit({\n    type: _shared.ACTION_UNHANDLED_REJECTION,\n    reason: reason,\n    frames: (0, _parseStack.parseStack)(e.stack)\n  });\n}\nfunction _register() {\n  if (isRegistered) {\n    return;\n  }\n  isRegistered = true;\n  try {\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 50;\n    stackTraceLimit = limit;\n  } catch (e) {}\n  window.addEventListener(\"error\", onUnhandledError);\n  window.addEventListener(\"unhandledrejection\", onUnhandledRejection);\n}\nfunction _unregister() {\n  if (!isRegistered) {\n    return;\n  }\n  isRegistered = false;\n  if (stackTraceLimit !== undefined) {\n    try {\n      Error.stackTraceLimit = stackTraceLimit;\n    } catch (e) {}\n    stackTraceLimit = undefined;\n  }\n  window.removeEventListener(\"error\", onUnhandledError);\n  window.removeEventListener(\"unhandledrejection\", onUnhandledRejection);\n}\nfunction _onBuildOk() {\n  _bus.emit({\n    type: _shared.ACTION_BUILD_OK\n  });\n}\nfunction _onBuildError(message) {\n  _bus.emit({\n    type: _shared.ACTION_BUILD_ERROR,\n    message: message\n  });\n}\nfunction _onRefresh() {\n  _bus.emit({\n    type: _shared.ACTION_REFRESH\n  });\n}\nfunction _onBeforeRefresh() {\n  _bus.emit({\n    type: _shared.ACTION_BEFORE_REFRESH\n  });\n}\nfunction _onVersionInfo(versionInfo) {\n  _bus.emit({\n    type: _shared.ACTION_VERSION_INFO,\n    versionInfo: versionInfo\n  });\n}\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/pages/client.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/pages/hot-reloader-client.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/pages/hot-reloader-client.js ***!
  \*************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("// TODO: Remove use of `any` type. Fix no-use-before-define violations.\n/* eslint-disable @typescript-eslint/no-use-before-define */ /**\n                                                             * MIT License\n                                                             *\n                                                             * Copyright (c) 2013-present, Facebook, Inc.\n                                                             *\n                                                             * Permission is hereby granted, free of charge, to any person obtaining a copy\n                                                             * of this software and associated documentation files (the \"Software\"), to deal\n                                                             * in the Software without restriction, including without limitation the rights\n                                                             * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n                                                             * copies of the Software, and to permit persons to whom the Software is\n                                                             * furnished to do so, subject to the following conditions:\n                                                             *\n                                                             * The above copyright notice and this permission notice shall be included in all\n                                                             * copies or substantial portions of the Software.\n                                                             *\n                                                             * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n                                                             * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n                                                             * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n                                                             * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n                                                             * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n                                                             * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n                                                             * SOFTWARE.\n                                                             */ // This file is a modified version of the Create React App HMR dev client that\n// can be found here:\n// https://github.com/facebook/create-react-app/blob/v3.4.1/packages/react-dev-utils/webpackHotDevClient.js\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  \"default\": function _default() {\n    return connect;\n  },\n  performFullReload: function performFullReload() {\n    return _performFullReload;\n  }\n});\nvar _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nvar _client = __webpack_require__(/*! ./client */ \"./node_modules/next/dist/client/components/react-dev-overlay/pages/client.js\");\nvar _stripansi = /*#__PURE__*/_interop_require_default._(__webpack_require__(/*! next/dist/compiled/strip-ansi */ \"./node_modules/next/dist/compiled/strip-ansi/index.js\"));\nvar _websocket = __webpack_require__(/*! ./websocket */ \"./node_modules/next/dist/client/components/react-dev-overlay/pages/websocket.js\");\nvar _formatwebpackmessages = /*#__PURE__*/_interop_require_default._(__webpack_require__(/*! ../internal/helpers/format-webpack-messages */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/format-webpack-messages.js\"));\nvar _hotreloadertypes = __webpack_require__(/*! ../../../../server/dev/hot-reloader-types */ \"./node_modules/next/dist/server/dev/hot-reloader-types.js\");\nvar _extractmodulesfromturbopackmessage = __webpack_require__(/*! ../../../../server/dev/extract-modules-from-turbopack-message */ \"./node_modules/next/dist/server/dev/extract-modules-from-turbopack-message.js\");\nvar _shared = __webpack_require__(/*! ../shared */ \"./node_modules/next/dist/client/components/react-dev-overlay/shared.js\");\nvar _runtimeerrorhandler = __webpack_require__(/*! ../internal/helpers/runtime-error-handler */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/runtime-error-handler.js\");\nwindow.__nextDevClientId = Math.round(Math.random() * 100 + Date.now());\nvar customHmrEventHandler;\nvar turbopackMessageListeners = [];\nvar MODE = \"webpack\";\nfunction connect(mode) {\n  MODE = mode;\n  (0, _client.register)();\n  (0, _websocket.addMessageListener)(function (payload) {\n    if (!(\"action\" in payload)) {\n      return;\n    }\n    try {\n      processMessage(payload);\n    } catch (err) {\n      var _err_stack;\n      console.warn(\"[HMR] Invalid message: \" + payload + \"\\n\" + ((_err_stack = err == null ? void 0 : err.stack) != null ? _err_stack : \"\"));\n    }\n  });\n  return {\n    subscribeToHmrEvent: function subscribeToHmrEvent(handler) {\n      customHmrEventHandler = handler;\n    },\n    onUnrecoverableError: function onUnrecoverableError() {\n      _runtimeerrorhandler.RuntimeErrorHandler.hadRuntimeError = true;\n    },\n    addTurbopackMessageListener: function addTurbopackMessageListener(cb) {\n      turbopackMessageListeners.push(cb);\n    },\n    sendTurbopackMessage: function sendTurbopackMessage(msg) {\n      (0, _websocket.sendMessage)(msg);\n    },\n    handleUpdateError: function handleUpdateError(err) {\n      _performFullReload(err);\n    }\n  };\n}\n// Remember some state related to hot module replacement.\nvar isFirstCompilation = true;\nvar mostRecentCompilationHash = null;\nvar hasCompileErrors = false;\nfunction clearOutdatedErrors() {\n  // Clean up outdated compile errors, if any.\n  if (typeof console !== \"undefined\" && typeof console.clear === \"function\") {\n    if (hasCompileErrors) {\n      console.clear();\n    }\n  }\n}\n// Successful compilation.\nfunction handleSuccess() {\n  clearOutdatedErrors();\n  if (MODE === \"webpack\") {\n    var isHotUpdate = !isFirstCompilation || window.__NEXT_DATA__.page !== \"/_error\" && isUpdateAvailable();\n    isFirstCompilation = false;\n    hasCompileErrors = false;\n    // Attempt to apply hot updates or reload.\n    if (isHotUpdate) {\n      tryApplyUpdates(onBeforeFastRefresh, onFastRefresh);\n    }\n  } else {\n    (0, _client.onBuildOk)();\n  }\n}\n// Compilation with warnings (e.g. ESLint).\nfunction handleWarnings(warnings) {\n  clearOutdatedErrors();\n  var isHotUpdate = !isFirstCompilation;\n  isFirstCompilation = false;\n  hasCompileErrors = false;\n  function printWarnings() {\n    // Print warnings to the console.\n    var formatted = (0, _formatwebpackmessages[\"default\"])({\n      warnings: warnings,\n      errors: []\n    });\n    if (typeof console !== \"undefined\" && typeof console.warn === \"function\") {\n      var _formatted_warnings;\n      for (var i = 0; i < ((_formatted_warnings = formatted.warnings) == null ? void 0 : _formatted_warnings.length); i++) {\n        if (i === 5) {\n          console.warn(\"There were more warnings in other files.\\n\" + \"You can find a complete log in the terminal.\");\n          break;\n        }\n        console.warn((0, _stripansi[\"default\"])(formatted.warnings[i]));\n      }\n    }\n  }\n  printWarnings();\n  // Attempt to apply hot updates or reload.\n  if (isHotUpdate) {\n    tryApplyUpdates(onBeforeFastRefresh, onFastRefresh);\n  }\n}\n// Compilation with errors (e.g. syntax error or missing modules).\nfunction handleErrors(errors) {\n  clearOutdatedErrors();\n  isFirstCompilation = false;\n  hasCompileErrors = true;\n  // \"Massage\" webpack messages.\n  var formatted = (0, _formatwebpackmessages[\"default\"])({\n    errors: errors,\n    warnings: []\n  });\n  // Only show the first error.\n  (0, _client.onBuildError)(formatted.errors[0]);\n  // Also log them to the console.\n  if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n    for (var i = 0; i < formatted.errors.length; i++) {\n      console.error((0, _stripansi[\"default\"])(formatted.errors[i]));\n    }\n  }\n  // Do not attempt to reload now.\n  // We will reload on next success instead.\n  if (false) {}\n}\nvar startLatency = undefined;\nfunction onBeforeFastRefresh(updatedModules) {\n  if (updatedModules.length > 0) {\n    // Only trigger a pending state if we have updates to apply\n    // (cf. onFastRefresh)\n    (0, _client.onBeforeRefresh)();\n  }\n}\nfunction onFastRefresh(updatedModules) {\n  if (updatedModules === void 0) updatedModules = [];\n  (0, _client.onBuildOk)();\n  if (updatedModules.length === 0) {\n    return;\n  }\n  (0, _client.onRefresh)();\n  reportHmrLatency();\n}\nfunction reportHmrLatency(updatedModules) {\n  if (updatedModules === void 0) updatedModules = [];\n  if (startLatency) {\n    var endLatency = Date.now();\n    var latency = endLatency - startLatency;\n    console.log(\"[Fast Refresh] done in \" + latency + \"ms\");\n    (0, _websocket.sendMessage)(JSON.stringify({\n      event: \"client-hmr-latency\",\n      id: window.__nextDevClientId,\n      startTime: startLatency,\n      endTime: endLatency,\n      page: window.location.pathname,\n      updatedModules: updatedModules,\n      // Whether the page (tab) was hidden at the time the event occurred.\n      // This can impact the accuracy of the event's timing.\n      isPageHidden: document.visibilityState === \"hidden\"\n    }));\n    if (self.__NEXT_HMR_LATENCY_CB) {\n      self.__NEXT_HMR_LATENCY_CB(latency);\n    }\n  }\n}\n// There is a newer version of the code available.\nfunction handleAvailableHash(hash) {\n  // Update last known compilation hash.\n  mostRecentCompilationHash = hash;\n}\n/** Handles messages from the sevrer for the Pages Router. */\nfunction processMessage(obj) {\n  if (!(\"action\" in obj)) {\n    return;\n  }\n  // Use turbopack message for analytics, (still need built for webpack)\n  switch (obj.action) {\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILDING:\n      {\n        startLatency = Date.now();\n        console.log(\"[Fast Refresh] rebuilding\");\n        break;\n      }\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILT:\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SYNC:\n      {\n        if (obj.hash) handleAvailableHash(obj.hash);\n        var errors = obj.errors,\n          warnings = obj.warnings;\n        // Is undefined when it's a 'built' event\n        if (\"versionInfo\" in obj) (0, _client.onVersionInfo)(obj.versionInfo);\n        var hasErrors = Boolean(errors && errors.length);\n        if (hasErrors) {\n          (0, _websocket.sendMessage)(JSON.stringify({\n            event: \"client-error\",\n            errorCount: errors.length,\n            clientId: window.__nextDevClientId\n          }));\n          return handleErrors(errors);\n        }\n        var hasWarnings = Boolean(warnings && warnings.length);\n        if (hasWarnings) {\n          (0, _websocket.sendMessage)(JSON.stringify({\n            event: \"client-warning\",\n            warningCount: warnings.length,\n            clientId: window.__nextDevClientId\n          }));\n          return handleWarnings(warnings);\n        }\n        (0, _websocket.sendMessage)(JSON.stringify({\n          event: \"client-success\",\n          clientId: window.__nextDevClientId\n        }));\n        return handleSuccess();\n      }\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES:\n      {\n        window.location.reload();\n        return;\n      }\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR:\n      {\n        var errorJSON = obj.errorJSON;\n        if (errorJSON) {\n          var _JSON$parse = JSON.parse(errorJSON),\n            message = _JSON$parse.message,\n            stack = _JSON$parse.stack;\n          var error = new Error(message);\n          error.stack = stack;\n          handleErrors([error]);\n        }\n        return;\n      }\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED:\n      {\n        var _iterator = _createForOfIteratorHelper(turbopackMessageListeners),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var listener = _step.value;\n            listener({\n              type: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        break;\n      }\n    case _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE:\n      {\n        var updatedModules = (0, _extractmodulesfromturbopackmessage.extractModulesFromTurbopackMessage)(obj.data);\n        onBeforeFastRefresh(updatedModules);\n        var _iterator2 = _createForOfIteratorHelper(turbopackMessageListeners),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _listener = _step2.value;\n            _listener({\n              type: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n              data: obj.data\n            });\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        if (_runtimeerrorhandler.RuntimeErrorHandler.hadRuntimeError) {\n          console.warn(_shared.REACT_REFRESH_FULL_RELOAD_FROM_ERROR);\n          _performFullReload(null);\n        }\n        (0, _client.onRefresh)();\n        reportHmrLatency(updatedModules);\n        break;\n      }\n    default:\n      {\n        if (customHmrEventHandler) {\n          customHmrEventHandler(obj);\n          break;\n        }\n        break;\n      }\n  }\n}\n// Is there a newer version of this code available?\nfunction isUpdateAvailable() {\n  /* globals __webpack_hash__ */ // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  return mostRecentCompilationHash !== __webpack_require__.h();\n}\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  // @ts-expect-error TODO: module.hot exists but type needs to be added. Can't use `as any` here as webpack parses for `module.hot` calls.\n  return module.hot.status() === \"idle\";\n}\nfunction afterApplyUpdates(fn) {\n  if (canApplyUpdates()) {\n    fn();\n  } else {\n    var handler = function handler(status) {\n      if (status === \"idle\") {\n        // @ts-expect-error TODO: module.hot exists but type needs to be added. Can't use `as any` here as webpack parses for `module.hot` calls.\n        module.hot.removeStatusHandler(handler);\n        fn();\n      }\n    }; // @ts-expect-error TODO: module.hot exists but type needs to be added. Can't use `as any` here as webpack parses for `module.hot` calls.\n    module.hot.addStatusHandler(handler);\n  }\n}\n// Attempt to update code on the fly, fall back to a hard reload.\nfunction tryApplyUpdates(onBeforeHotUpdate, onHotUpdateSuccess) {\n  // @ts-expect-error TODO: module.hot exists but type needs to be added. Can't use `as any` here as webpack parses for `module.hot` calls.\n  if (false) {}\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    (0, _client.onBuildOk)();\n    return;\n  }\n  function handleApplyUpdates(err, updatedModules) {\n    if (err || _runtimeerrorhandler.RuntimeErrorHandler.hadRuntimeError || !updatedModules) {\n      if (err) {\n        console.warn(\"[Fast Refresh] performing full reload\\n\\n\" + \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" + \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" + \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" + \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" + \"Fast Refresh requires at least one parent function component in your React tree.\");\n      } else if (_runtimeerrorhandler.RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(\"[Fast Refresh] performing full reload because your application had an unrecoverable error\");\n      }\n      _performFullReload(err);\n      return;\n    }\n    if (typeof onHotUpdateSuccess === \"function\") {\n      // Maybe we want to do something.\n      onHotUpdateSuccess(updatedModules);\n    }\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      // However, this time, don't trigger a pending refresh state.\n      tryApplyUpdates(updatedModules.length > 0 ? undefined : onBeforeHotUpdate, updatedModules.length > 0 ? _client.onBuildOk : onHotUpdateSuccess);\n    } else {\n      (0, _client.onBuildOk)();\n      if (false) {}\n    }\n  }\n  // https://webpack.js.org/api/hot-module-replacement/#check\n  // @ts-expect-error TODO: module.hot exists but type needs to be added. Can't use `as any` here as webpack parses for `module.hot` calls.\n  module.hot.check( /* autoApply */false).then(function (updatedModules) {\n    if (!updatedModules) {\n      return null;\n    }\n    if (typeof onBeforeHotUpdate === \"function\") {\n      onBeforeHotUpdate(updatedModules);\n    }\n    // @ts-expect-error TODO: module.hot exists but type needs to be added. Can't use `as any` here as webpack parses for `module.hot` calls.\n    return module.hot.apply();\n  }).then(function (updatedModules) {\n    handleApplyUpdates(null, updatedModules);\n  }, function (err) {\n    handleApplyUpdates(err, null);\n  });\n}\nfunction _performFullReload(err) {\n  var stackTrace = err && (err.stack && err.stack.split(\"\\n\").slice(0, 5).join(\"\\n\") || err.message || err + \"\");\n  (0, _websocket.sendMessage)(JSON.stringify({\n    event: \"client-full-reload\",\n    stackTrace: stackTrace,\n    hadRuntimeError: !!_runtimeerrorhandler.RuntimeErrorHandler.hadRuntimeError,\n    dependencyChain: err ? err.dependencyChain : undefined\n  }));\n  window.location.reload();\n}\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/pages/hot-reloader-client.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/pages/websocket.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/pages/websocket.js ***!
  \***************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  addMessageListener: function addMessageListener() {\n    return _addMessageListener;\n  },\n  connectHMR: function connectHMR() {\n    return _connectHMR;\n  },\n  sendMessage: function sendMessage() {\n    return _sendMessage;\n  }\n});\nvar _getsocketurl = __webpack_require__(/*! ../internal/helpers/get-socket-url */ \"./node_modules/next/dist/client/components/react-dev-overlay/internal/helpers/get-socket-url.js\");\nvar source;\nvar eventCallbacks = [];\nfunction _addMessageListener(callback) {\n  eventCallbacks.push(callback);\n}\nfunction _sendMessage(data) {\n  if (!source || source.readyState !== source.OPEN) return;\n  return source.send(data);\n}\nvar reconnections = 0;\nfunction _connectHMR(options) {\n  function init() {\n    if (source) source.close();\n    function handleOnline() {\n      reconnections = 0;\n      window.console.log(\"[HMR] connected\");\n    }\n    function handleMessage(event) {\n      // Coerce into HMR_ACTION_TYPES as that is the format.\n      var msg = JSON.parse(event.data);\n      var _iterator = _createForOfIteratorHelper(eventCallbacks),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var eventCallback = _step.value;\n          eventCallback(msg);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    var timer;\n    function handleDisconnect() {\n      source.onerror = null;\n      source.onclose = null;\n      source.close();\n      reconnections++;\n      // After 25 reconnects we'll want to reload the page as it indicates the dev server is no longer running.\n      if (reconnections > 25) {\n        window.location.reload();\n        return;\n      }\n      clearTimeout(timer);\n      // Try again after 5 seconds\n      timer = setTimeout(init, reconnections > 5 ? 5000 : 1000);\n    }\n    var url = (0, _getsocketurl.getSocketUrl)(options.assetPrefix);\n    source = new window.WebSocket(\"\" + url + options.path);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onclose = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n  init();\n}\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/pages/websocket.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/components/react-dev-overlay/shared.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/react-dev-overlay/shared.js ***!
  \******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nvar _defineProperty = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/defineProperty.js\");\nvar _toConsumableArray = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/toConsumableArray.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  ACTION_BEFORE_REFRESH: function ACTION_BEFORE_REFRESH() {\n    return _ACTION_BEFORE_REFRESH;\n  },\n  ACTION_BUILD_ERROR: function ACTION_BUILD_ERROR() {\n    return _ACTION_BUILD_ERROR;\n  },\n  ACTION_BUILD_OK: function ACTION_BUILD_OK() {\n    return _ACTION_BUILD_OK;\n  },\n  ACTION_REFRESH: function ACTION_REFRESH() {\n    return _ACTION_REFRESH;\n  },\n  ACTION_UNHANDLED_ERROR: function ACTION_UNHANDLED_ERROR() {\n    return _ACTION_UNHANDLED_ERROR;\n  },\n  ACTION_UNHANDLED_REJECTION: function ACTION_UNHANDLED_REJECTION() {\n    return _ACTION_UNHANDLED_REJECTION;\n  },\n  ACTION_VERSION_INFO: function ACTION_VERSION_INFO() {\n    return _ACTION_VERSION_INFO;\n  },\n  INITIAL_OVERLAY_STATE: function INITIAL_OVERLAY_STATE() {\n    return _INITIAL_OVERLAY_STATE;\n  },\n  REACT_REFRESH_FULL_RELOAD_FROM_ERROR: function REACT_REFRESH_FULL_RELOAD_FROM_ERROR() {\n    return _REACT_REFRESH_FULL_RELOAD_FROM_ERROR;\n  },\n  useErrorOverlayReducer: function useErrorOverlayReducer() {\n    return _useErrorOverlayReducer;\n  }\n});\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _ACTION_BUILD_OK = \"build-ok\";\nvar _ACTION_BUILD_ERROR = \"build-error\";\nvar _ACTION_BEFORE_REFRESH = \"before-fast-refresh\";\nvar _ACTION_REFRESH = \"fast-refresh\";\nvar _ACTION_VERSION_INFO = \"version-info\";\nvar _ACTION_UNHANDLED_ERROR = \"unhandled-error\";\nvar _ACTION_UNHANDLED_REJECTION = \"unhandled-rejection\";\nfunction pushErrorFilterDuplicates(errors, err) {\n  return [].concat(_toConsumableArray(errors.filter(function (e) {\n    // Filter out duplicate errors\n    return e.event.reason !== err.event.reason;\n  })), [err]);\n}\nvar _INITIAL_OVERLAY_STATE = {\n  nextId: 1,\n  buildError: null,\n  errors: [],\n  notFound: false,\n  refreshState: {\n    type: \"idle\"\n  },\n  rootLayoutMissingTags: [],\n  versionInfo: {\n    installed: \"0.0.0\",\n    staleness: \"unknown\"\n  }\n};\nfunction _useErrorOverlayReducer() {\n  return (0, _react.useReducer)(function (_state, action) {\n    switch (action.type) {\n      case _ACTION_BUILD_OK:\n        {\n          return _objectSpread(_objectSpread({}, _state), {}, {\n            buildError: null\n          });\n        }\n      case _ACTION_BUILD_ERROR:\n        {\n          return _objectSpread(_objectSpread({}, _state), {}, {\n            buildError: action.message\n          });\n        }\n      case _ACTION_BEFORE_REFRESH:\n        {\n          return _objectSpread(_objectSpread({}, _state), {}, {\n            refreshState: {\n              type: \"pending\",\n              errors: []\n            }\n          });\n        }\n      case _ACTION_REFRESH:\n        {\n          return _objectSpread(_objectSpread({}, _state), {}, {\n            buildError: null,\n            errors:\n            // Errors can come in during updates. In this case, UNHANDLED_ERROR\n            // and UNHANDLED_REJECTION events might be dispatched between the\n            // BEFORE_REFRESH and the REFRESH event. We want to keep those errors\n            // around until the next refresh. Otherwise we run into a race\n            // condition where those errors would be cleared on refresh completion\n            // before they can be displayed.\n            _state.refreshState.type === \"pending\" ? _state.refreshState.errors : [],\n            refreshState: {\n              type: \"idle\"\n            }\n          });\n        }\n      case _ACTION_UNHANDLED_ERROR:\n      case _ACTION_UNHANDLED_REJECTION:\n        {\n          switch (_state.refreshState.type) {\n            case \"idle\":\n              {\n                return _objectSpread(_objectSpread({}, _state), {}, {\n                  nextId: _state.nextId + 1,\n                  errors: pushErrorFilterDuplicates(_state.errors, {\n                    id: _state.nextId,\n                    event: action\n                  })\n                });\n              }\n            case \"pending\":\n              {\n                return _objectSpread(_objectSpread({}, _state), {}, {\n                  nextId: _state.nextId + 1,\n                  refreshState: _objectSpread(_objectSpread({}, _state.refreshState), {}, {\n                    errors: pushErrorFilterDuplicates(_state.refreshState.errors, {\n                      id: _state.nextId,\n                      event: action\n                    })\n                  })\n                });\n              }\n            default:\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              var _ = _state.refreshState;\n              return _state;\n          }\n        }\n      case _ACTION_VERSION_INFO:\n        {\n          return _objectSpread(_objectSpread({}, _state), {}, {\n            versionInfo: action.versionInfo\n          });\n        }\n      default:\n        {\n          return _state;\n        }\n    }\n  }, _INITIAL_OVERLAY_STATE);\n}\nvar _REACT_REFRESH_FULL_RELOAD_FROM_ERROR = \"[Fast Refresh] performing full reload because your application had an unrecoverable error\";\nif ((typeof exports[\"default\"] === 'function' || typeof exports[\"default\"] === 'object' && exports[\"default\"] !== null) && typeof exports[\"default\"].__esModule === 'undefined') {\n  Object.defineProperty(exports[\"default\"], '__esModule', {\n    value: true\n  });\n  Object.assign(exports[\"default\"], exports);\n  module.exports = exports[\"default\"];\n}\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/components/react-dev-overlay/shared.js\n"));

/***/ })

}]);