{
  "components": {
    "src\\dojopool\\frontend\\App.tsx": {
      "name": "App",
      "props": null,
      "state": null,
      "imports": [
        "import CssBaseline from '@mui/material/CssBaseline';",
        "import { ThemeProvider } from '@mui/material/styles';",
        "import React from 'react';",
        "import { ErrorBoundary } from './components/ErrorBoundary/ErrorBoundary';",
        "import { Toast } from './components/Notifications/Toast';",
        "import { Router } from './Router';",
        "import { theme } from './theme';",
        "import { logError } from './utils/errorHandling';"
      ],
      "hooks": [],
      "file_path": "frontend\\App.tsx"
    },
    "src\\dojopool\\mobile\\App.tsx": {
      "name": "App",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { NavigationContainer } from '@react-navigation/native';",
        "import { createStackNavigator } from '@react-navigation/stack';",
        "import { ThemeProvider } from '@rneui/themed';",
        "import { SafeAreaProvider } from 'react-native-safe-area-context';",
        "import { theme } from './utils/theme';",
        "import RootNavigator from './navigation/RootNavigator';"
      ],
      "hooks": [],
      "file_path": "mobile\\App.tsx"
    },
    "src\\dojopool\\components\\ai\\AIMetrics.tsx": {
      "name": "AIMetrics",
      "props": "systemMetrics: SystemMetric[];\n  performanceMetrics: PerformanceMetric[];\n  lastUpdated: string;\n  onRefresh: () => void;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\ai\\AIMetrics.tsx"
    },
    "src\\dojopool\\components\\ai\\Dashboard.tsx": {
      "name": "Dashboard",
      "props": "children?: React.ReactNode;\n  index: number;\n  value: number;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import { MatchStory } from './MatchStory';",
        "import { Recommendations } from './Recommendations';",
        "import { MatchAnalysis } from './MatchAnalysis';",
        "import { DifficultySettings } from './DifficultySettings';",
        "import { AIMetrics } from './AIMetrics';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\ai\\Dashboard.tsx"
    },
    "src\\dojopool\\components\\ai\\DifficultySettings.tsx": {
      "name": "DifficultySettings",
      "props": "parameters: DifficultyParameter[];\n  onParameterChange: (name: string, value: number) => void;\n  onReset: () => void;\n  adaptiveScore: number;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\ai\\DifficultySettings.tsx"
    },
    "src\\dojopool\\components\\ai\\MatchAnalysis.tsx": {
      "name": "MatchAnalysis",
      "props": "metrics: Metric[];\n  keyMoments: KeyMoment[];\n  patterns: Pattern[];\n  summary: string;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\ai\\MatchAnalysis.tsx"
    },
    "src\\dojopool\\components\\ai\\MatchStory.tsx": {
      "name": "MatchStory",
      "props": "title: string;\n  date: string;\n  players: Player[];\n  story: string;\n  highlights: Highlight[];\n  isBookmarked: boolean;\n  onBookmark: () => void;\n  onShare: () => void;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\ai\\MatchStory.tsx"
    },
    "src\\dojopool\\components\\ai\\Recommendations.tsx": {
      "name": "Recommendations",
      "props": "recommendations: Recommendation[];",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\ai\\Recommendations.tsx"
    },
    "src\\dojopool\\components\\analytics\\Dashboard.tsx": {
      "name": "Dashboard",
      "props": "userId?: number;\n  isAdmin: boolean;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Box, Container, Grid, Paper, Typography, useTheme } from '@mui/material';",
        "import { MetricsChart } from './MetricsChart';",
        "import { MetricsTable } from './MetricsTable';",
        "import { MetricsSummary } from './MetricsSummary';",
        "import { DateRangePicker } from './DateRangePicker';",
        "import { FilterPanel } from './FilterPanel';",
        "import { LoadingSpinner } from '../common/LoadingSpinner';",
        "import { ErrorAlert } from '../common/ErrorAlert';",
        "import { useAnalytics } from '../../hooks/useAnalytics';",
        "import { formatDate } from '../../utils/dateUtils';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\analytics\\Dashboard.tsx"
    },
    "src\\dojopool\\components\\analytics\\DateRangePicker.tsx": {
      "name": "DateRangePicker",
      "props": "startDate: Date;\n  endDate: Date;\n  onChange: (range: { startDate: Date; endDate: Date",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Box, TextField } from '@mui/material';",
        "import { DatePicker } from '@mui/x-date-pickers/DatePicker';",
        "import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';",
        "import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';"
      ],
      "hooks": [],
      "file_path": "components\\analytics\\DateRangePicker.tsx"
    },
    "src\\dojopool\\components\\analytics\\FilterPanel.tsx": {
      "name": "FilterPanel",
      "props": "selectedMetrics: string[];\n  selectedDimension: string;\n  selectedPeriod: string;\n  onMetricsChange: (metrics: string[]) => void;\n  onDimensionChange: (dimension: string) => void;\n  onPeriodChange: (period: string) => void;\n  isAdmin: boolean;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\analytics\\FilterPanel.tsx"
    },
    "src\\dojopool\\components\\analytics\\MetricsChart.tsx": {
      "name": "MetricsChart",
      "props": "data: any[];\n  metrics: string[];\n  period: string;",
      "state": null,
      "imports": [
        "import React, { useMemo } from 'react';",
        "import {",
        "import { Box, Typography, useTheme } from '@mui/material';",
        "import { formatDate, parseDate } from '../../utils/dateUtils';"
      ],
      "hooks": [
        "useMemo"
      ],
      "file_path": "components\\analytics\\MetricsChart.tsx"
    },
    "src\\dojopool\\components\\analytics\\MetricsSummary.tsx": {
      "name": "MetricsSummary",
      "props": "metric: string;\n  data: any[];\n  loading: boolean;",
      "state": null,
      "imports": [
        "import React, { useMemo } from 'react';",
        "import { Card, CardContent, Typography, Box, Skeleton, useTheme } from '@mui/material';",
        "import {"
      ],
      "hooks": [
        "useMemo"
      ],
      "file_path": "components\\analytics\\MetricsSummary.tsx"
    },
    "src\\dojopool\\components\\analytics\\MetricsTable.tsx": {
      "name": "MetricsTable",
      "props": "data: any[];\n  metrics: string[];\n  loading: boolean;",
      "state": null,
      "imports": [
        "import React, { useState, useMemo } from 'react';",
        "import {",
        "import { visuallyHidden } from '@mui/utils';"
      ],
      "hooks": [
        "useState",
        "useMemo"
      ],
      "file_path": "components\\analytics\\MetricsTable.tsx"
    },
    "src\\dojopool\\components\\ml\\AnomalyDetection.tsx": {
      "name": "AnomalyDetection",
      "props": "onAnomalyDetected: (anomalies: any) => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { MLService } from '../../services/ml.service';",
        "import {"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\ml\\AnomalyDetection.tsx"
    },
    "src\\dojopool\\components\\ml\\MLDashboard.tsx": {
      "name": "MLDashboard",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Box, Grid, Typography, CircularProgress } from '@mui/material';",
        "import { useTheme } from '@mui/material/styles';",
        "import { MLService } from '../../services/ml.service';",
        "import { ModelMetrics } from './ModelMetrics';",
        "import { ShotPrediction } from './ShotPrediction';",
        "import { PatternRecognition } from './PatternRecognition';",
        "import { AnomalyDetection } from './AnomalyDetection';",
        "import { TrainingPlan } from './TrainingPlan';",
        "import { ErrorBoundary } from '../common/ErrorBoundary';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\ml\\MLDashboard.tsx"
    },
    "src\\dojopool\\components\\ml\\ModelMetrics.tsx": {
      "name": "ModelMetrics",
      "props": "modelId: string | null;\n  metrics: any;\n  models: any[];\n  onModelSelect: (modelId: string) => void;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {",
        "importance: metrics.feature_importance.importance[index],"
      ],
      "hooks": [],
      "file_path": "components\\ml\\ModelMetrics.tsx"
    },
    "src\\dojopool\\components\\ml\\PatternRecognition.tsx": {
      "name": "PatternRecognition",
      "props": "modelId: string | null;\n  onPatternDetected: (pattern: any) => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { MLService } from '../../services/ml.service';",
        "import {"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\ml\\PatternRecognition.tsx"
    },
    "src\\dojopool\\components\\ml\\ShotPrediction.tsx": {
      "name": "ShotPrediction",
      "props": "modelId: string | null;\n  onPrediction: (prediction: any) => void;",
      "state": null,
      "imports": [
        "import React, { useState } from 'react';",
        "import {",
        "import { MLService } from '../../services/ml.service';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "components\\ml\\ShotPrediction.tsx"
    },
    "src\\dojopool\\components\\ml\\TrainingPlan.tsx": {
      "name": "TrainingPlan",
      "props": "metrics: any;\n  onPlanGenerated: (plan: any) => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import { MLService } from '../../services/ml.service';",
        "import {"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\ml\\TrainingPlan.tsx"
    },
    "src\\dojopool\\components\\performance\\MetricsChart.tsx": {
      "name": "MetricsChart",
      "props": "data: Array<{\n    timestamp: string;\n    cpu_usage: number;\n    memory_usage: number;\n    disk_usage: number;\n    network_io_rate: number;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Box, Paper, Typography, ToggleButton, ToggleButtonGroup } from '@mui/material';",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\performance\\MetricsChart.tsx"
    },
    "src\\dojopool\\components\\performance\\OptimizationRecommendations.tsx": {
      "name": "OptimizationRecommendations",
      "props": "recommendations: Recommendation[];",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\performance\\OptimizationRecommendations.tsx"
    },
    "src\\dojopool\\components\\performance\\PerformanceDashboard.tsx": {
      "name": "PerformanceDashboard",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Box, Container, Grid } from '@mui/material';",
        "import { SystemStatus } from './SystemStatus';",
        "import { MetricsChart } from './MetricsChart';",
        "import { OptimizationRecommendations } from './OptimizationRecommendations';",
        "import { usePerformanceMonitor } from '../../hooks/usePerformanceMonitor';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\performance\\PerformanceDashboard.tsx"
    },
    "src\\dojopool\\components\\performance\\SystemStatus.tsx": {
      "name": "SystemStatus",
      "props": "status: {\n    cpu_usage: number;\n    memory_usage: number;\n    disk_usage: number;\n    network_io: {\n      bytes_sent: number;\n      bytes_recv: number;\n      packets_sent: number;\n      packets_recv: number;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Box, Grid, Paper, Typography, LinearProgress, Tooltip } from '@mui/material';",
        "import {"
      ],
      "hooks": [],
      "file_path": "components\\performance\\SystemStatus.tsx"
    },
    "src\\dojopool\\components\\predictive\\PredictiveDashboard.tsx": {
      "name": "PredictiveDashboard",
      "props": "children?: React.ReactNode;\n  index: number;\n  value: number;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Box, Grid, Typography, CircularProgress, Paper, Tabs, Tab } from '@mui/material';",
        "import { useTheme } from '@mui/material/styles';",
        "import { PerformanceForecast } from './PerformanceForecast';",
        "import { SkillProgression } from './SkillProgression';",
        "import { MatchupPrediction } from './MatchupPrediction';",
        "import { ModelMetrics } from './ModelMetrics';",
        "import { ErrorBoundary } from '../common/ErrorBoundary';",
        "import { usePredictiveAnalytics } from '../../hooks/usePredictiveAnalytics';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "components\\predictive\\PredictiveDashboard.tsx"
    },
    "src\\dojopool\\frontend\\components\\ABTestResults.tsx": {
      "name": "ABTestResults",
      "props": "testId: string;\n    refreshInterval?: number;",
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import { abTestingService } from '../services/abTesting';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\ABTestResults.tsx"
    },
    "src\\dojopool\\frontend\\components\\AnimatedAvatar.tsx": {
      "name": "AnimatedAvatar",
      "props": "userId: number;\n  size?: number;\n  defaultAnimation?: string;\n  onAnimationComplete?: () => void;\n  className?: string;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect, useCallback, useRef } from 'react';",
        "import lottie from 'lottie-web';",
        "import { useQuery, useMutation } from '@tanstack/react-query';",
        "import { Avatar, Box, CircularProgress, IconButton, Menu, MenuItem } from '@mui/material';",
        "import { PlayArrow, Pause, Loop, Stop } from '@mui/icons-material';",
        "import { styled } from '@mui/material/styles';"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useRef",
        "useCallback"
      ],
      "file_path": "frontend\\components\\AnimatedAvatar.tsx"
    },
    "src\\dojopool\\frontend\\components\\AuthCallback.tsx": {
      "name": "AuthCallback",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import { useNavigate } from 'react-router-dom';",
        "import { authService } from '../services/auth';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\AuthCallback.tsx"
    },
    "src\\dojopool\\frontend\\components\\ProtectedRoute.tsx": {
      "name": "ProtectedRoute",
      "props": "children: React.ReactNode;\n    requireAuth?: boolean;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Navigate, useLocation } from 'react-router-dom';",
        "import { useAuth } from '../contexts/AuthContext';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\ProtectedRoute.tsx"
    },
    "src\\dojopool\\frontend\\contexts\\AuthContext.tsx": {
      "name": "AuthContext",
      "props": null,
      "state": null,
      "imports": [
        "import { User } from 'firebase/auth';",
        "import React, { createContext, useContext, useEffect, useState } from 'react';",
        "import { authService } from '../services/auth';"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useContext"
      ],
      "file_path": "frontend\\contexts\\AuthContext.tsx"
    },
    "src\\dojopool\\frontend\\pages\\DojoDiscovery.tsx": {
      "name": "DojoDiscovery",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import DojoMap from '../components/DojoMap/DojoMap';",
        "import { AnimatedAvatar } from '../components/Avatar';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\pages\\DojoDiscovery.tsx"
    },
    "src\\dojopool\\frontend\\pages\\TournamentManagement.tsx": {
      "name": "TournamentManagement",
      "props": "children?: React.ReactNode;\n  index: number;\n  value: number;",
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import {",
        "import { DateTimePicker } from '@mui/x-date-pickers';",
        "import { Add as AddIcon } from '@mui/icons-material';",
        "import TournamentBracket from '../components/Tournament/TournamentBracket';",
        "import { Tournament, TournamentMatch } from '../../types/tournament';",
        "import { useAuth } from '../hooks/useAuth';",
        "import { api } from '../services/api';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\pages\\TournamentManagement.tsx"
    },
    "src\\dojopool\\frontend\\routes\\TournamentRoutes.tsx": {
      "name": "TournamentRoutes",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Routes, Route } from 'react-router-dom';",
        "import TournamentList from '../components/tournaments/TournamentList';",
        "import TournamentDetail from '../components/tournaments/TournamentDetail';",
        "import TournamentForm from '../components/tournaments/TournamentForm';",
        "import { PrivateRoute } from './PrivateRoute';"
      ],
      "hooks": [],
      "file_path": "frontend\\routes\\TournamentRoutes.tsx"
    },
    "src\\dojopool\\frontend\\routes\\VenueRoutes.tsx": {
      "name": "VenueRoutes",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Routes, Route } from 'react-router-dom';",
        "import VenueList from '../components/venues/VenueList';",
        "import VenueDetail from '../components/venues/VenueDetail';",
        "import PrivateRoute from './PrivateRoute';"
      ],
      "hooks": [],
      "file_path": "frontend\\routes\\VenueRoutes.tsx"
    },
    "src\\dojopool\\frontend\\src\\App.tsx": {
      "name": "App",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Route, Routes } from 'react-router-dom';",
        "import Home from './components/Pages/Home.tsx';"
      ],
      "hooks": [],
      "file_path": "frontend\\src\\App.tsx"
    },
    "src\\dojopool\\frontend\\src\\index.tsx": {
      "name": "index",
      "props": null,
      "state": null,
      "imports": [
        "import { CssBaseline, ThemeProvider, createTheme } from '@mui/material';",
        "import React from 'react';",
        "import ReactDOM from 'react-dom/client';",
        "import { BrowserRouter } from 'react-router-dom';",
        "import App from './App.tsx';"
      ],
      "hooks": [],
      "file_path": "frontend\\src\\index.tsx"
    },
    "src\\dojopool\\frontend\\components\\AI\\PerformancePredictor.tsx": {
      "name": "PerformancePredictor",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import {",
        "import { api } from '../../services/api';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\AI\\PerformancePredictor.tsx"
    },
    "src\\dojopool\\frontend\\components\\AI\\PlayerRecommender.tsx": {
      "name": "PlayerRecommender",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import { PersonAdd } from '@mui/icons-material';",
        "import { api } from '../../services/api';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\AI\\PlayerRecommender.tsx"
    },
    "src\\dojopool\\frontend\\components\\AI\\ShotAnalyzer.tsx": {
      "name": "ShotAnalyzer",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import { PhotoCamera } from '@mui/icons-material';",
        "import { api } from '../../services/api';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\AI\\ShotAnalyzer.tsx"
    },
    "src\\dojopool\\frontend\\components\\Auth\\Login.tsx": {
      "name": "Login",
      "props": null,
      "state": null,
      "imports": [
        "import { useState } from 'react';",
        "import { useNavigate, Link as RouterLink } from 'react-router-dom';",
        "import {",
        "import { useAuth } from '@/contexts/AuthContext';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\Auth\\Login.tsx"
    },
    "src\\dojopool\\frontend\\components\\Auth\\PrivateRoute.tsx": {
      "name": "PrivateRoute",
      "props": "children: React.ReactNode;",
      "state": null,
      "imports": [
        "import { Navigate, useLocation } from 'react-router-dom';",
        "import { useAuth } from '@/contexts/AuthContext';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Auth\\PrivateRoute.tsx"
    },
    "src\\dojopool\\frontend\\components\\Auth\\Register.tsx": {
      "name": "Register",
      "props": null,
      "state": null,
      "imports": [
        "import { useState } from 'react';",
        "import { useNavigate, Link as RouterLink } from 'react-router-dom';",
        "import {",
        "import { useAuth } from '@/contexts/AuthContext';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\Auth\\Register.tsx"
    },
    "src\\dojopool\\frontend\\components\\Avatar\\AvatarDisplay.tsx": {
      "name": "AvatarDisplay",
      "props": "avatarUrl?: string | null;\n  username: string;\n  size?: number;\n  editable?: boolean;\n  onEdit?: () => void;\n  showStatus?: boolean;\n  isOnline?: boolean;\n  className?: string;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Avatar as MuiAvatar, Badge, IconButton, Tooltip } from '@mui/material';",
        "import { styled } from '@mui/material/styles';",
        "import EditIcon from '@mui/icons-material/Edit';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Avatar\\AvatarDisplay.tsx"
    },
    "src\\dojopool\\frontend\\components\\Avatar\\AvatarEditDialog.tsx": {
      "name": "AvatarEditDialog",
      "props": "open: boolean;\n  onClose: () => void;\n  onAvatarChange: (avatarUrl: string) => void;\n  currentAvatarUrl?: string;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import CloseIcon from '@mui/icons-material/Close';",
        "import AvatarGenerator from './AvatarGenerator';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Avatar\\AvatarEditDialog.tsx"
    },
    "src\\dojopool\\frontend\\components\\Avatar\\AvatarGenerator.tsx": {
      "name": "AvatarGenerator",
      "props": "onAvatarGenerated: (avatarUrl: string) => void;\n  currentAvatarUrl?: string;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Avatar\\AvatarGenerator.tsx"
    },
    "src\\dojopool\\frontend\\components\\DojoMap\\DojoMap.tsx": {
      "name": "DojoMap",
      "props": "apiKey: string;\n  center?: { lat: number; lng: number",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';",
        "import { Box, Paper, Typography, Button, CircularProgress } from '@mui/material';",
        "import { styled } from '@mui/material/styles';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\DojoMap\\DojoMap.tsx"
    },
    "src\\dojopool\\frontend\\components\\ErrorBoundary\\ErrorBoundary.tsx": {
      "name": "ErrorBoundary",
      "props": null,
      "state": null,
      "imports": [
        "import { BugReport as BugReportIcon, Refresh as RefreshIcon } from '@mui/icons-material';",
        "import { Box, Button, Container, Paper, Typography } from '@mui/material';",
        "import React, { Component, ErrorInfo } from 'react';",
        "import { logError } from '../../utils/errorHandling';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\ErrorBoundary\\ErrorBoundary.tsx"
    },
    "src\\dojopool\\frontend\\components\\events\\EventList.tsx": {
      "name": "EventList",
      "props": "events?: VenueEvent[];\n  loading?: boolean;\n  venueId: number;",
      "state": null,
      "imports": [
        "import React, { useState } from 'react';",
        "import {",
        "import { PlusOutlined } from '@ant-design/icons';",
        "import { useMutation, useQueryClient } from 'react-query';",
        "import moment from 'moment';",
        "import { createEvent, registerForEvent } from '../../api/venues';",
        "import { VenueEvent } from '../../types/venue';",
        "import { useAuth } from '../../hooks/useAuth';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\events\\EventList.tsx"
    },
    "src\\dojopool\\frontend\\components\\GameAnalysis\\GameAnalyzer.tsx": {
      "name": "GameAnalyzer",
      "props": "gameId: number;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import { ShotAnalysis } from './ShotAnalysis';",
        "import { GamePatterns } from './GamePatterns';",
        "import { GameStatistics } from './GameStatistics';",
        "import { api } from '../../services/api';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\GameAnalysis\\GameAnalyzer.tsx"
    },
    "src\\dojopool\\frontend\\components\\GameAnalysis\\GamePatterns.tsx": {
      "name": "GamePatterns",
      "props": "patterns: {\n    shot_distribution: any;\n    player_positioning: any;\n    common_sequences: any[];\n    success_patterns: any;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import { TrendingUp, LocationOn, Repeat, EmojiEvents } from '@mui/icons-material';",
        "import { styled } from '@mui/material/styles';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\GameAnalysis\\GamePatterns.tsx"
    },
    "src\\dojopool\\frontend\\components\\GameAnalysis\\GameStatistics.tsx": {
      "name": "GameStatistics",
      "props": "statistics: {\n    shot_stats: any;\n    positional_stats: any;\n    scoring_stats: any;\n    player_stats: any;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import {",
        "import { styled } from '@mui/material/styles';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\GameAnalysis\\GameStatistics.tsx"
    },
    "src\\dojopool\\frontend\\components\\GameAnalysis\\ShotAnalysis.tsx": {
      "name": "ShotAnalysis",
      "props": "gameId: number;",
      "state": null,
      "imports": [
        "import React, { useState } from 'react';",
        "import {",
        "import { Speed, GpsFixed, RotateRight, Timeline } from '@mui/icons-material';",
        "import { styled } from '@mui/material/styles';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\GameAnalysis\\ShotAnalysis.tsx"
    },
    "src\\dojopool\\frontend\\components\\Layout\\Navbar.tsx": {
      "name": "Navbar",
      "props": null,
      "state": null,
      "imports": [
        "import { useState, useEffect } from 'react';",
        "import { Link as RouterLink } from 'react-router-dom';",
        "import {",
        "import MenuIcon from '@mui/icons-material/Menu';",
        "import LogoutIcon from '@mui/icons-material/Logout';",
        "import { useAuth } from '@/contexts/AuthContext';",
        "import NotificationCenter from './NotificationCenter';",
        "import notificationService from '../../services/notification';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Layout\\Navbar.tsx"
    },
    "src\\dojopool\\frontend\\components\\Layout\\NotificationCenter.tsx": {
      "name": "NotificationCenter",
      "props": "className?: string;",
      "state": null,
      "imports": [
        "import { useState, useEffect, useCallback } from 'react';",
        "import {",
        "import {",
        "import notificationService from '../../services/notification';",
        "import { formatDistanceToNow } from 'date-fns';"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useCallback"
      ],
      "file_path": "frontend\\components\\Layout\\NotificationCenter.tsx"
    },
    "src\\dojopool\\frontend\\components\\Map\\GameMap.tsx": {
      "name": "GameMap",
      "props": "currentLocation: Location;\n  onLocationUpdate?: (location: Location) => void;\n  otherPlayerLocations?: Record<string, Location>;",
      "state": null,
      "imports": [
        "import { useCallback, useEffect, useRef } from 'react';",
        "import { GoogleMap, LoadScript, Circle } from '@react-google-maps/api';",
        "import { useTheme } from '@mui/material';",
        "import { Location } from '@/utils/location';",
        "import {"
      ],
      "hooks": [
        "useEffect",
        "useRef",
        "useCallback"
      ],
      "file_path": "frontend\\components\\Map\\GameMap.tsx"
    },
    "src\\dojopool\\frontend\\components\\marketplace\\MarketplaceGrid.tsx": {
      "name": "MarketplaceGrid",
      "props": "items: MarketplaceItem[];\n  onItemClick: (item: MarketplaceItem) => void;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import './MarketplaceGrid.css';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\marketplace\\MarketplaceGrid.tsx"
    },
    "src\\dojopool\\frontend\\components\\marketplace\\MarketplaceLayout.tsx": {
      "name": "MarketplaceLayout",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useCallback } from 'react';",
        "import { Outlet, useNavigate } from 'react-router-dom';",
        "import './MarketplaceLayout.css';"
      ],
      "hooks": [
        "useState",
        "useCallback"
      ],
      "file_path": "frontend\\components\\marketplace\\MarketplaceLayout.tsx"
    },
    "src\\dojopool\\frontend\\components\\matches\\LiveMatch.tsx": {
      "name": "LiveMatch",
      "props": "matchId: string;\n  onScoreUpdate?: (score: any) => void;",
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import { LiveMatch } from '../../services/match-updates';",
        "import matchUpdateService from '../../services/match-updates';",
        "import { formatTimestamp } from '../../utils/date';",
        "import './LiveMatch.css';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\matches\\LiveMatch.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\AlertPanel.tsx": {
      "name": "AlertPanel",
      "props": "gameId?: string;\n  onAlertAcknowledge?: (alert: AlertType) => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import { Alert as AlertType } from '../../types/monitoring';",
        "import { gameMetricsMonitor } from '../../utils/monitoring';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Monitoring\\AlertPanel.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\Dashboard.tsx": {
      "name": "Dashboard",
      "props": "children?: React.ReactNode;\n  index: number;\n  value: number;",
      "state": null,
      "imports": [
        "import {",
        "import {",
        "import { saveAs } from 'file-saver';",
        "import html2canvas from 'html2canvas';",
        "import jsPDF from 'jspdf';",
        "import React, { useCallback, useEffect, useMemo, useState } from 'react';",
        "import { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';",
        "import {",
        "import { Alert, ErrorEvent, MetricData } from '../../types/monitoring';",
        "import { ErrorTracker } from '../../utils/errorTracker';",
        "import { gameMetricsMonitor } from '../../utils/monitoring';",
        "import { ErrorBoundary } from './ErrorBoundary';",
        "import { MetricsChart } from './MetricsChart';"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useMemo",
        "useCallback"
      ],
      "file_path": "frontend\\components\\Monitoring\\Dashboard.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\ErrorBoundary.tsx": {
      "name": "ErrorBoundary",
      "props": null,
      "state": null,
      "imports": [
        "import React, { Component, ErrorInfo } from 'react';",
        "import { ErrorTracker } from '../../utils/monitoring';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Monitoring\\ErrorBoundary.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\ErrorReport.tsx": {
      "name": "ErrorReport",
      "props": "gameId?: string;\n  onErrorClick?: (error: ErrorEvent) => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import { gameMetricsMonitor } from '../../utils/monitoring';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Monitoring\\ErrorReport.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\MetricsChart.tsx": {
      "name": "MetricsChart",
      "props": "gameId?: string;\n  refreshInterval?: number;",
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import {",
        "import {",
        "import { MetricData, MetricsSnapshot } from '../../types/monitoring';",
        "import { gameMetricsMonitor } from '../../utils/monitoring';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Monitoring\\MetricsChart.tsx"
    },
    "src\\dojopool\\frontend\\components\\Notifications\\Toast.tsx": {
      "name": "Toast",
      "props": "autoHideDuration?: number;",
      "state": null,
      "imports": [
        "import { Alert, AlertColor, Box, Snackbar, Typography } from '@mui/material';",
        "import React from 'react';",
        "import { useNotifications } from '../../hooks/useNotifications';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Notifications\\Toast.tsx"
    },
    "src\\dojopool\\frontend\\components\\Pages\\Leaderboard.tsx": {
      "name": "Leaderboard",
      "props": "children?: React.ReactNode;\n  index: number;\n  value: number;",
      "state": null,
      "imports": [
        "import { useState, useEffect } from 'react';",
        "import {",
        "import {"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Pages\\Leaderboard.tsx"
    },
    "src\\dojopool\\frontend\\components\\QRCode\\QRDialog.tsx": {
      "name": "QRDialog",
      "props": "open: boolean;\n  onClose: () => void;\n  onScan?: (data: string) => void;\n  qrCode?: string;\n  tableNumber?: number;\n  mode?: 'scan' | 'display' | 'both';\n  title?: string;",
      "state": null,
      "imports": [
        "import React, { useState } from 'react';",
        "import {",
        "import QRScanner from './QRScanner';",
        "import QRDisplay from './QRDisplay';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\QRCode\\QRDialog.tsx"
    },
    "src\\dojopool\\frontend\\components\\QRCode\\QRDisplay.tsx": {
      "name": "QRDisplay",
      "props": "qrCode: string;\n  title?: string;\n  tableNumber?: number;\n  onDownload?: () => void;",
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { Box, Button, Paper, Typography } from '@mui/material';",
        "import { styled } from '@mui/material/styles';",
        "import DownloadIcon from '@mui/icons-material/Download';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\QRCode\\QRDisplay.tsx"
    },
    "src\\dojopool\\frontend\\components\\QRCode\\QRScanner.tsx": {
      "name": "QRScanner",
      "props": "onScan: (data: string) => void;\n  onError?: (error: string) => void;\n  onClose?: () => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect, useRef } from 'react';",
        "import { Box, Button, CircularProgress, Typography } from '@mui/material';",
        "import { styled } from '@mui/material/styles';",
        "import QrScanner from 'qr-scanner';"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useRef"
      ],
      "file_path": "frontend\\components\\QRCode\\QRScanner.tsx"
    },
    "src\\dojopool\\frontend\\components\\Tournament\\TournamentBracket.tsx": {
      "name": "TournamentBracket",
      "props": "tournament: Tournament;\n  onMatchClick?: (match: TournamentMatch) => void;",
      "state": null,
      "imports": [
        "import React, { useEffect, useState } from 'react';",
        "import { Box, Typography, Paper, Grid, Button, Chip } from '@mui/material';",
        "import { styled } from '@mui/material/styles';",
        "import { Tournament, TournamentMatch, TournamentParticipant } from '../../types/tournament';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Tournament\\TournamentBracket.tsx"
    },
    "src\\dojopool\\frontend\\components\\tournaments\\MatchStats.tsx": {
      "name": "MatchStats",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Card, Table, Statistic, Row, Col, Timeline, Tag } from 'antd';",
        "import {",
        "import moment from 'moment';",
        "import { TournamentMatch, TournamentParticipant } from '../../types/tournament';",
        "import { getMatchHistory, getParticipantStats } from '../../api/tournaments';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\tournaments\\MatchStats.tsx"
    },
    "src\\dojopool\\frontend\\components\\tournaments\\PrizeManagement.tsx": {
      "name": "PrizeManagement",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Card, Table, Button, Tag, Modal, message, Tabs } from 'antd';",
        "import { TrophyOutlined, DollarOutlined, CheckOutlined } from '@ant-design/icons';",
        "import moment from 'moment';",
        "import { useAuth } from '../../hooks/useAuth';",
        "import { getUnclaimedPrizes, getPrizeHistory, claimPrize } from '../../api/tournaments';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\tournaments\\PrizeManagement.tsx"
    },
    "src\\dojopool\\frontend\\components\\tournaments\\TournamentBracket.tsx": {
      "name": "TournamentBracket",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useMemo } from 'react';",
        "import { Card, Tag } from 'antd';",
        "import { TournamentMatch, TournamentParticipant } from '../../types/tournament';"
      ],
      "hooks": [
        "useMemo"
      ],
      "file_path": "frontend\\components\\tournaments\\TournamentBracket.tsx"
    },
    "src\\dojopool\\frontend\\components\\tournaments\\TournamentDetail.tsx": {
      "name": "TournamentDetail",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { useParams, useNavigate } from 'react-router-dom';",
        "import {",
        "import {",
        "import moment from 'moment';",
        "import {",
        "import {",
        "import { useAuth } from '../../hooks/useAuth';",
        "import TournamentBracket from './TournamentBracket';",
        "import MatchStats from './MatchStats';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\tournaments\\TournamentDetail.tsx"
    },
    "src\\dojopool\\frontend\\components\\tournaments\\TournamentForm.tsx": {
      "name": "TournamentForm",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { useNavigate, useParams } from 'react-router-dom';",
        "import { Form, Input, Select, DatePicker, InputNumber, Button, Card, message, Space } from 'antd';",
        "import moment from 'moment';",
        "import { Tournament, TournamentFormat, CreateTournamentData } from '../../types/tournament';",
        "import { createTournament, getTournament, updateTournament } from '../../api/tournaments';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\tournaments\\TournamentForm.tsx"
    },
    "src\\dojopool\\frontend\\components\\tournaments\\TournamentList.tsx": {
      "name": "TournamentList",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Link } from 'react-router-dom';",
        "import { Table, Button, Space, Tag, Input, Select, DatePicker } from 'antd';",
        "import { SearchOutlined, PlusOutlined } from '@ant-design/icons';",
        "import moment from 'moment';",
        "import { Tournament, TournamentStatus, TournamentFormat } from '../../types/tournament';",
        "import { getTournaments } from '../../api/tournaments';",
        "import { useAuth } from '../../hooks/useAuth';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\tournaments\\TournamentList.tsx"
    },
    "src\\dojopool\\frontend\\components\\Training\\ExerciseList.tsx": {
      "name": "ExerciseList",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import { FitnessCenter, Speed, Gavel, Timeline } from '@mui/icons-material';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Training\\ExerciseList.tsx"
    },
    "src\\dojopool\\frontend\\components\\Training\\ProgressChart.tsx": {
      "name": "ProgressChart",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import {",
        "import { Box, useTheme } from '@mui/material';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Training\\ProgressChart.tsx"
    },
    "src\\dojopool\\frontend\\components\\Training\\TrainingDashboard.tsx": {
      "name": "TrainingDashboard",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import { styled } from '@mui/material/styles';",
        "import { FitnessCenter, Timeline, CheckCircle, ArrowForward } from '@mui/icons-material';",
        "import { api } from '../../services/api';",
        "import { ProgressChart } from './ProgressChart';",
        "import { ExerciseList } from './ExerciseList';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\Training\\TrainingDashboard.tsx"
    },
    "src\\dojopool\\frontend\\components\\venues\\CheckInSystem.tsx": {
      "name": "CheckInSystem",
      "props": "venueId: number;\n  venueName: string;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import moment from 'moment';",
        "import { Line } from '@ant-design/charts';",
        "import { useAuth } from '../../hooks/useAuth';",
        "import {"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\venues\\CheckInSystem.tsx"
    },
    "src\\dojopool\\frontend\\components\\venues\\EventManagement.tsx": {
      "name": "EventManagement",
      "props": "venueId: number;\n  venueName: string;\n  isOwner?: boolean;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import moment from 'moment';",
        "import { useAuth } from '../../hooks/useAuth';",
        "import {"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\venues\\EventManagement.tsx"
    },
    "src\\dojopool\\frontend\\components\\venues\\LeaderboardList.tsx": {
      "name": "LeaderboardList",
      "props": "venueId: number;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import {",
        "import {",
        "import moment from 'moment';",
        "import { useAuth } from '../../hooks/useAuth';",
        "import { getVenueLeaderboard, getUserStats } from '../../api/venues';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\venues\\LeaderboardList.tsx"
    },
    "src\\dojopool\\frontend\\components\\venues\\VenueDetail.tsx": {
      "name": "VenueDetail",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { useParams } from 'react-router-dom';",
        "import { Card, Tabs, Descriptions, Tag, message } from 'antd';",
        "import {",
        "import { getVenue } from '../../api/venues';",
        "import CheckInSystem from './CheckInSystem';",
        "import LeaderboardList from './LeaderboardList';",
        "import EventList from '../events/EventList';",
        "import LoadingSpinner from '../common/LoadingSpinner';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\venues\\VenueDetail.tsx"
    },
    "src\\dojopool\\frontend\\components\\venues\\VenueList.tsx": {
      "name": "VenueList",
      "props": "onVenueSelect?: (venue: Venue) => void;",
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { Link } from 'react-router-dom';",
        "import { Card, Row, Col, Input, Select, Pagination, Empty, Spin } from 'antd';",
        "import { SearchOutlined } from '@ant-design/icons';",
        "import { useQuery } from 'react-query';",
        "import { getVenues } from '../../api/venues';",
        "import { Venue } from '../../types/venue';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "frontend\\components\\venues\\VenueList.tsx"
    },
    "src\\dojopool\\frontend\\components\\Map\\__tests__\\GameMap.test.tsx": {
      "name": "GameMap.test",
      "props": null,
      "state": null,
      "imports": [
        "import { render, screen } from '@testing-library/react';",
        "import { ThemeProvider } from '@mui/material';",
        "import { theme } from '@/theme';",
        "import GameMap from '../GameMap';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Map\\__tests__\\GameMap.test.tsx"
    },
    "src\\dojopool\\frontend\\components\\matches\\__tests__\\LiveMatch.test.tsx": {
      "name": "LiveMatch.test",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, screen, act } from '@testing-library/react';",
        "import { LiveMatchDisplay } from '../LiveMatch';",
        "import matchUpdateService from '../../../services/match-updates';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\matches\\__tests__\\LiveMatch.test.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\__tests__\\Dashboard.test.tsx": {
      "name": "Dashboard.test",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, fireEvent, screen, waitFor } from '@testing-library/react';",
        "import MonitoringDashboard from '../Dashboard';",
        "import { ErrorTracker } from '../../../utils/monitoring';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Monitoring\\__tests__\\Dashboard.test.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\__tests__\\ErrorBoundary.test.tsx": {
      "name": "ErrorBoundary.test",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, fireEvent, screen } from '@testing-library/react';",
        "import { ErrorBoundary } from '../ErrorBoundary';",
        "import { ErrorTracker } from '../../../utils/monitoring';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\Monitoring\\__tests__\\ErrorBoundary.test.tsx"
    },
    "src\\dojopool\\frontend\\components\\Monitoring\\__tests__\\integration.test.tsx": {
      "name": "integration.test",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, fireEvent, screen, waitFor } from '@testing-library/react';",
        "import MonitoringDashboard from '../Dashboard';",
        "import { ErrorBoundary } from '../ErrorBoundary';",
        "import { ErrorTracker, AuditLogger, RetryMechanism } from '../../../utils/monitoring';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "frontend\\components\\Monitoring\\__tests__\\integration.test.tsx"
    },
    "src\\dojopool\\frontend\\components\\__tests__\\marketplace\\MarketplaceE2E.test.tsx": {
      "name": "MarketplaceE2E.test",
      "props": null,
      "state": null,
      "imports": [
        "import { render, screen, fireEvent, waitFor } from '@testing-library/react';",
        "import userEvent from '@testing-library/user-event';",
        "import { BrowserRouter } from 'react-router-dom';",
        "import { MarketplaceLayout } from '../../marketplace/MarketplaceLayout';",
        "import { marketplaceService } from '../../../services/marketplace';"
      ],
      "hooks": [],
      "file_path": "frontend\\components\\__tests__\\marketplace\\MarketplaceE2E.test.tsx"
    },
    "src\\dojopool\\frontend\\src\\components\\Pages\\Home.tsx": {
      "name": "Home",
      "props": null,
      "state": null,
      "imports": [
        "import { Box, Button, Container, Typography } from '@mui/material';",
        "import React from 'react';"
      ],
      "hooks": [],
      "file_path": "frontend\\src\\components\\Pages\\Home.tsx"
    },
    "src\\dojopool\\mobile\\navigation\\RootNavigator.tsx": {
      "name": "RootNavigator",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';",
        "import { createStackNavigator } from '@react-navigation/stack';",
        "import Icon from 'react-native-vector-icons/MaterialCommunityIcons';",
        "import LoginScreen from '../screens/auth/LoginScreen';",
        "import GameTrackingScreen from '../screens/game/GameTrackingScreen';",
        "import GameSummaryScreen from '../screens/game/GameSummaryScreen';",
        "import ProfileScreen from '../screens/profile/ProfileScreen';",
        "import LeaderboardScreen from '../screens/social/LeaderboardScreen';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "mobile\\navigation\\RootNavigator.tsx"
    },
    "src\\dojopool\\mobile\\screens\\auth\\LoginScreen.tsx": {
      "name": "LoginScreen",
      "props": "navigation: any;",
      "state": null,
      "imports": [
        "import React, { useState } from 'react';",
        "import { View, StyleSheet, KeyboardAvoidingView, Platform, ScrollView } from 'react-native';",
        "import { Button, Input, Text, useTheme } from '@rneui/themed';",
        "import { SafeAreaView } from 'react-native-safe-area-context';",
        "import Icon from 'react-native-vector-icons/MaterialCommunityIcons';"
      ],
      "hooks": [
        "useState"
      ],
      "file_path": "mobile\\screens\\auth\\LoginScreen.tsx"
    },
    "src\\dojopool\\mobile\\screens\\game\\GameSummaryScreen.tsx": {
      "name": "GameSummaryScreen",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { View, ScrollView, StyleSheet } from 'react-native';",
        "import { Text, Card, Button, Badge } from '@rneui/themed';",
        "import { useRoute, useNavigation } from '@react-navigation/native';",
        "import { LineChart } from 'react-native-chart-kit';",
        "import Share from 'react-native-share';",
        "import SyncManager from '../../utils/sync';",
        "import StorageManager from '../../utils/storage';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "mobile\\screens\\game\\GameSummaryScreen.tsx"
    },
    "src\\dojopool\\mobile\\screens\\game\\GameTrackingScreen.tsx": {
      "name": "GameTrackingScreen",
      "props": null,
      "state": null,
      "imports": [
        "import React, { useState, useEffect } from 'react';",
        "import { View, StyleSheet, Alert } from 'react-native';",
        "import { Text, Button } from '@rneui/themed';",
        "import { Camera } from 'react-native-vision-camera';",
        "import { useNavigation } from '@react-navigation/native';",
        "import axios from 'axios';",
        "import { API_URL } from '../../config';",
        "import SyncManager from '../../utils/sync';",
        "import StorageManager from '../../utils/storage';"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "file_path": "mobile\\screens\\game\\GameTrackingScreen.tsx"
    },
    "src\\dojopool\\tests\\components\\performance\\components.test.tsx": {
      "name": "components.test",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, screen, fireEvent } from '@testing-library/react';",
        "import { SystemStatus } from '../../../components/performance/SystemStatus';",
        "import { MetricsChart } from '../../../components/performance/MetricsChart';",
        "import { OptimizationRecommendations } from '../../../components/performance/OptimizationRecommendations';"
      ],
      "hooks": [],
      "file_path": "tests\\components\\performance\\components.test.tsx"
    },
    "src\\dojopool\\tests\\components\\performance\\PerformanceDashboard.test.tsx": {
      "name": "PerformanceDashboard.test",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, screen, fireEvent, waitFor } from '@testing-library/react';",
        "import { PerformanceDashboard } from '../../../components/performance/PerformanceDashboard';",
        "import { usePerformanceMonitor } from '../../../hooks/usePerformanceMonitor';"
      ],
      "hooks": [],
      "file_path": "tests\\components\\performance\\PerformanceDashboard.test.tsx"
    },
    "src\\dojopool\\tests\\components\\predictive\\test_predictive_dashboard.tsx": {
      "name": "test_predictive_dashboard",
      "props": null,
      "state": null,
      "imports": [
        "import React from 'react';",
        "import { render, screen, fireEvent, waitFor } from '@testing-library/react';",
        "import { PredictiveDashboard } from '../../../components/predictive/PredictiveDashboard';",
        "import { usePredictiveAnalytics } from '../../../hooks/usePredictiveAnalytics';",
        "import { ThemeProvider } from '@mui/material/styles';",
        "import { theme } from '../../../theme';"
      ],
      "hooks": [],
      "file_path": "tests\\components\\predictive\\test_predictive_dashboard.tsx"
    },
    "src\\dojopool\\frontend\\utils\\errorTracker.ts": {
      "name": "errorTracker",
      "props": null,
      "state": null,
      "imports": [
        "import { AuditLogger } from './auditLogger';",
        "import { RetryMechanism } from './retryMechanism';"
      ],
      "hooks": [],
      "file_path": "frontend\\utils\\errorTracker.ts"
    },
    "src\\dojopool\\frontend\\utils\\monitoring.ts": {
      "name": "monitoring",
      "props": null,
      "state": null,
      "imports": [
        "import { MONITORING_CONFIG } from '../../constants';",
        "import { Cache } from './cache';"
      ],
      "hooks": [],
      "file_path": "frontend\\utils\\monitoring.ts"
    },
    "src\\dojopool\\frontend\\utils\\__tests__\\errorTracker.test.ts": {
      "name": "errorTracker.test",
      "props": null,
      "state": null,
      "imports": [
        "import { ErrorTracker } from '../monitoring';",
        "import { AuditLogger } from '../monitoring';"
      ],
      "hooks": [],
      "file_path": "frontend\\utils\\__tests__\\errorTracker.test.ts"
    },
    "src\\dojopool\\frontend\\utils\\__tests__\\monitoring.test.ts": {
      "name": "monitoring.test",
      "props": null,
      "state": null,
      "imports": [
        "import { GameMetricsMonitor, ErrorTracker, AuditLogger, RetryMechanism } from '../monitoring';"
      ],
      "hooks": [],
      "file_path": "frontend\\utils\\__tests__\\monitoring.test.ts"
    },
    "src\\dojopool\\static\\js\\components.js": {
      "name": "components",
      "props": null,
      "state": null,
      "imports": [
        "import { $, $$, ui } from './utils.js';"
      ],
      "hooks": [],
      "file_path": "static\\js\\components.js"
    },
    "src\\dojopool\\static\\js\\components\\review.js": {
      "name": "review",
      "props": null,
      "state": null,
      "imports": [],
      "hooks": [],
      "file_path": "static\\js\\components\\review.js"
    }
  },
  "styles": {
    "src\\dojopool\\frontend\\styles\\tournaments.scss": {
      "name": "tournaments",
      "classes": [
        "tournament-list",
        "tournament-detail",
        "ant-descriptions",
        "ant-tabs",
        "tournament-form",
        "ant-card",
        "ant-card-head-title",
        "ant-form",
        "ant-space",
        "ant-form-item",
        "tournament-bracket",
        "winner",
        "match-stats",
        "ant-row",
        "ant-card",
        "ant-statistic",
        "match-history",
        "ant-table",
        "ant-tag",
        "ant-timeline",
        "prize-management",
        "ant-card",
        "ant-card-head",
        "ant-card-head-title",
        "anticon",
        "ant-table",
        "ant-tag",
        "gold",
        "silver",
        "bronze",
        "ant-modal",
        "ant-modal-body"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "frontend\\styles\\tournaments.scss"
    },
    "src\\dojopool\\frontend\\styles\\venues.scss": {
      "name": "venues",
      "classes": [
        "venue-list",
        "ant-card",
        "venue-detail",
        "ant-tag",
        "anticon",
        "ant-card",
        "ant-tabs",
        "event-list",
        "ant-list",
        "ant-card",
        "ant-modal",
        "ant-form",
        "check-in-system",
        "stats-row",
        "ant-statistic",
        "ant-table",
        "ant-table-row",
        "ant-tabs",
        "ant-tabs-nav",
        "ant-tabs-tab",
        "anticon",
        "ant-modal",
        "ant-form",
        "ant-form-item",
        "ant-chart-line",
        "leaderboard-list",
        "stats-row",
        "ant-statistic",
        "ant-card",
        "ant-card-head",
        "ant-card-head-title",
        "anticon",
        "ant-table",
        "ant-table-row",
        "ant-tag",
        "gold",
        "silver",
        "bronze",
        "event-management",
        "ant-card",
        "ant-card-head",
        "ant-card-head-title",
        "anticon",
        "ant-table",
        "ant-table-row",
        "ant-modal",
        "ant-modal-header",
        "ant-form",
        "ant-form-item",
        "ant-list",
        "ant-list-item",
        "ant-list-item-meta",
        "ant-list-item-meta-title",
        "event-card",
        "ant-card-meta",
        "ant-card-meta-title",
        "ant-card-meta-description",
        "event-details",
        "detail-item",
        "anticon",
        "event-actions",
        "event-stats",
        "ant-statistic"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "frontend\\styles\\venues.scss"
    },
    "src\\dojopool\\static\\scss\\main.scss": {
      "name": "main",
      "classes": [],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\main.scss"
    },
    "src\\dojopool\\static\\scss\\abstracts\\_mixins.scss": {
      "name": "_mixins",
      "classes": [],
      "variables": [],
      "media_queries": [
        "@media (min-width: map-get($breakpoints, $breakpoint)) {"
      ],
      "file_path": "static\\scss\\abstracts\\_mixins.scss"
    },
    "src\\dojopool\\static\\scss\\abstracts\\_variables.scss": {
      "name": "_variables",
      "classes": [],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\abstracts\\_variables.scss"
    },
    "src\\dojopool\\static\\scss\\base\\_accessibility.scss": {
      "name": "_accessibility",
      "classes": [
        "sr-only",
        "sr-only-focusable",
        "skip-link",
        "form-group",
        "error-message",
        "dialog-overlay"
      ],
      "variables": [],
      "media_queries": [
        "@media (prefers-reduced-motion: reduce) {",
        "@media (forced-colors: active) {"
      ],
      "file_path": "static\\scss\\base\\_accessibility.scss"
    },
    "src\\dojopool\\static\\scss\\base\\_aria-patterns.scss": {
      "name": "_aria-patterns",
      "classes": [
        "accordion-content",
        "dialog-header",
        "dialog-body",
        "dialog-footer"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\base\\_aria-patterns.scss"
    },
    "src\\dojopool\\static\\scss\\base\\_reset.scss": {
      "name": "_reset",
      "classes": [],
      "variables": [],
      "media_queries": [
        "@media (prefers-reduced-motion: reduce) {"
      ],
      "file_path": "static\\scss\\base\\_reset.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_alerts.scss": {
      "name": "_alerts",
      "classes": [
        "alert",
        "alert-with-icon",
        "alert-icon",
        "alert-dismissible",
        "alert-close",
        "icon",
        "alert-title",
        "alert-content",
        "alert-primary",
        "alert-title",
        "alert-icon",
        "alert-link",
        "alert-secondary",
        "alert-title",
        "alert-icon",
        "alert-link",
        "alert-success",
        "alert-title",
        "alert-icon",
        "alert-link",
        "alert-error",
        "alert-title",
        "alert-icon",
        "alert-link",
        "alert-warning",
        "alert-title",
        "alert-icon",
        "alert-link",
        "alert-enter",
        "alert-enter-active",
        "alert-exit",
        "alert-exit-active",
        "toast-container",
        "top-right",
        "top-left",
        "bottom-right",
        "bottom-left",
        "top-center",
        "bottom-center",
        "toast",
        "alert-progress"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_alerts.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_avatars.scss": {
      "name": "_avatars",
      "classes": [
        "avatar",
        "icon",
        "avatar-xs",
        "avatar-sm",
        "avatar-lg",
        "avatar-xl",
        "avatar-square",
        "avatar-primary",
        "avatar-secondary",
        "avatar-success",
        "avatar-error",
        "avatar-warning",
        "avatar-status",
        "avatar-badge",
        "badge",
        "avatar-group",
        "avatar",
        "avatar-group-hover",
        "avatar",
        "avatar-interactive",
        "avatar-placeholder",
        "avatar-editable",
        "avatar-loading"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_avatars.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_badges.scss": {
      "name": "_badges",
      "classes": [
        "badge",
        "icon",
        "badge-primary",
        "badge-soft",
        "badge-outline",
        "badge-secondary",
        "badge-soft",
        "badge-outline",
        "badge-success",
        "badge-soft",
        "badge-outline",
        "badge-error",
        "badge-soft",
        "badge-outline",
        "badge-warning",
        "badge-soft",
        "badge-outline",
        "badge-neutral",
        "badge-soft",
        "badge-outline",
        "badge-sm",
        "icon",
        "badge-lg",
        "icon",
        "badge-square",
        "badge-pill",
        "badge-interactive",
        "badge-dot",
        "badge-counter",
        "badge-group",
        "badge",
        "badge-dismissible",
        "badge-close",
        "icon",
        "badge-pulse"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_badges.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_buttons.scss": {
      "name": "_buttons",
      "classes": [
        "btn",
        "icon",
        "btn-primary",
        "btn-secondary",
        "btn-outline",
        "btn-ghost",
        "btn-danger",
        "btn-success",
        "btn-xs",
        "icon",
        "btn-sm",
        "icon",
        "btn-lg",
        "icon",
        "btn-xl",
        "icon",
        "btn-group",
        "btn",
        "btn-loading",
        "btn-text",
        "btn-icon",
        "icon",
        "btn-xs",
        "btn-sm",
        "btn-lg",
        "btn-xl",
        "btn-block"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_buttons.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_cards.scss": {
      "name": "_cards",
      "classes": [
        "card",
        "card-header",
        "list-group",
        "card-body",
        "card-title",
        "card-subtitle",
        "card-text",
        "card-footer",
        "card-img-top",
        "card-img-bottom",
        "card-img-overlay",
        "card-group",
        "card",
        "card",
        "card-img-top",
        "card-img-bottom",
        "card-img-top",
        "card-img-bottom",
        "card-deck",
        "card-primary",
        "card-footer",
        "card-title",
        "card-subtitle",
        "card-secondary",
        "card-footer",
        "card-title",
        "card-subtitle",
        "card-sm",
        "card-header",
        "card-body",
        "card-footer",
        "card-title",
        "card-lg",
        "card-header",
        "card-body",
        "card-footer",
        "card-title",
        "card-hover",
        "card",
        "list-group",
        "card-loading"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_cards.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_forms.scss": {
      "name": "_forms",
      "classes": [
        "form-group",
        "form-label",
        "form-text",
        "form-control",
        "is-invalid",
        "is-valid",
        "form-control",
        "form-control",
        "form-check",
        "form-check-input",
        "form-check-label",
        "form-switch",
        "form-check-input",
        "input-group",
        "form-control",
        "input-group-text",
        "invalid-feedback",
        "valid-feedback",
        "form-floating",
        "form-control"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_forms.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_loader.scss": {
      "name": "_loader",
      "classes": [
        "spinner",
        "spinner-sm",
        "spinner-lg",
        "spinner-primary",
        "spinner-secondary",
        "spinner-white",
        "pulse",
        "pulse-sm",
        "pulse-lg",
        "pulse-primary",
        "pulse-secondary",
        "pulse-white",
        "dots",
        "progress",
        "progress-bar",
        "progress-sm",
        "progress-lg",
        "progress-bar",
        "progress-bar",
        "progress-bar",
        "progress-bar",
        "skeleton",
        "skeleton-text",
        "skeleton-circle",
        "skeleton-rect",
        "loading-overlay",
        "loading-content",
        "loading-text"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_loader.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_modals.scss": {
      "name": "_modals",
      "classes": [
        "modal-wrapper",
        "is-open",
        "modal-backdrop",
        "modal-dialog",
        "modal-dialog-sm",
        "modal-dialog-lg",
        "modal-dialog-xl",
        "modal-dialog-fullscreen",
        "modal-content",
        "modal-content",
        "modal-header",
        "modal-title",
        "modal-close",
        "icon",
        "modal-body",
        "modal-footer",
        "modal-body",
        "modal-slide-up",
        "modal-dialog",
        "modal-dialog",
        "modal-slide-down",
        "modal-dialog",
        "modal-dialog",
        "modal-slide-left",
        "modal-dialog",
        "modal-dialog",
        "modal-slide-right",
        "modal-dialog",
        "modal-dialog",
        "modal-zoom",
        "modal-dialog",
        "modal-dialog",
        "modal-loading",
        "modal-content",
        "modal-open"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_modals.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_navigation.scss": {
      "name": "_navigation",
      "classes": [
        "navbar",
        "navbar-brand",
        "navbar-nav",
        "nav-item",
        "nav-link",
        "active",
        "icon",
        "navbar-right",
        "sidebar",
        "is-open",
        "sidebar-nav",
        "nav-group",
        "nav-group-title",
        "nav-item",
        "nav-link",
        "active",
        "icon",
        "badge",
        "tabs",
        "tab-item",
        "active",
        "pills",
        "pill-item",
        "active",
        "breadcrumbs",
        "breadcrumb-item",
        "active",
        "dropdown",
        "dropdown-toggle",
        "dropdown-menu",
        "show",
        "dropdown-menu-right",
        "dropdown-item",
        "active",
        "icon",
        "dropdown-divider"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_navigation.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_tables.scss": {
      "name": "_tables",
      "classes": [
        "table",
        "sortable",
        "table-bordered",
        "table-borderless",
        "table-striped",
        "table-hover",
        "table-sm",
        "table-lg",
        "table-responsive",
        "table",
        "table-fixed-header",
        "table-selectable",
        "selected",
        "table-actions",
        "btn",
        "table-loading",
        "table-empty",
        "empty-icon",
        "empty-title",
        "empty-description",
        "table-pagination",
        "pagination-info",
        "pagination-pages"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_tables.scss"
    },
    "src\\dojopool\\static\\scss\\components\\_tooltips.scss": {
      "name": "_tooltips",
      "classes": [
        "tooltip",
        "show",
        "tooltip-top",
        "show",
        "tooltip-bottom",
        "show",
        "tooltip-left",
        "show",
        "tooltip-right",
        "show",
        "tooltip-light",
        "tooltip-primary",
        "tooltip-secondary",
        "tooltip-sm",
        "tooltip-lg",
        "tooltip-fade",
        "show",
        "tooltip-scale",
        "show",
        "tooltip-interactive",
        "tooltip-wrap",
        "tooltip-multiline",
        "tooltip-container"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\components\\_tooltips.scss"
    },
    "src\\dojopool\\static\\scss\\layout\\_grid.scss": {
      "name": "_grid",
      "classes": [
        "container",
        "container-fluid",
        "row",
        "col",
        "col-auto",
        "d-flex",
        "d-inline-flex",
        "flex-row",
        "flex-column",
        "flex-row-reverse",
        "flex-column-reverse",
        "flex-wrap",
        "flex-nowrap",
        "flex-wrap-reverse",
        "justify-content-start",
        "justify-content-end",
        "justify-content-center",
        "justify-content-between",
        "justify-content-around",
        "justify-content-evenly",
        "align-items-start",
        "align-items-end",
        "align-items-center",
        "align-items-baseline",
        "align-items-stretch",
        "align-self-start",
        "align-self-end",
        "align-self-center",
        "align-self-baseline",
        "align-self-stretch",
        "flex-grow-0",
        "flex-grow-1",
        "flex-shrink-0",
        "flex-shrink-1",
        "grid"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\layout\\_grid.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\main.scss": {
      "name": "main",
      "classes": [],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\main.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_auth.scss": {
      "name": "_auth",
      "classes": [
        "auth-layout",
        "auth-container",
        "auth-card",
        "auth-header",
        "auth-logo",
        "auth-title",
        "auth-description",
        "auth-body",
        "form-group",
        "auth-footer",
        "auth-footer-text",
        "social-auth",
        "social-auth-divider",
        "divider-text",
        "social-auth-buttons",
        "social-auth-button",
        "icon",
        "password-strength",
        "strength-bars",
        "strength-bar",
        "active",
        "weak",
        "fair",
        "good",
        "strong",
        "strength-text",
        "auth-message",
        "error",
        "success",
        "auth-options",
        "form-check",
        "forgot-password"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_auth.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_dashboard.scss": {
      "name": "_dashboard",
      "classes": [
        "dashboard-layout",
        "dashboard-main",
        "dashboard-content",
        "dashboard-header",
        "dashboard-title",
        "dashboard-subtitle",
        "stats-grid",
        "stats-card",
        "stats-header",
        "stats-icon",
        "icon",
        "stats-trend",
        "positive",
        "negative",
        "icon",
        "stats-value",
        "stats-label",
        "chart-card",
        "chart-header",
        "chart-title",
        "chart-body",
        "chart-footer",
        "chart-legend",
        "legend-item",
        "legend-color",
        "legend-label",
        "table-card",
        "table-header",
        "table-title",
        "table-actions",
        "table-footer",
        "activity-feed",
        "activity-item",
        "activity-icon",
        "icon",
        "activity-content",
        "activity-title",
        "activity-meta"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_dashboard.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_error.scss": {
      "name": "_error",
      "classes": [
        "error-layout",
        "error-content",
        "error-illustration",
        "error-code",
        "error-message",
        "error-title",
        "error-description",
        "error-actions",
        "action-button",
        "error-404",
        "error-illustration",
        "error-500",
        "error-illustration",
        "error-maintenance",
        "error-illustration",
        "error-offline",
        "error-illustration",
        "error-warning",
        "error-code",
        "error-danger",
        "error-code",
        "error-feedback",
        "feedback-title",
        "feedback-form",
        "form-group"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_error.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_game.scss": {
      "name": "_game",
      "classes": [
        "game-header",
        "game-content",
        "game-title",
        "game-meta",
        "meta-item",
        "icon",
        "game-actions",
        "game-details",
        "game-main",
        "game-section",
        "section-title",
        "game-description",
        "game-rules",
        "rule-item",
        "rule-icon",
        "rule-content",
        "rule-title",
        "rule-description",
        "game-sidebar",
        "sidebar-section",
        "section-title",
        "player-list",
        "player-item",
        "player-avatar",
        "player-info",
        "player-name",
        "player-status",
        "status-indicator",
        "offline",
        "player-actions",
        "game-stats",
        "stat-grid",
        "stat-item",
        "stat-value",
        "stat-label"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_game.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_home.scss": {
      "name": "_home",
      "classes": [
        "hero",
        "container",
        "hero-content",
        "hero-title",
        "highlight",
        "hero-description",
        "hero-actions",
        "features",
        "section-header",
        "section-title",
        "section-description",
        "features-grid",
        "feature-card",
        "feature-icon",
        "icon",
        "feature-title",
        "feature-description",
        "cta",
        "container",
        "cta-content",
        "cta-title",
        "cta-description",
        "cta-form",
        "form-control"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_home.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_leaderboard.scss": {
      "name": "_leaderboard",
      "classes": [
        "leaderboard-header",
        "header-content",
        "header-title",
        "header-description",
        "leaderboard-filters",
        "filters-container",
        "filters-grid",
        "filter-group",
        "filter-label",
        "leaderboard-table",
        "table-container",
        "table-row",
        "hide-mobile",
        "table-header",
        "rank-cell",
        "top-1",
        "top-2",
        "top-3",
        "player-cell",
        "player-avatar",
        "player-info",
        "player-name",
        "player-title",
        "stat-cell",
        "stat-label",
        "trend-cell",
        "positive",
        "negative",
        "trend-icon",
        "top-players",
        "section-header",
        "section-title",
        "players-grid",
        "player-card",
        "rank-badge",
        "top-1",
        "top-2",
        "top-3",
        "player-header",
        "player-avatar",
        "player-info",
        "player-name",
        "player-title",
        "player-stats",
        "stat-item",
        "stat-value",
        "stat-label",
        "player-achievements",
        "achievement-badge",
        "player-actions"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_leaderboard.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_news.scss": {
      "name": "_news",
      "classes": [
        "news-header",
        "header-content",
        "header-title",
        "header-description",
        "featured-article",
        "article-card",
        "article-image",
        "featured-badge",
        "article-content",
        "article-meta",
        "meta-item",
        "icon",
        "article-title",
        "article-excerpt",
        "article-author",
        "author-avatar",
        "author-info",
        "author-name",
        "author-role",
        "articles-grid",
        "grid-header",
        "header-title",
        "header-actions",
        "grid-container",
        "article-card",
        "article-image",
        "category-badge",
        "article-content",
        "article-meta",
        "article-title",
        "article-excerpt",
        "article-detail",
        "article-header",
        "article-meta",
        "article-title",
        "article-author",
        "author-avatar",
        "author-info",
        "author-name",
        "author-role",
        "article-image",
        "article-content",
        "article-footer",
        "footer-title",
        "tags-list",
        "tag"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_news.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_profile.scss": {
      "name": "_profile",
      "classes": [
        "profile-header",
        "profile-cover",
        "profile-content",
        "profile-avatar",
        "profile-name",
        "profile-bio",
        "profile-stats",
        "stat-item",
        "stat-value",
        "stat-label",
        "profile-actions",
        "profile-nav",
        "nav-list",
        "nav-item",
        "nav-link",
        "active",
        "profile-settings",
        "settings-section",
        "section-title",
        "section-description",
        "settings-card",
        "settings-row",
        "settings-label",
        "settings-value",
        "profile-activity",
        "activity-filters",
        "activity-timeline",
        "timeline-item",
        "timeline-header",
        "timeline-title",
        "timeline-date",
        "timeline-content"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_profile.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_search.scss": {
      "name": "_search",
      "classes": [
        "search-header",
        "header-content",
        "search-form",
        "search-input-group",
        "search-input",
        "search-icon",
        "clear-button",
        "icon",
        "search-meta",
        "search-filters",
        "filters-container",
        "filters-grid",
        "filter-group",
        "filter-label",
        "filter-options",
        "filter-option",
        "active",
        "search-results",
        "results-section",
        "section-header",
        "section-title",
        "section-meta",
        "results-grid",
        "results-list",
        "result-card",
        "card-image",
        "card-badge",
        "card-content",
        "card-title",
        "card-meta",
        "card-description",
        "result-list-item",
        "item-image",
        "item-content",
        "item-title",
        "item-meta",
        "item-description",
        "item-tags",
        "tag",
        "empty-state",
        "empty-icon",
        "empty-title",
        "empty-description",
        "empty-actions"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_search.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_settings.scss": {
      "name": "_settings",
      "classes": [
        "settings-layout",
        "settings-sidebar",
        "active",
        "sidebar-header",
        "header-title",
        "close-button",
        "nav-list",
        "nav-item",
        "nav-link",
        "icon",
        "active",
        "settings-content",
        "content-header",
        "header-title",
        "header-description",
        "settings-section",
        "section-header",
        "section-title",
        "section-description",
        "settings-form",
        "form-group",
        "form-label",
        "form-hint",
        "form-actions",
        "settings-list",
        "list-item",
        "item-content",
        "item-title",
        "item-description",
        "item-action",
        "settings-card",
        "card-header",
        "header-icon",
        "icon",
        "header-content",
        "header-title",
        "header-description",
        "card-content",
        "settings-grid",
        "notification-preferences",
        "preference-item",
        "item-icon",
        "icon",
        "item-content",
        "item-title",
        "item-description",
        "item-toggle"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_settings.scss"
    },
    "src\\dojopool\\static\\scss\\pages\\_tournament.scss": {
      "name": "_tournament",
      "classes": [
        "tournament-header",
        "tournament-content",
        "tournament-title",
        "tournament-meta",
        "meta-item",
        "icon",
        "tournament-status",
        "status-indicator",
        "upcoming",
        "ended",
        "status-text",
        "tournament-actions",
        "tournament-bracket",
        "bracket-container",
        "bracket-rounds",
        "bracket-round",
        "round-title",
        "round-matches",
        "bracket-match",
        "match-teams",
        "match-team",
        "winner",
        "team-info",
        "team-name",
        "team-seed",
        "team-score",
        "tournament-participants",
        "participants-header",
        "header-title",
        "header-actions",
        "participants-grid",
        "participant-card",
        "participant-header",
        "participant-avatar",
        "participant-info",
        "participant-name",
        "participant-rank",
        "participant-stats",
        "stat-item",
        "stat-value",
        "stat-label",
        "participant-actions"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\pages\\_tournament.scss"
    },
    "src\\dojopool\\static\\scss\\themes\\_dark.scss": {
      "name": "_dark",
      "classes": [
        "theme-dark"
      ],
      "variables": [
        "color-background",
        "color-surface",
        "color-overlay",
        "color-text-primary",
        "color-text-secondary",
        "color-text-tertiary",
        "color-text-disabled",
        "color-border-primary",
        "color-border-secondary",
        "color-button-primary",
        "color-button-primary-hover",
        "color-button-primary-active",
        "color-input-background",
        "color-input-border",
        "color-input-focus",
        "color-card-background",
        "color-card-border",
        "color-modal-background",
        "color-modal-overlay",
        "shadow-sm",
        "shadow-base",
        "shadow-md",
        "shadow-lg",
        "shadow-xl",
        "color-success-background",
        "color-success-border",
        "color-success-text",
        "color-warning-background",
        "color-warning-border",
        "color-warning-text",
        "color-error-background",
        "color-error-border",
        "color-error-text"
      ],
      "media_queries": [],
      "file_path": "static\\scss\\themes\\_dark.scss"
    },
    "src\\dojopool\\static\\scss\\themes\\_light.scss": {
      "name": "_light",
      "classes": [
        "theme-light"
      ],
      "variables": [
        "color-primary-50",
        "color-primary-100",
        "color-primary-200",
        "color-primary-300",
        "color-primary-400",
        "color-primary-500",
        "color-primary-600",
        "color-primary-700",
        "color-primary-800",
        "color-primary-900",
        "color-secondary-50",
        "color-secondary-100",
        "color-secondary-200",
        "color-secondary-300",
        "color-secondary-400",
        "color-secondary-500",
        "color-secondary-600",
        "color-secondary-700",
        "color-secondary-800",
        "color-secondary-900",
        "color-neutral-50",
        "color-neutral-100",
        "color-neutral-200",
        "color-neutral-300",
        "color-neutral-400",
        "color-neutral-500",
        "color-neutral-600",
        "color-neutral-700",
        "color-neutral-800",
        "color-neutral-900",
        "color-success-50",
        "color-success-500",
        "color-success-900",
        "color-warning-50",
        "color-warning-500",
        "color-warning-900",
        "color-error-50",
        "color-error-500",
        "color-error-900",
        "color-background",
        "color-surface",
        "color-overlay",
        "color-text-primary",
        "color-text-secondary",
        "color-text-tertiary",
        "color-text-disabled",
        "color-border-primary",
        "color-border-secondary",
        "color-button-primary",
        "color-button-primary-hover",
        "color-button-primary-active",
        "color-input-background",
        "color-input-border",
        "color-input-focus",
        "color-card-background",
        "color-card-border",
        "color-modal-background",
        "color-modal-overlay",
        "shadow-sm",
        "shadow-base",
        "shadow-md",
        "shadow-lg",
        "shadow-xl",
        "radius-sm",
        "radius-base",
        "radius-md",
        "radius-lg",
        "radius-xl",
        "radius-2xl",
        "radius-full",
        "transition-fast",
        "transition-base",
        "transition-slow",
        "z-hide",
        "z-base",
        "z-dropdown",
        "z-sticky",
        "z-fixed",
        "z-modal-backdrop",
        "z-modal",
        "z-popover",
        "z-tooltip",
        "z-toast",
        "header-height",
        "sidebar-width",
        "footer-height",
        "grid-columns",
        "grid-gutter-width",
        "color-background"
      ],
      "media_queries": [],
      "file_path": "static\\scss\\themes\\_light.scss"
    },
    "src\\dojopool\\static\\scss\\utilities\\_animations.scss": {
      "name": "_animations",
      "classes": [
        "delay-0",
        "delay-75",
        "delay-100",
        "delay-150",
        "delay-200",
        "delay-300",
        "delay-500",
        "delay-700",
        "delay-1000",
        "iterate-infinite",
        "iterate-1",
        "iterate-2",
        "iterate-3",
        "direction-normal",
        "direction-reverse",
        "direction-alternate",
        "direction-alternate-reverse",
        "fill-none",
        "fill-forwards",
        "fill-backwards",
        "fill-both",
        "running",
        "paused",
        "animate-fade-in",
        "animate-fade-out",
        "animate-slide-in-up",
        "animate-slide-in-down",
        "animate-slide-in-left",
        "animate-slide-in-right",
        "animate-scale-in",
        "animate-scale-out",
        "animate-rotate",
        "animate-bounce",
        "animate-pulse",
        "animate-shake",
        "transition-none",
        "transition-all",
        "transition-colors",
        "transition-opacity",
        "transition-shadow",
        "transition-transform",
        "hover-grow",
        "hover-shrink",
        "hover-rotate",
        "hover-bounce",
        "focus-grow",
        "focus-shrink",
        "active-shrink",
        "active-grow"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\utilities\\_animations.scss"
    },
    "src\\dojopool\\static\\scss\\utilities\\_colors.scss": {
      "name": "_colors",
      "classes": [
        "bg-opacity-0",
        "bg-opacity-5",
        "bg-opacity-10",
        "bg-opacity-20",
        "bg-opacity-25",
        "bg-opacity-30",
        "bg-opacity-40",
        "bg-opacity-50",
        "bg-opacity-60",
        "bg-opacity-70",
        "bg-opacity-75",
        "bg-opacity-80",
        "bg-opacity-90",
        "bg-opacity-95",
        "bg-opacity-100",
        "border-opacity-0",
        "border-opacity-5",
        "border-opacity-10",
        "border-opacity-20",
        "border-opacity-25",
        "border-opacity-30",
        "border-opacity-40",
        "border-opacity-50",
        "border-opacity-60",
        "border-opacity-70",
        "border-opacity-75",
        "border-opacity-80",
        "border-opacity-90",
        "border-opacity-95",
        "border-opacity-100",
        "mix-blend-normal",
        "mix-blend-multiply",
        "mix-blend-screen",
        "mix-blend-overlay",
        "mix-blend-darken",
        "mix-blend-lighten",
        "mix-blend-color-dodge",
        "mix-blend-color-burn",
        "mix-blend-hard-light",
        "mix-blend-soft-light",
        "mix-blend-difference",
        "mix-blend-exclusion",
        "mix-blend-hue",
        "mix-blend-saturation",
        "mix-blend-color",
        "mix-blend-luminosity",
        "bg-blend-normal",
        "bg-blend-multiply",
        "bg-blend-screen",
        "bg-blend-overlay",
        "bg-blend-darken",
        "bg-blend-lighten",
        "bg-blend-color-dodge",
        "bg-blend-color-burn",
        "bg-blend-hard-light",
        "bg-blend-soft-light",
        "bg-blend-difference",
        "bg-blend-exclusion",
        "bg-blend-hue",
        "bg-blend-saturation",
        "bg-blend-color",
        "bg-blend-luminosity",
        "bg-gradient-to-t",
        "bg-gradient-to-tr",
        "bg-gradient-to-r",
        "bg-gradient-to-br",
        "bg-gradient-to-b",
        "bg-gradient-to-bl",
        "bg-gradient-to-l",
        "bg-gradient-to-tl"
      ],
      "variables": [
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "bg-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "border-opacity",
        "gradient-from-color",
        "gradient-color-stops",
        "gradient-via-color",
        "gradient-color-stops",
        "gradient-to-color"
      ],
      "media_queries": [],
      "file_path": "static\\scss\\utilities\\_colors.scss"
    },
    "src\\dojopool\\static\\scss\\utilities\\_display.scss": {
      "name": "_display",
      "classes": [
        "d-none",
        "d-inline",
        "d-inline-block",
        "d-block",
        "d-table",
        "d-table-row",
        "d-table-cell",
        "d-flex",
        "d-inline-flex",
        "d-grid",
        "d-inline-grid",
        "visible",
        "invisible",
        "collapse",
        "opacity-0",
        "opacity-5",
        "opacity-10",
        "opacity-20",
        "opacity-25",
        "opacity-30",
        "opacity-40",
        "opacity-50",
        "opacity-60",
        "opacity-70",
        "opacity-75",
        "opacity-80",
        "opacity-90",
        "opacity-95",
        "opacity-100",
        "overflow-auto",
        "overflow-hidden",
        "overflow-visible",
        "overflow-scroll",
        "overflow-x-auto",
        "overflow-y-auto",
        "overflow-x-hidden",
        "overflow-y-hidden",
        "overflow-x-visible",
        "overflow-y-visible",
        "overflow-x-scroll",
        "overflow-y-scroll",
        "scrollbar",
        "scrollbar-none",
        "pointer-events-none",
        "pointer-events-auto",
        "resize-none",
        "resize-y",
        "resize-x",
        "resize",
        "object-contain",
        "object-cover",
        "object-fill",
        "object-none",
        "object-scale-down",
        "object-bottom",
        "object-center",
        "object-left",
        "object-left-bottom",
        "object-left-top",
        "object-right",
        "object-right-bottom",
        "object-right-top",
        "object-top",
        "float-left",
        "float-right",
        "float-none",
        "clear-left",
        "clear-right",
        "clear-both",
        "clear-none",
        "isolate",
        "isolation-auto",
        "backface-visible",
        "backface-hidden",
        "will-change-auto",
        "will-change-scroll",
        "will-change-contents",
        "will-change-transform",
        "will-change-opacity"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\utilities\\_display.scss"
    },
    "src\\dojopool\\static\\scss\\utilities\\_position.scss": {
      "name": "_position",
      "classes": [
        "static",
        "fixed",
        "absolute",
        "relative",
        "sticky",
        "inset-auto",
        "inset-x-auto",
        "inset-y-auto",
        "top-auto",
        "right-auto",
        "bottom-auto",
        "left-auto",
        "origin-center",
        "origin-top",
        "origin-top-right",
        "origin-right",
        "origin-bottom-right",
        "origin-bottom",
        "origin-bottom-left",
        "origin-left",
        "origin-top-left",
        "translate-x-0",
        "translate-y-0",
        "translate-x-full",
        "translate-x-half",
        "translate-y-full",
        "translate-y-half",
        "scale-0",
        "scale-50",
        "scale-75",
        "scale-90",
        "scale-95",
        "scale-100",
        "scale-105",
        "scale-110",
        "scale-125",
        "scale-150",
        "rotate-0",
        "rotate-45",
        "rotate-90",
        "rotate-180",
        "skew-x-0",
        "skew-y-0",
        "skew-x-3",
        "skew-y-3",
        "skew-x-6",
        "skew-y-6",
        "skew-x-12",
        "skew-y-12"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\utilities\\_position.scss"
    },
    "src\\dojopool\\static\\scss\\utilities\\_spacing.scss": {
      "name": "_spacing",
      "classes": [
        "m-auto",
        "mt-auto",
        "mr-auto",
        "mb-auto",
        "ml-auto",
        "mx-auto",
        "my-auto"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\utilities\\_spacing.scss"
    },
    "src\\dojopool\\static\\scss\\utilities\\_typography.scss": {
      "name": "_typography",
      "classes": [
        "font-base",
        "font-heading",
        "font-mono",
        "text-left",
        "text-center",
        "text-right",
        "text-justify",
        "text-underline",
        "text-line-through",
        "text-no-decoration",
        "text-uppercase",
        "text-lowercase",
        "text-capitalize",
        "text-normal-case",
        "italic",
        "not-italic",
        "text-wrap",
        "text-nowrap",
        "text-break",
        "text-truncate",
        "tracking-tighter",
        "tracking-tight",
        "tracking-normal",
        "tracking-wide",
        "tracking-wider",
        "tracking-widest",
        "word-spacing-tighter",
        "word-spacing-tight",
        "word-spacing-normal",
        "word-spacing-wide",
        "word-spacing-wider",
        "word-spacing-widest",
        "text-opacity-0",
        "text-opacity-25",
        "text-opacity-50",
        "text-opacity-75",
        "text-opacity-100",
        "writing-horizontal",
        "writing-vertical",
        "text-direction-ltr",
        "text-direction-rtl",
        "font-smoothing-antialiased",
        "font-smoothing-subpixel",
        "select-none",
        "select-text",
        "select-all",
        "select-auto"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\scss\\utilities\\_typography.scss"
    },
    "src\\dojopool\\frontend\\components\\marketplace\\MarketplaceGrid.css": {
      "name": "MarketplaceGrid",
      "classes": [
        "marketplace-grid",
        "item-card",
        "item-image",
        "item-rarity",
        "item-info",
        "item-footer",
        "item-price",
        "item-stock",
        "in-stock",
        "out-of-stock",
        "add-to-cart-btn",
        "marketplace-grid",
        "item-info"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "frontend\\components\\marketplace\\MarketplaceGrid.css"
    },
    "src\\dojopool\\frontend\\components\\marketplace\\MarketplaceLayout.css": {
      "name": "MarketplaceLayout",
      "classes": [
        "marketplace-container",
        "marketplace-header",
        "header-content",
        "marketplace-search",
        "search-input",
        "marketplace-filters",
        "filter-select",
        "marketplace-content",
        "marketplace-sidebar",
        "wallet-info",
        "balance",
        "marketplace-nav",
        "nav-item",
        "active",
        "inventory-preview",
        "inventory-stats",
        "stat",
        "view-inventory-btn",
        "marketplace-main",
        "marketplace-footer",
        "footer-content",
        "cart-preview",
        "cart-count",
        "header-content",
        "marketplace-search",
        "marketplace-filters",
        "marketplace-content",
        "marketplace-sidebar"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 1024px) {"
      ],
      "file_path": "frontend\\components\\marketplace\\MarketplaceLayout.css"
    },
    "src\\dojopool\\frontend\\components\\matches\\LiveMatch.css": {
      "name": "LiveMatch",
      "classes": [
        "live-match-container",
        "live-match-header",
        "live-indicator",
        "spectator-count",
        "match-details",
        "player-info",
        "player",
        "score",
        "vs-indicator",
        "match-status",
        "badge",
        "badge-success",
        "badge-warning",
        "last-update",
        "live-match-loading",
        "spinner"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "frontend\\components\\matches\\LiveMatch.css"
    },
    "src\\dojopool\\static\\css\\achievements.css": {
      "name": "achievements",
      "classes": [
        "achievement-stat",
        "achievement-card",
        "achievement-icon",
        "progress",
        "leaderboard-item",
        "position-indicator",
        "text-warning",
        "achievement-icon",
        "nav-link",
        "active",
        "spinner-border",
        "progress",
        "progress-bar",
        "achievement-card",
        "achievement-icon",
        "leaderboard-item",
        "position-indicator",
        "completed",
        "progress-bar",
        "locked",
        "achievement-tier",
        "bronze",
        "silver",
        "gold",
        "just-unlocked",
        "tooltip-inner"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\achievements.css"
    },
    "src\\dojopool\\static\\css\\alert-config.css": {
      "name": "alert-config",
      "classes": [
        "alert-config",
        "config-tabs",
        "tab-btn",
        "active",
        "config-section",
        "active",
        "threshold-groups",
        "threshold-group",
        "group-header",
        "threshold-inputs",
        "input-group",
        "threshold-input",
        "toggle",
        "toggle-slider",
        "toggle-slider",
        "history-controls",
        "clear-history-btn",
        "history-filter",
        "history-list",
        "history-item",
        "alert-warning",
        "alert-error",
        "alert-info",
        "alert-category",
        "alert-time",
        "alert-message",
        "no-history",
        "threshold-actions",
        "reset-btn",
        "alert-config",
        "threshold-inputs"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\alert-config.css"
    },
    "src\\dojopool\\static\\css\\base.css": {
      "name": "base",
      "classes": [
        "logo",
        "start-btn",
        "explore-btn"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\css\\base.css"
    },
    "src\\dojopool\\static\\css\\chat.css": {
      "name": "chat",
      "classes": [
        "chat-container",
        "chat-rooms",
        "chat-rooms-header",
        "chat-rooms-list",
        "chat-room-item",
        "active",
        "room-name",
        "last-message",
        "chat-messages",
        "chat-messages-header",
        "chat-messages-list",
        "chat-message",
        "sent",
        "received",
        "message-content",
        "message-content",
        "message-content",
        "message-meta",
        "message-meta",
        "system-message",
        "chat-messages-input",
        "input-group",
        "friend-list",
        "friend-item",
        "selected",
        "friend-name",
        "typing-indicator",
        "active",
        "chat-container",
        "chat-rooms",
        "show",
        "chat-messages",
        "chat-messages-header",
        "back-to-rooms"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\chat.css"
    },
    "src\\dojopool\\static\\css\\components.css": {
      "name": "components",
      "classes": [
        "navbar",
        "navbar-brand",
        "nav-link",
        "cyber-card",
        "cyber-input",
        "cyber-alert",
        "cyber-badge",
        "cyber-spinner"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\css\\components.css"
    },
    "src\\dojopool\\static\\css\\dashboard.css": {
      "name": "dashboard",
      "classes": [
        "dashboard-container",
        "stat-card",
        "stat-value",
        "stat-label",
        "rating-display",
        "peak-rating",
        "rating-value",
        "rating-label",
        "rating-chart",
        "achievement-stats",
        "achievement-count",
        "achievement-label",
        "achievement-list",
        "achievement-item",
        "achievement-name",
        "progress",
        "progress-bar",
        "tournament-stats",
        "power-up-card",
        "power-up-icon",
        "table",
        "badge"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\css\\dashboard.css"
    },
    "src\\dojopool\\static\\css\\debug-panel.css": {
      "name": "debug-panel",
      "classes": [
        "debug-panel",
        "debug-header",
        "debug-toggle",
        "debug-content",
        "collapsed",
        "metric-group",
        "metric",
        "optimization-log",
        "log-entries",
        "log-entry",
        "timestamp",
        "updating"
      ],
      "variables": [],
      "media_queries": [],
      "file_path": "static\\css\\debug-panel.css"
    },
    "src\\dojopool\\static\\css\\home.css": {
      "name": "home",
      "classes": [
        "display-4",
        "lead",
        "card",
        "card-body",
        "card-title",
        "card-text",
        "btn",
        "btn-lg",
        "btn-primary",
        "btn-outline-primary",
        "img-fluid",
        "display-4",
        "lead",
        "btn-lg",
        "img-fluid",
        "card",
        "py-5",
        "card"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\home.css"
    },
    "src\\dojopool\\static\\css\\landing.css": {
      "name": "landing",
      "classes": [
        "container",
        "nav-right",
        "login-btn",
        "hero-section",
        "hero-background",
        "hero-background-img",
        "hero-overlay",
        "welcome-text",
        "welcome-text-cyber",
        "brand-name",
        "x-symbol",
        "description",
        "cta-buttons",
        "explore-btn",
        "start-btn",
        "explore-btn",
        "features-section",
        "features-title",
        "features-grid",
        "feature-card",
        "feature-icon",
        "map-preview",
        "venue-map-container",
        "view-all-venues",
        "logo-img",
        "brand-name",
        "x-symbol",
        "features-grid",
        "cta-buttons",
        "nav-right",
        "nav-menu-toggle",
        "brand-name",
        "x-symbol",
        "welcome-text-cyber",
        "description",
        "features-title",
        "venue-info",
        "venue-link",
        "hero-image",
        "loaded",
        "feature-icon",
        "loading",
        "loaded",
        "image-placeholder",
        "network-status",
        "visible",
        "offline",
        "low",
        "medium",
        "high"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {",
        "@media (max-width: 480px) {"
      ],
      "file_path": "static\\css\\landing.css"
    },
    "src\\dojopool\\static\\css\\layout.css": {
      "name": "layout",
      "classes": [
        "container",
        "grid",
        "grid-2",
        "grid-3",
        "grid-4",
        "section",
        "section-dark",
        "section-gradient",
        "flex",
        "flex-col",
        "items-center",
        "justify-center",
        "justify-between",
        "gap-1",
        "gap-2",
        "gap-3",
        "gap-4",
        "m-0",
        "m-1",
        "m-2",
        "m-3",
        "m-4",
        "mt-0",
        "mt-1",
        "mt-2",
        "mt-3",
        "mt-4",
        "mb-0",
        "mb-1",
        "mb-2",
        "mb-3",
        "mb-4",
        "p-0",
        "p-1",
        "p-2",
        "p-3",
        "p-4",
        "text-left",
        "text-center",
        "text-right",
        "block",
        "inline-block",
        "hidden",
        "relative",
        "absolute",
        "fixed",
        "z-0",
        "z-10",
        "z-20",
        "z-30",
        "z-40",
        "z-50",
        "grid-4",
        "grid-4",
        "container",
        "grid-4",
        "container",
        "hero-title",
        "hero-subtitle",
        "hero-buttons",
        "btn-cyber"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 1024px) {",
        "@media (max-width: 768px) {",
        "@media (max-width: 640px) {"
      ],
      "file_path": "static\\css\\layout.css"
    },
    "src\\dojopool\\static\\css\\marketplace.css": {
      "name": "marketplace",
      "classes": [
        "marketplace-container",
        "marketplace-header",
        "header-actions",
        "create-listing",
        "create-auction",
        "marketplace-filters",
        "filter-row",
        "filter-select",
        "price-range",
        "price-input",
        "price-separator",
        "search-input",
        "view-options",
        "view-btn",
        "active",
        "featured-items",
        "items-grid",
        "marketplace-header",
        "filter-row",
        "search-input",
        "view-options"
      ],
      "variables": [
        "bg-dark",
        "text-primary",
        "text-secondary"
      ],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\marketplace.css"
    },
    "src\\dojopool\\static\\css\\metrics-dashboard.css": {
      "name": "metrics-dashboard",
      "classes": [
        "metrics-dashboard",
        "metrics-section",
        "chart-container",
        "metrics-stats",
        "stat-item",
        "metrics-alerts",
        "alerts-list",
        "alert",
        "alert-warning",
        "alert-error",
        "no-alerts",
        "metrics-dashboard"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\metrics-dashboard.css"
    },
    "src\\dojopool\\static\\css\\mobile.css": {
      "name": "mobile",
      "classes": [
        "mobile-nav",
        "mobile-nav-items",
        "mobile-nav-item",
        "active",
        "table-responsive-wrapper",
        "table-responsive",
        "card-grid",
        "container",
        "form-group",
        "btn",
        "btn",
        "card",
        "modal-content",
        "bottom-sheet",
        "show",
        "pull-to-refresh",
        "card-grid",
        "btn",
        "mobile-nav",
        "modal-content",
        "bottom-sheet",
        "form-control",
        "modal-content"
      ],
      "variables": [
        "breakpoint-xs",
        "breakpoint-sm",
        "breakpoint-md",
        "breakpoint-lg",
        "breakpoint-xl",
        "breakpoint-xxl"
      ],
      "media_queries": [
        "@media (max-width: 576px) {",
        "@media (min-width: 577px) and (max-width: 768px) {",
        "@media (max-width: 768px) {",
        "@media (max-height: 576px) and (orientation: landscape) {",
        "@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {",
        "@media (prefers-color-scheme: dark) {"
      ],
      "file_path": "static\\css\\mobile.css"
    },
    "src\\dojopool\\static\\css\\notifications.css": {
      "name": "notifications",
      "classes": [
        "notification-badge",
        "notification-list",
        "notification-item",
        "unread",
        "notification-content",
        "notification-actions",
        "toast",
        "toast-header",
        "toast-body",
        "notification-dropdown",
        "show",
        "notification-header",
        "notification-footer",
        "notification-empty",
        "notification-settings",
        "card",
        "form-check",
        "form-check-input",
        "form-check-label",
        "form-text",
        "btn-primary",
        "bg-success",
        "toast-body",
        "btn-close-white",
        "settings-loading",
        "spinner-border",
        "card",
        "form-check-label",
        "form-text",
        "btn-primary"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\notifications.css"
    },
    "src\\dojopool\\static\\css\\pwa.css": {
      "name": "pwa",
      "classes": [
        "offline-indicator",
        "show",
        "offline-indicator-content",
        "install-prompt",
        "show",
        "install-prompt-content",
        "hide-in-standalone",
        "offline-spinner",
        "offline-placeholder",
        "offline-placeholder-icon",
        "pwa-toast",
        "show",
        "splash-screen",
        "install-prompt",
        "install-prompt-content"
      ],
      "variables": [],
      "media_queries": [
        "@media (display-mode: standalone) {",
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\pwa.css"
    },
    "src\\dojopool\\static\\css\\rating.css": {
      "name": "rating",
      "classes": [
        "rating-component",
        "rating-stars",
        "star",
        "readonly",
        "rating-average",
        "average-value",
        "rating-count",
        "review-item",
        "text-warning",
        "delete-review",
        "rating-component",
        "star",
        "review-item"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\rating.css"
    },
    "src\\dojopool\\static\\css\\responsive.css": {
      "name": "responsive",
      "classes": [
        "container",
        "sidebar",
        "active",
        "main-content",
        "game-grid",
        "venue-list",
        "stats-grid",
        "modal-content",
        "container",
        "game-grid",
        "venue-list",
        "stats-grid",
        "game-grid",
        "venue-list",
        "stats-grid",
        "game-grid",
        "venue-list",
        "stats-grid",
        "menu-item",
        "nav-toggle",
        "nav-toggle",
        "nav-menu",
        "nav-item",
        "form-grid",
        "form-group",
        "responsive-table",
        "table-card",
        "table-card-header",
        "table-card-content",
        "responsive-image",
        "image-container",
        "no-print",
        "main-content",
        "nav-item"
      ],
      "variables": [
        "header-height",
        "sidebar-width",
        "content-max-width",
        "spacing-unit",
        "border-radius",
        "transition-speed",
        "header-height",
        "sidebar-width",
        "spacing-unit",
        "text-color",
        "background-color",
        "border-color"
      ],
      "media_queries": [
        "@media screen and (max-width: 576px) {",
        "@media screen and (min-width: 577px) and (max-width: 768px) {",
        "@media screen and (min-width: 769px) and (max-width: 1024px) {",
        "@media screen and (min-width: 1025px) {",
        "@media (hover: none) {",
        "@media screen and (max-width: 576px) {",
        "@media screen and (max-width: 576px) {",
        "@media screen and (max-width: 576px) {",
        "@media screen and (max-width: 576px) {",
        "@media print {",
        "@media (prefers-contrast: high) {"
      ],
      "file_path": "static\\css\\responsive.css"
    },
    "src\\dojopool\\static\\css\\review.css": {
      "name": "review",
      "classes": [
        "review-component",
        "review-content",
        "review-text",
        "review-meta",
        "review-date",
        "review-voting",
        "vote-unhelpful",
        "review-actions",
        "review-responses",
        "responses-list",
        "response-item",
        "response-content",
        "review-verified",
        "review-component",
        "review-component",
        "review-text",
        "review-date",
        "response-item",
        "response-content"
      ],
      "variables": [],
      "media_queries": [
        "@media (prefers-color-scheme: dark) {"
      ],
      "file_path": "static\\css\\review.css"
    },
    "src\\dojopool\\static\\css\\style.css": {
      "name": "style",
      "classes": [
        "neon-text",
        "neon-text-subtle",
        "btn-neon",
        "btn-google",
        "cyber-card",
        "cyber-input",
        "divider",
        "neon-link",
        "navbar",
        "navbar-brand",
        "nav-link",
        "form-control",
        "btn-primary",
        "footer",
        "dashboard-card",
        "stat-value",
        "stat-label",
        "btn-training",
        "avatar-upload",
        "avatar-preview",
        "form-select",
        "style-card",
        "selected",
        "neon-icon",
        "neon-icon",
        "loading-text",
        "profile-bio"
      ],
      "variables": [
        "primary-color",
        "secondary-color",
        "accent-color",
        "text-light",
        "background-dark",
        "neon-glow"
      ],
      "media_queries": [],
      "file_path": "static\\css\\style.css"
    },
    "src\\dojopool\\static\\css\\styles.css": {
      "name": "styles",
      "classes": [
        "container",
        "navbar",
        "pwa-install-prompt",
        "prompt-content",
        "offline-status",
        "alert-container",
        "alert",
        "loading",
        "container",
        "alert-container",
        "navbar",
        "alert",
        "fade-in",
        "visible",
        "text-truncate",
        "shadow",
        "rounded",
        "bg-blur",
        "install-prompt",
        "browser-ui",
        "notifications-menu",
        "notifications-toggle",
        "notifications-badge",
        "notifications-panel",
        "notifications-header",
        "mark-all-read",
        "notifications-list",
        "notification",
        "unread",
        "notification-icon",
        "notification-content",
        "notifications-panel",
        "unread",
        "notifications-panel",
        "notification",
        "table-responsive",
        "grid",
        "nav-menu",
        "active",
        "nav-toggle",
        "bottom-nav",
        "bottom-nav",
        "bottom-nav-item",
        "active",
        "modal",
        "modal-content",
        "modal-content",
        "modal-content",
        "pull-to-refresh",
        "card",
        "card",
        "form-group",
        "form-label",
        "form-hint",
        "btn",
        "skeleton",
        "hover-only",
        "touch-only"
      ],
      "variables": [
        "primary-color",
        "secondary-color",
        "accent-color",
        "text-color",
        "light-text",
        "dark-bg",
        "navbar-height",
        "footer-height",
        "navbar-height",
        "text-color",
        "dark-bg",
        "breakpoint-xs",
        "breakpoint-sm",
        "breakpoint-md",
        "breakpoint-lg",
        "breakpoint-xl",
        "touch-target-size",
        "touch-target-spacing",
        "safe-area-inset-top",
        "safe-area-inset-bottom",
        "safe-area-inset-left",
        "safe-area-inset-right"
      ],
      "media_queries": [
        "@media (max-width: 768px) {",
        "@media (prefers-color-scheme: dark) {",
        "@media all and (display-mode: standalone) {",
        "@media (prefers-color-scheme: dark) {",
        "@media (max-width: 768px) {",
        "@media (max-width: 768px) {",
        "@media (max-width: 768px) {",
        "@media (max-width: 576px) {",
        "@media (max-width: 768px) {",
        "@media (max-width: 576px) {",
        "@media (max-width: 768px) {",
        "@media (max-width: 576px) {",
        "@media (hover: none) and (pointer: coarse) {"
      ],
      "file_path": "static\\css\\styles.css"
    },
    "src\\dojopool\\static\\css\\tournament_bracket.css": {
      "name": "tournament_bracket",
      "classes": [
        "tournament-bracket__container",
        "tournament-bracket__round",
        "tournament-bracket__round-header",
        "tournament-bracket__match",
        "tournament-bracket__match-content",
        "tournament-bracket__player",
        "winner",
        "tournament-bracket__player-info",
        "tournament-bracket__player-avatar",
        "tournament-bracket__player-name",
        "tournament-bracket__player-score",
        "tournament-bracket__match-status",
        "tournament-bracket__connector",
        "tournament-bracket__container",
        "tournament-bracket__round",
        "tournament-bracket__player",
        "tournament-bracket__player-avatar",
        "tournament-bracket__player-name",
        "updating",
        "tournament-bracket__loading",
        "spinner-border"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\tournament_bracket.css"
    },
    "src\\dojopool\\static\\css\\trend-visualization.css": {
      "name": "trend-visualization",
      "classes": [
        "trend-visualization",
        "trend-header",
        "trend-controls",
        "time-range-select",
        "trend-section",
        "trend-section-header",
        "trend-stats",
        "trend-direction",
        "increasing",
        "decreasing",
        "stable",
        "trend-health",
        "good",
        "warning",
        "critical",
        "unknown",
        "anomaly-count",
        "chart-container",
        "trend-analysis",
        "analysis-stats",
        "trend-visualization",
        "trend-visualization",
        "trend-section-header",
        "trend-stats",
        "analysis-stats"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 1200px) {",
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\trend-visualization.css"
    },
    "src\\dojopool\\static\\css\\venues.css": {
      "name": "venues",
      "classes": [
        "venues-container",
        "venues-header",
        "venues-filters",
        "search-box",
        "filter-options",
        "venues-grid",
        "venue-card",
        "venue-image",
        "venue-info",
        "venue-address",
        "venue-rating",
        "stars",
        "venue-details",
        "venue-actions",
        "pagination",
        "page-info",
        "venue-details-container",
        "venue-header",
        "venue-content",
        "venue-main",
        "venue-images",
        "main-image",
        "image-thumbnails",
        "thumbnail",
        "venue-description",
        "amenities-grid",
        "amenity-item",
        "reviews-list",
        "review-item",
        "review-header",
        "review-date",
        "review-text",
        "review-author",
        "venue-sidebar",
        "booking-card",
        "price-info",
        "price",
        "time-inputs",
        "venue-location",
        "contact-info",
        "opening-hours",
        "hours-row",
        "venue-content",
        "venue-sidebar",
        "booking-card",
        "venues-container",
        "venues-header",
        "venues-filters",
        "filter-options",
        "main-image",
        "modal-body",
        "amenities-checkboxes",
        "availability-calendar",
        "table-grid"
      ],
      "variables": [],
      "media_queries": [
        "@media (max-width: 992px) {",
        "@media (max-width: 768px) {"
      ],
      "file_path": "static\\css\\venues.css"
    }
  },
  "utils": {
    "src\\dojopool\\ai\\prompts.ts": {
      "name": "prompts",
      "functions": [
        "generateStoryPrompt",
        "validatePrompt",
        "sanitizePrompt"
      ],
      "types": [],
      "imports": [
        "import { UserProfile } from '../types/user';",
        "import { TrainingSession } from '../types/training';"
      ],
      "file_path": "ai\\prompts.ts"
    },
    "src\\dojopool\\frontend\\hooks\\useABTest.ts": {
      "name": "useABTest",
      "functions": [
        "useABTest",
        "useABTestMetric"
      ],
      "types": [],
      "imports": [
        "import { useEffect, useState } from 'react';",
        "import { useAuth } from '../contexts/AuthContext';",
        "import { abTestingService } from '../services/abTesting';"
      ],
      "file_path": "frontend\\hooks\\useABTest.ts"
    },
    "src\\dojopool\\frontend\\hooks\\useNotifications.ts": {
      "name": "useNotifications",
      "functions": [
        "useNotifications",
        "showError",
        "showSuccess",
        "showWarning",
        "showInfo"
      ],
      "types": [
        "Notification"
      ],
      "imports": [
        "import { create } from 'zustand';"
      ],
      "file_path": "frontend\\hooks\\useNotifications.ts"
    },
    "src\\dojopool\\frontend\\services\\ai.ts": {
      "name": "ai",
      "functions": [],
      "types": [],
      "imports": [
        "import api from './api';",
        "import { generateStoryPrompt, validatePrompt, sanitizePrompt } from '../../ai/prompts';",
        "import { TrainingSession } from '../../types/training';",
        "import { UserProfile } from '../../types/user';"
      ],
      "file_path": "frontend\\services\\ai.ts"
    },
    "src\\dojopool\\frontend\\services\\leaderboard.ts": {
      "name": "leaderboard",
      "functions": [],
      "types": [
        "LeaderboardEntry",
        "LeaderboardFilters",
        "LeaderboardResponse"
      ],
      "imports": [
        "import api from './api';",
        "import { UserProfile } from '../../types/user';"
      ],
      "file_path": "frontend\\services\\leaderboard.ts"
    },
    "src\\dojopool\\frontend\\services\\notifications.ts": {
      "name": "notifications",
      "functions": [],
      "types": [
        "Notification",
        "NotificationType",
        "NotificationAction",
        "NotificationFilter"
      ],
      "imports": [
        "import api from './api';",
        "import { NotificationPreferences } from '../../types/user';"
      ],
      "file_path": "frontend\\services\\notifications.ts"
    },
    "src\\dojopool\\frontend\\services\\training.ts": {
      "name": "training",
      "functions": [],
      "types": [],
      "imports": [
        "import api from './api';",
        "import { TrainingSession, Technique, TrainingFeedback } from '../../types/training';"
      ],
      "file_path": "frontend\\services\\training.ts"
    },
    "src\\dojopool\\frontend\\services\\user.ts": {
      "name": "user",
      "functions": [],
      "types": [],
      "imports": [
        "import api from './api';",
        "import { UserProfile, UserPreferences, Achievement } from '../../types/user';"
      ],
      "file_path": "frontend\\services\\user.ts"
    },
    "src\\dojopool\\frontend\\utils\\errorHandling.ts": {
      "name": "errorHandling",
      "functions": [
        "handleApiError",
        "logError",
        "displayUserFriendlyError",
        "isNetworkError",
        "isAuthenticationError",
        "isValidationError"
      ],
      "types": [
        "ApiError"
      ],
      "imports": [
        "import { AxiosError } from 'axios';"
      ],
      "file_path": "frontend\\utils\\errorHandling.ts"
    },
    "src\\dojopool\\frontend\\utils\\location.ts": {
      "name": "location",
      "functions": [
        "watchLocation",
        "getCurrentLocation",
        "calculateDistance"
      ],
      "types": [
        "Location"
      ],
      "imports": [
        "import { LOCATION_OPTIONS } from '../../constants';"
      ],
      "file_path": "frontend\\utils\\location.ts"
    },
    "src\\dojopool\\frontend\\utils\\retryMechanism.ts": {
      "name": "retryMechanism",
      "functions": [],
      "types": [],
      "imports": [],
      "file_path": "frontend\\utils\\retryMechanism.ts"
    },
    "src\\dojopool\\frontend\\utils\\throttle.ts": {
      "name": "throttle",
      "functions": [
        "throttle",
        "throttleLocationUpdates"
      ],
      "types": [],
      "imports": [],
      "file_path": "frontend\\utils\\throttle.ts"
    },
    "src\\dojopool\\static\\js\\utils\\ui.ts": {
      "name": "ui",
      "functions": [
        "debounce",
        "throttle",
        "formatFileSize",
        "isFileSizeValid",
        "formatDate",
        "formatRelativeTime",
        "createElement",
        "showToast",
        "handleInfiniteScroll",
        "downloadFile",
        "getFileExtension",
        "isMobileDevice",
        "getBrowserLanguage",
        "setPageTitle"
      ],
      "types": [],
      "imports": [
        "import { Config } from '../config';"
      ],
      "file_path": "static\\js\\utils\\ui.ts"
    },
    "src\\dojopool\\tests\\jest.config.js": {
      "name": "jest.config",
      "functions": [],
      "types": [],
      "imports": [],
      "file_path": "tests\\jest.config.js"
    },
    "src\\dojopool\\static\\js\\main.js": {
      "name": "main",
      "functions": [],
      "types": [],
      "imports": [],
      "file_path": "static\\js\\main.js"
    },
    "src\\dojopool\\static\\js\\maps.js": {
      "name": "maps",
      "functions": [],
      "types": [],
      "imports": [
        "import VenueInfoWindow from './components/VenueInfoWindow.js';"
      ],
      "file_path": "static\\js\\maps.js"
    },
    "src\\dojopool\\static\\js\\theme.js": {
      "name": "theme",
      "functions": [],
      "types": [],
      "imports": [],
      "file_path": "static\\js\\theme.js"
    },
    "src\\dojopool\\static\\js\\utils.js": {
      "name": "utils",
      "functions": [],
      "types": [],
      "imports": [],
      "file_path": "static\\js\\utils.js"
    },
    "src\\dojopool\\static\\js\\websocket_manager.js": {
      "name": "websocket_manager",
      "functions": [],
      "types": [],
      "imports": [],
      "file_path": "static\\js\\websocket_manager.js"
    }
  }
}