from functools import wraps
from typing import Any, Callable, List, Optional, TypeVar

from flask import current_app
from flask_login import current_user
from werkzeug.security import check_password_hash, generate_password_hash

from ..exceptions import AuthenticationError, AuthorizationError
from .session import SessionManager
from .tokens import TokenManager, generate_token, validate_token

F = TypeVar("F", bound=Callable[..., Any])

def require_auth(f: F) -> F: ...
def require_roles(roles: List[str]) -> Callable[[F], F]: ...
def hash_password(password: str) -> str: ...
def verify_password(password: str, password_hash: str) -> bool: ...
def get_session_manager() -> SessionManager: ...
def get_token_manager() -> TokenManager: ...
def create_access_token(user_id: str, expires_in: Optional[int] = None) -> str: ...
def verify_access_token(token: str) -> dict[str, Any]: ...
