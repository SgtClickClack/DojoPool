import json
import logging
import shutil
import tempfile
from datetime import datetime
from pathlib import Path
from typing import Any, Dict, List, Optional, Union

from .model_evaluation import ModelEvaluator
from .model_monitor import ModelMonitor
from .model_versioning import ModelVersion

class ModelDeployer:
    def __init__(
        self, model_path: Path, evaluator: ModelEvaluator, monitor: ModelMonitor
    ) -> None: ...
    def deploy_model(
        self, version: ModelVersion, model_type: Optional[str] = None
    ) -> bool: ...
    def rollback_deployment(self, version: ModelVersion) -> bool: ...
    def get_deployment_history(self) -> List[Dict[str, Any]]: ...
    def get_current_deployment(self) -> Optional[Dict[str, Any]]: ...
    def validate_deployment(self, version: ModelVersion) -> Dict[str, Any]: ...
    def create_deployment_package(self, version: ModelVersion) -> Path: ...
    def backup_current_model(self) -> Path: ...
    def log_deployment(
        self,
        version: ModelVersion,
        status: str,
        metadata: Optional[Dict[str, Any]] = None,
    ) -> None: ...
    def cleanup_old_deployments(self, keep_versions: int = 5) -> None: ...
