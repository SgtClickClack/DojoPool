import functools
import time
from datetime import datetime, timedelta
from typing import Any, Callable, Dict, Optional, TypeVar, Union, cast

from .constants import ErrorCodes
from .log_config import logger
from .utils import format_error_response, get_room_config, validate_event_data

F = TypeVar("F", bound=Callable[..., Any])

def event_handler(event_type: str, requires_auth: bool = False) -> Callable[[F], F]: ...
def rate_limit(max_calls: int, period: timedelta) -> Callable[[F], F]: ...
def validate_payload(*required_fields: str) -> Callable[[F], F]: ...
def track_metrics(metric_name: str) -> Callable[[F], F]: ...
def handle_errors(error_code: Optional[str] = None) -> Callable[[F], F]: ...
def with_room(room_required: bool = True) -> Callable[[F], F]: ...
def async_handler() -> Callable[[F], F]: ...
