version: '3.8'

services:
  web:
    build: 
      context: .
      args:
        - ENVIRONMENT=staging
        - SKIP_FRONTEND_BUILD=true
    ports:
      - "8080:5000"  # Map to internal port 5000
    env_file:
      - .env.staging
    depends_on:
      - redis
      - postgres
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - log_volume:/var/log
    restart: unless-stopped
    networks:
      - dojopool_staging_network
    labels:
      - "environment=staging"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dojopool_staging
      - POSTGRES_USER=dojopool
      - POSTGRES_PASSWORD=dojopool_staging_password
    ports:
      - "5433:5432"  # Different port for staging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dojopool -d dojopool_staging"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dojopool_staging_network

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Different port for staging
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dojopool_staging_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_staging_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - dojopool_staging_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"  # Added port mapping
    volumes:
      - ./monitoring/prometheus/:/etc/prometheus/
      - prometheus_staging_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - dojopool_staging_network

volumes:
  postgres_staging_data:
  grafana_staging_data:
  prometheus_staging_data:
  static_volume:
  media_volume:
  log_volume:

networks:
  dojopool_staging_network:
    driver: bridge 